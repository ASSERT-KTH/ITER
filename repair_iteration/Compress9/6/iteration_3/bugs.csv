bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  AssertionFailedError.error( "JSC_INTERNAL_ERROR ".getMessage());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "JSC_INTERNAL_ERROR ".getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.error( "JSC_INTERNAL_ERROR ".getMessage());	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
2	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  getMessage());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  getMessage());	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
3	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR: "  +  getMessage());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR: "  +  getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR: "  +  getMessage());	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
4	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  this.getMessage());  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  this.getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  this.getMessage());	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
5	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  getName());  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  getName());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  getName());	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
6	[BUG]  [BUGGY]  AssertionFailedError.error( "JSC_INTERNAL_ERROR ");  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "JSC_INTERNAL_ERROR ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.error( "JSC_INTERNAL_ERROR ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
7	[BUG]  [BUGGY]  protected  final  boolean  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  boolean  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	protected  final  boolean  hasUnclosedEntry  =  true;	  protected    boolean    hasUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
8	[BUG]  [BUGGY]  final  protected  boolean  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  boolean  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	final  protected  boolean  hasUnclosedEntry  =  true;	  protected    boolean    hasUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
9	[BUG]  [BUGGY]  protected  final  boolean  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  boolean  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	protected  final  boolean  hasUnclosedEntry  =  false;	  protected    boolean    hasUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
10	[BUG]  [BUGGY]  protected  int  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	protected  int  hasUnclosedEntry  =  true;	  protected    boolean    hasUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
11	[BUG]  [BUGGY]  AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  expected);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  expected);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  expected);	  AssertionFailedError.warning(   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	46	None	replace
12	[BUG]  [BUGGY]  AssertionFailedError.error( "Can  not  start  of  type  {  0  }   ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "Can  not  start  of  type  {  0  }   ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.error( "Can  not  start  of  type  {  0  }   ");	  AssertionFailedError.warning(   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	46	None	replace
13	[BUG]  [BUGGY]  AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  name);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  name);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  name);	  AssertionFailedError.warning(   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	46	None	replace
14	[BUG]  [BUGGY]  AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  required);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  required);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  required);	  AssertionFailedError.warning(   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	46	None	replace
15	[BUG]  [BUGGY]  AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  getClass());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  getClass());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  getClass());	  AssertionFailedError.warning(   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	46	None	replace
16	[BUG]  [BUGGY]  AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  2);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  2);	  AssertionFailedError.warning(   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	46	None	replace
17	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type: "  +  name);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type: "  +  name);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type: "  +  name);	  System.err.println(   "Failed    to    start    of    type   "    +    name);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
18	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + "  -> ");  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + "  -> ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type "  +  name  + "  -> ");	  System.err.println(   "Failed    to    start    of    type   "    +    name);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
19	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + ": ");  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + ": ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type "  +  name  + ": ");	  System.err.println(   "Failed    to    start    of    type   "    +    name);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
20	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + ": "  +  identifier);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + ": "  +  identifier);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type "  +  name  + ": "  +  identifier);	  System.err.println(   "Failed    to    start    of    type   "    +    name);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
21	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + "  identifier: "  +  name);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + "  identifier: "  +  name);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type "  +  name  + "  identifier: "  +  name);	  System.err.println(   "Failed    to    start    of    type   "    +    name);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
22	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  2);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  2);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
23	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  null);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  null);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
24	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  4);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  4);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
25	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  true);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  true);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
26	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  TEST_FONT);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  TEST_FONT);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  TEST_FONT);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
27	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  TEST_VERSION);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  TEST_VERSION);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  TEST_VERSION);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
28	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  getMessage(),  expected);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Unexpected  error: "  +  getMessage(),  expected);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Unexpected  error: "  +  getMessage(),  expected);	  System.err.println(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
29	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  getClass());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Unexpected  error: "  +  getClass());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Unexpected  error: "  +  getClass());	  System.err.println(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
30	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  getName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Unexpected  error: "  +  getName());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Unexpected  error: "  +  getName());	  System.err.println(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
31	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  getLineNumber());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Unexpected  error: "  +  getLineNumber());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Unexpected  error: "  +  getLineNumber());	  System.err.println(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
32	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  this);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  this);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  this);	  AssertionFailedError    t    =    new    AssertionFailedError(getMessage());    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
33	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getReturnCode());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getReturnCode());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(getReturnCode());	  AssertionFailedError    t    =    new    AssertionFailedError(getMessage());    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
34	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  null);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  null);	  AssertionFailedError    t    =    new    AssertionFailedError(getMessage());    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
35	[BUG]  [BUGGY]  final  AssertionFailedError  t  =  new  AssertionFailedError(getMessage());  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  final  AssertionFailedError  t  =  new  AssertionFailedError(getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	final  AssertionFailedError  t  =  new  AssertionFailedError(getMessage());	  AssertionFailedError    t    =    new    AssertionFailedError(getMessage());    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
36	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getClass());  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getClass());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(getClass());	  AssertionFailedError    t    =    new    AssertionFailedError(getMessage());    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
37	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  getClass());  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  getClass());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  getClass());	  AssertionFailedError    t    =    new    AssertionFailedError(getMessage());    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
38	[BUG]  [BUGGY]  protected  final  int  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  int  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	protected  final  int  haveUnclosedEntry  =  false;	  protected    final    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
39	[BUG]  [BUGGY]  protected  static  final  boolean  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  protected  static  final  boolean  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	protected  static  final  boolean  haveUnclosedEntry  =  false;	  protected    final    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
40	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  TarArchiveOutputStream.DEFAULT_ERROR);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  TarArchiveOutputStream.DEFAULT_ERROR);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  TarArchiveOutputStream.DEFAULT_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,    getMessage());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
41	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  getMessage(),  this);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  getMessage(),  this);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  getMessage(),  this);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,    getMessage());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
42	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_WARNING,  getMessage());  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_WARNING,  getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_WARNING,  getMessage());	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,    getMessage());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
43	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  getMessage(),  null);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  getMessage(),  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  getMessage(),  null);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,    getMessage());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
44	[BUG]  [BUGGY]  private  int  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	private  int  hasUnclosedEntry  =  false;	  private    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
45	[BUG]  [BUGGY]  AssertionFailedError.error( "Unexpected  error: "+getMessage());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "Unexpected  error: "+getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.error( "Unexpected  error: "+getMessage());	  AssertionFailedError.warning(   "Unexpected    error:   "+getMessage());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
46	[BUG]  [BUGGY]  AssertionFailedError.warning( "Unexpected  error: "+getMessage(),  expected);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Unexpected  error: "+getMessage(),  expected);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "Unexpected  error: "+getMessage(),  expected);	  AssertionFailedError.warning(   "Unexpected    error:   "+getMessage());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
47	[BUG]  [BUGGY]  AssertionFailedError.warning( "Unexpected  error: "+this.getMessage());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Unexpected  error: "+this.getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "Unexpected  error: "+this.getMessage());	  AssertionFailedError.warning(   "Unexpected    error:   "+getMessage());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
48	[BUG]  [BUGGY]  protected  int  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	protected  int  haveUnclosedEntry  =  true;	  protected    int    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
49	[BUG]  [BUGGY]  final  protected  int  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  int  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	final  protected  int  haveUnclosedEntry  =  false;	  protected    int    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
50	[BUG]  [BUGGY]  private  int  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	private  int  haveUnclosedEntry  =  true;	  protected    int    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
51	[BUG]  [BUGGY]  protected  long  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  protected  long  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	protected  long  haveUnclosedEntry  =  false;	  protected    int    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
52	[BUG]  [BUGGY]  final  protected  boolean  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  boolean  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	final  protected  boolean  haveUnclosedEntry  =  true;	  final    protected    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
53	[BUG]  [BUGGY]  final  protected  final  boolean  haveUnclosedEntry  =  true;  [CE]  repeated  modifier  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  final  boolean  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	final  protected  final  boolean  haveUnclosedEntry  =  true;	  final    protected    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  repeated  modifier	23	None	replace
54	[BUG]  [BUGGY]  static  final  protected  boolean  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  protected  boolean  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	static  final  protected  boolean  haveUnclosedEntry  =  false;	  final    protected    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
55	[BUG]  [BUGGY]  protected  static  final  boolean  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  protected  static  final  boolean  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	protected  static  final  boolean  hasUnclosedEntry  =  false;	  protected    static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
56	[BUG]  [BUGGY]  protected  static  final  int  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  protected  static  final  int  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	protected  static  final  int  haveUnclosedEntry  =  true;	  protected    static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
57	[BUG]  [BUGGY]  static  final  boolean  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  boolean  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	static  final  boolean  haveUnclosedEntry  =  false;	  protected    static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
58	[BUG]  [BUGGY]  private  static  final  int  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  int  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	private  static  final  int  hasUnclosedEntry  =  false;	  private    static    final    long    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
59	[BUG]  [BUGGY]  private  static  final  long  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  long  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	private  static  final  long  haveUnclosedEntry  =  true;	  private    static    final    long    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
60	[BUG]  [BUGGY]  public  static  final  int  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  int  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  static  final  int  haveUnclosedEntry  =  false;	  private    static    final    long    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
61	[BUG]  [BUGGY]  static  final  int  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  int  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	static  final  int  haveUnclosedEntry  =  false;	  private    static    final    long    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
62	[BUG]  [BUGGY]  private  static  final  byte  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  byte  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	private  static  final  byte  haveUnclosedEntry  =  false;	  private    static    final    long    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
63	[BUG]  [BUGGY]  public  static  final  boolean  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  boolean  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  static  final  boolean  hasUnclosedEntry  =  true;	  public    boolean    hasUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
64	[BUG]  [BUGGY]  public  static  final  boolean  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  boolean  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  static  final  boolean  hasUnclosedEntry  =  false;	  public    boolean    hasUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
65	[BUG]  [BUGGY]  public  static  boolean  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  boolean  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  static  boolean  hasUnclosedEntry  =  false;	  public    boolean    hasUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
66	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  name,  null);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  name,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  name,  null);	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
67	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ",  identifier);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ",  identifier);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ",  identifier);	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
68	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ",  name);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ",  name);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ",  name);	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
69	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ",  null,  expected);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ",  null,  expected);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ",  null,  expected);	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
70	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  identifier);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  identifier);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  identifier);	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
71	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ",  null,  new  Object[]  {  }  );  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ",  null,  new  Object[]  {  }  );  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ",  null,  new  Object[]  {  }  );	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
72	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  null);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  null);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
73	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  2);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  2);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
74	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  true);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  true);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
75	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TEST_FONT);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TEST_FONT);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TEST_FONT);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
76	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TEST_VERSION);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TEST_VERSION);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TEST_VERSION);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
77	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TEST_WARNING);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TEST_WARNING);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TEST_WARNING);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
78	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  NON_SOURCE);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  NON_SOURCE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  NON_SOURCE);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
79	[BUG]  [BUGGY]  public  final  int  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  int  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  final  int  haveUnclosedEntry  =  true;	  public    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
80	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  null);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
81	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  2);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  2);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
82	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  4);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  4);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
83	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  true);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  true);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  true);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
84	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  TEST_ERROR);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  TEST_ERROR);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  TEST_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
85	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  NON_SOURCE);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  NON_SOURCE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  NON_SOURCE);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
86	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  TEST_FONT);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  TEST_FONT);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  TEST_FONT);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
87	[BUG]  [BUGGY]  public  abstract  boolean  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  abstract  boolean  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  abstract  boolean  haveUnclosedEntry  =  true;	  public    abstract    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
88	[BUG]  [BUGGY]  public  abstract  final  boolean  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  abstract  final  boolean  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  abstract  final  boolean  haveUnclosedEntry  =  false;	  public    abstract    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
89	[BUG]  [BUGGY]  public  abstract  final  boolean  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  abstract  final  boolean  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  abstract  final  boolean  haveUnclosedEntry  =  true;	  public    abstract    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
90	[BUG]  [BUGGY]  public  abstract  int  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  abstract  int  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  abstract  int  haveUnclosedEntry  =  false;	  public    abstract    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
91	[BUG]  [BUGGY]  public  abstract  boolean  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  abstract  boolean  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  abstract  boolean  hasUnclosedEntry  =  true;	  public    abstract    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
92	[BUG]  [BUGGY]  public  final  abstract  boolean  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  abstract  boolean  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  final  abstract  boolean  haveUnclosedEntry  =  true;	  public    abstract    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
93	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  name);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  name);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  name);	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
94	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  name,   "Can  not  start  of  type  {  0  }   ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  name,   "Can  not  start  of  type  {  0  }   ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  name,   "Can  not  start  of  type  {  0  }   ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
95	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  + "Can  not  start  of  type  {  0  }   ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  + "Can  not  start  of  type  {  0  }   ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  + "Can  not  start  of  type  {  0  }   ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
96	[BUG]  [BUGGY]  AssertionFailedError.error( "JSC_INTERNAL_ERROR ", "Can  not  start  of  type  {  0  }   ");  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "JSC_INTERNAL_ERROR ", "Can  not  start  of  type  {  0  }   ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.error( "JSC_INTERNAL_ERROR ", "Can  not  start  of  type  {  0  }   ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
97	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  + ",  can  not  start  of  type  {  0  }   ");  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  + ",  can  not  start  of  type  {  0  }   ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  + ",  can  not  start  of  type  {  0  }   ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
98	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  getMessage(), "Can  not  start  of  type  {  0  }   ");  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  getMessage(), "Can  not  start  of  type  {  0  }   ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  getMessage(), "Can  not  start  of  type  {  0  }   ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
99	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Can  not  start  of  type  {  0  }   ",  expected);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Can  not  start  of  type  {  0  }   ",  expected);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Can  not  start  of  type  {  0  }   ",  expected);	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
100	[BUG]  [BUGGY]  final  boolean  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  boolean  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	final  boolean  haveUnclosedEntry  =  false;	  final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
101	[BUG]  [BUGGY]  final  boolean  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  final  boolean  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	final  boolean  hasUnclosedEntry  =  false;	  final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
102	[BUG]  [BUGGY]  final  int  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  final  int  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	final  int  haveUnclosedEntry  =  true;	  final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
103	[BUG]  [BUGGY]  final  byte  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  final  byte  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	final  byte  haveUnclosedEntry  =  true;	  final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
104	[BUG]  [BUGGY]  private  static  final  int  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  int  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	private  static  final  int  haveUnclosedEntry  =  true;	  private    static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
105	[BUG]  [BUGGY]  public  static  final  String  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  String  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  static  final  String  haveUnclosedEntry  =  false;	  public    static    final    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
106	[BUG]  [BUGGY]  public  static  final  long  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  long  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  static  final  long  haveUnclosedEntry  =  false;	  public    static    final    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
107	[BUG]  [BUGGY]  public  static  final  byte  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  byte  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  static  final  byte  haveUnclosedEntry  =  false;	  public    static    final    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
108	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.invalid.type ",  new  Object[]  {  }  );  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.invalid.type ",  new  Object[]  {  }  );  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.invalid.type ",  new  Object[]  {  }  );	  AssertionFailedError.warning(   "msg.bad.invalid.type   ",    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
109	[BUG]  [BUGGY]  AssertionFailedError.error( "msg.bad.invalid.type ",  null);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "msg.bad.invalid.type ",  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.error( "msg.bad.invalid.type ",  null);	  AssertionFailedError.warning(   "msg.bad.invalid.type   ",    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
110	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.invalid.type ",  name);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.invalid.type ",  name);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.invalid.type ",  name);	  AssertionFailedError.warning(   "msg.bad.invalid.type   ",    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
111	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.invalid.type ",  new  String[]  {  }  );  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.invalid.type ",  new  String[]  {  }  );  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.invalid.type ",  new  String[]  {  }  );	  AssertionFailedError.warning(   "msg.bad.invalid.type   ",    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
112	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.invalid.type ",  name,  null);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.invalid.type ",  name,  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.invalid.type ",  name,  null);	  AssertionFailedError.warning(   "msg.bad.invalid.type   ",    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
113	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.invalid.type ",  null,  expected);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.invalid.type ",  null,  expected);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.invalid.type ",  null,  expected);	  AssertionFailedError.warning(   "msg.bad.invalid.type   ",    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
114	[BUG]  [BUGGY]  AssertionFailedError.error( "JSC_INTERNAL_ERROR ", "Unexpected  error: "+getMessage());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "JSC_INTERNAL_ERROR ", "Unexpected  error: "+getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.error( "JSC_INTERNAL_ERROR ", "Unexpected  error: "+getMessage());	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",   "Unexpected    error:   "+getMessage());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
115	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  name,   "Unexpected  error: "+getMessage());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  name,   "Unexpected  error: "+getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  name,   "Unexpected  error: "+getMessage());	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",   "Unexpected    error:   "+getMessage());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
116	[BUG]  [BUGGY]  private  static  final  int  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  int  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	private  static  final  int  hasUnclosedEntry  =  true;	  private    static    final    int    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
117	[BUG]  [BUGGY]  static  final  int  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  int  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	static  final  int  haveUnclosedEntry  =  true;	  private    static    final    int    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
118	[BUG]  [BUGGY]  private  static  final  char  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  char  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	private  static  final  char  haveUnclosedEntry  =  false;	  private    static    final    int    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
119	[BUG]  [BUGGY]  public  static  final  int  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  int  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  static  final  int  haveUnclosedEntry  =  true;	  public    static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
120	[BUG]  [BUGGY]  public  static  final  String  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  String  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  static  final  String  haveUnclosedEntry  =  true;	  public    static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
121	[BUG]  [BUGGY]  public  static  final  long  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  long  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  static  final  long  haveUnclosedEntry  =  true;	  public    static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
122	[BUG]  [BUGGY]  public  static  final  byte  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  byte  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  static  final  byte  haveUnclosedEntry  =  true;	  public    static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
123	[BUG]  [BUGGY]  public  final  static  boolean  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  static  boolean  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  final  static  boolean  haveUnclosedEntry  =  false;	  public    static    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
124	[BUG]  [BUGGY]  public  static  boolean  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  boolean  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  static  boolean  haveUnclosedEntry  =  true;	  public    static    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
125	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  3);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  3);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  3);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
126	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(1,  TarArchiveOutputStream.DEFAULT_ERROR);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(1,  TarArchiveOutputStream.DEFAULT_ERROR);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(1,  TarArchiveOutputStream.DEFAULT_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
127	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  8);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  8);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  8);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
128	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  1L);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  1L);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  1L);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
129	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  TarArchiveOutputStream.TYPE_ERROR);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  TarArchiveOutputStream.TYPE_ERROR);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  TarArchiveOutputStream.TYPE_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,    getMessage());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
130	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  getMessage(),  this);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  getMessage(),  this);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  getMessage(),  this);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,    getMessage());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
131	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  getMessage(),  null);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  getMessage(),  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  getMessage(),  null);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,    getMessage());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
132	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  getClass());  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  getClass());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  getClass());	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,    getMessage());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
133	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_WARNING,  getMessage());  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_WARNING,  getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_WARNING,  getMessage());	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,    getMessage());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
134	[BUG]  [BUGGY]  protected  final  int  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  int  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	protected  final  int  haveUnclosedEntry  =  true;	  protected    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
135	[BUG]  [BUGGY]  protected  final  byte  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  protected  final  byte  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	protected  final  byte  haveUnclosedEntry  =  true;	  protected    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
136	[BUG]  [BUGGY]  AssertionFailedError.error( "msg.bad.assertion.expected ",  new  Object[]  {  }  );  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "msg.bad.assertion.expected ",  new  Object[]  {  }  );  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.error( "msg.bad.assertion.expected ",  new  Object[]  {  }  );	  AssertionFailedError.warning(   "msg.bad.assertion.expected   ",    new    Object[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	51	None	replace
137	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected.error ",  new  Object[]  {  }  );  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected.error ",  new  Object[]  {  }  );  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.expected.error ",  new  Object[]  {  }  );	  AssertionFailedError.warning(   "msg.bad.assertion.expected   ",    new    Object[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	51	None	replace
138	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected. ",  new  Object[]  {  }  );  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected. ",  new  Object[]  {  }  );  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.expected. ",  new  Object[]  {  }  );	  AssertionFailedError.warning(   "msg.bad.assertion.expected   ",    new    Object[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	51	None	replace
139	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected: "  +  name,  new  Object[]  {  }  );  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected: "  +  name,  new  Object[]  {  }  );  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.expected: "  +  name,  new  Object[]  {  }  );	  AssertionFailedError.warning(   "msg.bad.assertion.expected   ",    new    Object[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	51	None	replace
140	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected.object ",  new  Object[]  {  }  );  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected.object ",  new  Object[]  {  }  );  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.expected.object ",  new  Object[]  {  }  );	  AssertionFailedError.warning(   "msg.bad.assertion.expected   ",    new    Object[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	51	None	replace
141	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected: "  +  this,  new  Object[]  {  }  );  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected: "  +  this,  new  Object[]  {  }  );  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.expected: "  +  this,  new  Object[]  {  }  );	  AssertionFailedError.warning(   "msg.bad.assertion.expected   ",    new    Object[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	51	None	replace
142	[BUG]  [BUGGY]  static  final  boolean  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  boolean  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	static  final  boolean  hasUnclosedEntry  =  false;	  private    static    final    boolean    hasUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
143	[BUG]  [BUGGY]  private  static  final  long  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  long  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	private  static  final  long  hasUnclosedEntry  =  true;	  private    static    final    boolean    hasUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
144	[BUG]  [BUGGY]  private  static  final  String  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  String  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	private  static  final  String  hasUnclosedEntry  =  true;	  private    static    final    boolean    hasUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
145	[BUG]  [BUGGY]  public  final  int  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  int  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  final  int  hasUnclosedEntry  =  false;	  public    final    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
146	[BUG]  [BUGGY]  public  final  static  boolean  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  static  boolean  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  final  static  boolean  hasUnclosedEntry  =  false;	  public    final    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
147	[BUG]  [BUGGY]  public  abstract  boolean  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  abstract  boolean  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  abstract  boolean  hasUnclosedEntry  =  false;	  public    final    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
148	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  identifier);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  identifier);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type "  +  identifier);	  System.err.println(   "Failed    to    start    of    type   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
149	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  this);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  this);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type "  +  this);	  System.err.println(   "Failed    to    start    of    type   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
150	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  getName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  getName());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type "  +  getName());	  System.err.println(   "Failed    to    start    of    type   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
151	[BUG]  [BUGGY]  static  final  long  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  long  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	static  final  long  haveUnclosedEntry  =  true;	  static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
152	[BUG]  [BUGGY]  static  final  byte  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  byte  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	static  final  byte  haveUnclosedEntry  =  true;	  static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
153	[BUG]  [BUGGY]  static  final  String  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  String  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	static  final  String  haveUnclosedEntry  =  true;	  static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
154	[BUG]  [BUGGY]  final  protected  boolean  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  boolean  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	final  protected  boolean  hasUnclosedEntry  =  false;	  protected    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
155	[BUG]  [BUGGY]  boolean  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  boolean  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	boolean  hasUnclosedEntry  =  true;	  protected    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
156	[BUG]  [BUGGY]  protected  int  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  protected  int  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	protected  int  hasUnclosedEntry  =  false;	  protected    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
157	[BUG]  [BUGGY]  static  final  boolean  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  boolean  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	static  final  boolean  hasUnclosedEntry  =  true;	  private    static    final    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
158	[BUG]  [BUGGY]  private  static  final  long  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  long  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	private  static  final  long  hasUnclosedEntry  =  false;	  private    static    final    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
159	[BUG]  [BUGGY]  private  static  final  String  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  String  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	private  static  final  String  hasUnclosedEntry  =  false;	  private    static    final    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
160	[BUG]  [BUGGY]  Private  static  final  boolean  haveUnclosedEntry  =  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Private  static  final  boolean  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	Private  static  final  boolean  haveUnclosedEntry  =  false;	  Private    static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
161	[BUG]  [BUGGY]  Private  static  final  boolean  hasUnclosedEntry  =  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Private  static  final  boolean  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	Private  static  final  boolean  hasUnclosedEntry  =  false;	  Private    static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
162	[BUG]  [BUGGY]  Private  static  final  int  haveUnclosedEntry  =  true;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  Private  static  final  int  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	Private  static  final  int  haveUnclosedEntry  =  true;	  Private    static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
163	[BUG]  [BUGGY]  final  boolean  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  final  boolean  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	final  boolean  hasUnclosedEntry  =  true;	  private    final    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
164	[BUG]  [BUGGY]  private  final  int  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  int  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	private  final  int  hasUnclosedEntry  =  false;	  private    final    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
165	[BUG]  [BUGGY]  public  int  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  int  hasUnclosedEntry  =  false;	  public    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
166	[BUG]  [BUGGY]  public  final  int  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  int  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  final  int  haveUnclosedEntry  =  false;	  public    final    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
167	[BUG]  [BUGGY]  public  final  static  boolean  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  static  boolean  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  final  static  boolean  hasUnclosedEntry  =  true;	  public    final    boolean    hasUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
168	[BUG]  [BUGGY]  public  final  int  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  int  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  final  int  hasUnclosedEntry  =  true;	  public    final    boolean    hasUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
169	[BUG]  [BUGGY]  public  int  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  int  haveUnclosedEntry  =  true;	  public    int    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
170	[BUG]  [BUGGY]  public  int  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  int  hasUnclosedEntry  =  true;	  public    int    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
171	[BUG]  [BUGGY]  public  long  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  public  long  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  long  haveUnclosedEntry  =  false;	  public    int    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
172	[BUG]  [BUGGY]  public  byte  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  public  byte  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  byte  haveUnclosedEntry  =  false;	  public    int    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
173	[BUG]  [BUGGY]  public  double  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  public  double  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  double  haveUnclosedEntry  =  false;	  public    int    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
174	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "Unexpected  exception: ");  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "Unexpected  exception: ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "Unexpected  exception: ");	  AssertionFailedError.warning(   "msg.bad.assertion.error   ",    new    IOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
175	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "expected: ");  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "expected: ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "expected: ");	  AssertionFailedError.warning(   "msg.bad.assertion.error   ",    new    IOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
176	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "JSC_ERROR, ");  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "JSC_ERROR, ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "JSC_ERROR, ");	  AssertionFailedError.warning(   "msg.bad.assertion.error   ",    new    IOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
177	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "Unexpected  error: ");  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "Unexpected  error: ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "Unexpected  error: ");	  AssertionFailedError.warning(   "msg.bad.assertion.error   ",    new    IOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
178	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "JSC_ERROR,  expected: ");  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "JSC_ERROR,  expected: ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "JSC_ERROR,  expected: ");	  AssertionFailedError.warning(   "msg.bad.assertion.error   ",    new    IOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
179	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "JSC_DELAYED_ERROR "));  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "JSC_DELAYED_ERROR "));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "JSC_DELAYED_ERROR "));	  AssertionFailedError.warning(   "msg.bad.assertion.error   ",    new    IOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
180	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "JSC_DELAYED_ERROR, ");  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "JSC_DELAYED_ERROR, ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "JSC_DELAYED_ERROR, ");	  AssertionFailedError.warning(   "msg.bad.assertion.error   ",    new    IOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
181	[BUG]  [BUGGY]  System.err.println( "JSC_Failed  to  start  of  type ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "JSC_Failed  to  start  of  type ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "JSC_Failed  to  start  of  type ");	  System.err.println(   "Failed    to    start    of    type   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
182	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR:  expected ");  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR:  expected ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR:  expected ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
183	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  getError());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Unexpected  error: "  +  getError());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Unexpected  error: "  +  getError());	  System.err.println(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
184	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(this,  getMessage());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(this,  getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(this,  getMessage());	  AssertionFailedError    t    =    new    AssertionFailedError(getMessage());    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
185	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  READ_EXTENDS);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  READ_EXTENDS);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  READ_EXTENDS);	  AssertionFailedError    t    =    new    AssertionFailedError(getMessage());    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
186	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Can  not  start  of  type  {  0  }   ",  name);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Can  not  start  of  type  {  0  }   ",  name);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Can  not  start  of  type  {  0  }   ",  name);	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
187	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ",  new  String[]  {   "Can  not  start  of  type  {  0  }   ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ",  new  String[]  {   "Can  not  start  of  type  {  0  }   ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ",  new  String[]  {   "Can  not  start  of  type  {  0  }   ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
188	[BUG]  [BUGGY]  Public  static  final  boolean  haveUnclosedEntry  =  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Public  static  final  boolean  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	Public  static  final  boolean  haveUnclosedEntry  =  false;	  Private    static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
189	[BUG]  [BUGGY]  Privat  static  final  boolean  haveUnclosedEntry  =  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Privat  static  final  boolean  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	Privat  static  final  boolean  haveUnclosedEntry  =  false;	  Private    static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
190	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  false);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  false);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
191	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarNumber.TYPE_ERROR);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarNumber.TYPE_ERROR);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarNumber.TYPE_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
192	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  TEST_PARAM);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  TEST_PARAM);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  TEST_PARAM);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
193	[BUG]  [BUGGY]  final  int  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  int  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	final  int  haveUnclosedEntry  =  false;	  final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
194	[BUG]  [BUGGY]  final  String  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  final  String  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	final  String  haveUnclosedEntry  =  false;	  final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
195	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(this,  TarArchiveOutputStream.DEFAULT_ERROR,  getMessage());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(this,  TarArchiveOutputStream.DEFAULT_ERROR,  getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(this,  TarArchiveOutputStream.DEFAULT_ERROR,  getMessage());	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,    getMessage());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
196	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  getSourceName());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  getSourceName());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  getSourceName());	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,    getMessage());    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
197	[BUG]  [BUGGY]  AssertionFailedError.warning( "Unexpected  error: "  +  this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Unexpected  error: "  +  this);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "Unexpected  error: "  +  this);	  AssertionFailedError.warning(   "Unexpected    error:   "+getMessage());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
198	[BUG]  [BUGGY]  Private  static  final  int  haveUnclosedEntry  =  false;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  Private  static  final  int  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	Private  static  final  int  haveUnclosedEntry  =  false;	  private    static    final    long    haveUnclosedEntry    =    false;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
199	[BUG]  [BUGGY]  final  protected  static  final  boolean  haveUnclosedEntry  =  false;  [CE]  repeated  modifier  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  final  protected  static  final  boolean  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	final  protected  static  final  boolean  haveUnclosedEntry  =  false;	  protected    static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  repeated  modifier	43	None	replace
200	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarInputStream.TYPE_ERROR,  getMessage());  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarInputStream.TYPE_ERROR,  getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarInputStream.TYPE_ERROR,  getMessage());	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,    getMessage());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
201	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarNumber.TYPE_ERROR,  getMessage());  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarNumber.TYPE_ERROR,  getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarNumber.TYPE_ERROR,  getMessage());	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,    getMessage());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
202	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  getSourceName());  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  getSourceName());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  getSourceName());	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,    getMessage());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
203	[BUG]  [BUGGY]  AssertionFailedError.error( "msg.bad.assertion.error ",  new  IOException( " ");  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "msg.bad.assertion.error ",  new  IOException( " ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.error( "msg.bad.assertion.error ",  new  IOException( " ");	  AssertionFailedError.warning(   "msg.bad.assertion.error   ",    new    IOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
204	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( " "));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( " "));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( " "));	  AssertionFailedError.warning(   "msg.bad.assertion.error   ",    new    IOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
205	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( ", ");  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( ", ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( ", ");	  AssertionFailedError.warning(   "msg.bad.assertion.error   ",    new    IOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
206	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "Unexpected  identifier:  {  0  }   ");  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "Unexpected  identifier:  {  0  }   ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "Unexpected  identifier:  {  0  }   ");	  AssertionFailedError.warning(   "msg.bad.assertion.error   ",    new    IOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
207	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "JSC_ERROR, " "));  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "JSC_ERROR, " "));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "JSC_ERROR, " "));	  AssertionFailedError.warning(   "msg.bad.assertion.error   ",    new    IOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
208	[BUG]  [BUGGY]  AssertionFailedError.error( "JSC_INTERNAL_ERROR ", "Can  not  instantiate  a  numeric  value ");  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "JSC_INTERNAL_ERROR ", "Can  not  instantiate  a  numeric  value ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.error( "JSC_INTERNAL_ERROR ", "Can  not  instantiate  a  numeric  value ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
209	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Can  not  instantiate  a  numeric  value ");  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Can  not  instantiate  a  numeric  value ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Can  not  instantiate  a  numeric  value ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
210	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  identifier:  {  0  }   ");  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  identifier:  {  0  }   ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  identifier:  {  0  }   ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
211	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Can  not  instantiate  a  string  value ");  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Can  not  instantiate  a  string  value ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Can  not  instantiate  a  string  value ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
212	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  10);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  10);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  10);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,    1);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
213	[BUG]  [BUGGY]  Private  static  final  boolean  hasUnclosedEntry  =  true;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Private  static  final  boolean  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	Private  static  final  boolean  hasUnclosedEntry  =  true;	  private    static    final    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
214	[BUG]  [BUGGY]  protected  static  final  boolean  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  protected  static  final  boolean  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	protected  static  final  boolean  hasUnclosedEntry  =  true;	  private    static    final    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
215	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected ".length(),  new  Object[]  {  }  );  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected ".length(),  new  Object[]  {  }  );  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.expected ".length(),  new  Object[]  {  }  );	  AssertionFailedError.warning(   "msg.bad.assertion.expected   ",    new    Object[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	51	None	replace
216	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected ".class,  new  Object[]  {  }  );  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected ".class,  new  Object[]  {  }  );  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.expected ".class,  new  Object[]  {  }  );	  AssertionFailedError.warning(   "msg.bad.assertion.expected   ",    new    Object[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	51	None	replace
217	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected ".length()  +  1,  new  Object[]  {  }  );  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected ".length()  +  1,  new  Object[]  {  }  );  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.expected ".length()  +  1,  new  Object[]  {  }  );	  AssertionFailedError.warning(   "msg.bad.assertion.expected   ",    new    Object[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	51	None	replace
218	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected ",  new  Object[]  {  },  null);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected ",  new  Object[]  {  },  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.expected ",  new  Object[]  {  },  null);	  AssertionFailedError.warning(   "msg.bad.assertion.expected   ",    new    Object[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	51	None	replace
219	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  false);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  false);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  false);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
220	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  TEST_TYPE);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  TEST_TYPE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  TEST_TYPE);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
221	[BUG]  [BUGGY]  public  abstract  final  boolean  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  abstract  final  boolean  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  abstract  final  boolean  hasUnclosedEntry  =  true;	  public    abstract    boolean    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
222	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR  missing: "  +  getMessage());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR  missing: "  +  getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR  missing: "  +  getMessage());	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
223	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR  missing: "  +  name);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR  missing: "  +  name);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR  missing: "  +  name);	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
224	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR:  missing   "  {  0  }   ".getMessage());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR:  missing   "  {  0  }   ".getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR:  missing   "  {  0  }   ".getMessage());	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
225	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR:  missing  ' "+getMessage());  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR:  missing  ' "+getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR:  missing  ' "+getMessage());	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
226	[BUG]  [BUGGY]  public  int  haveUnclosedEntry  =  0;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  int  haveUnclosedEntry  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  int  haveUnclosedEntry  =  0;	  public    int    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
227	[BUG]  [BUGGY]  Private  final  boolean  hasUnclosedEntry  =  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Private  final  boolean  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	Private  final  boolean  hasUnclosedEntry  =  false;	  private    final    boolean    hasUnclosedEntry    =    true;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
228	[BUG]  [BUGGY]  AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  null);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  null);	  AssertionFailedError.warning(   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	46	None	replace
229	[BUG]  [BUGGY]  AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  this);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  this);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "Can  not  start  of  type  {  0  }   ",  this);	  AssertionFailedError.warning(   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	46	None	replace
230	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  error: "+getMessage(),  expected);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  error: "+getMessage(),  expected);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  error: "+getMessage(),  expected);	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",   "Unexpected    error:   "+getMessage());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
231	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_STATE);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_STATE);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_STATE);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
232	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TEST_FAILED);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TEST_FAILED);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TEST_FAILED);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
233	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TarNumberInputStream.UTF8);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TarNumberInputStream.UTF8);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TarNumberInputStream.UTF8);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
234	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + "  => ");  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + "  => ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type "  +  name  + "  => ");	  System.err.println(   "Failed    to    start    of    type   "    +    name);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
235	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + ":  expected ");  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + ":  expected ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type "  +  name  + ":  expected ");	  System.err.println(   "Failed    to    start    of    type   "    +    name);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
236	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + "  -> "  +  name);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + "  -> "  +  name);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type "  +  name  + "  -> "  +  name);	  System.err.println(   "Failed    to    start    of    type   "    +    name);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
237	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type ",  name);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type ",  name);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type ",  name);	  System.err.println(   "Failed    to    start    of    type   "    +    name);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
238	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.invalid.type ",  args);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.invalid.type ",  args);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.invalid.type ",  args);	  AssertionFailedError.warning(   "msg.bad.invalid.type   ",    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
239	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.invalid.type ",  this);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.invalid.type ",  this);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.invalid.type ",  this);	  AssertionFailedError.warning(   "msg.bad.invalid.type   ",    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
240	[BUG]  [BUGGY]  final  long  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  long  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	final  long  haveUnclosedEntry  =  true;	  final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
241	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  System.identityHashCode(this));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  System.identityHashCode(this));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  System.identityHashCode(this));	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
242	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  this.name);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  this.name);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  this.name);	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
243	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  getMessage(),  NON_GLOBAL);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  getMessage(),  NON_GLOBAL);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  getMessage(),  NON_GLOBAL);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,    getMessage());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
244	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  1);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
245	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  this);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  this);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR,  this);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.TYPE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
246	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unknown  object:  {  0  }   ");  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unknown  object:  {  0  }   ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unknown  object:  {  0  }   ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
247	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  identifier:  {  0  }  is  not  supported. ");  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  identifier:  {  0  }  is  not  supported. ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  identifier:  {  0  }  is  not  supported. ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
248	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  identifier:  {  0  }  has  been  deprecated  for  {  1  }   ");  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  identifier:  {  0  }  has  been  deprecated  for  {  1  }   ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  identifier:  {  0  }  has  been  deprecated  for  {  1  }   ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
249	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  identifier:  {  0  }  has  been  deprecated. ");  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  identifier:  {  0  }  has  been  deprecated. ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  identifier:  {  0  }  has  been  deprecated. ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",    null);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
250	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  this);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  this);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  this);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
251	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  TEST_PARAM);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  TEST_PARAM);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,  TEST_PARAM);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
252	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  1);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
253	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TEST_PARAM);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TEST_PARAM);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,  TEST_PARAM);	  AssertionFailedError    t    =    new    AssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
254	[BUG]  [BUGGY]  protected  static  final  int  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  protected  static  final  int  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	protected  static  final  int  haveUnclosedEntry  =  false;	  protected    static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
255	[BUG]  [BUGGY]  protected  static  final  long  haveUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  protected  static  final  long  haveUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	protected  static  final  long  haveUnclosedEntry  =  true;	  protected    static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
256	[BUG]  [BUGGY]  private  int  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  int  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	private  int  hasUnclosedEntry  =  true;	  private    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
257	[BUG]  [BUGGY]  static  final  byte  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  byte  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	static  final  byte  haveUnclosedEntry  =  false;	  static    final    boolean    haveUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
258	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Can  not  start  of  type  {  0  }   ",  required);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Can  not  start  of  type  {  0  }   ",  required);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Can  not  start  of  type  {  0  }   ",  required);	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",   "Can    not    start    of    type    {    0    }       ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
259	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  error: "+getMessage()  + "  }   ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  error: "+getMessage()  + "  }   ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  error: "+getMessage()  + "  }   ");	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",   "Unexpected    error:   "+getMessage());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
260	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  error: "  +  this);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  error: "  +  this);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR ", "Unexpected  error: "  +  this);	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ",   "Unexpected    error:   "+getMessage());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
261	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.invalid.type ",  expected);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.invalid.type ",  expected);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.invalid.type ",  expected);	  AssertionFailedError.warning(   "msg.bad.invalid.type   ",    null);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
262	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  STRING_LITERAL_EXPECTED);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  STRING_LITERAL_EXPECTED);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  STRING_LITERAL_EXPECTED);	  AssertionFailedError    t    =    new    AssertionFailedError(getMessage());    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
263	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  STRING_EXPECTED);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  STRING_EXPECTED);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  STRING_EXPECTED);	  AssertionFailedError    t    =    new    AssertionFailedError(getMessage());    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
264	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  NON_SYNTHETIC);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  NON_SYNTHETIC);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  NON_SYNTHETIC);	  AssertionFailedError    t    =    new    AssertionFailedError(getMessage());    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
265	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  MISSING_EXTENDS);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  MISSING_EXTENDS);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(getMessage(),  MISSING_EXTENDS);	  AssertionFailedError    t    =    new    AssertionFailedError(getMessage());    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
266	[BUG]  [BUGGY]  public  static  final  long  hasUnclosedEntry  =  true;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  long  hasUnclosedEntry  =  true;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  static  final  long  hasUnclosedEntry  =  true;	  public    final    boolean    hasUnclosedEntry    =    true;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
267	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected ".equals(new  Object[]  {  }  ));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected ".equals(new  Object[]  {  }  ));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.expected ".equals(new  Object[]  {  }  ));	  AssertionFailedError.warning(   "msg.bad.assertion.expected   ",    new    Object[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	51	None	replace
268	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected ",  new  Object[]  {  },  name);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected ",  new  Object[]  {  },  name);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.expected ",  new  Object[]  {  },  name);	  AssertionFailedError.warning(   "msg.bad.assertion.expected   ",    new    Object[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	51	None	replace
269	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected ",  new  Object[]  {  },  this);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.expected ",  new  Object[]  {  },  this);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.expected ",  new  Object[]  {  },  this);	  AssertionFailedError.warning(   "msg.bad.assertion.expected   ",    new    Object[]    {    }    );    	non-compiled	[CE]  <identifier>  expected	51	None	replace
270	[BUG]  [BUGGY]  private  static  final  byte  hasUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  byte  hasUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	private  static  final  byte  hasUnclosedEntry  =  false;	  private    static    final    boolean    hasUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
271	[BUG]  [BUGGY]  public  short  haveUnclosedEntry  =  false;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  public  short  haveUnclosedEntry  =  false;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	public  short  haveUnclosedEntry  =  false;	  public    int    haveUnclosedEntry    =    false;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
272	[BUG]  [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  id);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  id);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "JSC_INTERNAL_ERROR "  +  id);	  AssertionFailedError.warning(   "JSC_INTERNAL_ERROR   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
273	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  Arrays.asList(getMessage()));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Unexpected  error: "  +  Arrays.asList(getMessage()));  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Unexpected  error: "  +  Arrays.asList(getMessage()));	  System.err.println(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
274	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  asPath());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Unexpected  error: "  +  asPath());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Unexpected  error: "  +  asPath());	  System.err.println(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
275	[BUG]  [BUGGY]  System.err.println( "Unexpected  error: "  +  this);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Unexpected  error: "  +  this);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Unexpected  error: "  +  this);	  System.err.println(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
276	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name,  expected);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name,  expected);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type "  +  name,  expected);	  System.err.println(   "Failed    to    start    of    type   "    +    name);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
277	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + "  bytes. ");  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + "  bytes. ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type "  +  name  + "  bytes. ");	  System.err.println(   "Failed    to    start    of    type   "    +    name);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
278	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + "  in  error  message. ");  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type "  +  name  + "  in  error  message. ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type "  +  name  + "  in  error  message. ");	  System.err.println(   "Failed    to    start    of    type   "    +    name);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
279	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( " ")  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( " ")  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( " ")	  AssertionFailedError.warning(   "msg.bad.assertion.error   ",    new    IOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
280	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "Unknown  exception: ");  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "Unknown  exception: ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	AssertionFailedError.warning( "msg.bad.assertion.error ",  new  IOException( "Unknown  exception: ");	  AssertionFailedError.warning(   "msg.bad.assertion.error   ",    new    IOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
281	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type. ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type. ");  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type. ");	  System.err.println(   "Failed    to    start    of    type   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
282	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type "+getMessage());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type "+getMessage());  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type "+getMessage());	  System.err.println(   "Failed    to    start    of    type   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
283	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  type ",  expected);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  type ",  expected);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [VARIABLES]  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	57	57	1	replace	System.err.println( "Failed  to  start  of  type ",  expected);	  System.err.println(   "Failed    to    start    of    type   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
