bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  this.recordBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(tarBuf,  0,  this.recordBuf,  1,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(tarBuf,  0,  this.recordBuf,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
2	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.recordBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.recordBuf,  1,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.recordBuf,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  1,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.recordBuf,  0,  this.assemBuf,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
4	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[blockSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[blockSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[blockSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
5	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordSize  +  1];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[recordSize  +  1];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordSize  +  1];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
6	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[length];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[length];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[length];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
7	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[lockSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[lockSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[lockSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
8	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  4);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    +    2);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
9	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  /  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  /  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  /  2);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    +    2);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
10	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  3);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  3);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  3);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    +    2);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
11	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  5);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  5);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  5);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    +    2);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
12	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  BlockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  BlockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  BlockSize,  recordSize);	  this.buffer    =    new    TarBuffer(out,    recordSize,    blockSize);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
13	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(out,    recordSize,    blockSize);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
14	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(out,    recordSize,    blockSize);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
15	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  assemLen,  blockSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  assemLen,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  assemLen,  blockSize);	  this.buffer    =    new    TarBuffer(out,    recordSize,    blockSize);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
16	[BUG]  [BUGGY]  this.assemLen  -=  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  -=  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  -=  1;	  this.assemLen    =    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
17	[BUG]  [BUGGY]  This.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  This.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	This.assemLen  =  0;	  this.assemLen    =    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  out.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  out.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  out.length);	  System.arraycopy(os,    0,    this.recordBuf,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(out,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(out,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(out,  0,  this.recordBuf,  0,  recordSize);	  System.arraycopy(os,    0,    this.recordBuf,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  out.length  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  out.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  out.length  -  1);	  System.arraycopy(os,    0,    this.recordBuf,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  out.length  -  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  out.length  -  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  out.length  -  recordSize);	  System.arraycopy(os,    0,    this.recordBuf,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  out.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  out.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.buffer,  0,  out.length);	  System.arraycopy(os,    0,    this.recordBuf,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  this.assemLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  this.assemLen);	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
24	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
25	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  +  1);	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
26	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  -  2);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
27	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.recordSize  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.recordSize  -  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
28	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  *  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  *  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  *  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
29	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1L);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1L);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1L);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
30	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  6);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  6);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  6);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
31	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[blockSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[blockSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[blockSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
32	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[length];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[length];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[length];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
33	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordSize  +  1];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[recordSize  +  1];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordSize  +  1];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
34	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[lockSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[lockSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[lockSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
35	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  1);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
36	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
37	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  this.assemLen);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  this.assemLen);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
38	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
39	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  assemLen);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  assemLen);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
40	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[blockSize  +  recordSize];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[blockSize  +  recordSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[blockSize  +  recordSize];	  this.recordBuf    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	45	None	replace
41	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[blockSize  +  1];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[blockSize  +  1];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[blockSize  +  1];	  this.recordBuf    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	45	None	replace
42	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[blockSize],  recordSize;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[blockSize],  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[blockSize],  recordSize;	  this.recordBuf    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	45	None	replace
43	[BUG]  [BUGGY]  os.flush();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  os.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	os.flush();	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    os.flush();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.write(blockSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.write(blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.write(blockSize);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    os.flush();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
45	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  0);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
46	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  assemLen  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  assemLen  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  assemLen  +  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
47	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
48	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen  +  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
49	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen  -  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
50	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(this.assemBuf,  blockSize,  recordSize,  this.assemLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(this.assemBuf,  blockSize,  recordSize,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(this.assemBuf,  blockSize,  recordSize,  this.assemLen);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
51	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen  +  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen  +  2);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
52	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  BlockSize,  recordSize,  this.assemLen);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  BlockSize,  recordSize,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  BlockSize,  recordSize,  this.assemLen);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
53	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  0,  this.assemLen);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  0,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  0,  this.assemLen);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
54	[BUG]  [BUGGY]  System.arraycopy(ttarBuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(ttarBuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(ttarBuf,  0,  this.assemBuf,  0,  recordSize);	  System.arraycopy(recordBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  +  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
56	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  /  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  /  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  /  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
57	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  *  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  *  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  *  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
58	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.assemBuf,  0,  recordSize);  os.close();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.buffer,  0,  this.assemBuf,  0,  recordSize);  os.close();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.buffer,  0,  this.assemBuf,  0,  recordSize);  os.close();	  System.arraycopy(this.recordBuf,    0,    this.assemBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
59	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
60	[BUG]  [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
61	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
62	[BUG]  [BUGGY]  System.arraycopy(blockSize,  0,  this.recordBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(blockSize,  0,  this.recordBuf,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(blockSize,  0,  this.recordBuf,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
63	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  blockSize);	  this.assemLen    =    System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
64	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize  -  1);	  this.assemLen    =    System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
65	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize  +  1);	  this.assemLen    =    System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
66	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(this.assemBuf,  0,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(this.assemBuf,  0,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(this.assemBuf,  0,  blockSize,  recordSize);	  this.assemLen    =    System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
67	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  0);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  0);	  this.assemLen    =    System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
68	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  blockSize  -  recordSize);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  blockSize  -  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  blockSize  -  recordSize);	  this.assemLen    =    System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
69	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(this.recordBuf,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(this.recordBuf,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(this.recordBuf,  blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.recordBuf);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
70	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf,  this.assemLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf,  this.assemLen);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.recordBuf);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
71	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  this.recordBuf);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  this.recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize,  this.recordBuf);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.recordBuf);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
72	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize,  this.recordBuf);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize,  this.recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(buff,  blockSize,  recordSize,  this.recordBuf);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.recordBuf);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
73	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf,  this.closedEntry);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf,  this.closedEntry);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf,  this.closedEntry);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.recordBuf);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
74	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(tarBuf,  0,  assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(tarBuf,  0,  assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
75	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemLen,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemLen,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemLen,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
76	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[1];  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[1];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[1];	  this.recordBuf    =    new    byte[2];    	non-compiled	[CE]  <identifier>  expected	50	None	replace
77	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[4];  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[4];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[4];	  this.recordBuf    =    new    byte[2];    	non-compiled	[CE]  <identifier>  expected	50	None	replace
78	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[3];  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[3];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[3];	  this.recordBuf    =    new    byte[2];    	non-compiled	[CE]  <identifier>  expected	50	None	replace
79	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  recordSize  +  1);	  System.arraycopy(tarBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
80	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  blockSize);	  System.arraycopy(tarBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
81	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  assemLen);	  System.arraycopy(tarBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
82	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
83	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  this.assemLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  this.assemLen);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
84	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  blockSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  blockSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize  -  1);	  System.arraycopy(os,    0,    this.assemBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
86	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize  /  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize  /  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize  /  1);	  System.arraycopy(os,    0,    this.assemBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
87	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.assemLen  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.assemLen  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.assemLen  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
88	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  this.assemLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  this.assemLen);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
89	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  assemBuf,  0,  this.assemLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(tarBuf,  0,  assemBuf,  0,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(tarBuf,  0,  assemBuf,  0,  this.assemLen);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
90	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  this.assemLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  this.assemLen);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
91	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordSize  +  3];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[recordSize  +  3];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordSize  +  3];	  this.recordBuf    =    new    byte[recordSize    +    1];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
92	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordSize  +  4];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[recordSize  +  4];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordSize  +  4];	  this.recordBuf    =    new    byte[recordSize    +    1];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
93	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordSize  *  1];  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[recordSize  *  1];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordSize  *  1];	  this.recordBuf    =    new    byte[recordSize    +    1];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
94	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  1,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
95	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
96	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  this.assemBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(tarBuf,  0,  this.assemBuf,  1,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(tarBuf,  0,  this.assemBuf,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
98	[BUG]  [BUGGY]  System.arraycopy(blockSize,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(blockSize,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(blockSize,  0,  this.recordBuf,  0,  recordSize);	  System.arraycopy(os,    0,    this.recordBuf,    0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
99	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  this.assemLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  this.assemLen);	  System.arraycopy(os,    0,    this.recordBuf,    0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
100	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  blockSize);	  System.arraycopy(os,    0,    this.recordBuf,    0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
101	[BUG]  [BUGGY]  System.arraycopy(ARRAYBuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(ARRAYBuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(ARRAYBuf,  0,  this.assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
102	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordSize  *  2];  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[recordSize  *  2];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordSize  *  2];	  this.recordBuf    =    new    byte[recordSize    +    2];    	non-compiled	[CE]  <identifier>  expected	49	None	replace
103	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.buffer,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.buffer,  0,  this.assemBuf,  0,  recordSize);	  System.arraycopy(this.recordBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
104	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[RecordBuf.length  +  1];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[RecordBuf.length  +  1];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[RecordBuf.length  +  1];	  this.recordBuf    =    new    byte[RecordBuf.length];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
105	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordBuf.length  +  1];  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[recordBuf.length  +  1];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordBuf.length  +  1];	  this.recordBuf    =    new    byte[RecordBuf.length];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
106	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordBuf.length];  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[recordBuf.length];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordBuf.length];	  this.recordBuf    =    new    byte[RecordBuf.length];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
107	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[RecordBuf.length  +  recordSize];  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[RecordBuf.length  +  recordSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[RecordBuf.length  +  recordSize];	  this.recordBuf    =    new    byte[RecordBuf.length];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
108	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[RecordBuf.length  +  2];  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[RecordBuf.length  +  2];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[RecordBuf.length  +  2];	  this.recordBuf    =    new    byte[RecordBuf.length];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
109	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.recordBuf,  0,  recordSize);  os.flush();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.buffer,  0,  this.recordBuf,  0,  recordSize);  os.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.buffer,  0,  this.recordBuf,  0,  recordSize);  os.flush();	  System.arraycopy(this.buffer,    0,    this.recordBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.buffer,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.buffer,  0,  this.recordBuf,  0,  recordSize);	  System.arraycopy(this.buffer,    0,    this.recordBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.assemBuf,  0,  recordSize);  os.flush();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.buffer,  0,  this.assemBuf,  0,  recordSize);  os.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.buffer,  0,  this.assemBuf,  0,  recordSize);  os.flush();	  System.arraycopy(this.buffer,    0,    this.recordBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.buffer,  0,  recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.buffer,  0,  this.buffer,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.buffer,  0,  this.buffer,  0,  recordSize);	  System.arraycopy(os,    0,    this.buffer,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
113	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  this.assemLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.buffer,  0,  this.assemLen);	  System.arraycopy(os,    0,    this.buffer,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
114	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.buffer,  0,  blockSize);	  System.arraycopy(os,    0,    this.buffer,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
115	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.buffer,  0,  assemLen);	  System.arraycopy(os,    0,    this.buffer,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
116	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.buffer,  0,  recordSize  +  1);	  System.arraycopy(os,    0,    this.buffer,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
117	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.buffer,  0,  recordSize  -  1);	  System.arraycopy(os,    0,    this.buffer,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
118	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.assemBuf,  0,  this.assemLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.buffer,  0,  this.assemBuf,  0,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.buffer,  0,  this.assemBuf,  0,  this.assemLen);	  System.arraycopy(os,    0,    this.assemBuf,    0,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
119	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  -  1);	  System.arraycopy(tarBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
120	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  +  1);	  System.arraycopy(tarBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
121	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  -  2);	  System.arraycopy(tarBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
122	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  blockSize);	  System.arraycopy(tarBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
123	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  this.recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  this.recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  this.recordSize);	  System.arraycopy(os,    0,    this.recordBuf,    0,    this.recordSize);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
124	[BUG]  [BUGGY]  this.buffered  =  new  TarBuffer(out,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffered  =  new  TarBuffer(out,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffered  =  new  TarBuffer(out,  blockSize,  recordSize);	  this.buffered    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
125	[BUG]  [BUGGY]  this.buffered  =  new  TarBuffer(blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffered  =  new  TarBuffer(blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffered  =  new  TarBuffer(blockSize,  recordSize);  this.assemLen  =  0;	  this.buffered    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
126	[BUG]  [BUGGY]  this.buffered  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffered  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffered  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  1;	  this.buffered    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
127	[BUG]  [BUGGY]  this.buffered  =  new  TarBuffer(this.buffer,  blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffered  =  new  TarBuffer(this.buffer,  blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffered  =  new  TarBuffer(this.buffer,  blockSize,  recordSize);  this.assemLen  =  0;	  this.buffered    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
128	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  -  1);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
129	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  +  1);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
130	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  blockSize);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
131	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  0);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  0);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
132	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
133	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  -  2);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  -  2);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
134	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  -  1);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  -  1);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize  -  1);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    -    1);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
135	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  2);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  2);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  2);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    -    1);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
136	[BUG]  [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
137	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
138	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(lockSize,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(lockSize,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(lockSize,  0,  this.assemBuf,  0,  recordSize);	  this.assemLen    =    System.arraycopy(recordSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
139	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(this.assemBuf,  0,  this.assemLen,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(this.assemBuf,  0,  this.assemLen,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(this.assemBuf,  0,  this.assemLen,  0,  recordSize);	  this.assemLen    =    System.arraycopy(recordSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
140	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(recordSize,  0,  this.assemBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(recordSize,  0,  this.assemBuf,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(recordSize,  0,  this.assemBuf,  0,  recordSize  +  1);	  this.assemLen    =    System.arraycopy(recordSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
141	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(recordSize,  0,  this.assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(recordSize,  0,  this.assemBuf,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(recordSize,  0,  this.assemBuf,  0,  recordSize  -  1);	  this.assemLen    =    System.arraycopy(recordSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
142	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  2;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    1;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
143	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[RecordSize  +  1];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[RecordSize  +  1];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[RecordSize  +  1];	  this.recordBuf    =    new    byte[RecordSize];    	non-compiled	[CE]  <identifier>  expected	75	None	replace
144	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.currName,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.currName,  LONGFILE_GNU);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.currName,  LONGFILE_GNU);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.currName);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
145	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.lONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.lONGFILE_GNU);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.lONGFILE_GNU);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.currName);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
146	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.currName,  this.assemLen);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.currName,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.currName,  this.assemLen);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.currName);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
147	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  LONGFILE_GNU);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.currName);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
148	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
149	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize);  this.assemLen  =  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize);  this.assemLen  =  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize);  this.assemLen  =  1;	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
150	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(block,  blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(block,  blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(block,  blockSize,  recordSize);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
151	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  os.length);	  System.arraycopy(os,    0,    this.recordBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
152	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  os.length  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  os.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  os.length  +  1);	  System.arraycopy(os,    0,    this.recordBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
153	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  os.length  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  os.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  os.length  -  1);	  System.arraycopy(os,    0,    this.recordBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
154	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  os.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.buffer,  0,  os.length);	  System.arraycopy(os,    0,    this.recordBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
155	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  os.length  -  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  os.length  -  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  os.length  -  recordSize);	  System.arraycopy(os,    0,    this.recordBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
156	[BUG]  [BUGGY]  os.write(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  os.write(blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	os.write(blockSize,  recordSize);	  os.close();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
157	[BUG]  [BUGGY]  os.write('n');  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  os.write('n');  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	os.write('n');	  os.close();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
158	[BUG]  [BUGGY]  os.write(buffer,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  os.write(buffer,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	os.write(buffer,  0,  recordSize);	  os.close();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
159	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[blockSize  *  recordSize];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[blockSize  *  recordSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[blockSize  *  recordSize];	  this.recordBuf    =    new    byte[recordSize    *    recordSize];    	non-compiled	[CE]  <identifier>  expected	56	None	replace
160	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[length  *  recordSize];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[length  *  recordSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[length  *  recordSize];	  this.recordBuf    =    new    byte[recordSize    *    recordSize];    	non-compiled	[CE]  <identifier>  expected	56	None	replace
161	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[lockSize  *  recordSize];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[lockSize  *  recordSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[lockSize  *  recordSize];	  this.recordBuf    =    new    byte[recordSize    *    recordSize];    	non-compiled	[CE]  <identifier>  expected	56	None	replace
162	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordSize  *  recordSize  +  1];  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[recordSize  *  recordSize  +  1];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordSize  *  recordSize  +  1];	  this.recordBuf    =    new    byte[recordSize    *    recordSize];    	non-compiled	[CE]  <identifier>  expected	56	None	replace
163	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[(  blockSize  *  recordSize)];  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[(  blockSize  *  recordSize)];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[(  blockSize  *  recordSize)];	  this.recordBuf    =    new    byte[recordSize    *    recordSize];    	non-compiled	[CE]  <identifier>  expected	56	None	replace
164	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  out.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  out.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  out.length);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
165	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  out.length  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  out.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  out.length  -  1);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
166	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  out.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  out.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  out.length);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
167	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  out.length  -  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  out.length  -  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  out.length  -  recordSize);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
168	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  +  2);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
169	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  *  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  *  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  *  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
170	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  +  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  +  3);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  +  3);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
171	[BUG]  [BUGGY]  this.assemLen  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  new  byte[blockSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  new  byte[blockSize];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	31	None	replace
172	[BUG]  [BUGGY]  this.assemLen  =  new  byte[recordSize  +  1];  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  new  byte[recordSize  +  1];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  new  byte[recordSize  +  1];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	31	None	replace
173	[BUG]  [BUGGY]  this.assemLen  =  new  byte[0];  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  new  byte[0];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  new  byte[0];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	31	None	replace
174	[BUG]  [BUGGY]  this.assemLen  =  new  byte[length];  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  new  byte[length];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  new  byte[length];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	31	None	replace
175	[BUG]  [BUGGY]  this.assemLen  =  new  byte[lockSize];  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  new  byte[lockSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  new  byte[lockSize];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	31	None	replace
176	[BUG]  [BUGGY]  this.assemLen  =  new  byte[recordSize  +  2];  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  new  byte[recordSize  +  2];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  new  byte[recordSize  +  2];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	31	None	replace
177	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  recordSize;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.currentTimeMillis()  +  recordSize;	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
178	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.currentTimeMillis()  +  1;	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
179	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.currentTimeMillis()  -  1;	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
180	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.currentTimeMillis()  -  recordSize;	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
181	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  2;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.currentTimeMillis()  /  2;	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
182	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  recordSize);  os.flush();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  recordSize);  os.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  recordSize);  os.flush();	  System.arraycopy(this.assemBuf,    0,    this.recordBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
183	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[RecordBuffer.length];  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[RecordBuffer.length];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[RecordBuffer.length];	  this.recordBuf    =    new    byte[length];    	non-compiled	[CE]  <identifier>  expected	48	None	replace
184	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[length  +  1];  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[length  +  1];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[length  +  1];	  this.recordBuf    =    new    byte[length];    	non-compiled	[CE]  <identifier>  expected	48	None	replace
185	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
186	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  2;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
187	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  4;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
188	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)/  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)/  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)/  1;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
189	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  3;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  3;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  3;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
190	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  5;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  5;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  5;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
191	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
192	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  os.close();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  os.close();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  os.close();	  System.arraycopy(assemBuf,    0,    this.recordBuf,    1,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
193	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  os.flush();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  os.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  os.flush();	  System.arraycopy(assemBuf,    0,    this.recordBuf,    1,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
194	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize);  os.close();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize);  os.close();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize);  os.close();	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
195	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  os.flush();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  os.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  os.flush();	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
196	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  2);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
197	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  4);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
198	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  /  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  /  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  /  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
199	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  3);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  3);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  3);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
200	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  2);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  2);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  2);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    +    1);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
201	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  1);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  1);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize  +  1);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    +    1);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
202	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  this.assemLen  =  2;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  this.assemLen  =  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  this.assemLen  =  2;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    +    1);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
203	[BUG]  [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.recordBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.recordBuf,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.recordBuf,  0,  this.recordBuf,  0,  recordSize  -  1);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
204	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  /  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  /  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  /  1);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
205	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  blockSize  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  blockSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  blockSize  -  1);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
206	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize  +  1);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
207	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize  -  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize  -  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize  -  recordSize);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
208	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize,  0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize,  0);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
209	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(this.tarBuf,  0,  this.recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(this.tarBuf,  0,  this.recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(this.tarBuf,  0,  this.recordSize);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
210	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize  -  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize  -  1);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
211	[BUG]  [BUGGY]  this.assemLen  -=  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  -=  4;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  -=  4;	  this.assemLen    =    4;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
212	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  this.recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  this.recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  this.recordSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    this.recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
213	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.recordSize  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.recordSize  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    this.recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
214	[BUG]  [BUGGY]  this.assemLen  =  recordSize  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  recordSize  +  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  recordSize  +  1;	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
215	[BUG]  [BUGGY]  this.assemLen  =  blockSize;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  blockSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  blockSize;	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
216	[BUG]  [BUGGY]  this.assemLen  =  recordSize  -  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  recordSize  -  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  recordSize  -  1;	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
217	[BUG]  [BUGGY]  this.assemLen  -=  recordSize;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  -=  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  -=  recordSize;	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
218	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize,  recordSize  +  1);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
219	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  recordSize);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
220	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize,  recordSize  -  1);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
221	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.blockSize,  recordSize);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
222	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  this.assemLen  =  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  this.assemLen  =  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  this.assemLen  =  1;	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
223	[BUG]  [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.recordBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.recordBuf,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.recordBuf,  0,  this.recordBuf,  0,  recordSize  +  1);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
224	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  +  2);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
225	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  /  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  /  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  /  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    2);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
226	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize  -  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    2);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
227	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  4);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  4);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    2);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
228	[BUG]  [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.buffer,  0,  assemLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.buffer,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.recordBuf,  0,  this.buffer,  0,  assemLen);	  System.arraycopy(os,    0,    this.recordBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
229	[BUG]  [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.recordBuf,  0,  this.recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.recordBuf,  0,  this.recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.recordBuf,  0,  this.recordBuf,  0,  this.recordSize);	  System.arraycopy(this.recordBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
230	[BUG]  [BUGGY]  this.assemLen  -=  2;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  -=  2;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  -=  2;	  this.assemLen    =    2;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
231	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  0,  recordSize);	  this.buffer    =    new    TarBuffer(out,    blockSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
232	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  assemLen  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  assemLen  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  assemLen  +  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
233	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  blockSize,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  blockSize,  0,  recordSize);	  System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
234	[BUG]  [BUGGY]  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(blockSize,  0,  this.assemBuf,  0,  blockSize);	  System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
235	[BUG]  [BUGGY]  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize  +  1);	  System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
236	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.write(blockSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.write(blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.write(blockSize);	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    recordSize);    os.flush();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
237	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize  +  2);	  System.arraycopy(os,    0,    this.assemBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
238	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordBuf,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordBuf,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordBuf,  recordSize);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
239	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  recordSize);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
240	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordBuf,  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordBuf,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordBuf,  0);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
241	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordBuf,  1,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordBuf,  1,  recordSize);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
242	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordLen];  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[recordLen];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordLen];	  this.recordBuf    =    new    byte[length];    	non-compiled	[CE]  <identifier>  expected	48	None	replace
243	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[len];  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[len];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[len];	  this.recordBuf    =    new    byte[length];    	non-compiled	[CE]  <identifier>  expected	48	None	replace
244	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  recordSize  +  1);	  System.arraycopy(os,    0,    this.assemBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
245	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  blockSize,  assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  blockSize,  assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
246	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
247	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemLen,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemLen,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemLen,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
248	[BUG]  [BUGGY]  this.assemLen  =  3;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  3;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  3;	  this.assemLen    =    4;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
249	[BUG]  [BUGGY]  System.arraycopy(ttarBuf,  0,  this.recordBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(ttarBuf,  0,  this.recordBuf,  1,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(ttarBuf,  0,  this.recordBuf,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
250	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
251	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  recordSize;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.currentTimeMillis()  /  recordSize;	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
252	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  recordSize;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.currentTimeMillis()  *  recordSize;	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
253	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  this.assemLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  this.assemLen);	  System.arraycopy(os,    0,    this.assemBuf,    0,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
254	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  this.assemLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  this.assemLen);	  System.arraycopy(os,    0,    this.assemBuf,    0,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
255	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
256	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize);	  this.assemLen    =    System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
257	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  blockSize);	  this.assemLen    =    System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
258	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  os,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.buffer,  0,  os,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.buffer,  0,  os,  0,  recordSize);	  System.arraycopy(this.buffer,    0,    this.recordBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
259	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  }	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
260	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize);  }	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
261	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  blockSize,  recordSize);	  System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
262	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  *  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  *  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  *  recordSize  -  1);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
263	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  -  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  -  2);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
264	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  1,  recordSize);  os.close();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  1,  recordSize);  os.close();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  1,  recordSize);  os.close();	  System.arraycopy(assemBuf,    0,    this.recordBuf,    1,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
265	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  recordSize);  os.flush();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  recordSize);  os.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  recordSize);  os.flush();	  System.arraycopy(assemBuf,    0,    this.recordBuf,    1,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
266	[BUG]  [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  1,  recordSize);  os.close();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  1,  recordSize);  os.close();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.recordBuf,  0,  this.assemBuf,  1,  recordSize);  os.close();	  System.arraycopy(assemBuf,    0,    this.recordBuf,    1,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
267	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
268	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize,  this.recordBuf);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize,  this.recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize,  this.recordBuf);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.recordBuf);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
269	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf  +  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.recordBuf);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
270	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  assemLen,  recordSize,  this.recordBuf);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  assemLen,  recordSize,  this.recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  assemLen,  recordSize,  this.recordBuf);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.recordBuf);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
271	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf  -  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.recordBuf);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
272	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  0,  recordSize,  this.recordBuf);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  0,  recordSize,  this.recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  0,  recordSize,  this.recordBuf);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.recordBuf);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
273	[BUG]  [BUGGY]  System.arraycopy(ttarBuf,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(ttarBuf,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(ttarBuf,  0,  this.recordBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
274	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  1,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  1,  recordSize);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
275	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  -  4);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  -  4);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize  -  4);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
276	[BUG]  [BUGGY]  this.assemLen  =  new  longFileMode;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  new  longFileMode;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  new  longFileMode;	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
277	[BUG]  [BUGGY]  System.arraycopy(this.recordBuf,  0,  assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.recordBuf,  0,  assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.recordBuf,  0,  assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    this.recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
278	[BUG]  [BUGGY]  this.assemLen  =  new  byte[logSize];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  new  byte[logSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  new  byte[logSize];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	31	None	replace
279	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(recordBuf,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(recordBuf,  0,  this.recordBuf,  0,  recordSize);	  System.arraycopy(os,    0,    this.recordBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
280	[BUG]  [BUGGY]  System.arraycopy(blockSize,  0,  this.recordBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(blockSize,  0,  this.recordBuf,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(blockSize,  0,  this.recordBuf,  0,  assemLen);	  System.arraycopy(os,    0,    this.recordBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
281	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordLen);	  System.arraycopy(os,    0,    this.recordBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
282	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize,  this.assemLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize,  this.assemLen);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
283	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  0,  recordSize,  this.assemLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  0,  recordSize,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  0,  recordSize,  this.assemLen);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
284	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordLen,  this.assemLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordLen,  this.assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordLen,  this.assemLen);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
285	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  0);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
286	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize  -  1);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
287	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordBuf);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordBuf);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
288	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordLen);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordLen);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
289	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(block,  recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(block,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(block,  recordSize);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
290	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  BlockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  BlockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  BlockSize,  recordSize);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    recordSize,    blockSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
291	[BUG]  [BUGGY]  This.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  This.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	This.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    recordSize,    blockSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
292	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(block,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(block,  recordSize);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(block,  recordSize);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
293	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  0);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  0);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  0);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    +    1);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
294	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  3);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  3);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  3);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    +    1);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
295	[BUG]  [BUGGY]  os.write(this.buffer,  0,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  os.write(this.buffer,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	os.write(this.buffer,  0,  recordSize);	  os.close();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
296	[BUG]  [BUGGY]  os.write(this.buffer,  0,  this.recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  os.write(this.buffer,  0,  this.recordBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	os.write(this.buffer,  0,  this.recordBuf.length);	  os.close();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
297	[BUG]  [BUGGY]  os.release();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  os.release();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	os.release();	  os.close();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
298	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordBuf.length  +  2];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[recordBuf.length  +  2];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordBuf.length  +  2];	  this.recordBuf    =    new    byte[RecordBuf.length];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
299	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordBuf.length  -  1];  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[recordBuf.length  -  1];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordBuf.length  -  1];	  this.recordBuf    =    new    byte[RecordBuf.length];    	non-compiled	[CE]  <identifier>  expected	63	None	replace
300	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
301	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  LONGFILE_ERROR);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  LONGFILE_ERROR);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.currName);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
302	[BUG]  [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  out.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  out.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  out.length);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
303	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordSize  *  4];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[recordSize  *  4];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordSize  *  4];	  this.recordBuf    =    new    byte[recordSize    *    recordSize];    	non-compiled	[CE]  <identifier>  expected	56	None	replace
304	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  1,  os.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  1,  os.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  1,  os.length);	  System.arraycopy(os,    0,    this.recordBuf,    0,    os.length);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
305	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  assemLen,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  assemLen,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  assemLen,  recordSize);	  this.buffer    =    new    TarBuffer(out,    recordSize,    blockSize);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
306	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  0,  recordSize);	  this.buffer    =    new    TarBuffer(out,    recordSize,    blockSize);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
307	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockLen,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockLen,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockLen,  recordSize);	  this.buffer    =    new    TarBuffer(out,    recordSize,    blockSize);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
308	[BUG]  [BUGGY]  this.buffered  =  new  TarBuffer(out,  recordSize,  blockSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffered  =  new  TarBuffer(out,  recordSize,  blockSize);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffered  =  new  TarBuffer(out,  recordSize,  blockSize);  this.assemLen  =  0;	  this.buffered    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
309	[BUG]  [BUGGY]  this.buffered  =  new  TarBuffer(out,  recordSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffered  =  new  TarBuffer(out,  recordSize,  recordSize);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffered  =  new  TarBuffer(out,  recordSize,  recordSize);  this.assemLen  =  0;	  this.buffered    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
310	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  recordSize);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  recordSize);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
311	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordSize  +  recordSize];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[recordSize  +  recordSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordSize  +  recordSize];	  this.recordBuf    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	45	None	replace
312	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  }	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
313	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  +  1);	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
314	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
315	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  1,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
316	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  2,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  2,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  2,  recordSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
317	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  0,  assemLen);	  this.buffer    =    new    TarBuffer(out,    blockSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
318	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  0);	  System.arraycopy(tarBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
319	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize  -  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
320	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1  +  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
321	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  out.length  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  out.length  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  out.length  +  1);	  System.arraycopy(os,    0,    this.recordBuf,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
322	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  0,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  0,  assemLen);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
323	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize  -  1);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize  -  1);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize  -  1);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    -    1);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
324	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  1L;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  1L;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  1L;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
325	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  recordSize);	  this.assemLen    =    System.arraycopy(recordSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
326	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  os,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.assemBuf,  0,  os,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  os,  0,  recordSize);	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    recordSize);    os.flush();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
327	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  recordSize,  this.recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  recordSize,  this.recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  recordSize,  this.recordSize);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
328	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize  +  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize  +  recordSize);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
329	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(this.recordBuf,  0,  this.recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(this.recordBuf,  0,  this.recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(this.recordBuf,  0,  this.recordSize);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
330	[BUG]  [BUGGY]  System.arraycopy(blockSize,  0,  this.recordBuf,  0,  recordSize);  os.close();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(blockSize,  0,  this.recordBuf,  0,  recordSize);  os.close();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(blockSize,  0,  this.recordBuf,  0,  recordSize);  os.close();	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
331	[BUG]  [BUGGY]  System.arraycopy(blockSize,  0,  this.recordBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(blockSize,  0,  this.recordBuf,  0,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(blockSize,  0,  this.recordBuf,  0,  recordSize  +  1);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
332	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  *  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  *  1);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
333	[BUG]  [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize);  os.flush();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize);  os.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize);  os.flush();	  System.arraycopy(this.recordBuf,    0,    this.assemBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
334	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
335	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
336	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)-  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)-  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)-  1;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize)+    1;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
337	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  }  else  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  }  else  {  buffer.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  }  else  {  buffer.close();  }	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
338	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  }  else  {  out.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  }  else  {  out.close();  }	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
339	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  }  else  {  return  null;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  }  else  {  return  null;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  }  else  {  return  null;  }	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
340	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  2,  recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  2,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  2,  recordSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    1,    recordSize);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
341	[BUG]  [BUGGY]  os.write(this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  os.write(this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	os.write(this.recordBuf,  0,  recordSize);	  os.close();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
342	[BUG]  [BUGGY]  os.write(this.recordBuf);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  os.write(this.recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	os.write(this.recordBuf);	  os.close();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
343	[BUG]  [BUGGY]  this.recordBuf.close();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf.close();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf.close();	  os.close();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
344	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  *  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  *  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  *  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
345	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordSize  +  6];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[recordSize  +  6];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordSize  +  6];	  this.recordBuf    =    new    byte[recordSize    +    1];    	non-compiled	[CE]  <identifier>  expected	46	None	replace
346	[BUG]  [BUGGY]  System.arraycopy(arguments,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(arguments,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(arguments,  0,  this.assemBuf,  0,  recordSize);	  System.arraycopy(os,    0,    this.assemBuf,    0,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
347	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  *  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  *  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
348	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);	  this.assemLen    =    System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
349	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  *  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  *  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  *  2);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    +    2);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
350	[BUG]  [BUGGY]  this.baseBuffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.baseBuffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.baseBuffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    recordSize,    blockSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
351	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  os.write(blockSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  os.write(blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  os.write(blockSize);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    os.flush();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
352	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  /  1);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  /  1);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  /  1);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    -    1);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
353	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.currBytes);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.currBytes);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.currName);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
354	[BUG]  [BUGGY]  this.assemLen  -=  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  -=  System.currentTimeMillis();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  -=  System.currentTimeMillis();	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
355	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  this.recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  this.recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  this.recordSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    this.recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
356	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  *  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  *  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  *  recordSize  -  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
357	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  recordSize,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  recordSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  recordSize,  recordSize);	  this.buffer    =    new    TarBuffer(out,    recordSize,    blockSize);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
358	[BUG]  [BUGGY]  this.buffered  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffered  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffered  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  this.assemLen  =  0;	  this.buffered    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
359	[BUG]  [BUGGY]  this.buffered  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffered  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffered  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  this.assemLen  =  0;	  this.buffered    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
360	[BUG]  [BUGGY]  this.binary  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.binary  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.binary  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;	  this.buffered    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
361	[BUG]  [BUGGY]  System.arraycopy(arBuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(arBuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(arBuf,  0,  this.assemBuf,  0,  recordSize);	  System.arraycopy(tarBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
362	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  assemLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  assemLen);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
363	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  assemLen  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  assemLen  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  assemLen  +  1);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
364	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  recordSize);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
365	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(block,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(block,  blockSize,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(block,  blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(blockSize,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
366	[BUG]  [BUGGY]  System.arraycopy(assem,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assem,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assem,  0,  this.recordBuf,  0,  recordSize);	  System.arraycopy(os,    0,    this.recordBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
367	[BUG]  [BUGGY]  System.arraycopy(assembuffer,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assembuffer,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assembuffer,  0,  this.recordBuf,  0,  recordSize);	  System.arraycopy(os,    0,    this.recordBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
368	[BUG]  [BUGGY]  System.arraycopy(arguments,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(arguments,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(arguments,  0,  this.recordBuf,  0,  recordSize);	  System.arraycopy(os,    0,    this.recordBuf,    0,    assemLen);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
369	[BUG]  [BUGGY]  this.assemLen  =  new  byte[recordSize  *  recordSize];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  new  byte[recordSize  *  recordSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  new  byte[recordSize  *  recordSize];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	31	None	replace
370	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  /  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  /  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  /  1);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
371	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  +  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  +  2);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
372	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  *  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  *  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  *  1);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
373	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  out.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  out.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  out.length);	  System.arraycopy(tarBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
374	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  1,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  1,  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  1,  recordSize  +  1);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
375	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordBuf.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordBuf.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordBuf.length);	  this.assemLen    =    System.arraycopy(tarBuf,    0,    this.recordSize);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
376	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.buffer,  0,  recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.buffer,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.buffer,  0,  recordSize);	  System.arraycopy(os,    0,    this.buffer,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
377	[BUG]  [BUGGY]  System.arraycopy(assembuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assembuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assembuf,  0,  this.assemBuf,  0,  recordSize);	  System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
378	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  1,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  1,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  1,  recordSize  -  1);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
379	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize);  os.flush();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize);  os.flush();  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize);  os.flush();	  System.arraycopy(this.assemBuf,    0,    this.assemBuf,    0,    recordSize);    os.flush();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
380	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  *  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  *  recordSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  *  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
381	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordsize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordsize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordsize);	  this.buffer    =    new    TarBuffer(out,    blockSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
382	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  *  recordSize  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  *  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  *  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
383	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  out.length  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  out.length  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  out.length  -  1);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
384	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  out.length  -  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  out.length  -  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  out.length  -  recordSize);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
385	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  out.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  out.length);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  out.length);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    out.length);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
386	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf,  this.hasUnclosedEntry);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf,  this.hasUnclosedEntry);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf,  this.hasUnclosedEntry);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.recordBuf);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
387	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  -  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize  -  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize    -    2);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
388	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  }  else  {  return  null;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  }  else  {  return  null;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  }  else  {  return  null;  }	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
389	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  }  else  {  out.close();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  }  else  {  out.close();  }	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
390	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  }  else  {  throw  new  RuntimeException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  }  else  {  throw  new  RuntimeException( " ");  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	if(recordSize  >  0)  {  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  }  else  {  throw  new  RuntimeException( " ");  }	  this.recordBuf    =    new    byte[recordSize];    System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
391	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  this.recordBuf);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize,  this.recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize,  this.recordBuf);	  this.buffer    =    new    TarBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
392	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen)+  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen)+  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen)+  1;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
393	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  1,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  1,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.assemBuf,  1,  recordSize  -  1);	  System.arraycopy(os,    0,    this.assemBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
394	[BUG]  [BUGGY]  System.arraycopy(assem,  0,  this.assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assem,  0,  this.assemBuf,  0,  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assem,  0,  this.assemBuf,  0,  recordSize  -  1);	  System.arraycopy(os,    0,    this.assemBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
395	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  blockSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
396	[BUG]  [BUGGY]  this.assemLen  =  0,  this.recordSize;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.assemLen  =  0,  this.recordSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  0,  this.recordSize;	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
397	[BUG]  [BUGGY]  this.baseBuffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.baseBuffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  this.assemLen  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.baseBuffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize    +    1);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
398	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  -  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  -  2);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  -  2);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
399	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  *  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  *  recordSize  -  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  *  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
400	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[blockSize],  recordSize];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[blockSize],  recordSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[blockSize],  recordSize];	  this.recordBuf    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	45	None	replace
401	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[REcordSize];  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];      [BUGGY]  this.recordBuf  =  new  byte[REcordSize];  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[REcordSize];	  this.recordBuf    =    new    byte[2];    	non-compiled	[CE]  <identifier>  expected	50	None	replace
