bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.assemLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.assemLen);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.assemLen);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  this.recordSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  blockSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  2);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize  -  1);	  System.arraycopy(os,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
12	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  recordSize  +  1);	  System.arraycopy(os,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
13	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  this.assemLen);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(os,  0,  this.assemBuf,  0,  this.assemLen);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.assemBuf,  0,  this.assemLen);	  System.arraycopy(os,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize);	  System.arraycopy(os,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
15	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
16	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
17	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
18	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  assemLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  assemLen);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  assemLen);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
19	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.currName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.currName);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.currName);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
20	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  assemLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  assemLen);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  assemLen);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
21	[BUG]  [BUGGY]  os.close();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  os.close();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	os.close();	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.flush();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.flush();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.flush();	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  recordSize);  os.close();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  recordSize);  os.close();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  recordSize);  os.close();	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
24	[BUG]  [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize);  os.close();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize);  os.close();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize);  os.close();	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
25	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  1;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
27	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.close();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.close();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.close();	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.flush();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.flush();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.flush();	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
31	[BUG]  [BUGGY]  this.assemLen  =  new  byte[recordSize];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.assemLen  =  new  byte[recordSize];  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  new  byte[recordSize];	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.assemBuf,  0,  this.recordBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(tarBuf,  0,  this.recordBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.recordBuf,  0,  this.assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  recordSize);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(os,  0,  this.buffer,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.buffer,  0,  recordSize);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(this.recordBuf,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.recordBuf,  0,  this.recordBuf,  0,  recordSize);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  blockSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  blockSize);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  -  1);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
39	[BUG]  [BUGGY]  this.assemLen  =  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.assemLen  =  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  1;	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
40	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.assemLen  =  System.currentTimeMillis();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.currentTimeMillis();	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  this.assemLen  =  recordSize;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.assemLen  =  recordSize;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  recordSize;	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
42	[BUG]  [BUGGY]  this.assemLen  =  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.assemLen  =  2;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  2;	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
43	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(blockSize,  0,  this.assemBuf,  0,  recordSize);	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
44	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.assemBuf,  0,  recordSize);	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
45	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.recordBuf  =  new  byte[blockSize];  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[blockSize];	  this.recordBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
46	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordSize  +  1];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.recordBuf  =  new  byte[recordSize  +  1];  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordSize  +  1];	  this.recordBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
47	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[0];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.recordBuf  =  new  byte[0];  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[0];	  this.recordBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
48	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[length];  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.recordBuf  =  new  byte[length];  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[length];	  this.recordBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
49	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordSize  +  2];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.recordBuf  =  new  byte[recordSize  +  2];  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordSize  +  2];	  this.recordBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
50	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[2];  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.recordBuf  =  new  byte[2];  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[2];	  this.recordBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
51	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
52	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
53	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  assemBuf,  1,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  assemBuf,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
54	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(recordBuf,  0,  this.assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
56	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordSize  *  recordSize];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.recordBuf  =  new  byte[recordSize  *  recordSize];  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordSize  *  recordSize];	  this.recordBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
57	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
58	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  1;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  1;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
59	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  2);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  2);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
60	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  os.flush();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  os.flush();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  os.flush();	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
61	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  os.close();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  os.close();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  os.close();	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
62	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.recordBuf,  0,  recordSize);  os.close();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(this.buffer,  0,  this.recordBuf,  0,  recordSize);  os.close();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(this.buffer,  0,  this.recordBuf,  0,  recordSize);  os.close();	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
63	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[RecordBuf.length];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.recordBuf  =  new  byte[RecordBuf.length];  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[RecordBuf.length];	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
64	[BUG]  [BUGGY]  this.assemLen  =  4;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.assemLen  =  4;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  4;	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize  +  1);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  assemLen);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  assemLen);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
67	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize);  this.assemLen  =  0;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
68	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  this.assemLen  =  0;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
69	[BUG]  [BUGGY]  this.buffered  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffered  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffered  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
70	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  this.assemLen  =  0;  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
71	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  assemLen);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
72	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
73	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
74	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  out.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  out.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  out.length);	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
75	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[RecordSize];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.recordBuf  =  new  byte[RecordSize];  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[RecordSize];	  this.recordBuf    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
76	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  recordSize);  os.close();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  recordSize);  os.close();  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  1,  recordSize);  os.close();	  System.arraycopy(assemBuf,    0,    this.recordBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);	  System.arraycopy(os,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  os.length);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  os.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  os.length);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
79	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  out.length);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  out.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  out.length);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
80	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  this.recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  this.recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  this.recordSize);	  System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
81	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.recordBuf);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
82	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordSize];  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
83	[BUG]  [BUGGY]  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.recordBuf  =  new  byte[recordSize];  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
84	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize,  recordSize);	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
85	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(tarBuf,  0,  this.recordSize);	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
86	[BUG]  [BUGGY]  this.assemLen  =  System.arraycopy(recordSize,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];    [BUGGY]  this.assemLen  =  System.arraycopy(recordSize,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	94	94	1	replace	this.assemLen  =  System.arraycopy(recordSize,  0,  this.assemBuf,  0,  recordSize);	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
