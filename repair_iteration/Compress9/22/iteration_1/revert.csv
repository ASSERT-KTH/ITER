projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141this.recordBuf.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){finish();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosed){finish();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){finish();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosed){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){finish();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(finished){finish();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141rehash();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(finished){finish();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){finish();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141rehashTable();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){finish();}else{buffer.close();out=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141Thread.currentThread().interrupt();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141castError("TarArchiveOutputStreamclosed:"+getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141castError("CannotclosetheTarBuffer.");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141safeTarBuffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141castError("Currenttoken("+getMessage()+")notyetclosed");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){rehashTable();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){rehashTable();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){rehashTable();}else{thrownewIllegalArgumentException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){rehashTable();}else{thrownewIllegalStateException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){rehashTable();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){rehashTable();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){if(!finished){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){if(!finished){finish();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){if(finished){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!hasUnclosedEntry){finish();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){if(finished){finish();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){if(!finished){start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!hasUnclosedEntry){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141castError("Currenttoken("+getMessage()+")notavalidfiletype");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141castError("Currenttoken("+getName()+")notavalidfiletype");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){finish();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!hasUnclosedEntry){if(finished){finish();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141Thread.currentThread().setContextClassLoader(TarBuffer.class.getClassLoader());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141Thread.currentThread().getContextClassLoader().reset();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141Thread.currentThread().getContextClassLoader().close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141Thread.currentThread().setContextClassLoader(getRawClass().getClassLoader());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){if(!finished){finish();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!hasUnclosedEntry){finish();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){if(!finished){finish();}else{buffer.close();out=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){if(finished){finish();}else{buffer.close();out=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!hasUnclosedEntry){finish();}else{buffer.close();out=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){if(!finished){start();}else{buffer.close();out=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141os.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141this.assemBuf.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){buffer.close();}else{thrownewIllegalArgumentException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){rehash();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141rehashCode();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(recordBuf!=null){rehash();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(recordBuf!=null){rehash();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(recordBuf!=null){rehash();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){rehash();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){if(!finished){finish();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!hasUnclosedEntry){finish();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){if(finished){finish();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141Thread.currentThread().setContextClassLoader(getCurrentThreadContext());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141Thread.currentThread().setContextClassLoader(TarBuffer.class);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){if(finished){start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141this.recordBuf.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141this.recordBuf=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141this.recordBuf.closeAll();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141assemBuf.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141this.recordBuf.release();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry||buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry||buffer!=null){finish();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){start();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry||buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry||buffer==null){finish();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){finish();}else{buffer.close();out=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!hasUnclosedEntry){start();}else{buffer.close();out=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141this.recordBuf.close(out);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141this.recordBuf.close(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!hasUnclosedEntry){start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!hasUnclosedEntry){end();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){finish();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){start();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(haveUnclosedEntry){finish();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(haveUnclosedEntry){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){rehashTable();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){rehashTable();}else{buffer.close();out=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){rehashTable();}else{buffer.close();out=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141_reportUnsupportedOperation();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!hasUnclosed){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!haveUnclosedEntry){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry||buffer!=null){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141Thread.currentThread().setContextClass(getClass().getName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){rehash();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141rethrowInternal();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141rethrowAsIOException("");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141out.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141System.err.println("TarBuffercloned");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!hasUnclosed){finish();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141Thread.currentThread().getContextClassLoader().finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hadUnclosed){finish();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hadUnclosed){finish();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!hasUnclosed){finish();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosed){finish();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!closed){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!finished){rehash();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141_reportError("Currenttoken("+currName+")notinthecache.");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry||out!=null){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry||buffer==null){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry||buffer.isEnabled()){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry||buffer.length>0){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!haveUnclosedEntry){finish();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!hasUnclosedEntry){start();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){finish();}else{buffer.close();out=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!hasUnclosedEntry){finish();}else{buffer.close();out=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!haveUnclosedEntry){finish();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(recordBuf!=null){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(recordBuf!=null){buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(recordBuf!=null){buffer.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry||buffer.isEnabled(Feature.QUOTED_FIELD_NAMES)){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry||buffer.isEnabled(Surrogate.DEFAULT_CLOSE_ERROR)){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry){buffer.close();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(hasUnclosedEntry||buffer.isEnabled(Surrogate.DEPRECATED)){finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(this.recordBuf!=null){this.recordBuf.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(this.recordBuf!=null){this.recordBuf.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(this.recordBuf!=null){this.recordBuf.close();}else{buffer=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(this.recordBuf!=null){this.recordBuf.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(this.recordBuf!=null){this.recordBuf.close();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(this.recordBuf!=null){this.recordBuf.close();}else{buffer.close();out=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java141if(!hasUnclosedEntry){start();}else{buffer.close();out.close();}
