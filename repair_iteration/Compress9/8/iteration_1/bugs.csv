bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os,  blockSize);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  [BUGGY]  out  =  new  CountingOutputStream(os,  blockSize);  [BUGGY]    this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os,  blockSize);	out  =  new  CountingOutputStream(os);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
2	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  [BUGGY]  os  =  new  CountingOutputStream(blockSize);  [BUGGY]    this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize);	out  =  new  CountingOutputStream(os);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
3	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os,  recordSize);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  [BUGGY]  out  =  new  CountingOutputStream(os,  recordSize);  [BUGGY]    this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os,  recordSize);	out  =  new  CountingOutputStream(os);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
4	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os);  [BUGGY]    this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os);	out  =  new  CountingOutputStream(os);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
5	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize());  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize());  [BUGGY]    this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBlockSize());	out  =  new  CountingOutputStream(os);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
6	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.readLine());  [CE]  <identifier>  expected  [FE]              AssertionFailedError  [CONTEXT]  public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  [BUGGY]  out  =  new  CountingOutputStream(os.readLine());  [BUGGY]    this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.readLine());	out  =  new  CountingOutputStream(os);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
7	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]                AssertionFailedError  [CONTEXT]  public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  [BUGGY]    [BUGGY]    this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	  	out  =  new  CountingOutputStream(os);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
8	[BUG]  [BUGGY]  out  =  new  byte[recordSize];  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  [BUGGY]  out  =  new  byte[recordSize];  [BUGGY]    this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[recordSize];	out  =  new  CountingOutputStream(os);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
9	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize);  [BUGGY]    this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize);	out  =  new  CountingOutputStream(os);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
10	[BUG]  [BUGGY]  out  =  new  ArrayOutputStream(os);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  [BUGGY]  out  =  new  ArrayOutputStream(os);  [BUGGY]    this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  ArrayOutputStream(os);	out  =  new  CountingOutputStream(os);  	non-compiled	[CE]  <identifier>  expected	15	None	replace
