bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  out  =  os.readUTF();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readUTF();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  os.readUTF();	  out    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
2	[BUG]  [BUGGY]  out  =  os.readFully();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFully();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  os.readFully();	  out    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
3	[BUG]  [BUGGY]  OutputStream  out  =  os.readUTF();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.readUTF();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  os.readUTF();	  out    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
4	[BUG]  [BUGGY]  os  =  os.readUTF();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.readUTF();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  os.readUTF();	  out    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
5	[BUG]  [BUGGY]  OutputStream  out  =  os.readInt();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.readInt();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  os.readInt();	  out    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
6	[BUG]  [BUGGY]  out  =  os.readFully(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFully(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  os.readFully(blockSize,  recordSize);	  out    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
7	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.getBlockSize());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.getBlockSize());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os.getBlockSize());	  out    =    new    CountingOutputStream(os.getBlockSize()    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
8	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(os.getBlockSize());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(os.getBlockSize());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(os.getBlockSize());	  out    =    new    CountingOutputStream(os.getBlockSize()    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
9	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize()  *  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize()  *  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBlockSize()  *  1);	  out    =    new    CountingOutputStream(os.getBlockSize()    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
10	[BUG]  [BUGGY]  this.assemLen  =  os.read();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  os.read();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  os.read();	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
11	[BUG]  [BUGGY]  this.assemLen  =  os.readInt();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  os.readInt();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  os.readInt();	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
12	[BUG]  [BUGGY]  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  0;  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  0;	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
13	[BUG]  [BUGGY]  this.assemLen  =  os.readLine();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  os.readLine();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  os.readLine();	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
14	[BUG]  [BUGGY]  (TarBuffer)os.next();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  (TarBuffer)os.next();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	(TarBuffer)os.next();	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
15	[BUG]  [BUGGY]  final  OutputStream  os  =  new  CountingOutputStream(recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  final  OutputStream  os  =  new  CountingOutputStream(recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	final  OutputStream  os  =  new  CountingOutputStream(recordSize);	  OutputStream    os    =    new    CountingOutputStream(recordSize);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
16	[BUG]  [BUGGY]  OutputStream  os  =  new  ArrayOutputStream(recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  ArrayOutputStream(recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  ArrayOutputStream(recordSize);	  OutputStream    os    =    new    CountingOutputStream(recordSize);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
17	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(os.readLine(),  blockSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(os.readLine(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(os.readLine(),  blockSize);	  os    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
18	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(os.readLine()  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(os.readLine()  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(os.readLine()  +  1);	  os    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
19	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(os.readLine()  +  blockSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(os.readLine()  +  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(os.readLine()  +  blockSize);	  os    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
20	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(os.readLine(),  recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(os.readLine(),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(os.readLine(),  recordSize);	  os    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
21	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(os.readLine()  +  1,  recordSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(os.readLine()  +  1,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(os.readLine()  +  1,  recordSize);	  os    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
22	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize()  +  blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize()  +  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBlockSize()  +  blockSize);	  out    =    new    CountingOutputStream(os.getBlockSize()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
23	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize()  *  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize()  *  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBlockSize()  *  recordSize);	  out    =    new    CountingOutputStream(os.getBlockSize()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
24	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize()  +  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize()  +  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBlockSize()  +  blockSize,  recordSize);	  out    =    new    CountingOutputStream(os.getBlockSize()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
25	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize(),  blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize(),  blockSize  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBlockSize(),  blockSize  +  recordSize);	  out    =    new    CountingOutputStream(os.getBlockSize()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
26	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.getBlockSize()  +  blockSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.getBlockSize()  +  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os.getBlockSize()  +  blockSize);	  out    =    new    CountingOutputStream(os.getBlockSize()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
27	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize()  /  recordSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize()  /  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBlockSize()  /  recordSize);	  out    =    new    CountingOutputStream(os.getBlockSize()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
28	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(os.getBlockSize()  +  blockSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(os.getBlockSize()  +  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(os.getBlockSize()  +  blockSize);	  out    =    new    CountingOutputStream(os.getBlockSize()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
29	[BUG]  [BUGGY]  out  =  new  byte[blockSize  +  1];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[blockSize  +  1];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[blockSize  +  1];	  out    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
30	[BUG]  [BUGGY]  out  =  new  byte[blockSize],  recordSize;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[blockSize],  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[blockSize],  recordSize;	  out    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
31	[BUG]  [BUGGY]  out  =  new  byte[blockSize],  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[blockSize],  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[blockSize],  recordSize);	  out    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
32	[BUG]  [BUGGY]  out  =  new  byte[blockSize  +  recordSize];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[blockSize  +  recordSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[blockSize  +  recordSize];	  out    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
33	[BUG]  [BUGGY]  this.out  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  byte[blockSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  byte[blockSize];	  out    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
34	[BUG]  [BUGGY]  out  =  new  java.util.ArrayOutputStream(os,  blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  java.util.ArrayOutputStream(os,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  java.util.ArrayOutputStream(os,  blockSize);	  out    =    new    java.util.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
35	[BUG]  [BUGGY]  os  =  new  java.util.ArrayOutputStream(recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  java.util.ArrayOutputStream(recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  java.util.ArrayOutputStream(recordSize);	  out    =    new    java.util.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
36	[BUG]  [BUGGY]  os  =  new  java.util.ArrayOutputStream(blockSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  java.util.ArrayOutputStream(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  java.util.ArrayOutputStream(blockSize);	  out    =    new    java.util.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
37	[BUG]  [BUGGY]  this.assemLen  =  new  java.util.ArrayOutputStream(os);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  java.util.ArrayOutputStream(os);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  java.util.ArrayOutputStream(os);	  out    =    new    java.util.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
38	[BUG]  [BUGGY]  os  =  new  ArrayOutputStream(recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  ArrayOutputStream(recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  ArrayOutputStream(recordSize);	  out    =    new    java.util.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
39	[BUG]  [BUGGY]  =  new  java.util.ArrayOutputStream(os,  blockSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  =  new  java.util.ArrayOutputStream(os,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	=  new  java.util.ArrayOutputStream(os,  blockSize);	  out    =    new    java.util.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
40	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize  +  1);	  OutputStream    os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
41	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize,  this.assemLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize,  this.assemLen);	  OutputStream    os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
42	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize,  LONGFILE_GNU);	  OutputStream    os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
43	[BUG]  [BUGGY]  InputStream  os  =  new  CountingOutputStream(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  InputStream  os  =  new  CountingOutputStream(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	InputStream  os  =  new  CountingOutputStream(blockSize,  recordSize);	  OutputStream    os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
44	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT);	  OutputStream    os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
45	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize,  recordSize  +  1);	  OutputStream    os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
46	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);	  this(os,    blockSize,    recordSize,    null);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
47	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  null,  false);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  null,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  null,  false);	  this(os,    blockSize,    recordSize,    null);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
48	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize(),  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize(),  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBlockSize(),  blockSize,  recordSize);	  out    =    new    CountingOutputStream(os.getBlockSize(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
49	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getEndSize(),  blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getEndSize(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getEndSize(),  blockSize);	  out    =    new    CountingOutputStream(os.getBlockSize(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
50	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getIntValue(),  blockSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getIntValue(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getIntValue(),  blockSize);	  out    =    new    CountingOutputStream(os.getBlockSize(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
51	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(os.getBlockSize(),  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(os.getBlockSize(),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(os.getBlockSize(),  recordSize);	  out    =    new    CountingOutputStream(os.getBlockSize(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
52	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getVersion(),  blockSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getVersion(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getVersion(),  blockSize);	  out    =    new    CountingOutputStream(os.getBlockSize(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
53	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  1,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  1,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize  +  1,  recordSize);	  OutputStream    os    =    new    CountingOutputStream(blockSize    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
54	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  2);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize  +  2);	  OutputStream    os    =    new    CountingOutputStream(blockSize    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
55	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  *  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  *  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize  *  1);	  OutputStream    os    =    new    CountingOutputStream(blockSize    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
56	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  4);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize  +  4);	  OutputStream    os    =    new    CountingOutputStream(blockSize    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
57	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  0);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  0);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
58	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  true);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  true);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
59	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  false);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  false);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
60	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  null);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  null);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  null);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
61	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  currName);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  currName);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  currName);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
62	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  assemLen);  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  assemLen);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
63	[BUG]  [BUGGY]  this.out  =  new  CountingOutputStream(os,  blockSize,  fileSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  CountingOutputStream(os,  blockSize,  fileSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  CountingOutputStream(os,  blockSize,  fileSize);	  this.out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
64	[BUG]  [BUGGY]  This.out  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  This.out  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	This.out  =  new  CountingOutputStream(os,  blockSize,  recordSize);	  this.out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
65	[BUG]  [BUGGY]  this.out  =  new  CountingOutputStream(os,  BlockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  CountingOutputStream(os,  BlockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  CountingOutputStream(os,  BlockSize,  recordSize);	  this.out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
66	[BUG]  [BUGGY]  this.out  =  new  CountingOutputStream(os,  blockSize,  getRecordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  CountingOutputStream(os,  blockSize,  getRecordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  CountingOutputStream(os,  blockSize,  getRecordSize);	  this.out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
67	[BUG]  [BUGGY]  this.assemLen  =  new  int[recordSize];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  int[recordSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  int[recordSize];	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
68	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(os,  blockSize,  recordSize);	  OutputStream    os    =    new    CountingOutputStream(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
69	[BUG]  [BUGGY]  InputStream  os  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  InputStream  os  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	InputStream  os  =  new  CountingOutputStream(os,  blockSize,  recordSize);	  OutputStream    os    =    new    CountingOutputStream(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
70	[BUG]  [BUGGY]  final  OutputStream  os  =  new  CountingOutputStream(os,  blockSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  final  OutputStream  os  =  new  CountingOutputStream(os,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	final  OutputStream  os  =  new  CountingOutputStream(os,  blockSize);	  OutputStream    os    =    new    CountingOutputStream(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
71	[BUG]  [BUGGY]  this.recordBuf  =  new  TarBuffer(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.recordBuf  =  new  TarBuffer(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.recordBuf  =  new  TarBuffer(os,  blockSize,  recordSize);	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    System.arraycopy(blockSize,    0,    this.recordBuf,    0,    recordSize);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
72	[BUG]  [BUGGY]  this.os  =  os.getInputStream();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  os.getInputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  os.getInputStream();	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    System.arraycopy(blockSize,    0,    this.recordBuf,    0,    recordSize);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
73	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  this.assemLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  this.assemLen);	  OutputStream    os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
74	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  blockSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  blockSize);	  OutputStream    os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
75	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  bufferSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  bufferSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  bufferSize);	  OutputStream    os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
76	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  false);	  OutputStream    os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
77	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  fileMode);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  fileMode);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  fileMode);	  OutputStream    os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
78	[BUG]  [BUGGY]  out  =  new  byte[lockSize  +  1];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[lockSize  +  1];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[lockSize  +  1];	  out    =    new    byte[recordSize    +    1];    	non-compiled	[CE]  <identifier>  expected	61	None	replace
79	[BUG]  [BUGGY]  out  =  new  byte[recordSize  +  2];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[recordSize  +  2];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[recordSize  +  2];	  out    =    new    byte[recordSize    +    1];    	non-compiled	[CE]  <identifier>  expected	61	None	replace
80	[BUG]  [BUGGY]  OutputStream  out  =  os.readLine();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.readLine();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  os.readLine();	  out    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
81	[BUG]  [BUGGY]  os  =  os.readLine();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.readLine();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  os.readLine();	  out    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
82	[BUG]  [BUGGY]  this.out  =  os.readLine();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  os.readLine();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  os.readLine();	  out    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
83	[BUG]  [BUGGY]  out  =  os.readFile();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFile();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  os.readFile();	  out    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
84	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(0,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(0,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(0,  blockSize,  recordSize);	  os    =    new    CountingOutputStream(0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
85	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(10,  blockSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(10,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(10,  blockSize);	  os    =    new    CountingOutputStream(0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
86	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(60,  blockSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(60,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(60,  blockSize);	  os    =    new    CountingOutputStream(0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
87	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(1,  blockSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(1,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(1,  blockSize);	  os    =    new    CountingOutputStream(0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
88	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(64,  blockSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(64,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(64,  blockSize);	  os    =    new    CountingOutputStream(0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
89	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(128,  blockSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(128,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(128,  blockSize);	  os    =    new    CountingOutputStream(0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
90	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(0,  blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(0,  blockSize  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(0,  blockSize  +  recordSize);	  os    =    new    CountingOutputStream(0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
91	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  BlockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  BlockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  BlockSize,  recordSize);	  this.assemLen    =    new    CountingOutputStream(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
92	[BUG]  [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingInputStream(os,  blockSize,  recordSize);	  this.assemLen    =    new    CountingOutputStream(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
93	[BUG]  [BUGGY]  out  =  new  StreamOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  StreamOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  StreamOutputStream(os,  blockSize,  recordSize);	  out    =    new    StreamOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
94	[BUG]  [BUGGY]  OutputStream  out  =  new  StreamOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  StreamOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  StreamOutputStream(os,  blockSize,  recordSize);	  out    =    new    StreamOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
95	[BUG]  [BUGGY]  os  =  new  StreamOutputStream(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  StreamOutputStream(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  StreamOutputStream(blockSize,  recordSize);	  out    =    new    StreamOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
96	[BUG]  [BUGGY]  =  new  StreamOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  =  new  StreamOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	=  new  StreamOutputStream(os,  blockSize,  recordSize);	  out    =    new    StreamOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
97	[BUG]  [BUGGY]  this.assemLen  =  new  StreamOutputStream(os,  blockSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  StreamOutputStream(os,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  StreamOutputStream(os,  blockSize);	  out    =    new    StreamOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
98	[BUG]  [BUGGY]  this.out  =  new  StreamOutputStream(os,  blockSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  StreamOutputStream(os,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  StreamOutputStream(os,  blockSize);	  out    =    new    StreamOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
99	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  LONGFILE_GNU);	  this(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
100	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  0);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  0);	  this(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
101	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  false);	  this(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
102	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  true);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  true);	  this(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
103	[BUG]  [BUGGY]  this(os,  blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  0,  recordSize);	  this(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
104	[BUG]  [BUGGY]  this.assemLen  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  byte[blockSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  byte[blockSize];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	76	None	replace
105	[BUG]  [BUGGY]  this.assemLen  =  new  byte[0];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  byte[0];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  byte[0];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	76	None	replace
106	[BUG]  [BUGGY]  this.assemLen  =  new  byte[lockSize];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  byte[lockSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  byte[lockSize];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	76	None	replace
107	[BUG]  [BUGGY]  this.assemLen  =  new  byte[length];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  byte[length];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  byte[length];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	76	None	replace
108	[BUG]  [BUGGY]  this.assemLen  =  new  byte[recordSize  +  1];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  byte[recordSize  +  1];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  byte[recordSize  +  1];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	76	None	replace
109	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize);  this.assemLen  =  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize);  this.assemLen  =  1;  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	super(os,  blockSize,  recordSize);  this.assemLen  =  1;	  super(os,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
110	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;	  super(os,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
111	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;	  super(os,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
112	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);	  super(os,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
113	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.readLine(),  blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.readLine(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os.readLine(),  blockSize);	  out    =    new    CountingOutputStream(os.readLine(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
114	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.readLine(),  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.readLine(),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os.readLine(),  recordSize);	  out    =    new    CountingOutputStream(os.readLine(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
115	[BUG]  [BUGGY]  this.out  =  new  CountingOutputStream(os.readLine(),  blockSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  CountingOutputStream(os.readLine(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  CountingOutputStream(os.readLine(),  blockSize);	  out    =    new    CountingOutputStream(os.readLine(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
116	[BUG]  [BUGGY]  =  new  CountingOutputStream(os.readLine(),  blockSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  =  new  CountingOutputStream(os.readLine(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	=  new  CountingOutputStream(os.readLine(),  blockSize);	  out    =    new    CountingOutputStream(os.readLine(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
117	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_TRUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_TRUNCATE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
118	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  LONGFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  LONGFILE_TRUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  LONGFILE_TRUNCATE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
119	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  true);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  true);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
120	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TRUNCATE);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TRUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TRUNCATE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
121	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  0);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  0);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
122	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  false);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  false);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
123	[BUG]  [BUGGY]  os  =  new  CountingInputStream(blockSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingInputStream(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingInputStream(blockSize);	  os    =    new    CountingOutputStream(recordSize);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
124	[BUG]  [BUGGY]  out  =  new  ArrayOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  ArrayOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  ArrayOutputStream(os,  blockSize,  recordSize);	  out    =    new    ArrayOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
125	[BUG]  [BUGGY]  OutputStream  out  =  new  ArrayOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  ArrayOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  ArrayOutputStream(os,  blockSize,  recordSize);	  out    =    new    ArrayOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
126	[BUG]  [BUGGY]  out  =  new  java.sql.ArrayOutputStream(os,  blockSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  java.sql.ArrayOutputStream(os,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  java.sql.ArrayOutputStream(os,  blockSize);	  out    =    new    ArrayOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
127	[BUG]  [BUGGY]  os  =  new  ArrayOutputStream(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  ArrayOutputStream(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  ArrayOutputStream(blockSize,  recordSize);	  out    =    new    ArrayOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
128	[BUG]  [BUGGY]  this.out  =  new  ArrayOutputStream(os,  blockSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  ArrayOutputStream(os,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  ArrayOutputStream(os,  blockSize);	  out    =    new    ArrayOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
129	[BUG]  [BUGGY]  out  =  new  ArrayOutputStream(os.length,  blockSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  ArrayOutputStream(os.length,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  ArrayOutputStream(os.length,  blockSize);	  out    =    new    ArrayOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
130	[BUG]  [BUGGY]  os  =  new  java.sql.ArrayOutputStream(recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  java.sql.ArrayOutputStream(recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  java.sql.ArrayOutputStream(recordSize);	  out    =    new    java.sql.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
131	[BUG]  [BUGGY]  this.out  =  new  java.sql.ArrayOutputStream(os);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  java.sql.ArrayOutputStream(os);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  java.sql.ArrayOutputStream(os);	  out    =    new    java.sql.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
132	[BUG]  [BUGGY]  out  =  new  java.sql.ArrayInputStream(os,  blockSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  java.sql.ArrayInputStream(os,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  java.sql.ArrayInputStream(os,  blockSize);	  out    =    new    java.sql.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
133	[BUG]  [BUGGY]  =  new  java.sql.ArrayOutputStream(os,  blockSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  =  new  java.sql.ArrayOutputStream(os,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	=  new  java.sql.ArrayOutputStream(os,  blockSize);	  out    =    new    java.sql.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
134	[BUG]  [BUGGY]  os  =  new  java.sql.ArrayOutputStream(blockSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  java.sql.ArrayOutputStream(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  java.sql.ArrayOutputStream(blockSize);	  out    =    new    java.sql.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
135	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getEncoding());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getEncoding());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getEncoding());	  out    =    new    CountingOutputStream(os.getCharacterEncoding());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
136	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterEncoding(),  blockSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterEncoding(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getCharacterEncoding(),  blockSize);	  out    =    new    CountingOutputStream(os.getCharacterEncoding());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
137	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(os.getCharacterEncoding());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(os.getCharacterEncoding());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(os.getCharacterEncoding());	  out    =    new    CountingOutputStream(os.getCharacterEncoding());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
138	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.getCharacterEncoding());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.getCharacterEncoding());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os.getCharacterEncoding());	  out    =    new    CountingOutputStream(os.getCharacterEncoding());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
139	[BUG]  [BUGGY]  this.out  =  new  CountingOutputStream(os.getCharacterEncoding());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  CountingOutputStream(os.getCharacterEncoding());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  CountingOutputStream(os.getCharacterEncoding());	  out    =    new    CountingOutputStream(os.getCharacterEncoding());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
140	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  1,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  1,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize  +  1,  recordSize);	  os    =    new    CountingOutputStream(blockSize    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
141	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  2);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize  +  2);	  os    =    new    CountingOutputStream(blockSize    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
142	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize  *  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize  *  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize  *  1);	  os    =    new    CountingOutputStream(blockSize    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
143	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  4);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize  +  4);	  os    =    new    CountingOutputStream(blockSize    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
144	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  recordSize,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  recordSize,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize  +  recordSize,  0);	  os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
145	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  recordSize,  this.assemLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize  +  recordSize,  this.assemLen);	  os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
146	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  recordSize,  blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  recordSize,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize  +  recordSize,  blockSize);	  os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
147	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  recordSize,  bufferSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  recordSize,  bufferSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize  +  recordSize,  bufferSize);	  os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
148	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  recordSize,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  recordSize,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize  +  recordSize,  false);	  os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
149	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getLongFileMode());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getLongFileMode());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getLongFileMode());	  out    =    new    CountingOutputStream(os.getEndSize());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
150	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getEndSize()  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getEndSize()  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getEndSize()  +  1);	  out    =    new    CountingOutputStream(os.getEndSize());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
151	[BUG]  [BUGGY]  OutputStream  out  =  new  ArrayOutputStream(os.readLine());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  ArrayOutputStream(os.readLine());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  ArrayOutputStream(os.readLine());	  out    =    new    ArrayOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
152	[BUG]  [BUGGY]  out  =  new  ArrayOutputStream(os.readLine()  +  blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  ArrayOutputStream(os.readLine()  +  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  ArrayOutputStream(os.readLine()  +  blockSize);	  out    =    new    ArrayOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
153	[BUG]  [BUGGY]  out  =  new  ArrayOutputStream(os.readLine(),  blockSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  ArrayOutputStream(os.readLine(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  ArrayOutputStream(os.readLine(),  blockSize);	  out    =    new    ArrayOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
154	[BUG]  [BUGGY]  out  =  new  java.util.ArrayOutputStream(os.readLine());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  java.util.ArrayOutputStream(os.readLine());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  java.util.ArrayOutputStream(os.readLine());	  out    =    new    ArrayOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
155	[BUG]  [BUGGY]  out  =  new  ArrayOutputStream(os.readLine()  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  ArrayOutputStream(os.readLine()  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  ArrayOutputStream(os.readLine()  +  1);	  out    =    new    ArrayOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
156	[BUG]  [BUGGY]  this.out  =  new  ArrayOutputStream(os.readLine());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  ArrayOutputStream(os.readLine());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  ArrayOutputStream(os.readLine());	  out    =    new    ArrayOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
157	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(os,  blockSize,  recordSize);	  os    =    new    CountingOutputStream(lockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
158	[BUG]  [BUGGY]  this.os  =  new  CountingOutputStream(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  CountingOutputStream(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  CountingOutputStream(blockSize,  recordSize);	  os    =    new    CountingOutputStream(lockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
159	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(recordSize,  blockSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(recordSize,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(recordSize,  blockSize);	  os    =    new    CountingOutputStream(lockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
160	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.readLine()  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.readLine()  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os.readLine()  +  1);	  OutputStream    out    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
161	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.readLine()  +  blockSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.readLine()  +  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os.readLine()  +  blockSize);	  OutputStream    out    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
162	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.readLine()  +  1,  blockSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.readLine()  +  1,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os.readLine()  +  1,  blockSize);	  OutputStream    out    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
163	[BUG]  [BUGGY]  InputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  InputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	InputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize);	  OutputStream    out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
164	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  fileSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  fileSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  fileSize);	  OutputStream    out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
165	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  this.recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  this.recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  this.recordSize);	  OutputStream    out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
166	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  0,  recordSize);	  OutputStream    out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
167	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  getRecordSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  getRecordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  getRecordSize);	  OutputStream    out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
168	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  1);	  OutputStream    out    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
169	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);	  OutputStream    out    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
170	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize,  this.assemLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize,  this.assemLen);	  OutputStream    out    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
171	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize,  fileMode);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize,  fileMode);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize,  fileMode);	  OutputStream    out    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
172	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize,  false);	  OutputStream    out    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
173	[BUG]  [BUGGY]  this.os  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  CountingOutputStream(os,  blockSize,  recordSize);	  this.os    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
174	[BUG]  [BUGGY]  this.os  =  new  CountingOutputStream(os,  blockSize,  fileSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  CountingOutputStream(os,  blockSize,  fileSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  CountingOutputStream(os,  blockSize,  fileSize);	  this.os    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
175	[BUG]  [BUGGY]  this.os  =  new  CountingOutputStream(os,  blockSize,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  CountingOutputStream(os,  blockSize,  null);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  CountingOutputStream(os,  blockSize,  null);	  this.os    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
176	[BUG]  [BUGGY]  this.os  =  new  CountingOutputStream(os,  blockSize,  getRecordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  CountingOutputStream(os,  blockSize,  getRecordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  CountingOutputStream(os,  blockSize,  getRecordSize);	  this.os    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
177	[BUG]  [BUGGY]  this.os  =  new  CountingOutputStream(os,  BlockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  CountingOutputStream(os,  BlockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  CountingOutputStream(os,  BlockSize,  recordSize);	  this.os    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
178	[BUG]  [BUGGY]  OutputStream  out  =  new  ArrayOutputStream(os,  blockSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  ArrayOutputStream(os,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  ArrayOutputStream(os,  blockSize);	  out    =    new    ArrayOutputStream(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
179	[BUG]  [BUGGY]  this.out  =  new  CountingOutputStream(os.readLine()  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  CountingOutputStream(os.readLine()  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  CountingOutputStream(os.readLine()  +  1);	  this.out    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
180	[BUG]  [BUGGY]  this.out  =  new  CountingOutputStream(os.readLine()  +  blockSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  CountingOutputStream(os.readLine()  +  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  CountingOutputStream(os.readLine()  +  blockSize);	  this.out    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
181	[BUG]  [BUGGY]  this.out  =  new  CountingOutputStream(os.readLine(),  recordSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  CountingOutputStream(os.readLine(),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  CountingOutputStream(os.readLine(),  recordSize);	  this.out    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
182	[BUG]  [BUGGY]  this.out  =  new  CountingOutputStream(os.readLine()  +  1,  blockSize);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  CountingOutputStream(os.readLine()  +  1,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  CountingOutputStream(os.readLine()  +  1,  blockSize);	  this.out    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
183	[BUG]  [BUGGY]  os  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  byte[blockSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  byte[blockSize];	  os    =    new    ArrayOutputStream(blockSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
184	[BUG]  [BUGGY]  os  =  new  ArrayOutputStream(blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  ArrayOutputStream(blockSize  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  ArrayOutputStream(blockSize  +  recordSize);	  os    =    new    ArrayOutputStream(blockSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
185	[BUG]  [BUGGY]  os  =  new  ArrayOutputStream(blockSize  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  ArrayOutputStream(blockSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  ArrayOutputStream(blockSize  +  1);	  os    =    new    ArrayOutputStream(blockSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
186	[BUG]  [BUGGY]  this.os  =  new  ArrayOutputStream(blockSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  ArrayOutputStream(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  ArrayOutputStream(blockSize);	  os    =    new    ArrayOutputStream(blockSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
187	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  1);	  out    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
188	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os,  blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os,  blockSize,  0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os,  blockSize,  0,  recordSize);	  out    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
189	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);	  out    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
190	[BUG]  [BUGGY]  this.assemLen  =  os.read(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  os.read(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  os.read(blockSize,  recordSize);	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
191	[BUG]  [BUGGY]  this.assemLen  =  os.readFully();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  os.readFully();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  os.readFully();	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
192	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  0,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  0,  blockSize);	  this.assemLen    =    new    CountingOutputStream(os,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
193	[BUG]  [BUGGY]  This.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  This.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	This.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize);	  this.assemLen    =    new    CountingOutputStream(os,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
194	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBytes(),  blockSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBytes(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBytes(),  blockSize);	  out    =    new    CountingOutputStream(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
195	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBytes(blockSize),  recordSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBytes(blockSize),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBytes(blockSize),  recordSize);	  out    =    new    CountingOutputStream(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
196	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBytes(blockSize));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBytes(blockSize));  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBytes(blockSize));	  out    =    new    CountingOutputStream(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
197	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBytes(blockSize,  recordSize));  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBytes(blockSize,  recordSize));  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBytes(blockSize,  recordSize));	  out    =    new    CountingOutputStream(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
198	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.getBytes());  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.getBytes());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os.getBytes());	  out    =    new    CountingOutputStream(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
199	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize.getBytes());  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize.getBytes());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize.getBytes());	  out    =    new    CountingOutputStream(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
200	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.getBlockSize(),  blockSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.getBlockSize(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os.getBlockSize(),  blockSize);	  this.assemLen    =    new    CountingOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
201	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.getEndSize());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.getEndSize());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os.getEndSize());	  this.assemLen    =    new    CountingOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
202	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.getCharacterEncoding());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.getCharacterEncoding());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os.getCharacterEncoding());	  this.assemLen    =    new    CountingOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
203	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.getBlockSize()  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.getBlockSize()  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os.getBlockSize()  +  1);	  this.assemLen    =    new    CountingOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
204	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.getVersion());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.getVersion());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os.getVersion());	  this.assemLen    =    new    CountingOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
205	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.getBlockSize(),  recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.getBlockSize(),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os.getBlockSize(),  recordSize);	  this.assemLen    =    new    CountingOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
206	[BUG]  [BUGGY]  this.out  =  new  byte[0];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  byte[0];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  byte[0];	  this.out    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	77	None	replace
207	[BUG]  [BUGGY]  this.out  =  new  byte[lockSize];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  byte[lockSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  byte[lockSize];	  this.out    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	77	None	replace
208	[BUG]  [BUGGY]  this.out  =  new  byte[recordSize  +  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  byte[recordSize  +  1];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  byte[recordSize  +  1];	  this.out    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	77	None	replace
209	[BUG]  [BUGGY]  this.out  =  new  byte[blockSize],  recordSize];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  byte[blockSize],  recordSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  byte[blockSize],  recordSize];	  this.out    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	77	None	replace
210	[BUG]  [BUGGY]  this.out  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  1);	  this.out    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
211	[BUG]  [BUGGY]  this.out  =  new  CountingOutputStream(os,  blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  CountingOutputStream(os,  blockSize,  0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  CountingOutputStream(os,  blockSize,  0,  recordSize);	  this.out    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
212	[BUG]  [BUGGY]  this.out  =  new  CountingOutputStream(os,  blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  CountingOutputStream(os,  blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  CountingOutputStream(os,  blockSize,  recordSize)+  1;	  this.out    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
213	[BUG]  [BUGGY]  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	=  new  CountingOutputStream(os,  blockSize,  recordSize  +  1);	  =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
214	[BUG]  [BUGGY]  =  new  CountingOutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  =  new  CountingOutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	=  new  CountingOutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);	  =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
215	[BUG]  [BUGGY]  =  new  CountingOutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  =  new  CountingOutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	=  new  CountingOutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);	  =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
216	[BUG]  [BUGGY]  =  new  CountingOutputStream(os,  blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  =  new  CountingOutputStream(os,  blockSize,  0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	=  new  CountingOutputStream(os,  blockSize,  0,  recordSize);	  =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
217	[BUG]  [BUGGY]  =  new  CountingOutputStream(os,  blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  =  new  CountingOutputStream(os,  blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	=  new  CountingOutputStream(os,  blockSize,  recordSize)+  1;	  =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
218	[BUG]  [BUGGY]  =  new  CountingOutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  =  new  CountingOutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	=  new  CountingOutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);	  =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
219	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  1);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
220	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
221	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize)+  1;	  this.assemLen    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
222	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize,  0,  recordSize);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
223	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.getVersion());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.getVersion());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os.getVersion());	  out    =    new    CountingOutputStream(os.getVersion());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
224	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getVersion()  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getVersion()  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getVersion()  +  1);	  out    =    new    CountingOutputStream(os.getVersion());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
225	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(os.getVersion());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(os.getVersion());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(os.getVersion());	  out    =    new    CountingOutputStream(os.getVersion());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
226	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getAbsolutePath());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getAbsolutePath());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getAbsolutePath());	  out    =    new    CountingOutputStream(os.getVersion());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
227	[BUG]  [BUGGY]  os  =  os.readFully();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.readFully();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  os.readFully();	  os    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
228	[BUG]  [BUGGY]  Os  os  =  os.readUTF();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  Os  os  =  os.readUTF();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	Os  os  =  os.readUTF();	  os    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
229	[BUG]  [BUGGY]  this.os  =  os.readInt();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  os.readInt();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  os.readInt();	  os    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
230	[BUG]  [BUGGY]  os  =  os.readObject();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.readObject();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  os.readObject();	  os    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
231	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  LONGFILE_GNU);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
232	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  false);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
233	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  true);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  true);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
234	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  1);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
235	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  1);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
236	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  2);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  2);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  2);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
237	[BUG]  [BUGGY]  out  =  os.getOutputStream();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  os.getOutputStream();	  out    =    os.getOutputFile();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
238	[BUG]  [BUGGY]  out  =  os.getOutputPath();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputPath();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  os.getOutputPath();	  out    =    os.getOutputFile();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
239	[BUG]  [BUGGY]  out  =  os.getInputStream();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getInputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  os.getInputStream();	  out    =    os.getOutputFile();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
240	[BUG]  [BUGGY]  os  =  os.getOutputFile();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getOutputFile();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  os.getOutputFile();	  out    =    os.getOutputFile();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
241	[BUG]  [BUGGY]  os  =  os.getInputStream();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getInputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  os.getInputStream();	  out    =    os.getOutputFile();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
242	[BUG]  [BUGGY]  OutputStream  out  =  os.getOutputStream();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getOutputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  os.getOutputStream();	  out    =    os.getOutputFile();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
243	[BUG]  [BUGGY]  OUT  =  new  CountingOutputStream(os.readLine());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OUT  =  new  CountingOutputStream(os.readLine());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OUT  =  new  CountingOutputStream(os.readLine());	  out    =    new    CountingOutputStream(os.readLine()    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
244	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(Os.readLine());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(Os.readLine());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(Os.readLine());	  out    =    new    CountingOutputStream(os.readLine()    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
245	[BUG]  [BUGGY]  out  =  new  ArrayOutputStream(os.getBytes());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  ArrayOutputStream(os.getBytes());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  ArrayOutputStream(os.getBytes());	  out    =    new    ArrayOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
246	[BUG]  [BUGGY]  out  =  new  ArrayOutputStream(os.getBlockSize(),  blockSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  ArrayOutputStream(os.getBlockSize(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  ArrayOutputStream(os.getBlockSize(),  blockSize);	  out    =    new    ArrayOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
247	[BUG]  [BUGGY]  out  =  new  ArrayOutputStream(os.getBytes(blockSize),  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  ArrayOutputStream(os.getBytes(blockSize),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  ArrayOutputStream(os.getBytes(blockSize),  recordSize);	  out    =    new    ArrayOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
248	[BUG]  [BUGGY]  out  =  new  ArrayOutputStream(os.getBlockSize()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  ArrayOutputStream(os.getBlockSize()  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  ArrayOutputStream(os.getBlockSize()  +  1);	  out    =    new    ArrayOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
249	[BUG]  [BUGGY]  os  =  new  ArrayOutputStream(blockSize.getBlockSize());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  ArrayOutputStream(blockSize.getBlockSize());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  ArrayOutputStream(blockSize.getBlockSize());	  out    =    new    ArrayOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
250	[BUG]  [BUGGY]  this.os  =  new  CountingOutputStream(os);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  CountingOutputStream(os);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  CountingOutputStream(os);	  this.os    =    new    CountingOutputStream(blockSize);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
251	[BUG]  [BUGGY]  this.os  =  new  CountingOutputStream(os,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  CountingOutputStream(os,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  CountingOutputStream(os,  recordSize);	  this.os    =    new    CountingOutputStream(blockSize);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
252	[BUG]  [BUGGY]  this.os  =  new  CountingInputStream(os);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  CountingInputStream(os);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  CountingInputStream(os);	  this.os    =    new    CountingOutputStream(blockSize);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
253	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.readLine(),  blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.readLine(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os.readLine(),  blockSize);	  this.assemLen    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
254	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.readLine()  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.readLine()  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os.readLine()  +  1);	  this.assemLen    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
255	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.readLine()  +  blockSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.readLine()  +  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os.readLine()  +  blockSize);	  this.assemLen    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
256	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.readLine()  +  1,  blockSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.readLine()  +  1,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os.readLine()  +  1,  blockSize);	  this.assemLen    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
257	[BUG]  [BUGGY]  this.assemLen  =  os.read(blockSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  os.read(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  os.read(blockSize);	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
258	[BUG]  [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	System.arraycopy(os,  0,  this.recordBuf,  0,  recordSize);	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
259	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getEndSize(),  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getEndSize(),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getEndSize(),  recordSize);	  out    =    new    CountingOutputStream(os.getBlockSize(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
260	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.getBlockSize(),  blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.getBlockSize(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os.getBlockSize(),  blockSize);	  out    =    new    CountingOutputStream(os.getBlockSize(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
261	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(os.getBlockSize(),  blockSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(os.getBlockSize(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(os.getBlockSize(),  blockSize);	  out    =    new    CountingOutputStream(os.getBlockSize(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
262	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getIntValue(),  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getIntValue(),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getIntValue(),  recordSize);	  out    =    new    CountingOutputStream(os.getBlockSize(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
263	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getVersion(),  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getVersion(),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getVersion(),  recordSize);	  out    =    new    CountingOutputStream(os.getBlockSize(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
264	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBuffer(),  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBuffer(),  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBuffer(),  blockSize,  recordSize);	  out    =    new    CountingOutputStream(os.getBlockSize(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
265	[BUG]  [BUGGY]  out  =  new  byte[blockSize],  recordSize  +  1];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[blockSize],  recordSize  +  1];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[blockSize],  recordSize  +  1];	  out    =    new    byte[blockSize],    recordSize];    	non-compiled	[CE]  <identifier>  expected	60	None	replace
266	[BUG]  [BUGGY]  out  =  new  byte[blockSize,  recordSize];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[blockSize,  recordSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[blockSize,  recordSize];	  out    =    new    byte[blockSize],    recordSize];    	non-compiled	[CE]  <identifier>  expected	60	None	replace
267	[BUG]  [BUGGY]  out  =  new  byte[blockSize],  recordSize  +  2];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[blockSize],  recordSize  +  2];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[blockSize],  recordSize  +  2];	  out    =    new    byte[blockSize],    recordSize];    	non-compiled	[CE]  <identifier>  expected	60	None	replace
268	[BUG]  [BUGGY]  out  =  new  byte[blockSize],  recordSize  +  4];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[blockSize],  recordSize  +  4];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[blockSize],  recordSize  +  4];	  out    =    new    byte[blockSize],    recordSize];    	non-compiled	[CE]  <identifier>  expected	60	None	replace
269	[BUG]  [BUGGY]  out  =  new  byte[blockSize],  blockSize];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[blockSize],  blockSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[blockSize],  blockSize];	  out    =    new    byte[blockSize],    recordSize];    	non-compiled	[CE]  <identifier>  expected	60	None	replace
270	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize,  recordSize,  LONGFILE_GNU);	  os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
271	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT);	  os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
272	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize,  this.assemLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize,  recordSize,  this.assemLen);	  os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
273	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize,  blockSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize,  blockSize);	  os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
274	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize,  0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize,  0,  recordSize);	  os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
275	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterIndex(),  blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterIndex(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getCharacterIndex(),  blockSize);	  out    =    new    CountingOutputStream(os.getCharacterIndex());    	non-compiled	[CE]  <identifier>  expected	72	None	replace
276	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterIndex()  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterIndex()  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getCharacterIndex()  +  1);	  out    =    new    CountingOutputStream(os.getCharacterIndex());    	non-compiled	[CE]  <identifier>  expected	72	None	replace
277	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterSize());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterSize());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getCharacterSize());	  out    =    new    CountingOutputStream(os.getCharacterIndex());    	non-compiled	[CE]  <identifier>  expected	72	None	replace
278	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.getCharacterIndex());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.getCharacterIndex());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os.getCharacterIndex());	  out    =    new    CountingOutputStream(os.getCharacterIndex());    	non-compiled	[CE]  <identifier>  expected	72	None	replace
279	[BUG]  [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingInputStream(os,  recordSize);	  this.assemLen    =    new    CountingInputStream(os);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
280	[BUG]  [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  BlockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  BlockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingInputStream(os,  BlockSize);	  this.assemLen    =    new    CountingInputStream(os);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
281	[BUG]  [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  blockSize  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingInputStream(os,  blockSize  +  recordSize);	  this.assemLen    =    new    CountingInputStream(os);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
282	[BUG]  [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  blocksSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  blocksSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingInputStream(os,  blocksSize);	  this.assemLen    =    new    CountingInputStream(os);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
283	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GNU);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
284	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
285	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  true);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  true);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
286	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  currName);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  currName);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  currName);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
287	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  0);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  0);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
288	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  false);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  false);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
289	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GLOBAL);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GLOBAL);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GLOBAL);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
290	[BUG]  [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  blockSize,  fileSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  blockSize,  fileSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingInputStream(os,  blockSize,  fileSize);	  this.assemLen    =    new    CountingInputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
291	[BUG]  [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  BlockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  BlockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingInputStream(os,  BlockSize,  recordSize);	  this.assemLen    =    new    CountingInputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
292	[BUG]  [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  blockSize,  getRecordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  blockSize,  getRecordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingInputStream(os,  blockSize,  getRecordSize);	  this.assemLen    =    new    CountingInputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
293	[BUG]  [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  blockSize,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  blockSize,  null);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingInputStream(os,  blockSize,  null);	  this.assemLen    =    new    CountingInputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
294	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  RecordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  RecordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize,  RecordSize);	  this.assemLen    =    new    CountingOutputStream(os,    BlockSize);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
295	[BUG]  [BUGGY]  out  =  new  byte[os.readLine()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[os.readLine()  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[os.readLine()  +  1);	  out    =    new    byte[os.readLine());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
296	[BUG]  [BUGGY]  out  =  new  byte[os.readLine()  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[os.readLine()  -  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[os.readLine()  -  1);	  out    =    new    byte[os.readLine());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
297	[BUG]  [BUGGY]  out  =  new  byte[os.readLine()  +  blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[os.readLine()  +  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[os.readLine()  +  blockSize);	  out    =    new    byte[os.readLine());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
298	[BUG]  [BUGGY]  out  =  new  byte[os.readLine()  *  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[os.readLine()  *  2);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[os.readLine()  *  2);	  out    =    new    byte[os.readLine());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
299	[BUG]  [BUGGY]  out  =  new  byte[os.readLine()  +  2);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[os.readLine()  +  2);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[os.readLine()  +  2);	  out    =    new    byte[os.readLine());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
300	[BUG]  [BUGGY]  out  =  new  byte[os.readLine()  +  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[os.readLine()  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[os.readLine()  +  recordSize);	  out    =    new    byte[os.readLine());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
301	[BUG]  [BUGGY]  out  =  new  byte[os.readLine(),  blockSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[os.readLine(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[os.readLine(),  blockSize);	  out    =    new    byte[os.readLine());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
302	[BUG]  [BUGGY]  out  =  new  ArrayOutputStream(os.length  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  ArrayOutputStream(os.length  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  ArrayOutputStream(os.length  +  1);	  out    =    new    ArrayOutputStream(os.length);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
303	[BUG]  [BUGGY]  out  =  new  byte[os.length];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[os.length];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[os.length];	  out    =    new    ArrayOutputStream(os.length);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
304	[BUG]  [BUGGY]  out  =  new  java.util.ArrayOutputStream(os.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  java.util.ArrayOutputStream(os.length);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  java.util.ArrayOutputStream(os.length);	  out    =    new    ArrayOutputStream(os.length);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
305	[BUG]  [BUGGY]  out  =  new  java.sql.ArrayOutputStream(os.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  java.sql.ArrayOutputStream(os.length);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  java.sql.ArrayOutputStream(os.length);	  out    =    new    ArrayOutputStream(os.length);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
306	[BUG]  [BUGGY]  out  =  new  ArrayOutputStream(os.length,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  ArrayOutputStream(os.length,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  ArrayOutputStream(os.length,  recordSize);	  out    =    new    ArrayOutputStream(os.length);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
307	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_ERROR);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_ERROR);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
308	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_BUFFER);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_BUFFER);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_BUFFER);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
309	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_BACKSLASH);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
310	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_GNU);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
311	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VALUE);  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VALUE);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VALUE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
312	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_TOKEN);  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_TOKEN);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_TOKEN);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
313	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  true);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  true);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
314	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  false);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
315	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  0);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
316	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  null);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  null);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  null);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
317	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  10);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  10);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  10);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
318	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  4);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  4);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  4);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
319	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  true);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  true);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_ERROR);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
320	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  currName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  currName);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  currName);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_ERROR);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
321	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  0);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  0);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_ERROR);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
322	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  false);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  false);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_ERROR);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
323	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	super(os,  blockSize,  recordSize,  LONGFILE_GNU);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
324	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	super(os,  blockSize,  recordSize,  0);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
325	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	super(os,  blockSize,  recordSize,  false);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
326	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
327	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  true);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	super(os,  blockSize,  recordSize,  true);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
328	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  null);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  null);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	super(os,  blockSize,  recordSize,  null);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
329	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.readLine()  +  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.readLine()  +  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.readLine()  +  blockSize,  recordSize);	  out    =    new    CountingOutputStream(os.readLine()    +    blockSize);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
330	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.readLine()  +  recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.readLine()  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.readLine()  +  recordSize);	  out    =    new    CountingOutputStream(os.readLine()    +    blockSize);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
331	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.readLine()  *  blockSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.readLine()  *  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.readLine()  *  blockSize);	  out    =    new    CountingOutputStream(os.readLine()    +    blockSize);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
332	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.readLine()  /  blockSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.readLine()  /  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.readLine()  /  blockSize);	  out    =    new    CountingOutputStream(os.readLine()    +    blockSize);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
333	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
334	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GLOBAL);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GLOBAL);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GLOBAL);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
335	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  true);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  true);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
336	[BUG]  [BUGGY]  this(os,  blockSize,  0,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  0,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  0,  TarBuffer.DEFAULT_LONGFILE_ERROR);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
337	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  fileSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  fileSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize,  fileSize);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
338	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  null);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize,  null);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
339	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  getRecordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  getRecordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize,  getRecordSize);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
340	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  os);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  os);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize,  os);	  OutputStream    os    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
341	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  os.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  os.length);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize,  os.length);	  OutputStream    os    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
342	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.readLine(),  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.readLine(),  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.readLine(),  blockSize,  recordSize);	  out    =    new    CountingOutputStream(os.readLine(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
343	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.readLine(),  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.readLine(),  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os.readLine(),  blockSize,  recordSize);	  out    =    new    CountingOutputStream(os.readLine(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
344	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.readLine(),  blockSize  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.readLine(),  blockSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.readLine(),  blockSize  +  1);	  out    =    new    CountingOutputStream(os.readLine(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
345	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  0);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  0);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
346	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  true);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  true);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
347	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  false);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  false);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
348	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  null);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  null);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  null);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
349	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  currName);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  currName);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  currName);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
350	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  fileMode);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  fileMode);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  fileMode);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
351	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  buffer);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  buffer);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  buffer);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
352	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(os,  blockSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(os,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(os,  blockSize);	  os    =    new    CountingOutputStream(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
353	[BUG]  [BUGGY]  OutputStream  os  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  byte[blockSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  byte[blockSize];	  OutputStream    os    =    new    CountingOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
354	[BUG]  [BUGGY]  this.assemLen  =  os.readLong();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  os.readLong();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  os.readLong();	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
355	[BUG]  [BUGGY]  ((  TarArchiveOutputStream)os).setRecordSize(recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  ((  TarArchiveOutputStream)os).setRecordSize(recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	((  TarArchiveOutputStream)os).setRecordSize(recordSize);	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
356	[BUG]  [BUGGY]  ((  TarArchiveOutputStream)os).write(this.assemLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  ((  TarArchiveOutputStream)os).write(this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	((  TarArchiveOutputStream)os).write(this.assemLen);	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
357	[BUG]  [BUGGY]  ((  TarArchiveOutputStream)os).flush();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  ((  TarArchiveOutputStream)os).flush();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	((  TarArchiveOutputStream)os).flush();	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    this.buffer    =    new    TarBuffer(os,    blockSize,    recordSize);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
358	[BUG]  [BUGGY]  out  =  new  java.util.ArrayOutputStream(os,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  java.util.ArrayOutputStream(os,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  java.util.ArrayOutputStream(os,  recordSize);	  out    =    new    ArrayOutputStream(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
359	[BUG]  [BUGGY]  out  =  new  java.sql.ArrayOutputStream(os,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  java.sql.ArrayOutputStream(os,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  java.sql.ArrayOutputStream(os,  recordSize);	  out    =    new    ArrayOutputStream(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
360	[BUG]  [BUGGY]  out  =  new  byte[os.readLine()  +  BlockSize.MIN_VALUE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[os.readLine()  +  BlockSize.MIN_VALUE);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[os.readLine()  +  BlockSize.MIN_VALUE);	  out    =    new    byte[os.readLine());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
361	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize  +  2);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize,  recordSize  +  2);	  os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
362	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);	  os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
363	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize,  recordSize)+  1;	  os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
364	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize  +  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize  +  4);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize,  recordSize  +  4);	  os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
365	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_ENTRY);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_ENTRY);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_ENTRY);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
366	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_LONGFILE_ERROR);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
367	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
368	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.readLine()  -  blockSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.readLine()  -  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.readLine()  -  blockSize);	  out    =    new    CountingOutputStream(os.readLine()    +    blockSize);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
369	[BUG]  [BUGGY]  os  =  os.readIO();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.readIO();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  os.readIO();	  os    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
370	[BUG]  [BUGGY]  os  =  os.readNull();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.readNull();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  os.readNull();	  os    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
371	[BUG]  [BUGGY]  OutputStream  os  =  new  java.util.ArrayOutputStream(blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  java.util.ArrayOutputStream(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  java.util.ArrayOutputStream(blockSize);	  out    =    new    java.util.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
372	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_LONGFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_LONGFILE_TRUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_LONGFILE_TRUNCATE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
373	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_TRUNCATE);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_TRUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_TRUNCATE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
374	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(os.readLine(),  blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(os.readLine(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(os.readLine(),  blockSize);	  out    =    new    CountingOutputStream(os.readLine(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
375	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.readLine(),  blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.readLine(),  blockSize  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.readLine(),  blockSize  +  recordSize);	  out    =    new    CountingOutputStream(os.readLine(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
376	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.readLine(),  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.readLine(),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os.readLine(),  recordSize);	  OutputStream    out    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
377	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.readLine()  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.readLine()  -  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os.readLine()  -  1);	  OutputStream    out    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
378	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(os.readLine());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(os.readLine());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(os.readLine());	  out    =    new    CountingOutputStream(os.readLine()    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
379	[BUG]  [BUGGY]  outputStream  =  new  CountingOutputStream(os.readLine());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  outputStream  =  new  CountingOutputStream(os.readLine());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	outputStream  =  new  CountingOutputStream(os.readLine());	  out    =    new    CountingOutputStream(os.readLine()    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
380	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  0);	  OutputStream    os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
381	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  *  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  *  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize  *  recordSize);	  OutputStream    os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
382	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize  +  1);	  OutputStream    os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
383	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  this.recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  this.recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  this.recordSize);	  OutputStream    os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
384	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  out);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  out);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  out);	  OutputStream    os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
385	[BUG]  [BUGGY]  ((  TarArchiveOutputStream)os).write(this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  ((  TarArchiveOutputStream)os).write(this.assemBuf,  0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	((  TarArchiveOutputStream)os).write(this.assemBuf,  0,  recordSize);	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    System.arraycopy(blockSize,    0,    this.assemBuf,    0,    recordSize);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
386	[BUG]  [BUGGY]  os  =  new  byte[recordSize];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  byte[recordSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  byte[recordSize];	  os    =    new    ArrayOutputStream(blockSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
387	[BUG]  [BUGGY]  os  =  new  LinkedHashOutputStream(blockSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  LinkedHashOutputStream(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  LinkedHashOutputStream(blockSize);	  os    =    new    ArrayOutputStream(blockSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
388	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterEncoding(),  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterEncoding(),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getCharacterEncoding(),  recordSize);	  out    =    new    CountingOutputStream(os.getBlockSize(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
389	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize(),  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBlockSize(),  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBlockSize(),  recordSize  +  1);	  out    =    new    CountingOutputStream(os.getBlockSize(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
390	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterEndSize());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterEndSize());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getCharacterEndSize());	  out    =    new    CountingOutputStream(os.getEndSize());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
391	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getStartSize());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getStartSize());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getStartSize());	  out    =    new    CountingOutputStream(os.getEndSize());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
392	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  BlockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  BlockSize  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  BlockSize  +  recordSize);	  this.assemLen    =    new    CountingOutputStream(os,    BlockSize);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
393	[BUG]  [BUGGY]  out  =  new  ArrayOutputStream(os.length  +  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  ArrayOutputStream(os.length  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  ArrayOutputStream(os.length  +  recordSize);	  out    =    new    ArrayOutputStream(os.length);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
394	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(os,  blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(os,  blockSize  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(os,  blockSize  +  recordSize);	  OutputStream    os    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
395	[BUG]  [BUGGY]  out  =  os.readLine()  +  blockSize;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine()  +  blockSize;  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  os.readLine()  +  blockSize;	  out    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
396	[BUG]  [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingInputStream(os,  0,  recordSize);	  this.assemLen    =    new    CountingInputStream(os);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
397	[BUG]  [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  testSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  testSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingInputStream(os,  testSize);	  this.assemLen    =    new    CountingInputStream(os);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
398	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBlockLength());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBlockLength());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBlockLength());	  out    =    new    CountingOutputStream(os.getBlockSize()    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
399	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(Os.getBlockSize());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(Os.getBlockSize());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(Os.getBlockSize());	  out    =    new    CountingOutputStream(os.getBlockSize()    +    1);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
400	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_ERROR);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
401	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blocks,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blocks,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blocks,  recordSize);	  this.assemLen    =    new    CountingOutputStream(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
402	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
403	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordsize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordsize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordsize);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
404	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize  +  2);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize  +  2);	  OutputStream    os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
405	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);	  OutputStream    os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
406	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize)+  1;	  OutputStream    os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
407	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize  +  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize  +  4);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize,  recordSize  +  4);	  OutputStream    os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
408	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBlockLength()  +  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBlockLength()  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBlockLength()  +  recordSize);	  out    =    new    CountingOutputStream(os.getBlockSize()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
409	[BUG]  [BUGGY]  OutputStream  os  =  new  StreamOutputStream(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  StreamOutputStream(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  StreamOutputStream(blockSize,  recordSize);	  out    =    new    StreamOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
410	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize)+  1;	  OutputStream    out    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
411	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  2);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  2);	  OutputStream    out    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
412	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  1,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  1,  recordSize);	  this.assemLen    =    new    CountingOutputStream(os,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
413	[BUG]  [BUGGY]  OutputStream  os  =  new  java.sql.ArrayOutputStream(recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  java.sql.ArrayOutputStream(recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  java.sql.ArrayOutputStream(recordSize);	  out    =    new    java.sql.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
414	[BUG]  [BUGGY]  OutputStream  os  =  new  java.sql.ArrayOutputStream(blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  java.sql.ArrayOutputStream(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  java.sql.ArrayOutputStream(blockSize);	  out    =    new    java.sql.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
415	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize  *  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize  *  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize  *  recordSize);	  os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
416	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  recordSize,  this.recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  recordSize,  this.recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize  +  recordSize,  this.recordSize);	  os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
417	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize  +  recordSize  +  1);	  os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
418	[BUG]  [BUGGY]  this.out  =  new  CountingOutputStream(os.readLine()  +  recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  CountingOutputStream(os.readLine()  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  CountingOutputStream(os.readLine()  +  recordSize);	  this.out    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
419	[BUG]  [BUGGY]  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  2);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	=  new  CountingOutputStream(os,  blockSize,  recordSize  +  2);	  =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
420	[BUG]  [BUGGY]  =  new  ArrayOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  =  new  ArrayOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	=  new  ArrayOutputStream(os,  blockSize,  recordSize);	  =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
421	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
422	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_ARRAY);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_ARRAY);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_ARRAY);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
423	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	super(os,  blockSize,  recordSize  +  1);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
424	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize  -  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	super(os,  blockSize,  recordSize  -  1);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
425	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
426	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
427	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
428	[BUG]  [BUGGY]  OutputStream  os  =  new  byte[recordSize];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  byte[recordSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  byte[recordSize];	  OutputStream    os    =    new    CountingOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
429	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getInt(),  blockSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getInt(),  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getInt(),  blockSize);	  out    =    new    CountingOutputStream(os.getBlockSize(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
430	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.getBlockSize(),  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.getBlockSize(),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os.getBlockSize(),  recordSize);	  out    =    new    CountingOutputStream(os.getBlockSize(),    blockSize);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
431	[BUG]  [BUGGY]  this.os  =  new  CountingOutputStream(os,  blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  CountingOutputStream(os,  blockSize  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  CountingOutputStream(os,  blockSize  +  recordSize);	  this.os    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
432	[BUG]  [BUGGY]  This.os  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  This.os  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	This.os  =  new  CountingOutputStream(os,  blockSize,  recordSize);	  this.os    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
433	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os,  blockSize  +  recordSize);	  OutputStream    out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
434	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordsize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordsize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os,  blockSize,  recordsize);	  OutputStream    out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
435	[BUG]  [BUGGY]  out  =  os.readObject();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readObject();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  os.readObject();	  out    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
436	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterIndex(),  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterIndex(),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getCharacterIndex(),  recordSize);	  out    =    new    CountingOutputStream(os.getCharacterIndex());    	non-compiled	[CE]  <identifier>  expected	72	None	replace
437	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterStart());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterStart());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getCharacterStart());	  out    =    new    CountingOutputStream(os.getCharacterIndex());    	non-compiled	[CE]  <identifier>  expected	72	None	replace
438	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterLength());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getCharacterLength());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getCharacterLength());	  out    =    new    CountingOutputStream(os.getCharacterIndex());    	non-compiled	[CE]  <identifier>  expected	72	None	replace
439	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBytes(blockSize  +  recordSize));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBytes(blockSize  +  recordSize));  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBytes(blockSize  +  recordSize));	  out    =    new    CountingOutputStream(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
440	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBytes(),  recordSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBytes(),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBytes(),  recordSize);	  out    =    new    CountingOutputStream(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
441	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_NAME);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_NAME);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_NAME);	  this(os,    blockSize,    recordSize,    null);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
442	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os,  blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os,  blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os,  blockSize,  recordSize)+  1;	  out    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
443	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LBRACKET_ERROR);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LBRACKET_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LBRACKET_ERROR);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
444	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TARGET_ERROR);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TARGET_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TARGET_ERROR);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
445	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  0);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
446	[BUG]  [BUGGY]  this.os  =  new  byte[blockSize];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  byte[blockSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  byte[blockSize];	  this.os    =    new    CountingOutputStream(blockSize);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
447	[BUG]  [BUGGY]  this.os  =  new  byte[recordSize];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  byte[recordSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  byte[recordSize];	  this.os    =    new    CountingOutputStream(blockSize);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
448	[BUG]  [BUGGY]  This.assemLen  =  new  CountingInputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  This.assemLen  =  new  CountingInputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	This.assemLen  =  new  CountingInputStream(os,  blockSize,  recordSize);	  this.assemLen    =    new    CountingInputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
449	[BUG]  [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  blockSize,  recordsize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingInputStream(os,  blockSize,  recordsize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingInputStream(os,  blockSize,  recordsize);	  this.assemLen    =    new    CountingInputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
450	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(os.readLine()  +  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(os.readLine()  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(os.readLine()  +  recordSize);	  os    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
451	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize)+  1;	  this.assemLen    =    new    CountingOutputStream(os,    blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
452	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize;	  this.assemLen    =    new    CountingOutputStream(os,    blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
453	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  *  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  *  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize  *  recordSize);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
454	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.getBlockLength());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.getBlockLength());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os.getBlockLength());	  this.assemLen    =    new    CountingOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
455	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(0,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(0,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(0,  0);	  os    =    new    CountingOutputStream(0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
456	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(0,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(0,  recordSize);	  os    =    new    CountingOutputStream(0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
457	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(0,  os);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(0,  os);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(0,  os);	  os    =    new    CountingOutputStream(0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
458	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(100,  blockSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(100,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(100,  blockSize);	  os    =    new    CountingOutputStream(0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
459	[BUG]  [BUGGY]  this.out  =  new  CountingOutputStream(os,  blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  CountingOutputStream(os,  blockSize  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  CountingOutputStream(os,  blockSize  +  recordSize);	  this.out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
460	[BUG]  [BUGGY]  this.in  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.in  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.in  =  new  CountingOutputStream(os,  blockSize,  recordSize);	  this.out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
461	[BUG]  [BUGGY]  this.out  =  new  CountingOutputStream(os,  blockSize,  recordsize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  CountingOutputStream(os,  blockSize,  recordsize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  CountingOutputStream(os,  blockSize,  recordsize);	  this.out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
462	[BUG]  [BUGGY]  ((  TarArchiveOutputStream)os).write(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  ((  TarArchiveOutputStream)os).write(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	((  TarArchiveOutputStream)os).write(blockSize,  recordSize);	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
463	[BUG]  [BUGGY]  ((  TarArchiveOutputStream)os).write(blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  ((  TarArchiveOutputStream)os).write(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	((  TarArchiveOutputStream)os).write(blockSize);	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
464	[BUG]  [BUGGY]  out  =  new  ArrayOutputStream(os.getBytes(blockSize));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  ArrayOutputStream(os.getBytes(blockSize));  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  ArrayOutputStream(os.getBytes(blockSize));	  out    =    new    ArrayOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
465	[BUG]  [BUGGY]  out  =  new  ArrayOutputStream(os.getBlockSize(),  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  ArrayOutputStream(os.getBlockSize(),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  ArrayOutputStream(os.getBlockSize(),  recordSize);	  out    =    new    ArrayOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
466	[BUG]  [BUGGY]  out  =  new  java.util.ArrayOutputStream(os.getBlockSize());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  java.util.ArrayOutputStream(os.getBlockSize());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  java.util.ArrayOutputStream(os.getBlockSize());	  out    =    new    ArrayOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
467	[BUG]  [BUGGY]  System.arraycopy(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  System.arraycopy(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	System.arraycopy(os,  blockSize,  recordSize);	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    System.arraycopy(os,    0,    this.recordBuf,    0,    recordSize);    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
468	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  2);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize  +  2);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
469	[BUG]  [BUGGY]  out  =  os.getOutputBuffer();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  os.getOutputBuffer();	  out    =    os.getOutputFile();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
470	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.readLine()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.readLine()  -  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os.readLine()  -  1);	  this.assemLen    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	84	None	replace
471	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_TARGET_ERROR);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_TARGET_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_TARGET_ERROR);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
472	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  null,  0);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  null,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  null,  0);	  this(os,    blockSize,    recordSize,    null);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
473	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getEndSize()  +  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getEndSize()  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getEndSize()  +  recordSize);	  out    =    new    CountingOutputStream(os.getBlockSize()    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
474	[BUG]  [BUGGY]  out  =  new  ArrayOutputStream(os.length  +  1,  blockSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  ArrayOutputStream(os.length  +  1,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  ArrayOutputStream(os.length  +  1,  blockSize);	  out    =    new    ArrayOutputStream(os.length);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
475	[BUG]  [BUGGY]  UnsupportedOutputStream  os  =  new  CountingOutputStream(os,  blockSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  UnsupportedOutputStream  os  =  new  CountingOutputStream(os,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	UnsupportedOutputStream  os  =  new  CountingOutputStream(os,  blockSize);	  OutputStream    os    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
476	[BUG]  [BUGGY]  this.out  =  os.toByteArray();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  os.toByteArray();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  os.toByteArray();	  this.out    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	77	None	replace
477	[BUG]  [BUGGY]  this.out  =  os.readInt();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  os.readInt();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  os.readInt();	  this.out    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	77	None	replace
478	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_UNKNOWN);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_UNKNOWN);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_UNKNOWN);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
479	[BUG]  [BUGGY]  this.os  =  new  CountingInputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  CountingInputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  CountingInputStream(os,  blockSize,  recordSize);	  this.os    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
480	[BUG]  [BUGGY]  os  =  new  ArrayOutputStream(os.readLine());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  ArrayOutputStream(os.readLine());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  ArrayOutputStream(os.readLine());	  out    =    new    ArrayOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
481	[BUG]  [BUGGY]  this.assemLen  =  new  ArrayOutputStream(os.readLine());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  ArrayOutputStream(os.readLine());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  ArrayOutputStream(os.readLine());	  out    =    new    ArrayOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
482	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getInputStream(),  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getInputStream(),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getInputStream(),  recordSize);	  out    =    new    CountingOutputStream(os.getBlockSize(),    recordSize);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
483	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);	  super(os,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
484	[BUG]  [BUGGY]  Os  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  Os  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	Os  =  new  CountingOutputStream(os,  blockSize,  recordSize);	  os    =    new    CountingOutputStream(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
485	[BUG]  [BUGGY]  os  =  new  CountingInputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingInputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingInputStream(os,  blockSize,  recordSize);	  os    =    new    CountingOutputStream(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
486	[BUG]  [BUGGY]  this.os  =  new  StreamOutputStream(os,  blockSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  StreamOutputStream(os,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  StreamOutputStream(os,  blockSize);	  out    =    new    StreamOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
487	[BUG]  [BUGGY]  this.os  =  new  StreamOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  StreamOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  StreamOutputStream(os,  blockSize,  recordSize);	  out    =    new    StreamOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
488	[BUG]  [BUGGY]  out  =  new  CountingOutputStream(os.getBlock());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  CountingOutputStream(os.getBlock());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  CountingOutputStream(os.getBlock());	  out    =    new    CountingOutputStream(os.getCharacterIndex());    	non-compiled	[CE]  <identifier>  expected	72	None	replace
489	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.readLine()  *  blockSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os.readLine()  *  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os.readLine()  *  blockSize);	  OutputStream    out    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
490	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
491	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TARGET_FILE_GNU);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TARGET_FILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TARGET_FILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
492	[BUG]  [BUGGY]  rule  =  new  CountingOutputStream(os.readLine());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  rule  =  new  CountingOutputStream(os.readLine());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	rule  =  new  CountingOutputStream(os.readLine());	  out    =    new    CountingOutputStream(os.readLine()    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
493	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  1);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  1);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  1);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
494	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  2);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  2);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  2);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
495	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_GNU);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
496	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_RUNNING);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_RUNNING);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_RUNNING);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
497	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingInputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingInputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingInputStream(os,  blockSize,  recordSize);	  OutputStream    out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
498	[BUG]  [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  BlockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  CountingOutputStream(os,  BlockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  CountingOutputStream(os,  BlockSize,  recordSize);	  OutputStream    out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
499	[BUG]  [BUGGY]  out  =  new  byte[os.readLine()  +  blockSize];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[os.readLine()  +  blockSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[os.readLine()  +  blockSize];	  out    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	42	None	replace
500	[BUG]  [BUGGY]  this.assemLen  =  os.readBytes(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  os.readBytes(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  os.readBytes(blockSize,  recordSize);	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
501	[BUG]  [BUGGY]  this.assemLen  =  os.readMore();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  os.readMore();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  os.readMore();	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
502	[BUG]  [BUGGY]  this.os  =  new  CountingOutputStream(os.readLine());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  CountingOutputStream(os.readLine());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  CountingOutputStream(os.readLine());	  os    =    new    CountingOutputStream(os.readLine());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
503	[BUG]  [BUGGY]  UnsupportedOutputStream  os  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  UnsupportedOutputStream  os  =  new  CountingOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	UnsupportedOutputStream  os  =  new  CountingOutputStream(os,  blockSize,  recordSize);	  OutputStream    os    =    new    CountingOutputStream(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
504	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  fileSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  fileSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(blockSize  +  recordSize,  fileSize);	  OutputStream    os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
505	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(0,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(0,  0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(0,  0,  recordSize);	  os    =    new    CountingOutputStream(0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
506	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(0,  this.blockSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(0,  this.blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(0,  this.blockSize);	  os    =    new    CountingOutputStream(0,    blockSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
507	[BUG]  [BUGGY]  this.out  =  new  java.util.ArrayOutputStream(os);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  java.util.ArrayOutputStream(os);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  java.util.ArrayOutputStream(os);	  out    =    new    java.util.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
508	[BUG]  [BUGGY]  this.os  =  new  java.util.ArrayOutputStream(os);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  java.util.ArrayOutputStream(os);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  java.util.ArrayOutputStream(os);	  out    =    new    java.util.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
509	[BUG]  [BUGGY]  this.assemLen  =  new  ArrayOutputStream(os,  blockSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  ArrayOutputStream(os,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  ArrayOutputStream(os,  blockSize);	  out    =    new    ArrayOutputStream(os,    recordSize);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
510	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize)-  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize)-  1;  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize,  recordSize)-  1;	  this.assemLen    =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
511	[BUG]  [BUGGY]  this.os  =  new  ArrayOutputStream(os,  blockSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  ArrayOutputStream(os,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  ArrayOutputStream(os,  blockSize);	  out    =    new    ArrayOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
512	[BUG]  [BUGGY]  out  =  new  byte[os.getBytes(blockSize),  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[os.getBytes(blockSize),  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[os.getBytes(blockSize),  recordSize);	  out    =    new    ArrayOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
513	[BUG]  [BUGGY]  this.os  =  new  CountingOutputStream(os  +  1,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  CountingOutputStream(os  +  1,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.os  =  new  CountingOutputStream(os  +  1,  recordSize);	  this.os    =    new    CountingOutputStream(blockSize);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
514	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  recordSize,  fileSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize  +  recordSize,  fileSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize  +  recordSize,  fileSize);	  os    =    new    CountingOutputStream(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
515	[BUG]  [BUGGY]  this.assemLen  =  os.read(recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  os.read(recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  os.read(recordSize);	  if(os    ==    null)    {    out    =    new    byte[recordSize];    }    else    {    System.arraycopy(blockSize,    0,    this.recordBuf,    0,    recordSize);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
516	[BUG]  [BUGGY]  =  new  CountingOutputStream(os,  blockSize,  recordSize),  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  =  new  CountingOutputStream(os,  blockSize,  recordSize),  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	=  new  CountingOutputStream(os,  blockSize,  recordSize),  TarBuffer.DEFAULT);	  =    new    CountingOutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
517	[BUG]  [BUGGY]  InputStream  os  =  new  CountingOutputStream(blockSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  InputStream  os  =  new  CountingOutputStream(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	InputStream  os  =  new  CountingOutputStream(blockSize);	  OutputStream    os    =    new    CountingOutputStream(recordSize);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
518	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
519	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_ENTRY);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_ENTRY);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_ENTRY);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
520	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_GNU);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
521	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_ARRAY);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_ARRAY);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_ARRAY);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
522	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
523	[BUG]  [BUGGY]  out  =  new  byte[os,  blockSize],  recordSize];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[os,  blockSize],  recordSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[os,  blockSize],  recordSize];	  out    =    new    byte[blockSize],    recordSize];    	non-compiled	[CE]  <identifier>  expected	60	None	replace
524	[BUG]  [BUGGY]  out  =  new  byte[0],  recordSize];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[0],  recordSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[0],  recordSize];	  out    =    new    byte[blockSize],    recordSize];    	non-compiled	[CE]  <identifier>  expected	60	None	replace
525	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(os.getBlockSize());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(os.getBlockSize());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(os.getBlockSize());	  OutputStream    os    =    new    CountingOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
526	[BUG]  [BUGGY]  OutputStream  os  =  new  CountingOutputStream(os.getBlock());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  CountingOutputStream(os.getBlock());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  os  =  new  CountingOutputStream(os.getBlock());	  OutputStream    os    =    new    CountingOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
527	[BUG]  [BUGGY]  this.assemLen  =  new  byte[blockSize],  recordSize];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  byte[blockSize],  recordSize];  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  byte[blockSize],  recordSize];	  this.assemLen    =    new    byte[recordSize];    	non-compiled	[CE]  <identifier>  expected	76	None	replace
528	[BUG]  [BUGGY]  this.assemLen  =  new  ArrayOutputStream(os.getBlockSize());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  ArrayOutputStream(os.getBlockSize());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  ArrayOutputStream(os.getBlockSize());	  out    =    new    ArrayOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
529	[BUG]  [BUGGY]  os  =  new  ArrayOutputStream(os.getBlockSize());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  ArrayOutputStream(os.getBlockSize());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  ArrayOutputStream(os.getBlockSize());	  out    =    new    ArrayOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
530	[BUG]  [BUGGY]  OutputStream  out  =  new  ArrayOutputStream(os.getBlockSize());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  ArrayOutputStream(os.getBlockSize());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	OutputStream  out  =  new  ArrayOutputStream(os.getBlockSize());	  out    =    new    ArrayOutputStream(os.getBlockSize());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
531	[BUG]  [BUGGY]  this.out  =  new  CountingInputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  CountingInputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.out  =  new  CountingInputStream(os,  blockSize,  recordSize);	  this.out    =    new    CountingOutputStream(os,    blockSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
532	[BUG]  [BUGGY]  out  =  new  byte[os.readLine()  -  blockSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[os.readLine()  -  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[os.readLine()  -  blockSize);	  out    =    new    byte[os.readLine());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
533	[BUG]  [BUGGY]  out  =  new  byte[os.readLine()  ],  blockSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  byte[os.readLine()  ],  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	out  =  new  byte[os.readLine()  ],  blockSize);	  out    =    new    byte[os.readLine());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
534	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);	  os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
535	[BUG]  [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_OUTPUT);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_OUTPUT);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_OUTPUT);	  os    =    new    CountingOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
536	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize  *  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize  *  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize  *  recordSize);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
537	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  fileSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  fileSize);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os,  blockSize  +  recordSize,  fileSize);	  this.assemLen    =    new    CountingOutputStream(os,    blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
538	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FRAME_ERROR,  TarBuffer.DEFAULT_FILE_GNU);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FRAME_ERROR,  TarBuffer.DEFAULT_FILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FRAME_ERROR,  TarBuffer.DEFAULT_FILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
539	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GENU);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GENU);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GENU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
540	[BUG]  [BUGGY]  os  =  new  CountingOutputStream();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  CountingOutputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	os  =  new  CountingOutputStream();	  os    =    new    CountingOutputStream(recordSize);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
541	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.UTF8);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.UTF8);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.UTF8);	  this(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
542	[BUG]  [BUGGY]  this.assemLen  =  new  java.sql.ArrayOutputStream(os);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  java.sql.ArrayOutputStream(os);  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  java.sql.ArrayOutputStream(os);	  out    =    new    java.sql.ArrayOutputStream(os);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
543	[BUG]  [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.getBytes());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  CountingOutputStream(os.getBytes());  [BUGGY]        this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	this.assemLen  =  new  CountingOutputStream(os.getBytes());	  out    =    new    CountingOutputStream(os.getBytes());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
