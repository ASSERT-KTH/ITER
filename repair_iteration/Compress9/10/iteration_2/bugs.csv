bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.assemLen  =  recordSize  -  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  recordSize  -  2;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  recordSize  -  2;	  this.assemLen    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
2	[BUG]  [BUGGY]  this.assemLen  =  recordSize  /  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  recordSize  /  1;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  recordSize  /  1;	  this.assemLen    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
3	[BUG]  [BUGGY]  this.assemLen  =  blockSize  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  blockSize  -  1;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  blockSize  -  1;	  this.assemLen    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
4	[BUG]  [BUGGY]  this.assemLen  =  recordSize  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  recordSize  +  1;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  recordSize  +  1;	  this.assemLen    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
5	[BUG]  [BUGGY]  this.assemLen  =  recordSize  -  4;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  recordSize  -  4;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  recordSize  -  4;	  this.assemLen    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
6	[BUG]  [BUGGY]  this.assemLen  =  recordSize  -  3;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  recordSize  -  3;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  recordSize  -  3;	  this.assemLen    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
7	[BUG]  [BUGGY]  this.assemLen  =  currName;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  currName;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  currName;	  this.assemLen    =    LONGFILE_GNU;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
8	[BUG]  [BUGGY]  this.assemLen  =  new  longFileMode;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  new  longFileMode;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  new  longFileMode;	  this.assemLen    =    LONGFILE_GNU;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
9	[BUG]  [BUGGY]  this.assemLen  =  LONGFILE_TRUNCATE;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  LONGFILE_TRUNCATE;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  LONGFILE_TRUNCATE;	  this.assemLen    =    LONGFILE_GNU;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
10	[BUG]  [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  1;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  LONGFILE_GNU  +  1;	  this.assemLen    =    LONGFILE_GNU;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
11	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  recordSize;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  recordSize;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  System.currentTimeMillis()  /  recordSize;	  this.assemLen    =    System.currentTimeMillis()    -    recordSize;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
12	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize  +  1;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  System.currentTimeMillis()  -  recordSize  +  1;	  this.assemLen    =    System.currentTimeMillis()    -    recordSize;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  blockSize;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  blockSize;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  System.currentTimeMillis()  -  blockSize;	  this.assemLen    =    System.currentTimeMillis()    -    recordSize;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
14	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  recordSize;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  recordSize;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  System.currentTimeMillis()  *  recordSize;	  this.assemLen    =    System.currentTimeMillis()    -    recordSize;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
15	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  1;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  System.currentTimeMillis()  -  1;	  this.assemLen    =    System.currentTimeMillis()    -    recordSize;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
16	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  recordSize;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  recordSize;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  System.currentTimeMillis()  +  recordSize;	  this.assemLen    =    System.currentTimeMillis()    -    recordSize;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
17	[BUG]  [BUGGY]  this.assemLen  =  3;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  3;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  3;	  this.assemLen    =    4;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
19	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemBuf  =  new  byte[recordSize];  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemBuf  =  new  byte[recordSize];	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
20	[BUG]  [BUGGY]  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemBuf  =  new  TarBuffer(out,  blockSize,  recordSize);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
21	[BUG]  [BUGGY]  this.assemLen  =  new  byte[recordSize];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  new  byte[recordSize];  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  new  byte[recordSize];	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
22	[BUG]  [BUGGY]  this.assemLen  =  new  long[recordSize];  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  new  long[recordSize];  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  new  long[recordSize];	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  this.assemLen  =  os.getLength();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  os.getLength();  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  os.getLength();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
24	[BUG]  [BUGGY]  this.assemLen  -=  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  -=  1;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  -=  1;	  this.assemLen    -=    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
25	[BUG]  [BUGGY]  this.assemLen  -=  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  -=  2;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  -=  2;	  this.assemLen    -=    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
26	[BUG]  [BUGGY]  this.assemLen  -=  4;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  -=  4;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  -=  4;	  this.assemLen    -=    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
27	[BUG]  [BUGGY]  this.assemLen  -=  recordSize;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  -=  recordSize;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  -=  recordSize;	  this.assemLen    -=    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
28	[BUG]  [BUGGY]  this.assemLen  -=  3;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  -=  3;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  -=  3;	  this.assemLen    -=    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
29	[BUG]  [BUGGY]  this.assemLen  -=  10;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  -=  10;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  -=  10;	  this.assemLen    -=    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  this.assemLen  -=  8;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  -=  8;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  -=  8;	  this.assemLen    -=    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
31	[BUG]  [BUGGY]  this.assemLen  =  blockSize;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  blockSize;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  blockSize;	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
32	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  1;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  System.currentTimeMillis()  +  1;	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
33	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  2;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  System.currentTimeMillis()  /  2;	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
34	[BUG]  [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  recordSize;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  LONGFILE_GNU  +  recordSize;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  LONGFILE_GNU  +  recordSize;	  this.assemLen    =    LONGFILE_GNU;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
35	[BUG]  [BUGGY]  this.assemLen  =  5;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  5;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  5;	  this.assemLen    =    4;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
36	[BUG]  [BUGGY]  this.assemLen  -=  6;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  -=  6;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  -=  6;	  this.assemLen    -=    0;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
37	[BUG]  [BUGGY]  this.assemLen  =  os.readLong();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  os.readLong();  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  os.readLong();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  this.assemLen  =  new  longFileMode();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  new  longFileMode();  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  new  longFileMode();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
39	[BUG]  [BUGGY]  this.assemLen  =  recordSize  +  2;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  recordSize  +  2;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  recordSize  +  2;	  this.assemLen    =    recordSize;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
40	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize  *  recordSize;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize  *  recordSize;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  System.currentTimeMillis()  -  recordSize  *  recordSize;	  this.assemLen    =    System.currentTimeMillis()    -    recordSize;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
41	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize  +  2;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize  +  2;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  System.currentTimeMillis()  -  recordSize  +  2;	  this.assemLen    =    System.currentTimeMillis()    -    recordSize;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
42	[BUG]  [BUGGY]  this.assemLen  =  recordSize  *  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  recordSize  *  1;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  recordSize  *  1;	  this.assemLen    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
43	[BUG]  [BUGGY]  this.assemLen  =  recordSize  -  6;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  recordSize  -  6;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  recordSize  -  6;	  this.assemLen    =    recordSize    -    1;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
44	[BUG]  [BUGGY]  this.assemLen  -=  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  -=  System.currentTimeMillis();  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  -=  System.currentTimeMillis();	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
45	[BUG]  [BUGGY]  this.assemLen  =  os.length;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  os.length;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  os.length;	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
46	[BUG]  [BUGGY]  this.assemLen  =  os.readLine();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  os.readLine();  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  os.readLine();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
47	[BUG]  [BUGGY]  this.assemLen  =  os.getValue();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  os.getValue();  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  os.getValue();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
48	[BUG]  [BUGGY]  this.assemLen  -=  LONGFILE_GNU;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  -=  LONGFILE_GNU;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  -=  LONGFILE_GNU;	  this.assemLen    =    LONGFILE_GNU;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
49	[BUG]  [BUGGY]  this.assemLen  =  recordSize  +  LONGFILE_GNU;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  recordSize  +  LONGFILE_GNU;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  recordSize  +  LONGFILE_GNU;	  this.assemLen    =    LONGFILE_GNU;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
50	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize  -  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);    [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize  -  1;  [BUGGY]    this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	91	91	1	replace	this.assemLen  =  System.currentTimeMillis()  -  recordSize  -  1;	  this.assemLen    =    System.currentTimeMillis()    -    recordSize;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
