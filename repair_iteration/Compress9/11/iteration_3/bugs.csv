bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  os.flush();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.flush();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.flush();	  os.close();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
2	[BUG]  [BUGGY]  os.defaultReader().write(assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.defaultReader().write(assemBuf,  0,  recordSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.defaultReader().write(assemBuf,  0,  recordSize);	  os.close();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
3	[BUG]  [BUGGY]  os.write('n');  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write('n');  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write('n');	  os.close();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
4	[BUG]  [BUGGY]  os.setCurrentSize(recordSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.setCurrentSize(recordSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.setCurrentSize(recordSize);	  os.close();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
5	[BUG]  [BUGGY]  os.setCurrentSize(currSize);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.setCurrentSize(currSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.setCurrentSize(currSize);	  os.close();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
6	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[blockSize  *  recordSize];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[blockSize  *  recordSize];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[blockSize  *  recordSize];	  this.assemBuf    =    new    byte[blockSize    +    recordSize];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize  +  blockSize];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[recordSize  +  blockSize];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[recordSize  +  blockSize];	  this.assemBuf    =    new    byte[blockSize    +    recordSize];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lockSize  +  recordSize];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[lockSize  +  recordSize];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[lockSize  +  recordSize];	  this.assemBuf    =    new    byte[blockSize    +    recordSize];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
9	[BUG]  [BUGGY]  this.currName  =  os.getCurrentName()  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.getCurrentName()  +  1;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.getCurrentName()  +  1;	  this.currName    =    os.getCurrentName();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
10	[BUG]  [BUGGY]  this.currName  =  os.getString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.getString();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.getString();	  this.currName    =    os.getCurrentName();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
11	[BUG]  [BUGGY]  this.currName  =  os.getCurrentName()  +  recordSize;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.getCurrentName()  +  recordSize;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.getCurrentName()  +  recordSize;	  this.currName    =    os.getCurrentName();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
12	[BUG]  [BUGGY]  this.currName  =  os.getFullName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.getFullName();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.getFullName();	  this.currName    =    os.getCurrentName();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
13	[BUG]  [BUGGY]  this.currName  =  os.getShortName();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.getShortName();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.getShortName();	  this.currName    =    os.getCurrentName();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
14	[BUG]  [BUGGY]  this.currName  =  os.getQualifiedName();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.getQualifiedName();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.getQualifiedName();	  this.currName    =    os.getCurrentName();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
15	[BUG]  [BUGGY]  os.write(assemBuf,  0,  blockSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write(assemBuf,  0,  blockSize);  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write(assemBuf,  0,  blockSize);  this.assemLen  =  0;	  os.write(assemBuf,    0,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
16	[BUG]  [BUGGY]  os.write(blockSize,  0,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write(blockSize,  0,  recordSize);  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write(blockSize,  0,  recordSize);  this.assemLen  =  0;	  os.write(assemBuf,    0,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
17	[BUG]  [BUGGY]  os.write(assemBuf,  0,  recordSize);  this.assemLen  =  1;  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write(assemBuf,  0,  recordSize);  this.assemLen  =  1;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write(assemBuf,  0,  recordSize);  this.assemLen  =  1;	  os.write(assemBuf,    0,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
18	[BUG]  [BUGGY]  os.write(recordSize,  0,  blockSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write(recordSize,  0,  blockSize);  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write(recordSize,  0,  blockSize);  this.assemLen  =  0;	  os.write(assemBuf,    0,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
19	[BUG]  [BUGGY]  os.write(buffer,  0,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write(buffer,  0,  recordSize);  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write(buffer,  0,  recordSize);  this.assemLen  =  0;	  os.write(assemBuf,    0,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
20	[BUG]  [BUGGY]  os.write(recordBuf,  0,  blockSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write(recordBuf,  0,  blockSize);  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write(recordBuf,  0,  blockSize);  this.assemLen  =  0;	  os.write(assemBuf,    0,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
21	[BUG]  [BUGGY]  this.currName  =  os.getKey();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.getKey();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.getKey();	  this.currName    =    os.getValue();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
22	[BUG]  [BUGGY]  this.currName  =  os.getLongValue();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.getLongValue();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.getLongValue();	  this.currName    =    os.getValue();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
23	[BUG]  [BUGGY]  this.currName  =  os.toString();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.toString();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.toString();	  this.currName    =    os.getValue();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
24	[BUG]  [BUGGY]  this.currName  =  os.getCurrName();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.getCurrName();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.getCurrName();	  this.currName    =    os.getValue();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
25	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  1;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  =  System.currentTimeMillis()  +  1;	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
26	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  recordSize;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  +  recordSize;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  =  System.currentTimeMillis()  +  recordSize;	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
27	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  1;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  =  System.currentTimeMillis()  -  1;	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
28	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  -  recordSize;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  =  System.currentTimeMillis()  -  recordSize;	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
29	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  2;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  2;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  =  System.currentTimeMillis()  /  2;	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
30	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  10000;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  /  10000;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  =  System.currentTimeMillis()  /  10000;	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
31	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[blockSize],  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[blockSize],  recordSize  +  1);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[blockSize],  recordSize  +  1);	  this.assemBuf    =    new    byte[blockSize],    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
32	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[blockSize],  blockSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[blockSize],  blockSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[blockSize],  blockSize);	  this.assemBuf    =    new    byte[blockSize],    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[blockSize],  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[blockSize],  recordSize  +  2);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[blockSize],  recordSize  +  2);	  this.assemBuf    =    new    byte[blockSize],    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize],  blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[recordSize],  blockSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[recordSize],  blockSize);	  this.assemBuf    =    new    byte[blockSize],    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
35	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU],  blockSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU],  blockSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[LONGFILE_GNU],  blockSize);	  this.assemBuf    =    new    byte[LONGFILE_GNU],    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
36	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_GNU],  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_GNU],  recordSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[lONGFILE_GNU],  recordSize);	  this.assemBuf    =    new    byte[LONGFILE_GNU],    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
37	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU],  recordSize,  LONGFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU],  recordSize,  LONGFILE_TRUNCATE);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[LONGFILE_GNU],  recordSize,  LONGFILE_TRUNCATE);	  this.assemBuf    =    new    byte[LONGFILE_GNU],    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
38	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU],  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU],  recordSize  +  1);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[LONGFILE_GNU],  recordSize  +  1);	  this.assemBuf    =    new    byte[LONGFILE_GNU],    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
39	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize],  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[recordSize],  LONGFILE_GNU);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[recordSize],  LONGFILE_GNU);	  this.assemBuf    =    new    byte[LONGFILE_GNU],    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
40	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[blockSize  +  2];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[blockSize  +  2];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[blockSize  +  2];	  this.assemBuf    =    new    byte[blockSize    +    1];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
41	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[blockSize  +  3];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[blockSize  +  3];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[blockSize  +  3];	  this.assemBuf    =    new    byte[blockSize    +    1];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
42	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[blockSize  +  4];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[blockSize  +  4];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[blockSize  +  4];	  this.assemBuf    =    new    byte[blockSize    +    1];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
43	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_GNU+1];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_GNU+1];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[lONGFILE_GNU+1];	  this.assemBuf    =    new    byte[LONGFILE_GNU+1];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
44	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU+1],  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU+1],  recordSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[LONGFILE_GNU+1],  recordSize);	  this.assemBuf    =    new    byte[LONGFILE_GNU+1];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
45	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU+1],  recordSize;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU+1],  recordSize;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[LONGFILE_GNU+1],  recordSize;	  this.assemBuf    =    new    byte[LONGFILE_GNU+1];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  1;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  1;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
47	[BUG]  [BUGGY]  if(recordSize  >  0)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  0;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  if(recordSize  >  0)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  0;  }  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	if(recordSize  >  0)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  0;  }	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  0;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
49	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  assemLen  =  0;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
50	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  2;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  2;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  2;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
51	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[length  +  2];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[length  +  2];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[length  +  2];	  this.assemBuf    =    new    byte[length    +    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
52	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_ERROR  +  1];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_ERROR  +  1];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[LONGFILE_ERROR  +  1];	  this.assemBuf    =    new    byte[length    +    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
53	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[len  +  1];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[len  +  1];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[len  +  1];	  this.assemBuf    =    new    byte[length    +    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
54	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    1;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
55	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  2;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  2;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  2;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    1;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
56	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  if(recordSize  >  0)  {  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  }  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	if(recordSize  >  0)  {  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  }	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    1;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
57	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    1;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
58	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
59	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lONGFileMode];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[lONGFileMode];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[lONGFileMode];	  this.assemBuf    =    new    byte[LONGFILE_ERROR];    	non-compiled	[CE]  <identifier>  expected	7	None	replace
60	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize  *  3];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[recordSize  *  3];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[recordSize  *  3];	  this.assemBuf    =    new    byte[recordSize    +    3];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
61	[BUG]  [BUGGY]  this.assemLen  =  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  =  1;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  =  1;	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
62	[BUG]  [BUGGY]  this.assemLen  =  recordSize;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  =  recordSize;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  =  recordSize;	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
63	[BUG]  [BUGGY]  this.assemLen  =  LONGFILE_GNU;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  =  LONGFILE_GNU;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  =  LONGFILE_GNU;	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
64	[BUG]  [BUGGY]  this.assemLen  =  2;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  =  2;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  =  2;	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
65	[BUG]  [BUGGY]  this.assemLen  =  4;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  =  4;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  =  4;	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
66	[BUG]  [BUGGY]  this.currName  =  os.readLine()  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.readLine()  +  1;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.readLine()  +  1;	  this.currName    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
67	[BUG]  [BUGGY]  this.currName  =  os.readFully();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.readFully();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.readFully();	  this.currName    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
68	[BUG]  [BUGGY]  this.currName  =  os.readLine()  +  recordSize;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.readLine()  +  recordSize;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.readLine()  +  recordSize;	  this.currName    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
69	[BUG]  [BUGGY]  this.currName  =  os.readUTF();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.readUTF();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.readUTF();	  this.currName    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
70	[BUG]  [BUGGY]  this.currName  =  os.readFile();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.readFile();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.readFile();	  this.currName    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
71	[BUG]  [BUGGY]  this.currName  =  os.readString();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.readString();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.readString();	  this.currName    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
72	[BUG]  [BUGGY]  os.flush();  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.flush();  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.flush();  this.assemLen  =  0;	  os.close();    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
73	[BUG]  [BUGGY]  os.close();  this.assemLen  =  1;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.close();  this.assemLen  =  1;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.close();  this.assemLen  =  1;	  os.close();    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
74	[BUG]  [BUGGY]  os.write('n');  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write('n');  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write('n');  this.assemLen  =  0;	  os.close();    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
75	[BUG]  [BUGGY]  os.setCurrentSize(currSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.setCurrentSize(currSize);  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.setCurrentSize(currSize);  this.assemLen  =  0;	  os.close();    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
76	[BUG]  [BUGGY]  os.close();  this.assemLen  =  recordSize;  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.close();  this.assemLen  =  recordSize;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.close();  this.assemLen  =  recordSize;	  os.close();    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  +  1);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  +  1);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
79	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
80	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  assemLen);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
81	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  blockSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
82	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  2);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  2);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  2);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
83	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[blockSize  *  1];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[blockSize  *  1];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[blockSize  *  1];	  this.assemBuf    =    new    byte[recordSize    *    1];    	non-compiled	[CE]  <identifier>  expected	26	None	replace
84	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize  *  4];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[recordSize  *  4];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[recordSize  *  4];	  this.assemBuf    =    new    byte[recordSize    *    1];    	non-compiled	[CE]  <identifier>  expected	26	None	replace
85	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lockSize  *  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[lockSize  *  1];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[lockSize  *  1];	  this.assemBuf    =    new    byte[recordSize    *    1];    	non-compiled	[CE]  <identifier>  expected	26	None	replace
86	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
87	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
88	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  assemLen);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  assemLen);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  assemLen);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
89	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  assemLen);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  assemLen);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  assemLen);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
90	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  this.assemLen);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
91	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  2);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  2);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
92	[BUG]  [BUGGY]  os.write(assemBuf,  0,  blockSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write(assemBuf,  0,  blockSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write(assemBuf,  0,  blockSize);	  os.write(assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
93	[BUG]  [BUGGY]  os.write(assemBuf,  0,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write(assemBuf,  0,  recordSize  +  1);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write(assemBuf,  0,  recordSize  +  1);	  os.write(assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
94	[BUG]  [BUGGY]  os.write(assemBuf,  0,  this.assemLen);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write(assemBuf,  0,  this.assemLen);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write(assemBuf,  0,  this.assemLen);	  os.write(assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
95	[BUG]  [BUGGY]  os.write(assemBuf,  0,  this.recordSize);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write(assemBuf,  0,  this.recordSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write(assemBuf,  0,  this.recordSize);	  os.write(assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
96	[BUG]  [BUGGY]  os.write(blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write(blockSize,  0,  recordSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write(blockSize,  0,  recordSize);	  os.write(assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
97	[BUG]  [BUGGY]  os.copyCurrentStructure(assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.copyCurrentStructure(assemBuf,  0,  recordSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.copyCurrentStructure(assemBuf,  0,  recordSize);	  os.write(assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
98	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.flush();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.flush();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.flush();	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
99	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.close();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.close();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.close();	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
100	[BUG]  [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.flush();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.flush();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(this.assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.flush();	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
101	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[blockSize  *  2];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[blockSize  *  2];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[blockSize  *  2];	  this.assemBuf    =    new    byte[recordSize    *    2];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
102	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_GNU  +  recordSize];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_GNU  +  recordSize];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[lONGFILE_GNU  +  recordSize];	  this.assemBuf    =    new    byte[LONGFILE_GNU    +    recordSize];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
103	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU  +  LONGFILE_TRUNCATE];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU  +  LONGFILE_TRUNCATE];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[LONGFILE_GNU  +  LONGFILE_TRUNCATE];	  this.assemBuf    =    new    byte[LONGFILE_GNU    +    recordSize];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
104	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize  +  LONGFILE_GNU];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[recordSize  +  LONGFILE_GNU];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[recordSize  +  LONGFILE_GNU];	  this.assemBuf    =    new    byte[LONGFILE_GNU    +    recordSize];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
105	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_GNU  +  LONGFILE_TRUNCATE];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_GNU  +  LONGFILE_TRUNCATE];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[lONGFILE_GNU  +  LONGFILE_TRUNCATE];	  this.assemBuf    =    new    byte[LONGFILE_GNU    +    recordSize];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
106	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU  +  blockSize];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU  +  blockSize];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[LONGFILE_GNU  +  blockSize];	  this.assemBuf    =    new    byte[LONGFILE_GNU    +    recordSize];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
107	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
108	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[blockSize  +  recordLen];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[blockSize  +  recordLen];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[blockSize  +  recordLen];	  this.assemBuf    =    new    byte[blockSize    +    recordSize];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
109	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  recordSize;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  =  System.currentTimeMillis()  *  recordSize;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  =  System.currentTimeMillis()  *  recordSize;	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
110	[BUG]  [BUGGY]  this.currName  =  os.getPath();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.getPath();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.getPath();	  this.currName    =    os.getValue();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
111	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize  *  8];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[recordSize  *  8];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[recordSize  *  8];	  this.assemBuf    =    new    byte[recordSize    *    1];    	non-compiled	[CE]  <identifier>  expected	26	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  assemLen  =  0;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize  -  1);  assemLen  =  0;	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
113	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  1;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  if(recordSize  >  0)  {  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  1;  }  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	if(recordSize  >  0)  {  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  1;  }	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    1;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
114	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  1;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize)+  1;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
115	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lONGFile_GNU];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[lONGFile_GNU];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[lONGFile_GNU];	  this.assemBuf    =    new    byte[lONGFILE_ERROR];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
116	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lONGFile_GNU+1];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[lONGFile_GNU+1];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[lONGFile_GNU+1];	  this.assemBuf    =    new    byte[LONGFILE_GNU+1];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
117	[BUG]  [BUGGY]  os.write(assemBuf,  0,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write(assemBuf,  0,  recordSize  -  1);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write(assemBuf,  0,  recordSize  -  1);	  os.write(assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
118	[BUG]  [BUGGY]  os.write(assemBuf,  0,  recordLen);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write(assemBuf,  0,  recordLen);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write(assemBuf,  0,  recordLen);	  os.write(assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
119	[BUG]  [BUGGY]  this.currName  =  os.getRawName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.getRawName();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.getRawName();	  this.currName    =    os.getCurrentName();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
120	[BUG]  [BUGGY]  this.currName  =  os.getCurrentName(recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.getCurrentName(recordSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.getCurrentName(recordSize);	  this.currName    =    os.getCurrentName();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
121	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[length  *  1];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[length  *  1];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[length  *  1];	  this.assemBuf    =    new    byte[length    +    1];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
122	[BUG]  [BUGGY]  os.release();  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.release();  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.release();  this.assemLen  =  0;	  os.close();    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
123	[BUG]  [BUGGY]  os.reset();  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.reset();  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.reset();  this.assemLen  =  0;	  os.close();    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
124	[BUG]  [BUGGY]  os.write(this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write(this.assemBuf,  0,  recordSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write(this.assemBuf,  0,  recordSize);	  os.close();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
125	[BUG]  [BUGGY]  os.setCurrentLength(recordSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.setCurrentLength(recordSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.setCurrentLength(recordSize);	  os.close();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
126	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize  *  2  +  1];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[recordSize  *  2  +  1];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[recordSize  *  2  +  1];	  this.assemBuf    =    new    byte[recordSize    *    2];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
127	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize);  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.buffer  =  new  TarBuffer(out,  recordSize,  blockSize);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
128	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[0],  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[0],  recordSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[0],  recordSize);	  this.assemBuf    =    new    byte[blockSize],    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
129	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[blockSize],  recordSize  +  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[blockSize],  recordSize  +  4);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[blockSize],  recordSize  +  4);	  this.assemBuf    =    new    byte[blockSize],    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
130	[BUG]  [BUGGY]  os.write(assemBuf,  0,  this.recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write(assemBuf,  0,  this.recordSize);  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write(assemBuf,  0,  this.recordSize);  this.assemLen  =  0;	  os.write(assemBuf,    0,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
131	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU  +  recordSize],  LONGFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU  +  recordSize],  LONGFILE_TRUNCATE);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[LONGFILE_GNU  +  recordSize],  LONGFILE_TRUNCATE);	  this.assemBuf    =    new    byte[LONGFILE_GNU    +    recordSize];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
132	[BUG]  [BUGGY]  this.currName  =  os.getLine();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.getLine();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.getLine();	  this.currName    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
133	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_GNU],  recordSize  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_GNU],  recordSize  +  1);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[lONGFILE_GNU],  recordSize  +  1);	  this.assemBuf    =    new    byte[LONGFILE_GNU],    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
134	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_GNU],  recordSize,  LONGFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_GNU],  recordSize,  LONGFILE_TRUNCATE);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[lONGFILE_GNU],  recordSize,  LONGFILE_TRUNCATE);	  this.assemBuf    =    new    byte[LONGFILE_GNU],    recordSize);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
135	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[RecordSize  +  recordSize];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[RecordSize  +  recordSize];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[RecordSize  +  recordSize];	  this.assemBuf    =    new    byte[RecordSize];    	non-compiled	[CE]  <identifier>  expected	14	None	replace
136	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[0  +  recordSize];  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[0  +  recordSize];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[0  +  recordSize];	  this.assemBuf    =    new    byte[LONGFILE_GNU    +    recordSize];    	non-compiled	[CE]  <identifier>  expected	27	None	replace
137	[BUG]  [BUGGY]  os.write(assemBuf,  0,  out.length);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  os.write(assemBuf,  0,  out.length);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	os.write(assemBuf,  0,  out.length);	  os.write(assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
138	[BUG]  [BUGGY]  this.assemLen  =  os.read();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  =  os.read();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  =  os.read();	  os.close();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
139	[BUG]  [BUGGY]  this.assemLen  =  os.close();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  =  os.close();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  =  os.close();	  os.close();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
140	[BUG]  [BUGGY]  this.assemLen  =  os.getLength();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  =  os.getLength();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  =  os.getLength();	  os.close();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
141	[BUG]  [BUGGY]  this.assemLen  -=  0;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  -=  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  -=  0;	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
142	[BUG]  [BUGGY]  this.assemLen  =  recordSize  -  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  =  recordSize  -  1;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  =  recordSize  -  1;	  this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
143	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_GNU+1],  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_GNU+1],  recordSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[lONGFILE_GNU+1],  recordSize);	  this.assemBuf    =    new    byte[LONGFILE_GNU+1];    	non-compiled	[CE]  <identifier>  expected	29	None	replace
144	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  os);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  os);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize,  os);	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
145	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[blockSize],  recordSize];  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[blockSize],  recordSize];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[blockSize],  recordSize];	  this.assemBuf    =    new    byte[blockSize],    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
146	[BUG]  [BUGGY]  this.currName  =  os.getText();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.getText();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.getText();	  this.currName    =    os.getCurrentName();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
147	[BUG]  [BUGGY]  this.currName  =  os.getFileName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.getFileName();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.getFileName();	  this.currName    =    os.getCurrentName();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
148	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  +  1);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
149	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  this.assemLen  =  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize  -  1);  this.assemLen  =  0;	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
150	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize],  recordSize  *  1];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemBuf  =  new  byte[recordSize],  recordSize  *  1];  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemBuf  =  new  byte[recordSize],  recordSize  *  1];	  this.assemBuf    =    new    byte[recordSize    *    1];    	non-compiled	[CE]  <identifier>  expected	26	None	replace
151	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(assemBuf,  0,  this.recordBuf,  0,  recordSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
152	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  out.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  out.length);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  out.length);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
153	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  os.close();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  os.close();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  os.close();	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
154	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.writeBytes(blockSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.writeBytes(blockSize);  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  os.writeBytes(blockSize);	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
155	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  os.flush();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  os.flush();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	System.arraycopy(assemBuf,  0,  this.assemBuf,  1,  recordSize);  os.flush();	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    os.close();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
156	[BUG]  [BUGGY]  this.currName  =  os.readLine()  ||  os.readLine();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.readLine()  ||  os.readLine();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.readLine()  ||  os.readLine();	  this.currName    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
157	[BUG]  [BUGGY]  this.currName  =  os.readLine()  ||  os.readLine()  >  0;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.currName  =  os.readLine()  ||  os.readLine()  >  0;  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.currName  =  os.readLine()  ||  os.readLine()  >  0;	  this.currName    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
158	[BUG]  [BUGGY]  if(this.assemLen  >  blockSize)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  0;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  if(this.assemLen  >  blockSize)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  0;  }  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	if(this.assemLen  >  blockSize)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  0;  }	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
159	[BUG]  [BUGGY]  if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  0;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  0;  }  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	if(assemLen  >  0)  {  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  assemLen  =  0;  }	  System.arraycopy(assemBuf,    0,    this.assemBuf,    0,    recordSize);    assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
160	[BUG]  [BUGGY]  if(recordSize  >  0)  {  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  if(recordSize  >  0)  {  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  }  else  {  out.close();  }  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	if(recordSize  >  0)  {  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  }  else  {  out.close();  }	  this.buffer    =    new    TarBuffer(out,    blockSize,    recordSize);    this.assemLen    =    1;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
161	[BUG]  [BUGGY]  this.assemLen  -=  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  new  CountingOutputStream(os);  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;      [BUGGY]  this.assemLen  -=  System.currentTimeMillis();  [BUGGY]      this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	92	92	1	replace	this.assemLen  -=  System.currentTimeMillis();	  this.assemLen    =    System.currentTimeMillis();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
