projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60privatebooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60privatebooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60privatefinalbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalprivatebooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60privatefinalbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60protectedbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalprivatebooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalprotectedbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalpublicbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalprivatebooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalprotectedbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60privatestaticfinalbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60protectedbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Booleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleancompleted=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanfinished=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60protectedfinalbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicfinalbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicstaticfinalbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicstaticfinalbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicfinalbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicstaticbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleancompleted=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60privatestaticfinalbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60protectedfinalbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedError();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_TYPE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPR_RESULT_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalprivatebooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(null,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalArgumentException("");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Privatebooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60protectedbooleanfinished(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished()==false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicstaticbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanstarted=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+result.toString()+"=>"+result.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.warning",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.undef.error",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.bad.error",Arrays.asList(required)}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(false,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(false)==false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalprotectedbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPECTED_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalStateException("");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(Arrays.asList(newObject[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedErrorImpl();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60protectedstaticfinalbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60protectedabstractbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60protectedfinalbooleanfinished;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Reporterror("Unexpectederror:"+Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalArgumentException("Unexpectederror:"+Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60AssertionFailedErrorreportError("Unexpectederror:"+Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60ReportError("Unexpectederror:"+Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60logger.error("Unexpectederror:"+Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,identifier);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,NON_SYNTHETIC);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,null,expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,null,identifier);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60protectedstaticfinalbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60privatestaticfinalbooleanfinished;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(Arrays.asList(newObject[]{})+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(Arrays.asList(newObject[0]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(Arrays.asList(newObject[]{},null));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(Arrays.asList(this,newObject[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(Arrays.asList(newObject[]{})+"n");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Privatebooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalPrivatebooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalbooleanfinished(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Reporterror("Unexpectederror:"+Arrays.asList(newString[]{"msg.undef.error",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60AssertionFailedErrorreportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.undef.error",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60AssertionFailedError.this.error("Unexpectederror:"+Arrays.asList(newString[]{"msg.undef.error",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60logger.error("Unexpectederror:"+Arrays.asList(newString[]{"msg.undef.error",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalArgumentException("Unexpectederror:"+Arrays.asList(newString[]{"msg.undef.error",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(){returntrue;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished()==true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(){true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(){returntrue;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(){true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicfinalbooleanfinished()==true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.error",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Reporterror("Unexpectederror:"+Arrays.asList(newString[]{"msg.warning",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60AssertionFailedErrorreportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.warning",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60logger.error("Unexpectederror:"+Arrays.asList(newString[]{"msg.warning",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Reporterror("Unexpectederror:"+Arrays.asList(newString[]{"msg.error",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicstaticfinalintfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicfinalstaticbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicstaticfinalbooleanfinished(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicstaticfinalbooleanfinished;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalpublicbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalpublicbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalpublicbooleanfinished(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalpublicbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalpublicbooleanfinished;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanfinished=this;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanfinished=thisinstanceofAssertionFailedError;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanfinished=Boolean.FALSE;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanfinished=Boolean.TRUE;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Booleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Booleanfinished=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Booleanfinished="false";
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Booleanfinished(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Booleancompleted=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleancompleted=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalbooleancompleted=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalbooleancompleted=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedError(0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedError(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_INIT_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedError(newObject[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedError(String.class);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedError(TarArchiveOutputStream.SOURCENAME_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalbooleanfinished||isEnabled(Feature.QUOTE_FIELD_NAMES_ERROR));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalbooleanfinished||isEnabled(Feature.QUOTE_FIELD_NAMES_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalbooleanfinished||isEnabled(Feature.QUOTE_FIELD_NAME);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalbooleanfinished||isEnabled(Feature.QUOTE_FIELD_NAME));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalbooleanfinished||isEnabled(Feature.QUOTE_FIELD_NAMES));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,identifierType);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,NON_SOURCE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,identifierName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalprotectedbooleanfinished;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalprotectedbooleanfinished=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,identifier);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,getName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,null,identifier);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(false,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicfinalbooleanfinished(false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(false,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicvoidfinished(false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicfinalbooleanfinished(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(newFileInputStream(TarArchiveOutputStream.DEFAULT_EXPECTED_ERROR));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPECTED_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60AssertionFailedErrorresult=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPECTED_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPECTED_ERROR,identifier);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPECTED_ERROR,this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPECTED_ERROR,NON_SYNTHETIC);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPECTED_ERROR,identifierType);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(Arrays.asList(identifiers));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(this,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(Arrays.asList(this));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(newObject[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.class);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalprotectedbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalprivatebooleanfinished;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicfinalstaticbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(null,null,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(null,this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(false,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(null,null,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(newString[]{},null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(null,null,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(true,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(false){}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Throwables.thrownewIllegalArgumentException("");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalArgumentException("AssertionFailedError:");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalArgumentException("AssertionFailedError:"+getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalArgumentException("AssertionFailedError:"+AssertionFailedError.class.getName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalArgumentException("AssertionFailedError:"+AssertionFailedError.class.getSimpleName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalArgumentException("AssertionFailedError:"+AssertionFailedError.class);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleancompleted=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicfinalbooleancompleted=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleancompleted(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicstaticfinalbooleancompleted=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicstaticfinalbooleancompleted=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicfinalbooleanfinished;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicsynchronizedbooleanfinished;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicvoidfinished;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_TYPE,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_TYPE,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_TYPE,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_TYPE,this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_TYPE,identifier);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_TYPE,TEST_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_TYPE,TEST_EXTENDS);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanstarted=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalbooleanstarted=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Booleanstarted=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalprotectedbooleanfinished(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalprotectedbooleanfinished;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,identifier);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,NON_SYNTHETIC);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,null,identifier);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,null,expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60protectedabstractbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(true,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(false,true,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicfinalbooleanfinished(false,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(true,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60if(!finished){finalbooleanfinished=true;}else{thrownewIllegalArgumentException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60if(!finished){finalbooleanfinished=true;}else{AssertionFailedError.error("Unexpectederror:"+getMessage());}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60if(!finished){finalbooleanfinished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60if(!finished){finalbooleanfinished=true;}else{System.err.println("Unexpectederror:"+name);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicabstractbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicabstractfinalbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(Boolean.TRUE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(Boolean.FALSE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(File.separator);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(String.valueOf(null));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,0,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,TEST_FONT);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,TEST_EXTENDS);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,TEST_NO_EXTENDS);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,TEST_FAILED);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Throwables.thrownewIllegalStateException("");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalStateException("AssertionFailedError:"+getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalStateException("AssertionFailedError:");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalStateException("AssertionFailedError:"+AssertionFailedError.class);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalStateException("AssertionFailedError:"+AssertionFailedError.class.getName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+result.toString()+",=>"+result.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+String.valueOf(result.toString())+"=>"+String.valueOf(result.toString()));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+result.getMessage()+"=>"+result.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Reporterror("Unexpectederror:"+result.toString()+"=>"+result.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Reporterror("Unexpectederror:"+result.toString()+",=>"+result.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+String.valueOf(result.toString())+"=>"+String.valueOf(result.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(newFileInputStream(TarArchiveOutputStream.DEFAULT_EXPR_RESULT_ERROR));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPR_RESULT_ERROR,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPR_RESULT_ERROR,identifier);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPR_RESULT_ERROR,this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPR_RESULT_ERROR,identifierType);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPR_RESULT_ERROR,NON_SYNTHETIC);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPR_RESULT_ERROR,NON_GLOBAL_TYPE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalprotectedbooleanfinished(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Reporterror("Unexpectederror:"+Arrays.asList(newString[]{"msg.bad.error",Arrays.asList(required)}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60AssertionFailedErrorreportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.bad.error",Arrays.asList(required)}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.bad.error",Arrays.asList(identifier)}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.bad.error",Arrays.asList(required),expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(getMessage(),TarArchiveOutputStream.DEFAULT_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,getMessage(),this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,getMessage(),null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,getMessage(),expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(AssertionFailedError.DEFAULT_ERROR,getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,identifierType);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,identifierName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalstaticbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalintfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalbooleanfinished(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalbooleanfinished;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalprivatestaticbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(true)==false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(true){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(false)==true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(true)==true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(true){returntrue;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicfinalbooleanfinished(false)==false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(false){returntrue;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicabstractbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicstaticfinalintfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicstaticfinalbooleanfinished(false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicstaticfinalStringfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedErrorImpl(System.err);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedErrorImpl(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedErrorImpl(null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedErrorImpl(newObject[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedErrorImpl(TarArchiveOutputStream.DEFAULT_INIT_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60protectedbooleanfinished(false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60protectedbooleanfinished(false,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60protectedbooleanfinished(true,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60protectedbooleanfinished(false,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60protectedbooleanfinished(false){}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60protectedfinalbooleanfinished(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(-1,TarArchiveOutputStream.DEFAULT_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Privatestaticfinalbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Reporter.error("Unexpectederror:"+Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Reportern("Unexpectederror:"+Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_TYPE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Throwables.throw(newIllegalStateException(""));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewAssertionFailedError("");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Throwables.throw(newIllegalStateException("");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewAssertionFailedErrorException("");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(null,null,this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(null,null,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60AssertionFailedError.this.reportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.undef.error",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60ReportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.undef.error",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60AssertionFailedErrorreportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.error",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanfinished=isEnabled(Feature.QUOTE_FIELD_NAME);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanfinished=isEnabled(Feature.QUOTE_FIELD_NAMES);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanfinished=thisinstanceofUnsupportedOperationFailedError;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(Arrays.asList(names));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalprivatebooleanfinished(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(this,TarArchiveOutputStream.DEFAULT_ERROR,getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(this,getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanstarted(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Privatestaticfinalbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60privatestaticfinalintfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedErrorImpl(this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedErrorImpl(TarArchiveOutputStream.UTF8);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(this,TarArchiveOutputStream.DEFAULT_EXTERN_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,this.name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalArgumentException("Errorexpected:"+getMessage());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalArgumentException("Errorexpectingavalue");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalArgumentException("Errorexpected:");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedError(this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedError(TarArchiveOutputStream.UTF8);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(Arrays.asList(newObject[]{0,}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(Arrays.asList(newObject[]{})+1,identifier);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(this,TarArchiveOutputStream.DEFAULT_TYPE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_TYPE,TEST_VALUE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalprotectedbooleanfinished(false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanfinished(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(this,TarArchiveOutputStream.ERROR_MESSAGE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,ObjectUtilities.EMPTY_ARRAY);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,TarObjectiveOutputStream.DEFAULT_TYPE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicsynchronizedbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicfinalbooleanfinished=Boolean.TRUE;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPR_RESULT_ERROR,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(this,TarArchiveOutputStream.DEFAULT_EXPR_RESULT_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPR_RESULT_ERROR,name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPR_RESULT_ERROR,identifierName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPR_RESULT_ERROR,NON_SOURCE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalstaticbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalintfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleancompleted(null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleancomplete=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60privatebooleancompleted=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(null,TarArchiveOutputStream.DEFAULT_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,Arrays.asList(identifiers));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,Arrays.asList(newObject[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60ReportError("Unexpectederror:"+result.toString()+"=>"+result.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+result.toString()+"=>"+this.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalbooleanfinished=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Finalbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicsynchronizedbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.bad.error",Arrays.asList(required),required}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(){false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Securitybooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleancomplete=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(null,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(false)!=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60abstractpublicbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(this,TarArchiveOutputStream.DEFAULT_EXPECTED_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPECTED_ERROR,name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPECTED_ERROR,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicstaticfinalbooleanfinished=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(null,TarArchiveOutputStream.DEFAULT_EXTERN_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,null,this);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(null,null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(StringUtils.EMPTY_STRING_ASCII);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(true){returntrue;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(true){false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,Arrays.asList(identifiers));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished=BooleanUtils.isFalse(false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished=BooleanUtils.isFalse(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished=Boolean.FALSE;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleancompleted(false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleancompleted(false,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,-1,-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(false){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(){returnisEnabled(Feature.QUOTE_FIELD_NAMES);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(){returnisEnabled(TarArchiveOutputStream.DEFAULT_OUTPUT_ERROR);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(){returnisEnabled(Feature.FLUSH_PASSED_TO_STREAM);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(){returnisEnabled(Feature.FLUSH_PASSED_ERROR);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(){returnisEnabled(Feature.FLUSH_PASSED_TO_STREAM);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(null,null,Object.class);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Reporter.error("Unexpectederror:"+Arrays.asList(newString[]{"msg.undef.error",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Reporter.warning("Unexpectederror:"+Arrays.asList(newString[]{"msg.undef.error",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedErrorImpl(Token.EXPR_RESULT);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedErrorImpl(TarArchiveOutputStream.DEFAULT_OUTPUT);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPECTED_ERROR,expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPECTED_ERROR,Object.class);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EMPTY);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPR_RESULT_ERROR,expected);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPR_RESULT_ERROR,Object.class);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(AssertionFailedError.DEFAULT_EXPR_RESULT_ERROR,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXPR_RESULT_ERROR,ObjectUtilities.EMPTY);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicfinalbooleanfinished(false,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalprotectedintfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,Object.class);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,NON_GLOBAL_EXTENDS);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.ERROR_MESSAGE,NON_OBJECT);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,Object.class);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,ObjectUtilities.EMPTY);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,unknown);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,NON_SYNTHETIC);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,Arrays.asList(names));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_ERROR,NON_GLOBAL_EXTENDS);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalpublicbooleanfinished(false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalpublicbooleanfinished(false)==false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60staticfinalprivatebooleanfinished(false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Reporter.error("Unexpectederror:"+Arrays.asList(newString[]{"msg.warning",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.error"),Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Reporter.warning("Unexpectederror:"+Arrays.asList(newString[]{"msg.warning",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.bad.error",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.warning.",Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalintfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalArgumentException("ErrorreadingTarArchiveOutputStream:");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError("Unexpectederror:");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalArgumentException("")
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(Arrays.asList(newObject[]{},getClass()));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(Arrays.asList(newObject[]{})+":");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanfinished=isEnabled(Feature.FLUSH_PASSED_TO_STREAM);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanfinished=this.isEnabled(Feature.FLUSH_PASSED_TO_STREAM);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Reporter.warning("Unexpectederror:"+Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalStateException("Unexpectederror:"+Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportWarning("Unexpectederror:"+Arrays.asList(newString[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60abstractbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60abstractbooleanfinished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,unknown);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,NON_GLOBAL_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Reporter.error("Unexpectederror:"+Arrays.asList(newString[]{"msg.bad.error",Arrays.asList(required)}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Reporter.warning("Unexpectederror:"+Arrays.asList(newString[]{"msg.bad.error",Arrays.asList(required)}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60ReporterInputStreamreportError("Unexpectederror:"+Arrays.asList(newString[]{"msg.bad.error",Arrays.asList(required)}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(DEFAULT_TYPE,TarArchiveOutputStream.DEFAULT_TYPE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_TYPE,Object.class);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_TYPE,TEST_PROTOTYPE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalStateException("TarArchiveOutputStreamisnotsupported.");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60thrownewIllegalStateException("TarArchiveOutputStreamisnotsupported:");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,getName());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,Arrays.asList(newObject[]{}));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTENDS_ERROR,Arrays.asList(names));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60this.identifier=newAssertionFailedError(TarArchiveOutputStream.DEFAULT_OUTPUT);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(FALSE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+result.toString()+",expected=>"+result.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+result.toString()+",expected:"+result.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60reportError("Unexpectederror:"+result.toString()+"=>"+this.result.toString());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicfinalbooleanfinished(null);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60publicbooleanfinished(String.class);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60Finalprotectedbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60finalpublicstaticfinalbooleanfinished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,Object.class);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,ObjectUtilities.EMPTY);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(TarArchiveOutputStream.DEFAULT_EXTERN_ERROR,ObjectUtilities.EMPTY_ARRAY);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(String.class);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60returnnewAssertionFailedError(newString[]{});
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanstarted=isEnabled(TarArchiveOutputStream.DEFAULT_OUTPUT_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanstarted=isEnabled(DesertionFailedError.DEFAULT_SYNTHETIC_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanstarted=isEnabled(TarArchiveOutputStream.DEFAULT_SYNTHETIC_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanstarted=isEnabled(Feature.QUOTE_FIELD_NAMES);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60booleanstarted=isEnabled(Feature.FLUSH_PASSED_TO_STREAM);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java60intfinished=false;
