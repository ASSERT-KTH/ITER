projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(!finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,recordBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(!finished){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(finished){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(!finished){writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(haveUnclosedEntry){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(haveUnclosedEntry){!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129readEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129while(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(haveUnclosedEntry){if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129while(!closed){if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(haveUnclosedEntry){if(finished){writeEOFRecord();}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129readEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129finalhaveUnclosedEntry=writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129finalhasUnclosedEntry=writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129os.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129out.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129os.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129out.write(assemBuf,0,currName.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129finalOutputStreamout=os.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129os.write(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129finalEOFRecord<T>buffer=getEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129while(!finished&&buffer.isEnabled()){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129while(!finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129while(!finished){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129readEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129while(!closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129while(!closed){if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129finalhasUnclosedEntry=writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129while(!closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(hasUnclosedEntry){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_FAILURE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.AUTO_CLOSE_ERROR)||hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129while(!finished&&buffer.isEnabled()){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129while(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(finished){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(finished){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,0,currSize);}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,0,currSize);}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,0,currSize);}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(finished){writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129while(!finished){writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129while(!finished&&buffer.isEnabled()){writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129while(!finished&&buffer.isOpen()){writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,recordBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,recordBuf,0,currSize);}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(finished){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,recordBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(finished){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,recordBuf,0,currSize);}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,recordBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,recordBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,recordBuf,0,currSize);}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129while(!finished){buffer.writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)||haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129out.write('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129os.flushBuffer();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129os.flush();buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(!finished){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(finished){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){writeEOFRecord();}else{buffer.writeBlock();System.arraycopy(assemBuf,0,buffer,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){writeEOFRecord();}else{System.arraycopy(assemBuf,0,buffer,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(!finished){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,buf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)||haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(haveUnclosedEntry||finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(hasUnclosedEntry){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(finished){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,recordBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){writeEOFRecord();}else{buffer.writeBlock();System.arraycopy(assemBuf,0,recordBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){writeEOFRecord();}else{System.arraycopy(assemBuf,0,recordBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){writeEOFRecord();}else{buffer.flushBlock();system.arraycopy(assemBuf,0,recordBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){writeEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,recordBuf,1,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(finish){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(!finished){writeEORFecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129validateEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(finish){writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(!finished){writeEORFecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129while(!finished&&buffer.isClosed()){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)||!finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.AUTO_CLOSE_ERROR)||haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_FAILURE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_FILE_GNU)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129Thread.currentThread().interrupt();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129while(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129System.arraycopy(assemBuf,0,recordBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129finalEOFRecord<K,V>buffer=System.arraycopy(assemBuf,0,recordBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129finalOutputStreamout=newFileOutputStream(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129out.write('n');writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_FILE_GNU)){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129System.arraycopy(assemBuf,0,buffer,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java129if(closed){writeEOFRecord();}else{buffer.flushBlock();system.arraycopy(assemBuf,0,buffer,0,currSize);}
