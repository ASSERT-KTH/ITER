projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEORFecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128readEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128readEOFRecord();buffer.flushBlock();finished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128readEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhasUnclosedEntry=writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=getEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_FAILURE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)){finish();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES||hasUnclosedEntry)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(closed){writeEOFRecord();}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled()){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.length>0){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled()){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(assemBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(recordBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(recordBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128writeEOFRecord();buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,currName.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.write(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf==null){writeEOFRecord();}else{buffer.closeBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_ERROR)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_FILE)||isEnabled(Feature.QUOTE_FIELD_FILE)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){buffer.writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalEOFRecord<K,V>buffer=getEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf==null){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(recordBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELDS_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_FAILURE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_NULL_VALUE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
