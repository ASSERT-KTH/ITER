projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEORFecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128readEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128readEOFRecord();buffer.flushBlock();finished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128readEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhasUnclosedEntry=writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=getEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_FAILURE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)){finish();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES||hasUnclosedEntry)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(closed){writeEOFRecord();}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled()){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.length>0){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled()){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(assemBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(recordBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(recordBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128writeEOFRecord();buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,currName.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.write(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf==null){writeEOFRecord();}else{buffer.closeBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_ERROR)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_FILE)||isEnabled(Feature.QUOTE_FIELD_FILE)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){buffer.writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalEOFRecord<K,V>buffer=getEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf==null){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(recordBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELDS_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_FAILURE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_NULL_VALUE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(recordBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(recordBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(recordBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){if(recordBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(recordBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf==null){if(recordBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished&&isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(true){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalwhile(!closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAME)&&isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)||haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)&&haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.WRITE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_NULL_VALUE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_NULL_VALUE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_NULL_VALUE)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_NULL_VALUE)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_NULL_VALUE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){if(hasUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(true){if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalwhile(!closed){if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){if(isEOFRecord()){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){if(closed){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){while(!closed){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEOF()){if(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(assemBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(recordBuf==null){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.writeEndBytes();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.writeFieldName(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.write('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.writeEndBytes(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.writeEndByteBuffer();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEOF()){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEOF()){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock()
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)){if(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished&&buffer.isEnabled()){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled()&&hasUnclosedEntry){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128when(!finished&&buffer.isEnabled()){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(true&&buffer.isEnabled()){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){while(buffer.isEnabled()){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished&&buffer.isEnabled()){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){readEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){readEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128writeEOFRecord();buffer.flushBlock();finished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){readEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128readEOFRecord();buffer.flushBlock();finished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128writeEOFRecord();buffer.flushBlock();finished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,blockSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,currBytes);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled()){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(!finished){writeEOFRecord();}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){buffer.flushBlock();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed&&buffer.length>0){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(finished){writeEOFRecord();}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(recordBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(assemBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(recordBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(assemBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhasUnclosedEntry=haveUnclosedEntry;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhasUnclosedEntry=haveUnclosedEntry?writeEOFRecord():null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhasUnclosedEntry=haveUnclosedEntry?writeEOFRecord():LONGFILE_GNU;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhasUnclosedEntry=haveUnclosedEntry?writeEOFRecord():buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhasUnclosedEntry=haveUnclosedEntry||writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhasUnclosedEntry=haveUnclosedEntry();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhasUnclosedEntry=finishEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){readEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){readEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEOF()){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(currName!=null){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!cloned){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled()){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){readEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){readEOFRecord();}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){readEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){readEOFRecord();}else{buffer.flushBlock();wrapped=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){readEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){writeEOFRecord();}else{buffer.closeBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(assemBuf==null){writeEOFRecord();}else{buffer.closeBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(recordBuf==null){writeEOFRecord();}else{buffer.closeBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(assemBuf!=null){writeEOFRecord();}else{buffer.closeBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(recordBuf==null){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)||hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_ERROR){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){finish();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)){start();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_FAILURE)){finish();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_ERROR)){finish();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||hasUnclosedEntry){finish();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&hasUnclosedEntry){finish();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=getCurrentEntry();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=getRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=getNativeObject();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=getEnd();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=getBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=getFullName();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(buffer!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(assemBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(recordBuf!=null&&buffer.length>0){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(recordBuf!=null){buffer.writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(recordBuf!=null){buffer.flushBlock();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(buffer!=null){recordBuf=buffer.readEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=hasUnclosedEntry?writeEOFRecord():null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=finishEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=hasUnclosedEntry();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=hasUnclosedEntry;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=_writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_FILE)&&isEnabled(Feature.QUOTE_FIELD_FILE)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished&&isEnabled(Feature.QUOTE_FIELD_FILE)||isEnabled(Feature.QUOTE_FIELD_FILE)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_FILE)||isEnabled(Feature.QUOTE_FIELD_FILE)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_FILE)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_ERROR)||isEnabled(Feature.QUOTE_FIELD_FILE)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAME)&&isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished&&isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FILE_ERROR)||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,currName.length()-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,currName.length()+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,currName.length()-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,currName.length()-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,currName.length()+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,assemLen.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,assemLen+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,currName.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,assemLen+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(readEOFRecord()){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){buffer.writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!hasUnclosedEntry){buffer.writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(hasUnclosedEntry){buffer.writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){buffer.writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){buffer.writeBlock();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){buffer.writeBlock();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELDS_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELDS_NAMES)||isEnabled(Feature.QUOTE_FIELDS_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELDS_NAMES)&&isEnabled(Feature.QUOTE_FIELDS_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELDS_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished&&isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELDS_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished&&isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEORFecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEORFecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEORFecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasUnclosedEntry){writeEORFecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEORFecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalEOFRecord<K,V>buffer=getIOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalEOFRecord<K,V>buffer=getIRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalEOFRecord<K,V>buffer=getOSF();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalEOFRecord<K,V>buffer=this.getEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalEOFRecord<K,V>buffer=getEORFecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalEOFRecord<K,V>buffer=getEOFRecord(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.write(assemBuf,0,buffer.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.write(assemBuf,0,buffer.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.write(assemBuf,0,buffer.length+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.write(assemBuf,0,buffer.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.write(assemBuf,0,buffer.length+4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.write(assemBuf,0,buffer.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(closed){writeEOFRecord();}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(closed){writeEOFRecord();}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){if(closed){writeEOFRecord();}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEOF()){if(!finished){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEOFRecord()){if(!finished){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEOF()){if(finished){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled()){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(buffer,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,currSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(currName!=null){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(currName==null){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.WRITE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEORFecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES||hasUnclosedEntry)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES||haveUnclosedEntry)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES||hasUnclosedEntry)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished&&isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES||hasUnclosedEntry)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES||hasUnclosedEntry)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES||hasLONGFILE_ERROR)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&hasUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(true){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finish){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEOF()){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_FAILURE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_FAILURE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.AUTO_CLOSE_FAILURE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_FAILURE)||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_FAILURE)&&isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled()&&hasUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(true&&buffer.isEnabled()){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished&&buffer.isEnabled()){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled()&&isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(assemBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(assemBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(assemBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(assemBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(assemBuf!=null){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(recordBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(recordBuf!=null){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(assemBuf==null){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null||buffer.length()==0){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(buffer!=null){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.writeBytes(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock()
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_FAILURE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_FAILURE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_FAILURE||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_ERROR)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_ERROR)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished&&isEnabled(Feature.QUOTE_FIELD_ERROR)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_ERROR||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.length>0){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.length>0&&buffer.charAt(buffer.length-1)!='/'){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.length>0&&buffer.charAt(buffer.length-1)!='n'){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.length>0&&buffer.charAt(buffer.length-1)!=':'){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.length>0&&buffer.charAt(buffer.length-1)!='ufffd'){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.length>0&&buffer.charAt(buffer.length-1)!='r'){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(true&&buffer.length>0){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){!finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(recordBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){if(recordBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(hasUnclosedEntry){if(recordBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(recordBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(recordBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(currName!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){buffer.closeBlock();}else{buffer.closeBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){buffer.writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){readEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){readEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEORFecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_ENUM)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_ERROR,closed)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAME||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_OBJECT_ERROR)||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(closed){writeEOFRecord();}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhasUnclosedEntry=finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhasUnclosedEntry=getUnclosedEntry();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhasUnclosedEntry=haveUnclosedEntry.writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhasUnclosedEntry=doFinally();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){if(recordHalf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){if(recordSize!=0){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_FILE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,recordBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEOF()){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FILE_ERROR)||isEnabled(Feature.QUOTE_FIELD_FILE)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!isEnabled(Feature.QUOTE_FIELD_FILE)&&isEnabled(Feature.QUOTE_FIELD_FILE)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_ERROR)&&isEnabled(Feature.QUOTE_FIELD_FILE)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(currName==null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){buffer.flushBlock();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(finished){writeEOFRecord();}else{buffer.flushBlock();started=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(finished){writeEOFRecord();}else{buffer.flushBlock();finish=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FILE_ERROR)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_FAILURE)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null||buffer.length==0){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null||buffer.length<0){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(hasEOFRecord()){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(readEOFRecord()){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.writeRaw(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.writeEndByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.writeRaw(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.writeEndByte();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_BLOCK_ERROR)){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled(TarBuffer.BLOCK_SIZE)){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled(TarBuffer.DELAYED_EOF_BLOCK)){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_LOAD_FIRST)){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_BLOCK_SIZE)){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FILE_ERROR)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=writeEndEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=doFinally();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=writeUNClosedEntry();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR||hasUnclosedEntry)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.write(assemBuf,0,recordBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.copyCurrentStructure(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,recordBuf.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){readEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock()
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128(recordBuf!=null)?){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_FAILURE)&&haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finish){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){while(!finished){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){while(!finished){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){while(!finished){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){while(!finished){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=getClosedEntry();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=getEndBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=getNegativeEntry();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES||hasUnclosedEntry)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES||hasUnclosedEntry)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES||hasFailedEntry)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(finished&&buffer.length>0){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(hasUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128Thread.currentThread().interrupt();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finish){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES||hasUnclosedEntry)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){buffer.flushBlock();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,currSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FILE_ERROR)||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(assemBuf!=null){buffer.flushBlock();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELDS)||isEnabled(Feature.QUOTE_FIELDS_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELDS)&&isEnabled(Feature.QUOTE_FIELDS_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_LONGFILE_ERROR)){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){while(!closed){if(haveUnclosedEntry){writeEOFRecord();}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){if(recordSize==0){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_BLOCK_ERROR)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled(TarBuffer.DELAYED_EOF_BLOCK)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_LOAD_FIRST)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,assemLen-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(haveEOFRecord){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(haveEOFRecord()){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(haveEOFRecord()){buffer.flushBlock();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.EOF_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){readEOFRecord();}else{writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){readEOFRecord();}else{buffer.flushBlock();System.arraycopy(assemBuf,0,buffer,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){readEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){readEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(!finished){writeEOFRecord();}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finish=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128when(finished&&buffer.isEnabled()){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(finished&&buffer.isEnabled()){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!closed){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){finish();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&hasEOFRecord){finish();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_ERROR)){finish();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_FAILURE)){finish();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&hasThrowable){finish();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_NULL_VALUE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_GNU_VALUE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_NULL_VALUE)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(recordBuf==null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(recordBuf!=null){buffer.flush();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){!finished){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){!finished){writeEOFRecord();}else{buffer.flushBlock();finish=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){!finished){writeEOFRecord();}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_ERROR)||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_DELAYED_ERROR)||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_ERROR)&&isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR)||hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||hasFailedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||hasUnclosedEntry){writeEORFecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||haveUnclosedEntry){writeEORFecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FILE_ERROR)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_ERROR)||isEnabled(Feature.QUOTE_FIELD_NAMES||hasUnclosedEntry)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFR
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FILE_ERROR)||isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalEOFRecord<K,V>buffer=this.releaseEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalEOFRecord<K,V>buffer=getWRITErecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_FAILURE),finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_FAILURE)&&hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEORFecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled(TarBuffer.BLOCK_SIZE)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled(TarBuffer.DELAYED_ERROR)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,assemBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){writeEOFRecord();}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.write(assemBuf,0,assemBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.write(assemBuf,0,this.assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEOFRecord()){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES||hasLONGFILE_GNU)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finish){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(!finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){buffer.writeBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf==null){if(recordBuf!=null){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf==null){if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELDS_NAMES)||isEnabled(Feature.QUOTE_FIELDS_NAMES||isEnabled(Feature.QUOTE_FIELDS_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(readEOFRecord()){readEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(readEOFRecord()>0){readEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(readEOFRecord()){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(readEOFRecord()){readEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){readEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(currName!=null){readEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAME)&&isEnabled(Feature.QUOTE_FIELD_NAME)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null||recordBuf.length==0){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null&&buffer.length>0){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finish){if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(buffer,0,currName.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(currName,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf==null||closed){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhasUnclosedEntry=haveUnclosedEntry.clone();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhasUnclosedEntry=writeUNClosedEntry();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_GNU)&&isEnabled(Feature.AUTO_CLOSE_NULL_VALUE)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_NULL_VALUE)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128when(closed){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=startEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=writeBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=writeUP();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(recordBuf!=null&&buffer.length>0){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(recordBuf!=null){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){if(finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_FILE)||isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(currName!=null){writeEOFRecord();buffer.flushBlock();}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(currName!=null){writeEOFRecord();buffer.flushBlock();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_FAILURE)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR,closed)){finish();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(TarBuffer.DEFAULT_LOAD_FILE_GNU)){finish();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR||isEnabled(Feature.AUTO_CLOSE_GNU)){finish();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf==null||closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){if(finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&hasUnclosedEntry){writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.length>0||buffer.charAt(buffer.length-1)!='/'){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.length>0||buffer.charAt(buffer.length-1)!='n'){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished||buffer.length>0){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_EXTENDS)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(assemBuf!=null||closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(assemBuf!=null){buffer.flush();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!closed){if(closed){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalOutputStreamout=newFileOutputStream(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_ERROR,finished)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&isEnabled(Feature.AUTO_CLOSE_GNU)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.AUTO_CLOSE_GNU)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_COMMA)||isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(finished){if(isEnabled(Feature.AUTO_CLOSE_ERROR)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(finished){if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finish){if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){if(haveUnclosedEntry||writeEOFRecord()){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELDS_FILE)||isEnabled(Feature.QUOTE_FIELD_FILE)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128this.recordBuf=recordBuf;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=getUPDATE();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=getUNClosedEntry();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=getNULL();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalhaveUnclosedEntry=getEndEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.writeBlock(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.writeEndBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.writeRaw('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,assemLen+4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,assemLen+3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128out.write(assemBuf,0,assemSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeERROR();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeIOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128|isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOL();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(haveUnclosedEntry){if(!finished){writeEOFRecord();}other{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.write(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.write('ufffd');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128os.writeRaw("n");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalEOFRecord<K,V>buffer=getEOFRecord(0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128finalEOFRecord<K,V>buffer=getIError();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(currName!=null){readEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(closed){readEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)||closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.AUTO_CLOSE_ERROR)&&hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();completed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(recordBuf!=null){writeEOFRecord();}else{buffer.closeBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_LONGFILE_ERROR)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128While(!finished){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME+1)){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){if(closed){if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(closed){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished){if(closed){if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128if(!finished){if(isEnabled(Feature.QUOTE_FIELD_NAMES||isEnabled(Feature.QUOTE_FIELD_NAMES)){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java128while(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR)){writeEOFRecord();
