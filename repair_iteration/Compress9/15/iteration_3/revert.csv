projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(finished){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(unclosed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(completed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recordBuf!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(cloned){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!cloned){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry||!closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!completed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125finalOutputStreamout=os.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,currName.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(completed||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recorded){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!this.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.haveUnclosed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(cloned||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(cloned||haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||recordBuf.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recordBuf==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||recordBuf.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(haveUnclosed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!this.haveUnclosed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!this.haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!hasUnclosed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hadUnclosed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hadUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recordBuf!=null||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(archives!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=System.out;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||assemBuf.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recordBuf!=null&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||assemBuf.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(cloned&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed&&buffer.isEnabled(TarBuffer.DELAYED_UP)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished){writeEOFRecord();buffer.flushBlock();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||assemBuf.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||assemBuf.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||assemBuf.length>=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||assemBuf.length>=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||assemBuf.length<0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.writeEndBytes(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.writeEndBytes(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.writeEndBytes();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.write(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){if(!finished){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(finished){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125while(!finished&&buffer.isEnabled()){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){if(finished){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry||closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.closed||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry||buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry||buffer.isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=this.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=os.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=getOutputStream().getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=getErrorStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=getOutputStream(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=getInputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!cloned||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.cloned||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry||cloned){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(cloned||hasUnclosedEntry||writeEOFRecord()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125readEOFRecord();buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed){if(!finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed){if(finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125while(!finished){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(finished){writeEOFRecord();buffer.flushBlock();}else{thrownewIOException("Thisarchivescontainsunclosedentries.");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.defaultWriteObject();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.haveUnclosedEntry!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished||!this.haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.haveUnclosedEntry==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.haveUnclosedEntry!=false){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed||!hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(isEOF()||!hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||recordBuf.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(buffer==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recorded||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125finalOutputStreamout=buffer.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125finalOutputStreamout=this.os.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125finalOutputStreamout=TarBuffer.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125finalOutputStreamout=os.getErrorStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125finalOutputStreamout=os.getInputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry||isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry||isEnabled(Feature.AUTO_CLOSE_ENTRY)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry||isEnabled(Feature.AUTO_CLOSE_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(isEOF()||!haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!cloned&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(finished&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!completed&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||buffer.length<unclosedEntry.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||buffer.length()==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedentries.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedentries.>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedentries.size()>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(buffer!=null||buffer.length<unclosedentries.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(buffer!=null||buffer.length()==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(buffer!=null||buffer.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(buffer!=null||buffer.length<unclosedEntryCount){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(buffer!=null||buffer.length<unclosedEntry.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.haveUnclosedentries.>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.haveUnclosedentries.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.archives.size()>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.haveUnclosedentries.size()>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.haveUnclosedentries.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.haveUnclosedentries.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry||!this.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,currName.length()-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,currName.length()+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,currName.length()-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,currName.length()-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,assemLen.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,currName.length()+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125readEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed){if(!finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed){if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||recordBuf.length>=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||recordBuf.length<0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||recordBuf.length<=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||recordBuf.length>=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=TarBuffer.out;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=System.err;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=newbyte[LONGFILE_ERROR];
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=os.out;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=newBufferedOutputStream(System.out);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=newBufferedOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed&&isEnabled(Feature.QUOTE_FIELD_ENTRY)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!cloned&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!completed&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed&&isEnabled(Feature.QUOTE_FIELD_ENABLED)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(isEOF()||!this.haveUnclosed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(isEOF()||!this.haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&isEnabled(Feature.QUOTE_FIELD_ENTRY)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&isEnabled(Feature.QUOTE_FIELD_ENUM)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&isEnabled(Feature.QUOTE_FIELD_ENABLED)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&isEnabled(Feature.QUOTE_FIELD_EXTENDS)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recordBuf==null||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recordBuf==null||haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(buffer!=null||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recordBuf==null||hasUnclosedEntry.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled()&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished||buffer.isEnabled()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled()&&writeEOFRecord()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(finished||buffer.isEnabled()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed&&buffer.isEnabled()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!cloned&&buffer.isEnabled()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed){if(!finished){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){if(!finished){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125readEOFRecord();buffer.flushBlock();finished=false;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(finished){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,assemLen+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,currName.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,assemLen+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DELAYED_UP)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed&&buffer.isEnabled(TarBuffer.DELAYED_UP||buffer.isEnabled(TarBuffer.DELAYED_UP)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DELAYED_UP||buffer.isEnabled(TarBuffer.DELAYED_UP)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed||buffer.isEnabled(TarBuffer.DELAYED_UP)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!cloned&&buffer.isEnabled(TarBuffer.DELAYED_UP)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DELAYED_UP)||buffer.isEnabled(TarBuffer.DELAYED_ENTRY)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed&&buffer.isEnabled(TarBuffer.DELAYED_UP,currName)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(finished||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(completed&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){if(!finished){writeEOFRecord();buffer.flushBlock();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed){if(!finished){writeEOFRecord();buffer.flushBlock();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){if(finished){writeEOFRecord();buffer.flushBlock();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(finished){writeEOFRecord();buffer.flushBlock();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed){writeEOFRecord();buffer.flushBlock();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125readEOFRecord();buffer.flushBlock();closed=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||recordBuf.length>>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!this.hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.hasUnclosedEntry.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.hasUnclosedEntry.isEnabled()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.hasUnclosedEntry.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(unclosed<=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(archives==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(archives!=null||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(unclosedentries!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(archives==null||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(cloned&&haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.cloned||haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!cloned||haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(cloned||!hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR,currName)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed&&buffer.isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished||buffer.isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!cloned&&buffer.isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(finished||buffer.isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed||buffer.isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed){if(!finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){if(!finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125readEOFRecord();buffer.flushBlock();finished=true;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){if(finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(buffer!=null&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry||!finished){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry||!cloned){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.write('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.defaultWriteObject();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.writeEndBytes(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&hasUnclosedEntry||buffer.length()>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hadUnclosedEntry||writeEOFRecord()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||buffer.length<unclosedEntry.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!completed&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||assemBuf.length<=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!cloned&&haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(cloned||assemLen>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125finalOutputStreamout=os.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125finalOutputStreamout=recordBuf.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125finalOutputStreamout=os.openStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!hasUnclosedEntry&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed&&isEnabled(Feature.QUOTE_FIELD_ENUM)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!haveUnclosedEntry&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!recorded&&isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed){writeEOFRecord();buffer.flushBlock();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hadUnclosed){writeEOFRecord();buffer.flushBlock();closed=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||assemBuf.length<0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!recorded){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!hasUnclosedEntry&&buffer.isEnabled(TarBuffer.DELAYED_UP)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!haveUnclosedEntry&&buffer.isEnabled(TarBuffer.DELAYED_UP)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!recordBuf.isEnabled(TarBuffer.DELAYED_UP)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed&&buffer.isEnabled(TarBuffer.DELAYED_UP,closed)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed&&buffer.isEnabled(TarBuffer.DELAYED_UP,completed)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recordBuf!=null||haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recordBuf==null||containsUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||!hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.writeRaw('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.writeEndByte();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.write('ufffd');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hadUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hadUnclosed){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||recordBuf!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recordBuf==null||recordBuf.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.haveUnclosedEntry==false){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recordBuf==null&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recordBuf==null&&haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.cloned&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!hasUnclosedEntry&&buffer.isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR)||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR,closed)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!cloned&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!cloned&&buffer.isEnabled(TarBuffer.DEFAULT_LOAD_FIRST)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(haveUnclosedEntry){if(!finished){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||!hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.archives.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed&&haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,recordBuf.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,recordBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.writeRaw(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.writeRaw(assemBuf,0,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.writeRaw(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished){writeEOFRecord();buffer.closeBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_LOAD_FILE_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_FILE_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_LONGFILE_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_LOAD_FILE)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_LOAD_FIRST)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,assemLen-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hadUnclosedEntry||buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hadUnclosedEntry||buffer.isEnabled(Feature.QUOTE_FIELD_NAME)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(haveUnclosedEntry||!closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!hasUnclosedEntry||!closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!hasUnclosedEntry||!finished){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&hasUnclosedEntry||buffer.isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&hasUnclosedEntry||buffer.isEnabled(TarBuffer.DEFAULT_LOAD_FIRST)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(isEOFRecord()||!haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(isEOFRecord()||!hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=getOutputStream(),buffer.writeEndBytes();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=getOutputStream(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||recordBuf.length<0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry||finished){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(haveUnclosedEntry){if(!finished){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(haveUnclosedEntry){writeEOFRecord();buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.haveUnclosedentries!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.haveUnclosedentries==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(archives!=null||haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(haveUnclosedEntry){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished){buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(haveUnclosedEntry){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&isEnabled(Feature.QUOTE_FIELD_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!hasUnclosedEntry||buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=newFileOutputStream(System.out);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=newFileOutputStream(LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||recordBuf.length<unclosedEntry.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||recordBuf.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||recordBuf.length<unclosedentries.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(finished){writeEOFRecord();}else{buffer.flushBlock();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,assemBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recordBuf!=null&&haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(cloned&&hasUnclosedEntry.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||!finished){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||!closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||empty){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(hasUnclosedEntry||isEnabled(Feature.QUOTED_ENTRY)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=newFileOutputStream(LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(archives!=null&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(archives!=null||unclosedentries.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(archives!=null||containsunclosedentries."){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(archives!=null&&hasUnclosedentries.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recorded&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(recorded&&haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR,hasUnclosedEntry)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR,unclosed)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.hasUnclosedEntry."){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.hasUnclosedEntry.>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.haveUnclosedEntry.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(cloned||!finished){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(cloned||writeEOFRecord()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(finished||haveUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.write(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.writeRaw("n");
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||!finished){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||empty){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||!closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.write(assemBuf,0,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125os.write(assemBuf,0,assemBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&hasUnclosedEntry||writeEOFRecord()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(finished){writeEOFRecord();}else{buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||recordBuf.length<unclosedEntry.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf==null||recordBuf.length<unclosed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=getOutputStream(),buffer.writeBlock());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=getOutputStream(),buffer.getCharset());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125OutputStreamout=getOutputStream(),buffer.flushBlock());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(finished||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.haveUnclosedEntry==closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(this.haveUnclosedEntry==finished){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(buffer!=null||buffer.length<unclosed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(buffer!=null&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,buf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||assemBuf.length<unclosedEntry.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||assemBuf.length<unclosed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null||assemBuf.length<2){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!cloned&&isEnabled(TarBuffer.DEFAULT_ENTRY_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(finished){buffer.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DEFAULT_UPDATE)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(assemBuf!=null&&assemBuf.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!closed&&buffer.isEnabled(TarBuffer.DELAYED_ENTRY)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DELAYED_UNCATE)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished&&buffer.isEnabled(TarBuffer.DELAYED_ENTRY)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,assemLen+4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125out.write(assemBuf,0,assemLen+3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125if(!finished){finish();buffer.flushBlock();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java125finalOutputStreamout=os.readLine();
