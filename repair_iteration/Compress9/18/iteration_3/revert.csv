projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.flushBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,buf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.endBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.setLength(0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){buffer.append(currName);}else{out.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){buffer.append(currName);}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null||currName.length()==0){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){buffer.append(currName);}else{buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(LONGFILE_ERROR,LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(LONGFILE_ERROR,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append('n');}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append('n');}else{buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append('n');}else{out.write(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(buffer[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(recordBuf[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(lONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(lONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBytes(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen+4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemLen+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currName.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemLen+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemLen+4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,blockSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,currBytes);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,currSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,writeEOFRecord());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finishBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buff.endBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,buf.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,buf.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,buf.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,buf.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,blockSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currSize-currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeFieldName(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.endLong(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,recordBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('ufffd');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(':');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('/');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(0,LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.release();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,currSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemLen-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){writeEOFRecord();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130os.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){writeEOFRecord();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.close();}else{writeEOFRecord();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130os.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130finalOutputStreamout=buffer.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('n','n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('N');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('n','/');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('n','-');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.endArchive();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.endBlock(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.startBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(',');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemLen,0,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();++i){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();++i){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();++i){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen+3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currBytes);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeString(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemLen/1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemLen*2-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBytes(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBytes(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append('n');}else{out.write(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){buffer.append('n');}else{out.write(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(!finished){buffer.append('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(!closed){buffer.append('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,fileMode);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(haveUnclosedEntry){if(currName!=null){buffer.append(currName);}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){if(currName!=null){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){if(currName!=null){buffer.append(currName);}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(haveUnclosedEntry){if(currName!=null){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null||currName.length()==0){buffer.append(currName);}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){if(currName!=null){buffer.append(currName);}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,blockSize-currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemLen-currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,recordSize-currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currSize/currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currSize-blockSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currName-currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130finalOutputStreamout=this.buffer.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130finalOutputStreamout=buffer.getInputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130OutputStreamout=buffer.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130finalOutputStreamout=buffer.defaultOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130finalOutputStreamout=buffer.openStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130finalOutputStreamout=buffer.getErrorStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.release(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finish){if(currName!=null){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){if(currName!=null){buffer.append(currName);}else{buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){if(currName!=null){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null||currName.length()==0){buffer.append(currName);}else{buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(0,LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(0,LONGFILE_ERROR,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(0L,LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(0,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(recordBuf!=null){buffer.append(recordBuf);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(recordBuf!=null){buffer.append(recordBuf);}else{out.write(assemBuf,0,recordSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(recordBuf!=null){buffer.append(recordBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(recordBuf!=null){buffer.append(recordBuf);}else{System.arraycopy(assemBuf,0,assemBuf,0,recordBuf.length);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(recordBuf!=null){buffer.append(recordBuf);}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(recordBuf!=null){buffer.append(recordBuf);}else{out.write(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeString(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeString(assemBuf,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeInt(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeInt(assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemLen+3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemLen*2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemLen*4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,shortFileMode);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,blockSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('-');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0,blockSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0,recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0,assemSize,currBytes);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0,assemSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append('N');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append('N');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append('N');}else{buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append('N');}else{out.write(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append('N');}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){buffer.append('N');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,blockSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currSize/1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currSize+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null){for(inti=0;i<currName.length();i++){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null||currName.length()==0){for(inti=0;i<currName.length();i++){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){for(inti=0;i<currName.length();i++){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append('N');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append('N');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null){for(inti=0;i<currName.length();i++){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){for(inti=0;i<currName.length();i++){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append(currName.substring(0,currName.length()-currName.length())
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append(currName.substring(0,currName.length()-currName.length()
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,buf.length/1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemBuf.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<recordBuf.length();i++){buffer.append(recordBuf[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null){for(inti=0;i<recordBuf.length();i++){buffer.append(recordBuf[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<recordBuf.length();i++){buffer.append(recordBuf[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(recordBuf[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){for(inti=0;i<recordBuf.length();i++){buffer.append(recordBuf[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){if(currName!=null){for(inti=0;i<recordName.length();i++){buffer.append(recordBuf[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<recordName.length();i++){buffer.append(recordBuf[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,recordBuf.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,recordBuf.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,recordBuf.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,recordBuf.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){writeEOFRecord();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!finished){writeEOFRecord();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){if(!finished){writeEOFRecord();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!finished){writeEOFRecord();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!finished){writeEOFRecord();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(finished){writeEOFRecord();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,blockSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,recordSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(currName,LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(currName,LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(LONGFILE_ERROR,currName,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(LONGFILE_ERROR,currName,LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.release(currName,LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append(',');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append(',');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append(',');}else{out.write(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append(',');}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(','+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){buffer.append(',');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buff.finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buff.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130bug.endBlock();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('n','-'+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('N','-');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0,assemLen+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0,assemLen,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0,assemLen,writeEOFRecord());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0,assemLen+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,blockSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemSize+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemSize*1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemSize+4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(lONGFILE_ERROR,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(currName,LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(lONGFILE_GNU,LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!finished){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(!finished){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(finished){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){if(!finished){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){!finished){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){for(inti=0;i<currName.length();++i){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){for(inti=0;i<currName.length();++i){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null){for(inti=0;i<currName.length();++i){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();++i){buffer.append(currName.charAt(i+1));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();++i){buffer.append(currName.charAt(i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();++i){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.endLong(lONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeLong(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(lONGFILE_GNU,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){for(inti=0;i<currName.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null){for(inti=0;i<currName.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){for(inti=0;i<currName.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){buffer.append(currName[i]);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<buffer.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.setBlock(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeFieldName(lONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeFieldName(LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeFieldName(lONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeFieldName(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeFieldName(LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeFieldName(longFileMode);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,recordSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,currBytes-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();++i){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){for(inti=0;i<currName.length();++i){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null){for(inti=0;i<currName.length();++i){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();++i){buffer.append(currName.substring(0,currName.length()-currName.length())
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();++i){buffer.append(buffer.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();++i){buffer.append(currName.substring(0,currName.length()-currName.length()
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){buffer.close();}else{writeEOFRecord();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){if(!finished){buffer.close();}else{writeEOFRecord();writeEOFRecord();}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(!finished){buffer.close();}else{writeEOFRecord();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){if(!finished){buffer.close();}else{writeEOFRecord();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){if(finished){buffer.close();}else{writeEOFRecord();writeEOFRecord();}}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){if(finished){buffer.close();}else{writeEOFRecord();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null){for(inti=0;i<currName.length();i++){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){for(inti=0;i<currName.length();i++){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append("/");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append('/');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null){for(inti=0;i<currName.length();i++){buffer.append("/");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemLen*1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen*1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currBytes+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen*3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append(':');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append(':');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append(':');}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append(':');}else{out.write(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){buffer.append(':');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){buffer.append(':');}else{out.write(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();++i){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){for(inti=0;i<currName.length();++i){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null){for(inti=0;i<currName.length();++i){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){for(inti=0;i<currName.length();++i){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<str.length();++i){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){writeEOFRecord();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130writeEOFRecord();writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130readEOFRecord();writeEOFRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){if(!finished){writeEOFRecord();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){writeEOFRecord();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,recordSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,currBytes+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,currBytes-currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append('');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append('');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append('');}else{out.write(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){buffer.append('');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append('');}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append('');}else{buffer.append('');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.endBlock(LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.endBlock(lONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.endBlock(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finishBlock(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,currName.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130os.write('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130os.write(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130os.write(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130os.writeEnd();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130os.defaultReader().flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen*4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemBuf.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemBuf.length+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemBuf.length+4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){if(currName!=null){buffer.append(currName);}else{out.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130out.write(assemBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){if(currName!=null){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,recordSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i+1));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){buffer.append(currName.charAt(i));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130os.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130os.writeEndObject();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBytes(assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBytes(assemBuf,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBytes(lONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBytes(lONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(haveUnclosedEntry){buffer.append('n');}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append('n');}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){buffer.append('n');}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130after(closed){buffer.append('n');}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(!finished){buffer.append('n');}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,currSize+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,currSize/1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('/'+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append('/');}else{out.write(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append('/');}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finishArchive();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finishArchive(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.length()==0){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null||currName.length()==0){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null||currName.length()>=0){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null||currName.length()>0){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null||currName.length()<0){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){if(closed){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(closed){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){buffer.append('n');}else{buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append('n');}else{buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.AUTO_CLOSE_ERROR)){if(closed){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_NON_NULL_OBJECT)){if(closed){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,shortFileMode);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,blockSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_FIELD_NAMES)){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)&&isEnabled(Feature.QUOTE_FIELD_NAMES)){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAME)||isEnabled(Feature.QUOTE_FIELD_NAME)){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)||isEnabled(Feature.QUOTE_NON_NULL_OBJECT)){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currName.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currName.length+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currName.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currName.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currName.length+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(lONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(LONGFILE_GNU,LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.release(LONGFILE_ERROR,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemLen,0,blockSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemLen,0,assemBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(blockSize,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemSize,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(lONGFILE_ERROR,LONGFILE_TRUNCATE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(lONGFILE_ERROR,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append('n','n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('n','A');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(lONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('n','/'+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('N','/');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write('n',0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write('n'+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write('n','/');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write('n','-');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,writeBytes());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,writeUTF8());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,writeERROR());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,writeLongFileMode());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,currName,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,currName,writeEOFRecord());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,currName,true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemLen+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemLen-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(haveUnclosedEntry){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(haveUnclosedEntry){writeEOFRecord();}else{finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(haveUnclosedEntry){writeEOFRecord();}else{thrownewIOException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(haveUnclosedEntry){writeEOFRecord();}else{buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(haveUnclosedEntry){writeEOFRecord();}else{buffer.writeBytes(assemBuf,0,assemLen);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(haveUnclosedEntry){writeEOFRecord();}else{buffer.append(LONGFILE_GNU);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen*2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null){for(inti=0;i<currName.length();i++){buffer.append(buffer[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append(buffer[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null||currName.length()==0){for(inti=0;i<currName.length();i++){buffer.append(buffer[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){for(inti=0;i<currName.length();i++){buffer.append(buffer[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<buffer.length();i++){buffer.append(buffer[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){buffer.append(buffer[i]);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen/1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen*2-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null||currName.length()==0){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null||currName.length()==0){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,writeLONGFILE_ERROR());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,writeHELP());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,writeUTF());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(LONGFILE_ERROR,LONGFILE_TRUNCATE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(LONGFILE_ERROR,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.endLong(currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.endInt(currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!closed){if(currName!=null){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append(currName);}else{out.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0,assemLen-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0,recordBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null||currName.length()==0){for(inti=0;i<currName.length();i++){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null||currName.length()==0){for(inti=0;i<currName.length();i++){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null||currName.length()!=0){for(inti=0;i<currName.length();i++){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){buffer.append(currName);for(inti=0;i<currName.length();i++){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,buf.length-3);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('n','-'+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.endRecord();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.endInput();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(currName,LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(currName,LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.reset(currName,LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130os.skipChildren();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130os.finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130os.write(buffer,0,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(haveUnclosedEntry){if(!finished){buffer.close();}else{writeEOFRecord();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.close();}else{writeEOFRecord();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finish){buffer.close();}else{writeEOFRecord();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(haveUnclosedEntry){if(finished){buffer.close();}else{writeEOFRecord();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,buf.length*1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen/2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,currName,LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finish){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(finished){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)){!finished){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(',').append(recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(',').append('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(',').append(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(',').append(':');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(',').append('');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finish){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,recordBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){for(inti=0;i<currName.length();++i){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();++i){buffer.append(currName[i]+",");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();++i){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.setLength(0L);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(0,LONGFILE_ERROR,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(0,LONGFILE_LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(0,LONGFILE_ERROR+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(0,LONGFILE_TRUNCATE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemBuf.length-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemBuf.length-4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,recordBuf.length-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currSize-recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130after(buffer,finished){buffer.append('n');}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130after(buffer,finish){buffer.append('n');}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0,writeEOFRecord());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currSize-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('$','/');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){for(inti=0;i<currName.length();++i){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){for(inti=0;i<currName.length();++i){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append(currName);}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null){buffer.append(currName);}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append(currName);}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.release(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemLen/2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append(currName);}else{buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finish){buffer.append(currName);}else{buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){buffer.append(currName);}else{buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null||currName.length()==0){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<len.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.finish();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<buffer.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('/','/');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('/',0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null||currName.length()==0){for(inti=0;i<currName.length();i++){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null||currName.length()!=0){for(inti=0;i<currName.length();i++){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeFieldName(assemBuf,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeFieldName(assemName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeUTF(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeInt(currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAME)&&isEnabled(Feature.QUOTE_FIELD_NAME)){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('n','n'+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('n','r');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen+5);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write('n','n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemLen/4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(':'+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(':').append(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(':').append(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(':').append(recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!closed){buffer.append('n');}else{out.write(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(assemBuf,recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(assemBuf,0,recordBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(assemBuf,0,recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBytes(LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBytes(assemName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<currName.length();i++){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){for(inti=0;i<currName.length();i++){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(currName.substring(0,currName.length()-currName.length()));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<currName.length();i++){buffer.append(currName.substring(0,currName.length()-currName.length())
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finish){writeEOFRecord();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){currName=buffer.toString();for(inti=0;i<currName.length();i++){buffer.append(buffer[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null||currName.length()==0){for(inti=0;i<currName.length();i++){buffer.append(buffer[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,recordBuf.length+2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemBuf.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('N'+'/');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('N').append('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('N','n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('N'+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buff.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemLen,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemLen,0,recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(''+currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append('');}else{writeEOFRecord();writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append('');}else{buffer.append('');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append('');}else{buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append('');}else{writeEOFRecord();writeEOFRecord();finished=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(haveUnclosedEntry){writeEOFRecord();}else{buffer.append("n");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(haveUnclosedEntry){writeEOFRecord();}else{buffer.writeRecord(assemBuf,0,assemLen);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<currName.length();++i){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){for(inti=0;i<currName.length();++i){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAME)){for(inti=0;i<currName.length();++i){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)){for(inti=0;i<currName.length();++i){buffer.append(currName.substring(0,currName.length()-currName.length())
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(']');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen/4);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAME)){if(closed){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)){if(closed){buffer.append('n');}else{buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,recordSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,currSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,currSize+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){for(inti=0;i<currName.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(currName[i]+",");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<len.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<recordBuf.length();i++){buffer.append(REcordBuf[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<records.length();i++){buffer.append(recordBuf[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<recordBuf.length();i++){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<recordBuf.length();i++){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130finalOutputStreamout=buffer.releaseOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130finalOutputStreamout=buffer.getOutputStream(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130finalOutputStreamout=buffer.finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,recordLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,recordSize-currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130os.delete(buffer,0,buffer.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130os.write('ufffd');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){writeEOFRecord();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(haveUnclosedEntry){if(!finished){writeEOFRecord();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finish){writeEOFRecord();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(isEnabled(Feature.QUOTE_FIELD_NAMES)){!finished){writeEOFRecord();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('N').append(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currSize*1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.finish(assemBuf,0,assemSize-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBytes(currName,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBytes(currName,LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,currName,false);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemLen,0,currBytes);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(recordBuf!=null){buffer.append(recordBuf);}else{buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(assemBuf,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(recordBuf!=null){buffer.append(recordBuf);}else{buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(')');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finish){for(inti=0;i<currName.length();i++){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.length()>0){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.endsWith(".js")){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.endsWith("/")){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.endsWith(".zip")){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append('');}else{buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('').append(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(",");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){buffer.append(currName.substring(0,currName.length()-1));
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.length()>0){buffer.append(currName);}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){buffer.append(currName);}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeFieldName(assemBuf,0,blockSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeFieldName(buffer,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeFieldName(name);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.endsWith(".js")){for(inti=0;i<currName.length();i++){buffer.append('/');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130os.write(assemBuf,0,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finish){for(inti=0;i<currName.length();++i){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();++i){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();++i){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();++i){buffer.append(currName.charAt(0));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(currName).append('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finish){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(i));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(currName.charAt(0));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.length()>0){buffer.append(currName);}else{buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finish){for(inti=0;i<currName.length();i++){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){currName=currName.substring(0,currName.length()-currName.length());
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();i++){buffer.append(currName.substring(0,currName.length()*currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(currName,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append(recordBuf,0,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.length()>0){for(inti=0;i<recordBuf.length();i++){buffer.append(recordBuf[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){buffer.append(recordBuf[i]);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName==null){for(inti=0;i<currName.length();i++){buffer.append(recordBuf[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<recordBuf.length();i++){buffer.append(RecordBuf[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130Os.write(buffer,0,os.length);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){writeERROR();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){writeFRecord();writeEOFRecord();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.append('/').append(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,currBytes-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(closed){buffer.append('n');}else{writeEOFRecord();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(lONGFILE_GNU,LONGFILE_TRUNCATE);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemLen-2);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buff.append('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write('');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append(':');}else{buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.append(':');}else{buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(!finished&&buffer.length>0){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(!finished&&buffer.length>0){buffer.append('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,currSize,LONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null||currName.length()<=0){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();++i){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finish){for(inti=0;i<currName.length();++i){buffer.append(currName[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.length()>0){buffer.append(currName);}else{out.write(assemBuf,0,currSize);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(assemLen>0){if(currName!=null){buffer.append(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(closed){buffer.append('n',currName);}else{out.write(currName);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.remove(currName,LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.endLong(lONGFILE_GNU);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.append(buffer[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.length()>0){buffer.append(buffer[i]);}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finished){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(!finished){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemSize/1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(closed){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(!finished){buffer.append('n');}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130finalOutputStreamout=buffer.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130finalOutputStreamout=buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();++i){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(finish){for(inti=0;i<currName.length();++i){buffer.append(currName.substring(0,currName.length()-currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();++i){buffer.append(currName.substring(0,currName.length()*currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null){for(inti=0;i<currName.length();++i){buffer.append(currName.substring(0,currName.length()+currName.length()));}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,assemLen+6);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130if(currName!=null&&currName.length()>0){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.endsWith(".js")){for(inti=0;i<currName.length();i++){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130while(currName!=null&&currName.length()>0){currName=currName.substring(0,currName.length()-1);buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.writeBlock(assemBuf,0,assemSize-currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.delete(lONGFILE_GNU,LONGFILE_ERROR);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,currBytes,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,currBytes,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,recordSize,currBytes);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java130buffer.write(assemBuf,0,buf.length/2);
