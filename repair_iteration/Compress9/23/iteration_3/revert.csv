projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recordBuf.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||out==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&out==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!cloned&&buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||recordBuf!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffered!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||buffer.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(assemBuf!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry&&buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer.length()<LONGFILE_GNU){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer.length()==assemLen){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer.isEnabled()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||buffer.length()==assemLen){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null||!recordBuf.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recordBuf.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recordBuf.closed&&buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recordBuf.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recordBuf.closed||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||buffer.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||buffer==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer.length()==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.recordBuf.clone();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144os.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.recordBuf.get(currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.assemBuf.clone();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144os.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.blockSize.clone();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144this.recordBuf.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recordBuf.closed&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144out.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144OutputStreamout=this.recordBuf.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed){buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry||out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!cloned){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hadUnclosed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||buffer.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&buffer==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&buffer.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&buffer!=null&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&buffer!=null&&out.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null&&!recordBuf.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recordBuf.closed||out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||isEnabled(Feature.AUTO_CLOSE_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recorded){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(this.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144while(!closed){buffer.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144while(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry&&buffer==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||out==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.recordBuf.toArray(newTarBuffer[this.recordBuf.size()]);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.recordBuf.get(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.recordBuf.get();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.recordBuf.toArray(newTarBuffer[this.recordBuf.length]);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)recordBuf.clone();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(os!=null){os.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(os!=null){os.flush();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(os!=null){os.flush();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(os!=null){os.flush();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144os.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||!recordBuf.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(assemBuf!=null||!recordBuf.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer==null||!recordBuf.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null||!recordBuf.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null&&!recordBuf.closed&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf==null&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null||out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(shutdown){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.recordBuf.get(assemName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.recordBuf.get(assemBuf,currName);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.recordBuf.get(currName+1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.recordBuf.get(assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null&&closed!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed&&buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffered||closed!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hadUnclosedEntry&&buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||out.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&buffer.length>=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||buffer.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&buffer.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer.length()==assemLen){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||buffer.length()==assemLen){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffered||buffer.length()==assemLen){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed&&buffer.length()==assemLen){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer.length()==LONGFILE_GNU){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer==null||buffer.length()==assemLen){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(assemLen||buffer.length()==closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!finished&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry&&isEnabled(Feature.AUTO_CLOSE_SOURCE)||hasMoreGuaranteed()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry&&buffer.length()==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||buffer.length()==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||buffer.length()==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||out.length()==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer.length()==0||hasUnclosedEntry||buffer.length()==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry&&buffer.length()==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)assemBuf.clone();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.assemBuf.toArray(newTarBuffer[this.assemBuf.size()]);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.assemBuf.get(buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.assemBuf.toArray(newTarBuffer[this.assemBuf.length]);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.assemBuf.get();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||out==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer==null||out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||out.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null&&buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144this.recordBuf.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144this.recordBuf.closeAll();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144this.recordBuf.finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144this.recordBuf.release();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144this.recordBuf=null;
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144this.recordBuf.close(out);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosed||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry&&buffer.length()<LONGFILE_GNU){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer.length()==LONGFILE_GNU){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry&&buffer.length()<LONGFILE_GNU){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer.length()>LONGFILE_GNU){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||buffer.length()<LONGFILE_GNU){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||buffer.length()<LONGFILE_GNU){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.blockSize.get();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.blockSize.get(buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.blockSize.reset();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.blockSize.remove(0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.blockSize.toArray(newTarBuffer[this.length]);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.blockSize.getBytes();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!cloned||out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry&&buffer.length()==assemLen){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(assemLen||buffer.length()==LONGFILE_GNU){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||buffer.length()==assemLen){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer.length()==assemBuf.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffered||out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144OutputStreamos=getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144while(!closed){out.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144OutputStreamout=this.recordBuf.openStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144OutputStreamout=this.recordBuf.toByteArray();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144OutputStreamout=this.recordBuf.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144OutputStreamout=this.recordBuf.defaultOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144OutputStreamout=this.recordBuf.releaseOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144OutputStreamout=this.recordBuf.getInputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&out.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&out.size>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&out.read()>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&out.isEnabled()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&buffer.length>0&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&out!=null&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||buffer!=null&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null&&!closed&&buffer!=null&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!cloned&&buffer!=null&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed&&buffer!=null&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&out!=null&&out.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144out.flush();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!finished){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144out.write(assemBuf,0,assemLen);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!finished){out.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!finished){out.close();}else{thrownewIllegalArgumentException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!finished){out.close();}else{thrownewIllegalStateException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry&&isEnabled(Feature.AUTO_CLOSE_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry&&isEnabled(Feature.AUTO_CLOSE_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||isEnabled(Feature.AUTO_CLOSE_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||isEnabled(Feature.AUTO_CLOSE_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(isEnabled(Feature.AUTO_CLOSE_ERROR)||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||isEnabled(Feature.AUTO_CLOSE_ERROR,currName)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!finished&&isEnabled(Feature.AUTO_CLOSE_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry){if(!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry){if(!closed){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!finished){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry){if(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry&&buffer.isEnabled()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry&&buffer.isEnabled()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||buffer.isEnabled()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||buffer.isEnabled()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry||buffer.isEnabled()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffered||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(cloned){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!cloned&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!cloned&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||assemBuf!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(assemBuf!=null||buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hadUnclosedEntry&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null&&!closed&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffered||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||closed==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||closed>=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null||!recordBuf.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||!recordBuf.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf==null||!recordBuf.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null&&!recordBuf.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||closed||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffered||closed||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||out.close()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||buffer.length<=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||buffer.length>=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer==null||buffer.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer==null||buffer.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||buffer.length<0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recorded&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recorded||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recorded&&buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recorded){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||out.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||buffer.length<=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&out.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&out.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&out.length>=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&out.read()!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf==null&&buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null&&!recordBuf.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffered!=null||out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||closed==false){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null&&recordBuf!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||buffer.length==assemBuf.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||recordBuf==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recordBuf.closed||out==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf==null||out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null&&!closed&&out==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||out==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||buffer!=null&&out.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(out!=null&&!closed&&buffer!=null&&out.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!cloned&&buffer!=null&&out.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed&&out!=null&&out.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||buffer!=null&&out.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||buffer.length()==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry){if(!closed){buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed){buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144while(!closed){buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry){buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144while(!closed){buffer.close();out.close();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry){if(!cloned){buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||!recordBuf.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf==null||!recordBuf.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recordBuf.length>0||buffer.charAt(recordBuf.length-1)!='/'){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null&&!recordBuf.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!this.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||this.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(this.haveUnclosed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(assemBuf!=null&&!recordBuf.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null&&!recordBuf.isClosed()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(os!=null){os.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(os!=null){os.close();}else{buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(os!=null){os.close();}else{thrownewIllegalArgumentException("");}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(os!=null){os.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf==null||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recordBuf.closed||buffer==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recordBuf.close()||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!cloned||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(cloned||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null&&recordBuf.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(assemBuf!=null&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null&&out.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffered!=null&&recordBuf.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&buffer.length()==assemLen){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(assemLen||buffer.length()==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||!closed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosed){buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry){buffer.close();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed){buffer.flush();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry){buffer.flush();out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed){buffer.close();out.flush();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(haveUnclosedEntry&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144OutputStreamout=this.recordBuf.finish();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144OutputStreamout=this.recordBuffer.getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||buffer==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(haveUnclosedEntry&&buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(this.recordBuf!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null||buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&buffer.isEnabled()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hadUnclosedEntry&&buffer.isEnabled()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||out.isEnabled()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!cloned&&buffer.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&isEnabled(Feature.AUTO_CLOSE_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(isEnabled(Feature.AUTO_CLOSE_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||isEnabled(Feature.AUTO_CLOSE_ERROR)&&buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf==null||!recordBuf.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&buffer==null&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(os!=null){os.flush();}else{buffer.close();out=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(os!=null){os.flush();}else{buffer.close();out=false;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed){out.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144out.write('n');
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144out.write(assemBuf,0,assemSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||!closed||buffer.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||out.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||!closed||out.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.recordBuf.get(currName-1);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.recordBuf.get(assemBuf,currSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(os!=null){os.close();}else{buffer.close();out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(os!=null){os.close();}else{buffer.close();out=true;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(os!=null){os.close();}else{buffer=null;out=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hadUnclosedEntry&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&out!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffered==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(paint!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recordBuf.closed&&out==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&out.isEmpty()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry&&buffer.length()==assemLen){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hadUnclosedEntry&&buffer.length()==assemLen){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144this.recordBuf.close(true);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144this.recordBuf.close(buffer);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer.length()!=LONGFILE_GNU){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hadUnclosedEntry&&buffer.length()<LONGFILE_GNU){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144OutputStreamout=getOutputStream();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry){buffer.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&hasUnclosedEntry&&isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry&&isEnabled(Feature.AUTO_CLOSE_SOURCE)||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer==null||recordBuf!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(assemBuf!=null||recordBuf!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hadUnclosedEntry&&buffer.length()==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(haveUnclosedEntry||buffer.length()==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.blockSize.toArray(newTarBuffer[this.bufferSize.size()]);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null&&buffer.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!cloned&&out!=null&&out.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&buffer==null&&out.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(out!=null||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recorded||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recordBuf.length>0||buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(assemBuf==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(assemBuf!=null||out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(assemBuf!=null||buffer.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(assemBuf!=null||buffer.length<0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!hasUnclosedEntry||out==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!cloned&&out==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf==null&&!recordBuf.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(out!=null&&buffer!=null&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null&&!closed&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recordBuf.closed&&out!=null&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null&&recordBuf.closed!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer.length()<=LONGFILE_GNU){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffered||buffer.length()<LONGFILE_GNU){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer.isEnabled(TarBuffer.DEFAULT_CLOSE_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer.isEnabled(TarBuffer.DEFAULT_BLOCK_ERROR)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer.isEnabled(TarBuffer.DEFAULT_CLOSED)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer==null||buffer.length<=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer==null||buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer==null||buffer.length()==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144OutputStreamout=this.recordBuf.getOutputStream(assemBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry&&buffer.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer.length()==0||hasUnclosedEntry){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.recordBuf.get(currName,0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144while(!closed){out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf||out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffered!=null&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(os!=null){os.close();}else{buffer=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(os!=null){os.close();}else{buffer=null;out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(assemBuf!=null&&out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(assemBuf!=null&&out!=buffer.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.recordBuf.toArray(newTarBuffer[this.recordSize]);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.recordBuf.get(recordBuf);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.recordBuf.toArray(newTarBuffer[this.bufferSize]);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||hasUnclosedEntry||buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null&&buffer==null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffered!=null&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||isEnabled(Feature.AUTO_CLOSE_ERROR)||isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||isEnabled(Feature.AUTO_CLOSE_ERROR,closed)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null&&!recordBuf.closed||out!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null&&!closed||buffer.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null&&!closed&&buffer.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||buffer.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed&&buffer!=null&&out.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null&&!recordBuf.close()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null&&!recordBuf.release()){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.blockSize.toArray(newTarBuffer[this.bufferSize]);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.blockSize.remove(this.blockSize);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||isEnabled(Feature.AUTO_CLOSE_SOURCE)){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(this.releaseUnclosed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||buffer.length!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffered!=null&&!recordBuf.closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed&&out!=null&&buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)this.assemBuf.remove(0);
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144TarBufferbuffer=(TarBuffer)super.buffer.clone();
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(hasUnclosedEntry||buffer.length==0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(this.recordBuf!=null){this.recordBuf.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(this.recordBuf!=null){this.recordBuf.close();}else{buffer=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(this.recordBuf!=null){this.recordBuf.close();}else{out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(this.recordBuf!=null){this.recordBuf.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(this.recordBuf!=null){this.recordBuf.close();}else{System.err.println("TarBufferclosed:"+this.recordBuf.toString());}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(this.recordBuf!=null){this.recordBuf.close();}else{System.arraycopy(assemBuf,0,recordBuf,0,assemBuf.length);out.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed&&out.size!=0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null){out.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordBuf!=null){out.close();}else{buffer=null;}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(recordSize>0){out.close();}else{buffer.close();}
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(closed||buffer.length()>assemLen){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer.length==0||!closed){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||buffer.length<2){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffer!=null||buffer.length<2||buffer.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffered!=null&&buffer!=null){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(buffered!=null&&out.length>0){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!closed||!recordBuf.length){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recordBuf.length>0||buffer.charAt(buffer.length-1)!='/'){
projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java144if(!recordBuf.length>0||buffer.charAt(buffer.length-1)!='n'){
