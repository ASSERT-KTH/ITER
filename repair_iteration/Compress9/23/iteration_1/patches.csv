bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!closed  &&  out!=  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!closed  &&  out!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!closed  &&  out!=  null)  {	  if(!closed    ||    out!=    null)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2	[BUG]  [BUGGY]  if(closed  ||  out!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(closed  ||  out!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(closed  ||  out!=  null)  {	  if(!closed    ||    out!=    null)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  if(!closed  ||  out  ==  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!closed  ||  out  ==  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!closed  ||  out  ==  null)  {	  if(!closed    ||    out!=    null)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
4	[BUG]  [BUGGY]  if(buffer!=  null  ||  out!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(buffer!=  null  ||  out!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(buffer!=  null  ||  out!=  null)  {	  if(!closed    ||    out!=    null)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
5	[BUG]  [BUGGY]  if(!closed  &&  out  ==  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!closed  &&  out  ==  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!closed  &&  out  ==  null)  {	  if(!closed    ||    out!=    null)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
6	[BUG]  [BUGGY]  if(!cloned  &&  buffer!=  null)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!cloned  &&  buffer!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!cloned  &&  buffer!=  null)  {	  if(!closed    &&    buffer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
7	[BUG]  [BUGGY]  if(closed  &&  out!=  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(closed  &&  out!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(closed  &&  out!=  null)  {	  if(!closed    &&    buffer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
8	[BUG]  [BUGGY]  if(closed  ||  buffer!=  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(closed  ||  buffer!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(closed  ||  buffer!=  null)  {	  if(!closed    &&    buffer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
9	[BUG]  [BUGGY]  if(buffer!=  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(buffer!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(buffer!=  null)  {	  if(recordBuf!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
10	[BUG]  [BUGGY]  if(buffer!=  null  ||  recordBuf!=  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(buffer!=  null  ||  recordBuf!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(buffer!=  null  ||  recordBuf!=  null)  {	  if(recordBuf!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
11	[BUG]  [BUGGY]  if(buffered!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(buffered!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(buffered!=  null)  {	  if(recordBuf!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
12	[BUG]  [BUGGY]  if(buffer  ==  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(buffer  ==  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(buffer  ==  null)  {	  if(recordBuf!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
13	[BUG]  [BUGGY]  if(buffer!=  null  ||  buffer.length  ==  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(buffer!=  null  ||  buffer.length  ==  0)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(buffer!=  null  ||  buffer.length  ==  0)  {	  if(recordBuf!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
14	[BUG]  [BUGGY]  if(assemBuf!=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(assemBuf!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(assemBuf!=  null)  {	  if(recordBuf!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
15	[BUG]  [BUGGY]  if(hasUnclosedEntry  ||  buffer!=  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(hasUnclosedEntry  ||  buffer!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(hasUnclosedEntry  ||  buffer!=  null)  {	  if(hasUnclosedEntry)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
16	[BUG]  [BUGGY]  if(hasUnclosedEntry  &&  buffer!=  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(hasUnclosedEntry  &&  buffer!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(hasUnclosedEntry  &&  buffer!=  null)  {	  if(hasUnclosedEntry)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
17	[BUG]  [BUGGY]  if(hasUnclosedEntry  ||  buffer.length()  <  LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(hasUnclosedEntry  ||  buffer.length()  <  LONGFILE_GNU)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(hasUnclosedEntry  ||  buffer.length()  <  LONGFILE_GNU)  {	  if(hasUnclosedEntry)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
18	[BUG]  [BUGGY]  if(hasUnclosedEntry  ||  buffer.length()  ==  assemLen)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(hasUnclosedEntry  ||  buffer.length()  ==  assemLen)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(hasUnclosedEntry  ||  buffer.length()  ==  assemLen)  {	  if(hasUnclosedEntry)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
19	[BUG]  [BUGGY]  if(hasUnclosedEntry  ||  buffer.isEnabled())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(hasUnclosedEntry  ||  buffer.isEnabled())  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(hasUnclosedEntry  ||  buffer.isEnabled())  {	  if(hasUnclosedEntry)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
20	[BUG]  [BUGGY]  if(closed  ||  hasUnclosedEntry)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(closed  ||  hasUnclosedEntry)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(closed  ||  hasUnclosedEntry)  {	  if(closed)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
21	[BUG]  [BUGGY]  if(closed  ||  buffer.length()  ==  assemLen)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(closed  ||  buffer.length()  ==  assemLen)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(closed  ||  buffer.length()  ==  assemLen)  {	  if(closed)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
22	[BUG]  [BUGGY]  if(hasUnclosed)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(hasUnclosed)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(hasUnclosed)  {	  if(closed)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
23	[BUG]  [BUGGY]  if(recordBuf!=  null  ||!recordBuf.closed)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(recordBuf!=  null  ||!recordBuf.closed)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(recordBuf!=  null  ||!recordBuf.closed)  {	  if(!recordBuf.closed)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
24	[BUG]  [BUGGY]  if(!recordBuf.length)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!recordBuf.length)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!recordBuf.length)  {	  if(!recordBuf.closed)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
25	[BUG]  [BUGGY]  if(!recordBuf.closed  &&  buffer!=  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!recordBuf.closed  &&  buffer!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!recordBuf.closed  &&  buffer!=  null)  {	  if(!recordBuf.closed)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
26	[BUG]  [BUGGY]  if(!recordBuf.length  >  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!recordBuf.length  >  0)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!recordBuf.length  >  0)  {	  if(!recordBuf.closed)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
27	[BUG]  [BUGGY]  if(!recordBuf.closed  ||  buffer!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!recordBuf.closed  ||  buffer!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!recordBuf.closed  ||  buffer!=  null)  {	  if(!recordBuf.closed)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
28	[BUG]  [BUGGY]  if(!closed  ||  buffer.length!=  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!closed  ||  buffer.length!=  0)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!closed  ||  buffer.length!=  0)  {	  if(!closed    ||    buffer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
29	[BUG]  [BUGGY]  if(!closed  ||  buffer  ==  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!closed  ||  buffer  ==  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!closed  ||  buffer  ==  null)  {	  if(!closed    ||    buffer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
30	[BUG]  [BUGGY]  if(hasUnclosedEntry  ||  buffer.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(hasUnclosedEntry  ||  buffer.length()  ==  0)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(hasUnclosedEntry  ||  buffer.length()  ==  0)  {	  if    (!hasUnclosedEntry)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  TarBuffer  buffer  =(TarBuffer)this.recordBuf.clone();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  TarBuffer  buffer  =(TarBuffer)this.recordBuf.clone();  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	TarBuffer  buffer  =(TarBuffer)this.recordBuf.clone();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  os.close();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  os.close();  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	os.close();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
33	[BUG]  [BUGGY]  TarBuffer  buffer  =(TarBuffer)this.recordBuf.get(currName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  TarBuffer  buffer  =(TarBuffer)this.recordBuf.get(currName);  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	TarBuffer  buffer  =(TarBuffer)this.recordBuf.get(currName);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
34	[BUG]  [BUGGY]  TarBuffer  buffer  =(TarBuffer)this.assemBuf.clone();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  TarBuffer  buffer  =(TarBuffer)this.assemBuf.clone();  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	TarBuffer  buffer  =(TarBuffer)this.assemBuf.clone();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
35	[BUG]  [BUGGY]  os.flush();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  os.flush();  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	os.flush();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
36	[BUG]  [BUGGY]  TarBuffer  buffer  =(TarBuffer)this.blockSize.clone();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  TarBuffer  buffer  =(TarBuffer)this.blockSize.clone();  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	TarBuffer  buffer  =(TarBuffer)this.blockSize.clone();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
37	[BUG]  [BUGGY]  this.recordBuf.close();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  this.recordBuf.close();  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	this.recordBuf.close();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
38	[BUG]  [BUGGY]  if(!recordBuf.closed  &&  out!=  null)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!recordBuf.closed  &&  out!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!recordBuf.closed  &&  out!=  null)  {	  if(!recordBuf.closed)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
39	[BUG]  [BUGGY]  out.close();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  out.close();  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	out.close();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
40	[BUG]  [BUGGY]  OutputStream  out  =  this.recordBuf.getOutputStream();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  OutputStream  out  =  this.recordBuf.getOutputStream();  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	OutputStream  out  =  this.recordBuf.getOutputStream();	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
41	[BUG]  [BUGGY]  if(!closed)  {  buffer.close();  out.close();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!closed)  {  buffer.close();  out.close();  }  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!closed)  {  buffer.close();  out.close();  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
42	[BUG]  [BUGGY]  if(!closed)  {  out.close();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!closed)  {  out.close();  }  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!closed)  {  out.close();  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
43	[BUG]  [BUGGY]  if(!closed)  {  buffer.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!closed)  {  buffer.close();  }  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!closed)  {  buffer.close();  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
44	[BUG]  [BUGGY]  if(!hasUnclosedEntry  ||  out!=  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!hasUnclosedEntry  ||  out!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!hasUnclosedEntry  ||  out!=  null)  {	  if(!closed    ||    out!=    null)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
45	[BUG]  [BUGGY]  if(!cloned)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!cloned)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!cloned)  {	  if    (!hasUnclosedEntry)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
46	[BUG]  [BUGGY]  if(hasUnclosedEntry  ||  out!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(hasUnclosedEntry  ||  out!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(hasUnclosedEntry  ||  out!=  null)  {	  if    (!hasUnclosedEntry)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
47	[BUG]  [BUGGY]  if(hasUnclosedEntry  ||  buffer  ==  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(hasUnclosedEntry  ||  buffer  ==  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(hasUnclosedEntry  ||  buffer  ==  null)  {	  if(hasUnclosedEntry)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
48	[BUG]  [BUGGY]  if(hadUnclosed)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(hadUnclosed)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(hadUnclosed)  {	  if(closed)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
49	[BUG]  [BUGGY]  if(!closed  ||  buffer.length  ==  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!closed  ||  buffer.length  ==  0)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!closed  ||  buffer.length  ==  0)  {	  if(!closed    ||    buffer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
50	[BUG]  [BUGGY]  if(!closed  &&  buffer.length  >  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!closed  &&  buffer.length  >  0)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!closed  &&  buffer.length  >  0)  {	  if(!closed    &&    buffer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
51	[BUG]  [BUGGY]  if(!closed  &&  buffer  ==  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!closed  &&  buffer  ==  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!closed  &&  buffer  ==  null)  {	  if(!closed    &&    buffer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  if(!closed  &&  buffer.length!=  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!closed  &&  buffer.length!=  0)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!closed  &&  buffer.length!=  0)  {	  if(!closed    &&    buffer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
53	[BUG]  [BUGGY]  if(!closed)  {  buffer.close();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!closed)  {  buffer.close();  }  else  {  out.close();  }  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!closed)  {  buffer.close();  }  else  {  out.close();  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
54	[BUG]  [BUGGY]  if(!closed  &&  buffer!=  null  &&  buffer.length  >  0)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!closed  &&  buffer!=  null  &&  buffer.length  >  0)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!closed  &&  buffer!=  null  &&  buffer.length  >  0)  {	  if(!closed    &&    buffer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
55	[BUG]  [BUGGY]  if(!closed  &&  buffer!=  null  &&  out.length  >  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!closed  &&  buffer!=  null  &&  out.length  >  0)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!closed  &&  buffer!=  null  &&  out.length  >  0)  {	  if(!closed    &&    buffer!=    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
56	[BUG]  [BUGGY]  if(recordBuf!=  null  &&!recordBuf.closed)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(recordBuf!=  null  &&!recordBuf.closed)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(recordBuf!=  null  &&!recordBuf.closed)  {	  if(!recordBuf.closed)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
57	[BUG]  [BUGGY]  if(!recordBuf.closed  ||  out!=  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(!recordBuf.closed  ||  out!=  null)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(!recordBuf.closed  ||  out!=  null)  {	  if(!recordBuf.closed)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
58	[BUG]  [BUGGY]  if(hasUnclosedEntry  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(hasUnclosedEntry  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(hasUnclosedEntry  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {	  if(hasUnclosedEntry)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
59	[BUG]  [BUGGY]  if(hasUnclosedEntry  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(hasUnclosedEntry  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(hasUnclosedEntry  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(hasUnclosedEntry)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
60	[BUG]  [BUGGY]  if(recorded)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(recorded)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(recorded)  {	  if(closed)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
61	[BUG]  [BUGGY]  if(this.closed)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(this.closed)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(this.closed)  {	  if(closed)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
62	[BUG]  [BUGGY]  if(recordBuf!=  null  &&  buffer.length  >  0)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  close()  throws  IOException  {  if(!finished)  {  finish();  }    [BUGGY]  if(recordBuf!=  null  &&  buffer.length  >  0)  {  [BUGGY]    buffer.close();  out.close();  closed  =  true;  }  }  [CLASS]  TarArchiveOutputStream  [METHOD]  close  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  finished  haveUnclosedEntry  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress9/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	144	144	1	replace	if(recordBuf!=  null  &&  buffer.length  >  0)  {	  if(recordBuf!=    null)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
