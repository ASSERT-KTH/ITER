bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  p  =  d  /(p  -  2.0);  [CE]  variable  ret  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  p  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	p  =  d  /(p  -  2.0);	  ret    =    d    /(p    -    2.0);    p    =    d    /(p    -    2.0);    	non-compiled	[CE]  variable  ret  might  not  have  been  initialized	47	None	replace
2	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  2);  p  =  d  /(p  -  2);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  /(p  -  2);  p  =  d  /(p  -  2);	  ret    =    d    /(p    -    2.0);    p    =    d    /(p    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	47	3	replace
3	[BUG]  [BUGGY]  ret  =  d  /(p  -  2);  p  =  d  /(p  -  2);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  2);  p  =  d  /(p  -  2);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(p  -  2);  p  =  d  /(p  -  2);	  ret    =    d    /(p    -    2.0);    p    =    d    /(p    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	47	3	replace
4	[BUG]  [BUGGY]  p  =  p  /(d  -  2.0);  [CE]  variable  ret  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	p  =  p  /(d  -  2.0);	  ret    =    p    /(d    -    2.0);    p    =    p    /(d    -    2.0);    	non-compiled	[CE]  variable  ret  might  not  have  been  initialized	38	None	replace
5	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  1.0);	  ret    =    p    /(d    -    2.0);    p    =    p    /(d    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	38	1	replace
6	[BUG]  [BUGGY]  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  1.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  1.0);	  ret    =    p    /(d    -    2.0);    p    =    p    /(d    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	38	1	replace
7	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  /(d  -  2.0);  p  =  p  /(d  -  2.0);	  ret    =    p    /(d    -    2.0);    p    =    p    /(d    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	38	1	replace
8	[BUG]  [BUGGY]  ret  =  d  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(d  -  2.0);  p  =  p  /(d  -  2.0);	  ret    =    p    /(d    -    2.0);    p    =    p    /(d    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	38	1	replace
9	[BUG]  [BUGGY]  p  =  getNumeratorDegreesOfFreedom();  [CE]  variable  ret  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  p  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	p  =  getNumeratorDegreesOfFreedom();	          d    =    getNumeratorDegreesOfFreedom();    p    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  variable  ret  might  not  have  been  initialized	60	None	replace
10	[BUG]  [BUGGY]  p  =  getDenominatorDegreesOfFreedom();  [CE]  variable  ret  might  not  have  been  initialized  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  p  =  getDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	p  =  getDenominatorDegreesOfFreedom();	          d    =    getNumeratorDegreesOfFreedom();    p    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  variable  ret  might  not  have  been  initialized	60	None	replace
11	[BUG]  [BUGGY]  p  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  p  =  getNumberDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	p  =  getNumberDegreesOfFreedom();	          d    =    getNumeratorDegreesOfFreedom();    p    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
12	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    d  =  p  /(d  -  2.0);  double  ret  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]        AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    d  =  p  /(d  -  2.0);  double  ret  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        d    =    p    /(d    -    2.0);    double  ret  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	40	None	add
13	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    d  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret        =        p        /(d        -        2.0);        d    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	40	3	add
14	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    d  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);  [FE]  IllegalArgumentException  [FE]          AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    d  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        d    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	40	3	add
15	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  *(p  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  *(p  -  1.0);	  ret    =    d    /(p    -    1.0);    	compilable	  [FE]  IllegalArgumentException  	43	3	replace
16	[BUG]  [BUGGY]  ret  =  d  *(p  -  1.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  *(p  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  *(p  -  1.0);	  ret    =    d    /(p    -    1.0);    	compilable	  [FE]  IllegalArgumentException  	43	3	replace
17	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                d        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	57	1	add
18	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	57	1	add
19	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                d        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    d  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	57	1	add
20	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    d  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	57	1	add
21	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumberDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
22	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  double  d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  double  d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    double  d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	57	None	add
23	[BUG]  [BUGGY]  Ret  =  d  /(p  -  2.0);  [CE]  cannot  find  symbol  Ret  [FE]        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  Ret  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	Ret  =  d  /(p  -  2.0);	  ret    =    d    /(p    -    2.0);    Ret    =    d    /(p    -    2.0);    	non-compiled	[CE]  cannot  find  symbol  Ret	67	None	replace
24	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret        =        d        /(p        -        2.0);        p    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	46	1	add
25	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        p    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	46	1	add
26	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  double  ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  double  ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        p    =    d    /(p    -    2.0);    double  ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	46	None	add
27	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret        =        d        /(p        -        2.0);        p    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	46	1	add
28	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        p    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	46	1	add
29	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  Double  ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]            IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  Double  ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        p    =    d    /(p    -    2.0);    Double  ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	46	None	add
30	[BUG]  [BUGGY]  ret  =  d  /(d  -  2.0);  double  p  =  p  /(d  -  2.0);  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]              IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  2.0);  double  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(d  -  2.0);  double  p  =  p  /(d  -  2.0);	  ret    =    p    /(d    -    2.0);    double    p    =    p    /(d    -    2.0);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	39	None	replace
31	[BUG]  [BUGGY]  double  p  =  p  /(d  -  2.0);  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]                IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  double  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  p  =  p  /(d  -  2.0);	  ret    =    p    /(d    -    2.0);    double    p    =    p    /(d    -    2.0);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	39	None	replace
32	[BUG]  [BUGGY]  double  p  =  d  /(d  -  2.0);  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]                  IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  double  p  =  d  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  p  =  d  /(d  -  2.0);	  ret    =    p    /(d    -    2.0);    double    p    =    p    /(d    -    2.0);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	39	None	replace
33	[BUG]  [BUGGY]  d  =  getDenominatorDegreesOfFreedom()  +  1;  [CE]  variable  ret  might  not  have  been  initialized  [FE]                      IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getDenominatorDegreesOfFreedom()  +  1;  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getDenominatorDegreesOfFreedom()  +  1;	  d    =    getNumberDenominatorDegreesOfFreedom()    +    1;    	non-compiled	[CE]  variable  ret  might  not  have  been  initialized	3	None	replace
34	[BUG]  [BUGGY]  d  =  getNumeratorDenominatorDegreesOfFreedom()  +  1;  [CE]  cannot  find  symbol  [FE]                        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getNumeratorDenominatorDegreesOfFreedom()  +  1;  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumeratorDenominatorDegreesOfFreedom()  +  1;	  d    =    getNumberDenominatorDegreesOfFreedom()    +    1;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
35	[BUG]  [BUGGY]  double  ret  =  p  /(d  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  double  ret  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  ret  =  p  /(d  -  2.0);	  ret    =    p    /(d    -    2.0);    double    ret    =    p    /(d    -    2.0);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	36	None	replace
36	[BUG]  [BUGGY]  double  ret  =  d  /(p  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]            IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  double  ret  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  ret  =  d  /(p  -  2.0);	  ret    =    p    /(d    -    2.0);    double    ret    =    p    /(d    -    2.0);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	36	None	replace
37	[BUG]  [BUGGY]  d  =  getDenominatorDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getDenominatorDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getDenominatorDenominatorDegreesOfFreedom();	  d    =    getNumeratorDenominatorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
38	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret        =        d        /(p        -        2.0);        ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
39	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
40	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  double  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  double  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        ret    =    d    /(p    -    2.0);    double  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	24	None	add
41	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  ret  =  d  *(p  -  2.0);  ret  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret        =        d        /(p        -        2.0);        ret    =    d    /(p    -    2.0);    ret  =  d  *(p  -  2.0);  ret  =  d  /(p  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
42	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  ret  =  d  *(p  -  2.0);  ret  =  d  /(p  -  2.0);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  ret  =  d  *(p  -  2.0);  ret  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        ret    =    d    /(p    -    2.0);    ret  =  d  *(p  -  2.0);  ret  =  d  /(p  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
43	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);  ret  =  d  /(p  -  3.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret        =        d        /(p        -        2.0);        ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  3.0);  ret  =  d  /(p  -  3.0);	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
44	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);  ret  =  d  /(p  -  3.0);  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);  ret  =  d  /(p  -  3.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  3.0);  ret  =  d  /(p  -  3.0);	  	compilable	  [FE]  IllegalArgumentException  	24	1	add
45	[BUG]  [BUGGY]  double  d  =  getNumberDegreesOfFreedom().doubleValue()  +  1;  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]                  IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  double  d  =  getNumberDegreesOfFreedom().doubleValue()  +  1;  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumberDegreesOfFreedom().doubleValue()  +  1;	  double    d    =    getNumberDegreesOfFreedom().doubleValue();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	32	None	replace
46	[BUG]  [BUGGY]  double  d  =  getNumberDegreesOfFreedom().doubleValue()  +  2;  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]                    IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  double  d  =  getNumberDegreesOfFreedom().doubleValue()  +  2;  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumberDegreesOfFreedom().doubleValue()  +  2;	  double    d    =    getNumberDegreesOfFreedom().doubleValue();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	32	None	replace
47	[BUG]  [BUGGY]  d  =  getNumeratorDegreesOfFreedom(p,  denominatorDegreesOfFreedom);  [CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getNumeratorDegreesOfFreedom(p,  denominatorDegreesOfFreedom);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumeratorDegreesOfFreedom(p,  denominatorDegreesOfFreedom);	  d    =    getNumeratorDegreesOfFreedom(p);    	non-compiled	[CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;	54	None	replace
48	[BUG]  [BUGGY]  d  =  getNumeratorDegreesOfFreedom(p,  ret);  [CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;  [FE]            IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getNumeratorDegreesOfFreedom(p,  ret);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumeratorDegreesOfFreedom(p,  ret);	  d    =    getNumeratorDegreesOfFreedom(p);    	non-compiled	[CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;	54	None	replace
49	[BUG]  [BUGGY]  d  =  getNumeratorDegreesOfFreedom(p,  d);  [CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;  [FE]              IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getNumeratorDegreesOfFreedom(p,  d);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumeratorDegreesOfFreedom(p,  d);	  d    =    getNumeratorDegreesOfFreedom(p);    	non-compiled	[CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;	54	None	replace
50	[BUG]  [BUGGY]  d  =  getNumeratorDegreesOfFreedom(p,  m);  [CE]  cannot  find  symbol  m  [FE]                IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getNumeratorDegreesOfFreedom(p,  m);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumeratorDegreesOfFreedom(p,  m);	  d    =    getNumeratorDegreesOfFreedom(p);    	non-compiled	[CE]  cannot  find  symbol  m	54	None	replace
51	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                d        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
52	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
53	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  double  d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  double  d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    double  d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	4	None	add
54	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                d        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    d  =  getDenominatorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
55	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    d  =  getDenominatorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
56	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    d  =  getNumberDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
57	[BUG]  [BUGGY]  ret  =  getNumeratorDegreesOfFreedom(p,  denominatorDegreesOfFreedom);  [CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;  [FE]        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getNumeratorDegreesOfFreedom(p,  denominatorDegreesOfFreedom);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumeratorDegreesOfFreedom(p,  denominatorDegreesOfFreedom);	  ret    =    getNumeratorDegreesOfFreedom(p);    	non-compiled	[CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;	66	None	replace
58	[BUG]  [BUGGY]  ret  =  getNumeratorDegreesOfFreedom(m,  p);  [CE]  cannot  find  symbol  m  [FE]          IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getNumeratorDegreesOfFreedom(m,  p);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumeratorDegreesOfFreedom(m,  p);	  ret    =    getNumeratorDegreesOfFreedom(p);    	non-compiled	[CE]  cannot  find  symbol  m	66	None	replace
59	[BUG]  [BUGGY]  ret  =  getNumeratorDegreesOfFreedom(x,  p);  [CE]  cannot  find  symbol  x  [FE]            IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getNumeratorDegreesOfFreedom(x,  p);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumeratorDegreesOfFreedom(x,  p);	  ret    =    getNumeratorDegreesOfFreedom(p);    	non-compiled	[CE]  cannot  find  symbol  x	66	None	replace
60	[BUG]  [BUGGY]  ret  =  getNumeratorDegreesOfFreedom(d,  p);  [CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;  [FE]              IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getNumeratorDegreesOfFreedom(d,  p);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumeratorDegreesOfFreedom(d,  p);	  ret    =    getNumeratorDegreesOfFreedom(p);    	non-compiled	[CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;	66	None	replace
61	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  3.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  /(p  -  3.0);	  ret    =    d    /(p    -    2.0);    ret    =    d    /(p    -    3.0);    	compilable	  [FE]  IllegalArgumentException  	28	3	replace
62	[BUG]  [BUGGY]  ret  =  d  /(p  -  3.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  3.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(p  -  3.0);	  ret    =    d    /(p    -    2.0);    ret    =    d    /(p    -    3.0);    	compilable	  [FE]  IllegalArgumentException  	28	3	replace
63	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  0.5);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  /(p  -  0.5);	  ret    =    d    /(p    -    2.0);    ret    =    d    /(p    -    3.0);    	compilable	  [FE]  IllegalArgumentException  	28	3	replace
64	[BUG]  [BUGGY]  ret  =  d  /(p  -  0.5);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  0.5);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(p  -  0.5);	  ret    =    d    /(p    -    2.0);    ret    =    d    /(p    -    3.0);    	compilable	  [FE]  IllegalArgumentException  	28	3	replace
65	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  1.0);  ret  =  p  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    p    /(d    -    1.0);    ret  =  p  /(d  -  1.0);	  	compilable	  [FE]  IllegalArgumentException  	16	1	add
66	[BUG]  [BUGGY]  ret  =  p  /(d  -  1.0);  ret  =  p  /(d  -  1.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  1.0);  ret  =  p  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    -    1.0);    ret  =  p  /(d  -  1.0);	  	compilable	  [FE]  IllegalArgumentException  	16	1	add
67	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  1.0);  p  =  p  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    p    /(d    -    1.0);    p  =  p  /(d  -  1.0);	  	compilable	  [FE]  IllegalArgumentException  	16	1	add
68	[BUG]  [BUGGY]  ret  =  p  /(d  -  1.0);  p  =  p  /(d  -  1.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  1.0);  p  =  p  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    -    1.0);    p  =  p  /(d  -  1.0);	  	compilable	  [FE]  IllegalArgumentException  	16	1	add
69	[BUG]  [BUGGY]  ret  =  p  /(d  -  1.0);  double  ret  =  p  /(d  -  1.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  1.0);  double  ret  =  p  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    -    1.0);    double  ret  =  p  /(d  -  1.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	16	None	add
70	[BUG]  [BUGGY]  ret  =  p  /(d  -  1.0);  double  p  =  p  /(d  -  1.0);  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  1.0);  double  p  =  p  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    -    1.0);    double  p  =  p  /(d  -  1.0);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	16	None	add
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  1.0);  d  =  p  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    p    /(d    -    1.0);    d  =  p  /(d  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	16	3	add
72	[BUG]  [BUGGY]  ret  =  p  /(d  -  1.0);  d  =  p  /(d  -  1.0);  [FE]  AssertionFailedError  [FE]            IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  1.0);  d  =  p  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    -    1.0);    d  =  p  /(d  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	16	3	add
73	[BUG]  [BUGGY]  ret  =  getDenominatorDegreesOfFreedom();  Ret  =  getNumeratorDegreesOfFreedom();  [CE]  cannot  find  symbol  Ret  [FE]          IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getDenominatorDegreesOfFreedom();  Ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getDenominatorDegreesOfFreedom();  Ret  =  getNumeratorDegreesOfFreedom();	          ret    =    getNumeratorDegreesOfFreedom();    Ret    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol  Ret	51	None	replace
74	[BUG]  [BUGGY]  ret  =  getNumberDegreesOfFreedom();  Ret  =  getNumeratorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getNumberDegreesOfFreedom();  Ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumberDegreesOfFreedom();  Ret  =  getNumeratorDegreesOfFreedom();	          ret    =    getNumeratorDegreesOfFreedom();    Ret    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
75	[BUG]  [BUGGY]  d  =  getDenominatorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getDenominatorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getDenominatorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();	          d    =    getNumeratorDegreesOfFreedom();    d    =    getNumberDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
76	[BUG]  [BUGGY]  Double  d  =  getNumberDenominatorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]            IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  Double  d  =  getNumberDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	Double  d  =  getNumberDenominatorDegreesOfFreedom();	  double    d    =    getNumberDenominatorDegreesOfFreedom()    +    1;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	52	None	replace
77	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  3.0);  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret        =        d        /(p        -        2.0);        ret    =    d    /(p    -    3.0);    ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);	  	compilable	  [FE]  IllegalArgumentException  	27	1	add
78	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  3.0);  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  3.0);  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        ret    =    d    /(p    -    3.0);    ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);	  	compilable	  [FE]  IllegalArgumentException  	27	1	add
79	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  3.0);  ret  =  d  /(p  -  3.0);  ret  =  d  /(p  -  3.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret        =        d        /(p        -        2.0);        ret    =    d    /(p    -    3.0);    ret  =  d  /(p  -  3.0);  ret  =  d  /(p  -  3.0);	  	compilable	  [FE]  IllegalArgumentException  	27	1	add
80	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  3.0);  ret  =  d  /(p  -  3.0);  ret  =  d  /(p  -  3.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  3.0);  ret  =  d  /(p  -  3.0);  ret  =  d  /(p  -  3.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        ret    =    d    /(p    -    3.0);    ret  =  d  /(p  -  3.0);  ret  =  d  /(p  -  3.0);	  	compilable	  [FE]  IllegalArgumentException  	27	1	add
81	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  *  2.0);  ret  =  p  /(d  *  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    p    /(d    *    2.0);    ret  =  p  /(d  *  2.0);	  	compilable	  [FE]  IllegalArgumentException  	14	1	add
82	[BUG]  [BUGGY]  ret  =  p  /(d  *  2.0);  ret  =  p  /(d  *  2.0);  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  *  2.0);  ret  =  p  /(d  *  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    *    2.0);    ret  =  p  /(d  *  2.0);	  	compilable	  [FE]  IllegalArgumentException  	14	1	add
83	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  *  2.0);  ret  =  p  /(d  *  3.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    p    /(d    *    2.0);    ret  =  p  /(d  *  3.0);	  	compilable	  [FE]  IllegalArgumentException  	14	1	add
84	[BUG]  [BUGGY]  ret  =  p  /(d  *  2.0);  ret  =  p  /(d  *  3.0);  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  *  2.0);  ret  =  p  /(d  *  3.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    *    2.0);    ret  =  p  /(d  *  3.0);	  	compilable	  [FE]  IllegalArgumentException  	14	1	add
85	[BUG]  [BUGGY]  ret  =  p  /(d  *  2.0);  double  ret  =  p  /(d  *  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]        AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  *  2.0);  double  ret  =  p  /(d  *  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    *    2.0);    double  ret  =  p  /(d  *  2.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	14	None	add
86	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  *  2.0);  p  =  p  /(d  *  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    p    /(d    *    2.0);    p  =  p  /(d  *  2.0);	  	compilable	  [FE]  IllegalArgumentException  	14	1	add
87	[BUG]  [BUGGY]  ret  =  p  /(d  *  2.0);  p  =  p  /(d  *  2.0);  [FE]  IllegalArgumentException  [FE]          AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  *  2.0);  p  =  p  /(d  *  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    *    2.0);    p  =  p  /(d  *  2.0);	  	compilable	  [FE]  IllegalArgumentException  	14	1	add
88	[BUG]  [BUGGY]  double  d  =  getNumberDenominatorDegreesOfFreedom().doubleValue();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]                IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  double  d  =  getNumberDenominatorDegreesOfFreedom().doubleValue();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumberDenominatorDegreesOfFreedom().doubleValue();	  double    d    =    getDenominatorDegreesOfFreedom().doubleValue();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	31	None	replace
89	[BUG]  [BUGGY]  ret  =  getNumberDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getNumberDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumberDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	          ret    =    getNumeratorDegreesOfFreedom();    ret    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
90	[BUG]  [BUGGY]  int  d  =  getNumeratorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  int  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	int  d  =  getNumeratorDegreesOfFreedom();	          d    =    getNumeratorDegreesOfFreedom();    int    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	65	None	replace
91	[BUG]  [BUGGY]  int  d  =  getDenominatorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  int  d  =  getDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	int  d  =  getDenominatorDegreesOfFreedom();	          d    =    getNumeratorDegreesOfFreedom();    int    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	65	None	replace
92	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret        =        p        /(d        -        2.0);        ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	34	1	add
93	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	34	1	add
94	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  double  ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  double  ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        ret    =    p    /(d    -    2.0);    double  ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	34	None	add
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret        =        p        /(d        -        2.0);        ret    =    p    /(d    -    2.0);    d  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);	  	compilable	  [FE]  AssertionFailedError  	34	3	add
96	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [FE]  AssertionFailedError  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        ret    =    p    /(d    -    2.0);    d  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);	  	compilable	  [FE]  AssertionFailedError  	34	3	add
97	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret        =        p        /(d        -        2.0);        ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	34	1	add
98	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	34	1	add
99	[BUG]  [BUGGY]  d  =  p  /(d  -  2.0);  [CE]  variable  ret  might  not  have  been  initialized  [FE]    AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  p  /(d  -  2.0);	  ret    =    p    /(d    -    2.0);    d    =    p    /(d    -    2.0);    	non-compiled	[CE]  variable  ret  might  not  have  been  initialized	41	None	replace
100	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  2.0);  d  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  /(p  -  2.0);  d  =  p  /(d  -  2.0);	  ret    =    p    /(d    -    2.0);    d    =    p    /(d    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	41	3	replace
101	[BUG]  [BUGGY]  ret  =  d  /(p  -  2.0);  d  =  p  /(d  -  2.0);  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  2.0);  d  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(p  -  2.0);  d  =  p  /(d  -  2.0);	  ret    =    p    /(d    -    2.0);    d    =    p    /(d    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	41	3	replace
102	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  2.0);  d  =  p  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  p  /(d  -  2.0);  d  =  p  /(d  -  1.0);	  ret    =    p    /(d    -    2.0);    d    =    p    /(d    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	41	1	replace
103	[BUG]  [BUGGY]  ret  =  p  /(d  -  2.0);  d  =  p  /(d  -  1.0);  [FE]  IllegalArgumentException  [FE]        AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  2.0);  d  =  p  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  p  /(d  -  2.0);  d  =  p  /(d  -  1.0);	  ret    =    p    /(d    -    2.0);    d    =    p    /(d    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	41	1	replace
104	[BUG]  [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom(p,  denominatorDegreesOfFreedom);  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]                IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom(p,  denominatorDegreesOfFreedom);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumeratorDegreesOfFreedom(p,  denominatorDegreesOfFreedom);	  double    d    =    getNumeratorDegreesOfFreedom(p);    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	56	None	replace
105	[BUG]  [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom(p,  numeratorDegreesOfFreedom);  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]                  IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom(p,  numeratorDegreesOfFreedom);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumeratorDegreesOfFreedom(p,  numeratorDegreesOfFreedom);	  double    d    =    getNumeratorDegreesOfFreedom(p);    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	56	None	replace
106	[BUG]  [BUGGY]  Double  d  =  getNumeratorDegreesOfFreedom().doubleValue();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]              IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  Double  d  =  getNumeratorDegreesOfFreedom().doubleValue();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	Double  d  =  getNumeratorDegreesOfFreedom().doubleValue();	  double    d    =    getNumeratorDegreesOfFreedom().doubleValue()    +    1;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	30	None	replace
107	[BUG]  [BUGGY]  ret  =  d  /(p  <  <  0.0);  [CE]  illegal  start  of  type  [FE]              IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  <  <  0.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(p  <  <  0.0);	  ret    =    d    /(d    <    <    0.0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
108	[BUG]  [BUGGY]  ret  =  d  /(d  <  <  10.0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  <  <  10.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(d  <  <  10.0);	  ret    =    d    /(d    <    <    0.0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
109	[BUG]  [BUGGY]  ret  =  p  /(d  <  <  0.0);  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  <  <  0.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  p  /(d  <  <  0.0);	  ret    =    d    /(d    <    <    0.0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
110	[BUG]  [BUGGY]  ret  =  d  *(d  <  <  0.0);  [CE]  illegal  start  of  type  [FE]                    IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  *(d  <  <  0.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  *(d  <  <  0.0);	  ret    =    d    /(d    <    <    0.0);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
111	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  1.0);  ret  =  d  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    d    /(d    -    1.0);    ret  =  d  /(d  -  1.0);	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
112	[BUG]  [BUGGY]  ret  =  d  /(d  -  1.0);  ret  =  d  /(d  -  1.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  1.0);  ret  =  d  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(d    -    1.0);    ret  =  d  /(d  -  1.0);	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  1.0);  d  =  d  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    d    /(d    -    1.0);    d  =  d  /(d  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	9	3	add
114	[BUG]  [BUGGY]  ret  =  d  /(d  -  1.0);  d  =  d  /(d  -  1.0);  [FE]  AssertionFailedError  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  1.0);  d  =  d  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(d    -    1.0);    d  =  d  /(d  -  1.0);	  	compilable	  [FE]  AssertionFailedError  	9	3	add
115	[BUG]  [BUGGY]  ret  =  d  /(d  -  1.0);  double  ret  =  d  /(d  -  1.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  1.0);  double  ret  =  d  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(d    -    1.0);    double  ret  =  d  /(d  -  1.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	9	None	add
116	[BUG]  [BUGGY]  ret  =  d  /(d  -  1.0);  double  d  =  d  /(d  -  1.0);  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  1.0);  double  d  =  d  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(d    -    1.0);    double  d  =  d  /(d  -  1.0);	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	9	None	add
117	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  1.0);  ret  =  d  /(d  -  0.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    d    /(d    -    1.0);    ret  =  d  /(d  -  0.0);	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
118	[BUG]  [BUGGY]  ret  =  d  /(d  -  1.0);  ret  =  d  /(d  -  0.0);  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  1.0);  ret  =  d  /(d  -  0.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(d    -    1.0);    ret  =  d  /(d  -  0.0);	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
119	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret        =        p        /(d        -        2.0);        p    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	37	1	add
120	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        p    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	37	1	add
121	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  double  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  double  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        p    =    p    /(d    -    2.0);    double  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	37	None	add
122	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret        =        p        /(d        -        2.0);        p    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	37	1	add
123	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        p    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	37	1	add
124	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret        =        p        /(d        -        2.0);        p    =    p    /(d    -    2.0);    d  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	37	3	add
125	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        p    =    p    /(d    -    2.0);    d  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	37	3	add
126	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  ret  =  p  /(d  -  3.0);  p  =  p  /(d  -  3.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret        =        p        /(d        -        2.0);        p    =    p    /(d    -    2.0);    ret  =  p  /(d  -  3.0);  p  =  p  /(d  -  3.0);	  	compilable	  [FE]  IllegalArgumentException  	37	1	add
127	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  ret  =  p  /(d  -  3.0);  p  =  p  /(d  -  3.0);  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  ret  =  p  /(d  -  3.0);  p  =  p  /(d  -  3.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        p    =    p    /(d    -    2.0);    ret  =  p  /(d  -  3.0);  p  =  p  /(d  -  3.0);	  	compilable	  [FE]  IllegalArgumentException  	37	1	add
128	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                ret        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
129	[BUG]  [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                ret        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
130	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                ret        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    ret  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
131	[BUG]  [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                ret        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    ret  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
132	[BUG]  [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                ret        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumberDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
133	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                ret        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
134	[BUG]  [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                ret        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
135	[BUG]  [BUGGY]  ret  =  d  /(d  -  2.0);  Double  p  =  p  /(d  -  2.0);  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  2.0);  Double  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(d  -  2.0);  Double  p  =  p  /(d  -  2.0);	  ret    =    p    /(d    -    2.0);    Double    p    =    p    /(d    -    2.0);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	62	None	replace
136	[BUG]  [BUGGY]  double  ret  =  getNumeratorDegreesOfFreedom();  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  double  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  ret  =  getNumeratorDegreesOfFreedom();	          ret    =    getNumeratorDegreesOfFreedom();    double    ret    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	21	None	replace
137	[BUG]  [BUGGY]  Double  ret  =  d  /(p  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  Double  ret  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	Double  ret  =  d  /(p  -  2.0);	  ret    =    d    /(p    -    2.0);    double    ret    =    d    /(p    -    2.0);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	26	None	replace
138	[BUG]  [BUGGY]  d  =  getNumberDegreesOfFreedom()  +  1;  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getNumberDegreesOfFreedom()  +  1;  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumberDegreesOfFreedom()  +  1;	  d    =    getNumberDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
139	[BUG]  [BUGGY]  ret  =  getDenominatorDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getDenominatorDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getDenominatorDenominatorDegreesOfFreedom();	  ret    =    getNumeratorDenominatorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
140	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  1.0);  ret  =  d  /(p  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    d    /(p    -    1.0);    ret  =  d  /(p  -  1.0);	  	compilable	  [FE]  IllegalArgumentException  	42	1	add
141	[BUG]  [BUGGY]  ret  =  d  /(p  -  1.0);  ret  =  d  /(p  -  1.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  1.0);  ret  =  d  /(p  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(p    -    1.0);    ret  =  d  /(p  -  1.0);	  	compilable	  [FE]  IllegalArgumentException  	42	1	add
142	[BUG]  [BUGGY]  ret  =  d  /(p  -  1.0);  double  ret  =  d  /(p  -  1.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  1.0);  double  ret  =  d  /(p  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(p    -    1.0);    double  ret  =  d  /(p  -  1.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	42	None	add
143	[BUG]  [BUGGY]  ret  =  d  /(p  -  1.0);  double  d  =  d  /(p  -  1.0);  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  1.0);  double  d  =  d  /(p  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(p    -    1.0);    double  d  =  d  /(p  -  1.0);	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	42	None	add
144	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  1.0);  ret  =  d  /(p  -  0.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    d    /(p    -    1.0);    ret  =  d  /(p  -  0.0);	  	compilable	  [FE]  IllegalArgumentException  	42	1	add
145	[BUG]  [BUGGY]  ret  =  d  /(p  -  1.0);  ret  =  d  /(p  -  0.0);  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  1.0);  ret  =  d  /(p  -  0.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(p    -    1.0);    ret  =  d  /(p  -  0.0);	  	compilable	  [FE]  IllegalArgumentException  	42	1	add
146	[BUG]  [BUGGY]  timeout  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  *(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  *(d  -  1.0);	  ret    =    d    /(d    -    1.0);    	compilable	timeout	10	1	replace
147	[BUG]  [BUGGY]  ret  =  d  *(d  -  1.0);  timeout  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  *(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  *(d  -  1.0);	  ret    =    d    /(d    -    1.0);    	compilable	timeout	10	1	replace
148	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                ret        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
149	[BUG]  [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                ret        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
150	[BUG]  [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  double  ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  double  ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                ret        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    double  ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	49	None	add
151	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                ret        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    ret  =  getDenominatorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
152	[BUG]  [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                ret        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    ret  =  getDenominatorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
153	[BUG]  [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                ret        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumberDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol	49	None	add
154	[BUG]  [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                ret        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol	49	None	add
155	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                d        =        getNumeratorDegreesOfFreedom();        p    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	59	1	add
156	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        p    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	59	1	add
157	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  double  d  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  double  d  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        p    =    getNumeratorDegreesOfFreedom();    double  d  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	59	None	add
158	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                d        =        getNumeratorDegreesOfFreedom();        p    =    getNumeratorDegreesOfFreedom();    d  =  getDenominatorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	59	1	add
159	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        p    =    getNumeratorDegreesOfFreedom();    d  =  getDenominatorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	59	1	add
160	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  p  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  p  =  getNumberDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        p    =    getNumeratorDegreesOfFreedom();    d  =  getNumberDegreesOfFreedom();  p  =  getNumberDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
161	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  p  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  p  =  getNumberDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        p    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  p  =  getNumberDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol	59	None	add
162	[BUG]  [BUGGY]  Double  d  =  getNumeratorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]              IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  Double  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	Double  d  =  getNumeratorDegreesOfFreedom();	          d    =    getNumeratorDegreesOfFreedom();    Double    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	8	None	replace
163	[BUG]  [BUGGY]  ret  =  getNumberDenominatorDegreesOfFreedom();  d  =  getNumberDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getNumberDenominatorDegreesOfFreedom();  d  =  getNumberDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumberDenominatorDegreesOfFreedom();  d  =  getNumberDenominatorDegreesOfFreedom();	          ret    =    getNumeratorDegreesOfFreedom();    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
164	[BUG]  [BUGGY]  ret  =  getNumberDegreesOfFreedom()  /  denominatorDegreesOfFreedom;  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getNumberDegreesOfFreedom()  /  denominatorDegreesOfFreedom;  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumberDegreesOfFreedom()  /  denominatorDegreesOfFreedom;	  ret    =    getNumberDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
165	[BUG]  [BUGGY]  d  =  getNumberDenominatorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getNumberDenominatorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumberDenominatorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();	          d    =    getNumeratorDegreesOfFreedom();    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
166	[BUG]  [BUGGY]  d  =  getNumberDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getNumberDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumberDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();	          d    =    getNumeratorDegreesOfFreedom();    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
167	[BUG]  [BUGGY]  n  =  getNumeratorDegreesOfFreedom();  n  =  getNumeratorDegreesOfFreedom();  [CE]  cannot  find  symbol  n  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  n  =  getNumeratorDegreesOfFreedom();  n  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	n  =  getNumeratorDegreesOfFreedom();  n  =  getNumeratorDegreesOfFreedom();	          d    =    getNumeratorDegreesOfFreedom();    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol  n	5	None	replace
168	[BUG]  [BUGGY]  Double  d  =  getNumberDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]              IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  Double  d  =  getNumberDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	Double  d  =  getNumberDegreesOfFreedom();	  double    d    =    getNumberDegreesOfFreedom()    +    1;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	23	None	replace
169	[BUG]  [BUGGY]  ret  =  getNumberDenominatorDegreesOfFreedom()  *  denominatorDegreesOfFreedom;  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getNumberDenominatorDegreesOfFreedom()  *  denominatorDegreesOfFreedom;  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumberDenominatorDegreesOfFreedom()  *  denominatorDegreesOfFreedom;	  ret    =    getNumberDenominatorDegreesOfFreedom()    /    denominatorDegreesOfFreedom;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
170	[BUG]  [BUGGY]  ret  =  getNumberDenominatorDegreesOfFreedom()  /  p;  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getNumberDenominatorDegreesOfFreedom()  /  p;  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumberDenominatorDegreesOfFreedom()  /  p;	  ret    =    getNumberDenominatorDegreesOfFreedom()    /    denominatorDegreesOfFreedom;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
171	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  2);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  /(p  -  2);	  ret    =    d    /(p    -    2.0);    ret    =    d    /(p    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	25	3	replace
172	[BUG]  [BUGGY]  ret  =  d  /(p  -  2);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  2);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(p  -  2);	  ret    =    d    /(p    -    2.0);    ret    =    d    /(p    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	25	3	replace
173	[BUG]  [BUGGY]  ret  =  d  /(p  <  <  1.0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  <  <  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(p  <  <  1.0);	  ret    =    d    /(d    <    <    1.0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
174	[BUG]  [BUGGY]  d  =  getNumeratorDenominatorDegreesOfFreedom(p);  [CE]  cannot  find  symbol  [FE]                    IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getNumeratorDenominatorDegreesOfFreedom(p);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumeratorDenominatorDegreesOfFreedom(p);	  d    =    getNumeratorDenominatorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
175	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                d        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	57	1	add
176	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	57	1	add
177	[BUG]  [BUGGY]  n  =  getNumeratorDegreesOfFreedom();  [CE]  cannot  find  symbol  n  [FE]          IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  n  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	n  =  getNumeratorDegreesOfFreedom();	          d    =    getNumeratorDegreesOfFreedom();    double    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol  n	6	None	replace
178	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                ret        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
179	[BUG]  [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                ret        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
180	[BUG]  [BUGGY]  ret  =  getNumeratorDenominatorDegreesOfFreedom(p);  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getNumeratorDenominatorDegreesOfFreedom(p);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumeratorDenominatorDegreesOfFreedom(p);	  ret    =    getNumeratorDenominatorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
181	[BUG]  [BUGGY]  ret  =  getNumeratorDenominatorDegreesOfFreedom()  +  1;  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getNumeratorDenominatorDegreesOfFreedom()  +  1;  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumeratorDenominatorDegreesOfFreedom()  +  1;	  ret    =    getNumeratorDenominatorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
182	[BUG]  [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom(p  +  1);  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]                IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom(p  +  1);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumeratorDegreesOfFreedom(p  +  1);	  double    d    =    getNumeratorDegreesOfFreedom(p);    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	56	None	replace
183	[BUG]  [BUGGY]  n  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [CE]  cannot  find  symbol  n  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  n  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	n  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();	          d    =    getNumeratorDegreesOfFreedom();    p    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol  n	60	None	replace
184	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  10.0);  p  =  p  /(d  -  10.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  p  /(d  -  10.0);  p  =  p  /(d  -  10.0);	  ret    =    p    /(d    -    2.0);    p    =    p    /(d    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	38	2	replace
185	[BUG]  [BUGGY]  ret  =  p  /(d  -  10.0);  p  =  p  /(d  -  10.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  10.0);  p  =  p  /(d  -  10.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  p  /(d  -  10.0);  p  =  p  /(d  -  10.0);	  ret    =    p    /(d    -    2.0);    p    =    p    /(d    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	38	2	replace
186	[BUG]  [BUGGY]  d  =  getDenominatorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [CE]  variable  ret  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getDenominatorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getDenominatorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();	          d    =    getNumeratorDegreesOfFreedom();    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  variable  ret  might  not  have  been  initialized	5	None	replace
187	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
188	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  1.0);  p  =  d  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    d    /(d    -    1.0);    p  =  d  /(d  -  1.0);	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
189	[BUG]  [BUGGY]  ret  =  d  /(d  -  1.0);  p  =  d  /(d  -  1.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  1.0);  p  =  d  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(d    -    1.0);    p  =  d  /(d  -  1.0);	  	compilable	  [FE]  IllegalArgumentException  	9	1	add
190	[BUG]  [BUGGY]  ret  =  getDenominatorDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getDenominatorDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getDenominatorDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();	          ret    =    getNumeratorDegreesOfFreedom();    ret    =    getNumberDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
191	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    d  =  p  /(d  -  2.0);  r  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);  [CE]  cannot  find  symbol  r  [FE]    AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    d  =  p  /(d  -  2.0);  r  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        d    =    p    /(d    -    2.0);    r  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);	  	non-compiled	[CE]  cannot  find  symbol  r	40	None	add
192	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  1);  p  =  d  /(p  -  1);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  /(p  -  1);  p  =  d  /(p  -  1);	  ret    =    d    /(p    -    2.0);    p    =    d    /(p    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	47	3	replace
193	[BUG]  [BUGGY]  ret  =  d  /(p  -  1);  p  =  d  /(p  -  1);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  1);  p  =  d  /(p  -  1);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(p  -  1);  p  =  d  /(p  -  1);	  ret    =    d    /(p    -    2.0);    p    =    d    /(p    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	47	3	replace
194	[BUG]  [BUGGY]  double  d  =  getNumeratorDenominatorDegreesOfFreedom()  +  1;  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]            IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  double  d  =  getNumeratorDenominatorDegreesOfFreedom()  +  1;  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumeratorDenominatorDegreesOfFreedom()  +  1;	  double    d    =    getNumeratorDenominatorDegreesOfFreedom();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	13	None	replace
195	[BUG]  [BUGGY]  double  d  =  getNumeratorDenominatorDegreesOfFreedom(p);  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]              IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  double  d  =  getNumeratorDenominatorDegreesOfFreedom(p);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumeratorDenominatorDegreesOfFreedom(p);	  double    d    =    getNumeratorDenominatorDegreesOfFreedom();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	13	None	replace
196	[BUG]  [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  double  ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  double  ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                ret        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    double  ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	19	None	add
197	[BUG]  [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                ret        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumberDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
198	[BUG]  [BUGGY]  ret  =  getDenominatorDegreesOfFreedom();  double  d  =  getNumeratorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getDenominatorDegreesOfFreedom();  double  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getDenominatorDegreesOfFreedom();  double  d  =  getNumeratorDegreesOfFreedom();	          ret    =    getNumeratorDegreesOfFreedom();    double    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	63	None	replace
199	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  Double  p  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  Double  p  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        p    =    p    /(d    -    2.0);    Double  p  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	37	None	add
200	[BUG]  [BUGGY]  d  =  getNumeratorDegreesOfFreedom().doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getNumeratorDegreesOfFreedom().doubleValue();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumeratorDegreesOfFreedom().doubleValue();	  d    =    getNumeratorDegreesOfFreedom()    +    1;    	non-compiled	[CE]  double  cannot  be  dereferenced	53	None	replace
201	[BUG]  [BUGGY]  ret  =  getNumeratorDegreesOfFreedom();  Ret  =  getDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  Ret  [FE]          IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getNumeratorDegreesOfFreedom();  Ret  =  getDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumeratorDegreesOfFreedom();  Ret  =  getDenominatorDegreesOfFreedom();	          ret    =    getNumeratorDegreesOfFreedom();    Ret    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol  Ret	51	None	replace
202	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  2.0);  d  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  /(d  -  2.0);  d  =  p  /(d  -  2.0);	  ret    =    p    /(d    -    2.0);    d    =    p    /(d    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	41	1	replace
203	[BUG]  [BUGGY]  ret  =  d  /(d  -  2.0);  d  =  p  /(d  -  2.0);  [FE]  IllegalArgumentException  [FE]    AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  2.0);  d  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(d  -  2.0);  d  =  p  /(d  -  2.0);	  ret    =    p    /(d    -    2.0);    d    =    p    /(d    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	41	1	replace
204	[BUG]  [BUGGY]  Double  ret  =  p  /(d  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  Double  ret  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	Double  ret  =  p  /(d  -  2.0);	  ret    =    p    /(d    -    2.0);    double    ret    =    p    /(d    -    2.0);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	36	None	replace
205	[BUG]  [BUGGY]  ret  =  getNumeratorDegreesOfFreedom(denominatorDegreesOfFreedom,  p);  [CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;  [FE]        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getNumeratorDegreesOfFreedom(denominatorDegreesOfFreedom,  p);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumeratorDegreesOfFreedom(denominatorDegreesOfFreedom,  p);	  ret    =    getNumeratorDegreesOfFreedom(p);    	non-compiled	[CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;	66	None	replace
206	[BUG]  [BUGGY]  ret  =  p  /(d  -  1.0);  Double  p  =  p  /(d  -  1.0);  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  1.0);  Double  p  =  p  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    -    1.0);    Double  p  =  p  /(d  -  1.0);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	16	None	add
207	[BUG]  [BUGGY]  ret  =  p  /(d  *  2.0);  double  p  =  p  /(d  *  2.0);  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]    AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  *  2.0);  double  p  =  p  /(d  *  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    *    2.0);    double  p  =  p  /(d  *  2.0);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	14	None	add
208	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  *  2.0);  d  =  p  /(d  *  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    p    /(d    *    2.0);    d  =  p  /(d  *  2.0);	  	compilable	  [FE]  IllegalArgumentException  	14	3	add
209	[BUG]  [BUGGY]  ret  =  p  /(d  *  2.0);  d  =  p  /(d  *  2.0);  [FE]  IllegalArgumentException  [FE]      AssertionFailedError    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  *  2.0);  d  =  p  /(d  *  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    *    2.0);    d  =  p  /(d  *  2.0);	  	compilable	  [FE]  IllegalArgumentException  	14	3	add
210	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  3.0);  double  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  3.0);  double  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        ret    =    d    /(p    -    3.0);    double  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	27	None	add
211	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  3.0);  Ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);  [CE]  cannot  find  symbol  Ret  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  3.0);  Ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        ret    =    d    /(p    -    3.0);    Ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);	  	non-compiled	[CE]  cannot  find  symbol  Ret	27	None	add
212	[BUG]  [BUGGY]  ret  =  getNumberDegreesOfFreedom()  +  1;  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getNumberDegreesOfFreedom()  +  1;  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumberDegreesOfFreedom()  +  1;	  ret    =    getNumberDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
213	[BUG]  [BUGGY]  d  =  getNumeratorDegreesOfFreedom(denominatorDegreesOfFreedom,  p);  [CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getNumeratorDegreesOfFreedom(denominatorDegreesOfFreedom,  p);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumeratorDegreesOfFreedom(denominatorDegreesOfFreedom,  p);	  d    =    getNumeratorDegreesOfFreedom(p);    	non-compiled	[CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;	54	None	replace
214	[BUG]  [BUGGY]  d  =  getNumeratorDegreesOfFreedom(x,  p);  [CE]  cannot  find  symbol  x  [FE]            IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getNumeratorDegreesOfFreedom(x,  p);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumeratorDegreesOfFreedom(x,  p);	  d    =    getNumeratorDegreesOfFreedom(p);    	non-compiled	[CE]  cannot  find  symbol  x	54	None	replace
215	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  Double  p  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  Double  p  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        ret    =    p    /(d    -    2.0);    Double  p  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	34	None	add
216	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  1.0);  p  =  d  /(p  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    d    /(p    -    1.0);    p  =  d  /(p  -  1.0);	  	compilable	  [FE]  IllegalArgumentException  	42	1	add
217	[BUG]  [BUGGY]  ret  =  d  /(p  -  1.0);  p  =  d  /(p  -  1.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  1.0);  p  =  d  /(p  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(p    -    1.0);    p  =  d  /(p  -  1.0);	  	compilable	  [FE]  IllegalArgumentException  	42	1	add
218	[BUG]  [BUGGY]  ret  =  d  /(p  -  1.0);  double  p  =  d  /(p  -  1.0);  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  1.0);  double  p  =  d  /(p  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(p    -    1.0);    double  p  =  d  /(p  -  1.0);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	42	None	add
219	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                d        =        getNumeratorDegreesOfFreedom();        p    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	59	1	add
220	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        p    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	59	1	add
221	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  1);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  /(p  -  1);	  ret    =    d    /(p    -    2.0);    ret    =    d    /(p    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	25	3	replace
222	[BUG]  [BUGGY]  ret  =  d  /(p  -  1);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  1);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(p  -  1);	  ret    =    d    /(p    -    2.0);    ret    =    d    /(p    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	25	3	replace
223	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  Double  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  Double  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        ret    =    d    /(p    -    2.0);    Double  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	24	None	add
224	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  Ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  [CE]  cannot  find  symbol  Ret  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  Ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        ret    =    d    /(p    -    2.0);    Ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);	  	non-compiled	[CE]  cannot  find  symbol  Ret	24	None	add
225	[BUG]  [BUGGY]  ret  =  p  /(d  <  <  1.0);  [CE]  illegal  start  of  type  [FE]                IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  <  <  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  p  /(d  <  <  1.0);	  ret    =    d    /(d    <    <    1.0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
226	[BUG]  [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom().doubleValue()  +  1;  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]                IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom().doubleValue()  +  1;  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getDenominatorDegreesOfFreedom().doubleValue()  +  1;	  double    d    =    getDenominatorDegreesOfFreedom().doubleValue();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	31	None	replace
227	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                ret        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    ret  =  getDenominatorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
228	[BUG]  [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                ret        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    ret  =  getDenominatorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	49	1	add
229	[BUG]  [BUGGY]  ret  =  d  /(d  -  1.0);  Double  ret  =  d  /(d  -  1.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  1.0);  Double  ret  =  d  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(d    -    1.0);    Double  ret  =  d  /(d  -  1.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	9	None	add
230	[BUG]  [BUGGY]  ret  =  d  /(d  -  1.0);  int  ret  =  d  /(d  -  1.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(d  -  1.0);  int  ret  =  d  /(d  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(d    -    1.0);    int  ret  =  d  /(d  -  1.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	9	None	add
231	[BUG]  [BUGGY]  d  =  getNumeratorDegreesOfFreedom()  +  2;  [CE]  variable  ret  might  not  have  been  initialized  [FE]        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getNumeratorDegreesOfFreedom()  +  2;  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumeratorDegreesOfFreedom()  +  2;	  d    =    getNumeratorDegreesOfFreedom()    +    1;    	non-compiled	[CE]  variable  ret  might  not  have  been  initialized	53	None	replace
232	[BUG]  [BUGGY]  ret  =  d  /(p  -  1.0);  Double  ret  =  d  /(p  -  1.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  1.0);  Double  ret  =  d  /(p  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(p    -    1.0);    Double  ret  =  d  /(p  -  1.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	42	None	add
233	[BUG]  [BUGGY]  ret  =  getNumberDegreesOfFreedom(p);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  getNumberDegreesOfFreedom(p);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumberDegreesOfFreedom(p);	  ret    =    getNumberDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
234	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                d        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    d  =  getDenominatorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
235	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        d    =    getNumeratorDegreesOfFreedom();    d  =  getDenominatorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	4	1	add
236	[BUG]  [BUGGY]  Double  d  =  getDenominatorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]            IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  Double  d  =  getDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	Double  d  =  getDenominatorDegreesOfFreedom();	  double    d    =    getDenominatorDegreesOfFreedom()    +    1;    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	64	None	replace
237	[BUG]  [BUGGY]  Integer  d  =  getNumeratorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  Integer  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	Integer  d  =  getNumeratorDegreesOfFreedom();	          d    =    getNumeratorDegreesOfFreedom();    int    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	65	None	replace
238	[BUG]  [BUGGY]  d  =  getNumberDegreesOfFreedom(p);  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getNumberDegreesOfFreedom(p);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumberDegreesOfFreedom(p);	  d    =    getNumberDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
239	[BUG]  [BUGGY]  double  ret  =  d  /(d  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  double  ret  =  d  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  ret  =  d  /(d  -  2.0);	  ret    =    p    /(d    -    2.0);    double    ret    =    p    /(d    -    2.0);    	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	36	None	replace
240	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  1.0);	  ret    =    d    /(p    -    2.0);    ret    =    d    /(p    -    3.0);    	compilable	  [FE]  IllegalArgumentException  	28	3	replace
241	[BUG]  [BUGGY]  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  1.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  1.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  1.0);	  ret    =    d    /(p    -    2.0);    ret    =    d    /(p    -    3.0);    	compilable	  [FE]  IllegalArgumentException  	28	3	replace
242	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  0.5);  ret  =  d  /(p  -  0.5);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  /(p  -  0.5);  ret  =  d  /(p  -  0.5);	  ret    =    d    /(p    -    2.0);    ret    =    d    /(p    -    3.0);    	compilable	  [FE]  IllegalArgumentException  	28	3	replace
243	[BUG]  [BUGGY]  ret  =  d  /(p  -  0.5);  ret  =  d  /(p  -  0.5);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  0.5);  ret  =  d  /(p  -  0.5);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(p  -  0.5);  ret  =  d  /(p  -  0.5);	  ret    =    d    /(p    -    2.0);    ret    =    d    /(p    -    3.0);    	compilable	  [FE]  IllegalArgumentException  	28	3	replace
244	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  int  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);  int  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        ret    =    d    /(p    -    2.0);    int  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	24	None	add
245	[BUG]  [BUGGY]  ret  =  d  /(p  *  2.0);  Ret  =  d  /(p  -  2.0);  [CE]  cannot  find  symbol  Ret  [FE]        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  *  2.0);  Ret  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(p  *  2.0);  Ret  =  d  /(p  -  2.0);	  ret    =    d    /(p    -    2.0);    Ret    =    d    /(p    -    2.0);    	non-compiled	[CE]  cannot  find  symbol  Ret	67	None	replace
246	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  p  =  getDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                d        =        getNumeratorDegreesOfFreedom();        p    =    getNumeratorDegreesOfFreedom();    d  =  getDenominatorDegreesOfFreedom();  p  =  getDenominatorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	59	1	add
247	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  p  =  getDenominatorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  p  =  getDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        p    =    getNumeratorDegreesOfFreedom();    d  =  getDenominatorDegreesOfFreedom();  p  =  getDenominatorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	59	1	add
248	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  double  d  =  getDenominatorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();  double  d  =  getDenominatorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        p    =    getNumeratorDegreesOfFreedom();    double  d  =  getDenominatorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	59	None	add
249	[BUG]  [BUGGY]  d  =  getNumeratorDegreesOfFreedom(p,  DEFINITION_DECEMBER);  [CE]  cannot  find  symbol  DEFINITION_DECEMBER  [FE]          IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  d  =  getNumeratorDegreesOfFreedom(p,  DEFINITION_DECEMBER);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumeratorDegreesOfFreedom(p,  DEFINITION_DECEMBER);	  d    =    getNumeratorDegreesOfFreedom(p);    	non-compiled	[CE]  cannot  find  symbol  DEFINITION_DECEMBER	54	None	replace
250	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  int  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  int  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        p    =    p    /(d    -    2.0);    int  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	37	None	add
251	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  Ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [CE]  cannot  find  symbol  Ret  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  Ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        p    =    p    /(d    -    2.0);    Ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);	  	non-compiled	[CE]  cannot  find  symbol  Ret	37	None	add
252	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  Double  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]        IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);  Double  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        p    =    p    /(d    -    2.0);    Double  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	37	None	add
253	[BUG]  [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom(p  +  1,  denominatorDegreesOfFreedom);  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]                IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom(p  +  1,  denominatorDegreesOfFreedom);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumeratorDegreesOfFreedom(p  +  1,  denominatorDegreesOfFreedom);	  double    d    =    getNumeratorDegreesOfFreedom(p);    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	56	None	replace
254	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  1);  ret  =  d  /(p  -  1);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  /(p  -  1);  ret  =  d  /(p  -  1);	  ret    =    d    /(p    -    2.0);    ret    =    d    /(p    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	25	3	replace
255	[BUG]  [BUGGY]  ret  =  d  /(p  -  1);  ret  =  d  /(p  -  1);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  1);  ret  =  d  /(p  -  1);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(p  -  1);  ret  =  d  /(p  -  1);	  ret    =    d    /(p    -    2.0);    ret    =    d    /(p    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	25	3	replace
256	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  2);  ret  =  d  /(p  -  2);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  /(p  -  2);  ret  =  d  /(p  -  2);	  ret    =    d    /(p    -    2.0);    ret    =    d    /(p    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	25	3	replace
257	[BUG]  [BUGGY]  ret  =  d  /(p  -  2);  ret  =  d  /(p  -  2);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  d  /(p  -  2);  ret  =  d  /(p  -  2);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(p  -  2);  ret  =  d  /(p  -  2);	  ret    =    d    /(p    -    2.0);    ret    =    d    /(p    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	25	3	replace
258	[BUG]  [BUGGY]  Double  p  =  p  /(d  -  2.0);  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]        IllegalArgumentException      [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  Double  p  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	Double  p  =  p  /(d  -  2.0);	  ret    =    p    /(d    -    2.0);    Double    p    =    p    /(d    -    2.0);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	62	None	replace
259	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  int  ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  int  ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        p    =    d    /(p    -    2.0);    int  ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	46	None	add
260	[BUG]  [BUGGY]  ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  Ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [CE]  cannot  find  symbol  Ret  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);  Ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        d        /(p        -        2.0);        p    =    d    /(p    -    2.0);    Ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);	  	non-compiled	[CE]  cannot  find  symbol  Ret	46	None	add
261	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                ret        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    ret  =  getDenominatorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
262	[BUG]  [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                ret        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    ret  =  getDenominatorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
263	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                ret        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    d  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
264	[BUG]  [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                ret        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    d  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	19	1	add
265	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	                d        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    d  =  getDenominatorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	57	1	add
266	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  d  =  getDenominatorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    d  =  getDenominatorDegreesOfFreedom();  ret  =  getDenominatorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	57	1	add
267	[BUG]  [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]          d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	                d        =        getNumeratorDegreesOfFreedom();        ret    =    getNumeratorDegreesOfFreedom();    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	57	None	add
268	[BUG]  [BUGGY]  n  =  getDenominatorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [CE]  cannot  find  symbol  n  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  n  =  getDenominatorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	n  =  getDenominatorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();	          d    =    getNumeratorDegreesOfFreedom();    p    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol  n	60	None	replace
269	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  int  ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  int  ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        ret    =    p    /(d    -    2.0);    int  ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	34	None	add
270	[BUG]  [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  Ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [CE]  cannot  find  symbol  Ret  [FE]      IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);  Ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret        =        p        /(d        -        2.0);        ret    =    p    /(d    -    2.0);    Ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);	  	non-compiled	[CE]  cannot  find  symbol  Ret	34	None	add
271	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  1);  ret  =  p  /(d  -  1);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  p  /(d  -  1);  ret  =  p  /(d  -  1);	  ret    =    p    /(d    -    2.0);    ret    =    p    /(d    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	35	2	replace
272	[BUG]  [BUGGY]  ret  =  p  /(d  -  1);  ret  =  p  /(d  -  1);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]      protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();        [BUGGY]  ret  =  p  /(d  -  1);  ret  =  p  /(d  -  1);  [BUGGY]      return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  p  /(d  -  1);  ret  =  p  /(d  -  1);	  ret    =    p    /(d    -    2.0);    ret    =    p    /(d    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	35	2	replace
