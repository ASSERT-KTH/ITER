bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  d  =  getDenominatorDegreesOfFreedom();  [CE]  variable  ret  might  not  have  been  initialized  [FE]              IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  d  =  getDenominatorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getDenominatorDegreesOfFreedom();	      d    =    getNumberDenominatorDegreesOfFreedom();    	non-compiled	[CE]  variable  ret  might  not  have  been  initialized	5	None	replace
2	[BUG]  [BUGGY]  d  =  getNumeratorDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  d  =  getNumeratorDenominatorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumeratorDenominatorDegreesOfFreedom();	      d    =    getNumberDenominatorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
3	[BUG]  [BUGGY]  d  =  getNumberDenominatorDegreesOfFreedom()  +  1;  [CE]  cannot  find  symbol  [FE]                  IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  d  =  getNumberDenominatorDegreesOfFreedom()  +  1;  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumberDenominatorDegreesOfFreedom()  +  1;	      d    =    getNumberDenominatorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
4	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	        d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	3	1	add
5	[BUG]  [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	        d    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	3	1	add
6	[BUG]  [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  double  d  =  getNumeratorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  double  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	        d    =    getNumeratorDegreesOfFreedom();    double  d  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	3	None	add
7	[BUG]  [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  d  =  getNumberDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	        d    =    getNumeratorDegreesOfFreedom();    d  =  getNumberDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
8	[BUG]  [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  Double  d  =  getNumeratorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  Double  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	        d    =    getNumeratorDegreesOfFreedom();    Double  d  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	3	None	add
9	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  d  /(d  -  1.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  /(d  -  1.0);	  ret    =    d    /(p    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	12	2	replace
10	[BUG]  [BUGGY]  ret  =  d  /(d  -  1.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  d  /(d  -  1.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(d  -  1.0);	  ret    =    d    /(p    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	12	2	replace
11	[BUG]  [BUGGY]  ret  =  d  /(d  <  <  0.0);  [CE]  illegal  start  of  type  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  d  /(d  <  <  0.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(d  <  <  0.0);	  ret    =    d    /    (d    <    <    2.0);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]  ret  =  d  /(d  <  <  1.0);  [CE]  illegal  start  of  type  [FE]            IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  d  /(d  <  <  1.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(d  <  <  1.0);	  ret    =    d    /    (d    <    <    2.0);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
13	[BUG]  [BUGGY]  double  d  =  getNumeratorDenominatorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  double  d  =  getNumeratorDenominatorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumeratorDenominatorDegreesOfFreedom();	      double    d    =    getNumberDenominatorDegreesOfFreedom();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	1	None	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  p  /(d  *  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  p  /(d  *  2.0);	  ret    =    p    /(d    -    2.0);    	compilable	  [FE]  AssertionFailedError  	14	1	replace
15	[BUG]  [BUGGY]  ret  =  p  /(d  *  2.0);  [FE]  AssertionFailedError  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  p  /(d  *  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  p  /(d  *  2.0);	  ret    =    p    /(d    -    2.0);    	compilable	  [FE]  AssertionFailedError  	14	1	replace
16	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  p  /(d  -  1.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  p  /(d  -  1.0);	  ret    =    p    /(d    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	14	2	replace
17	[BUG]  [BUGGY]  ret  =  p  /(d  -  1.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  p  /(d  -  1.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  p  /(d  -  1.0);	  ret    =    p    /(d    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	14	2	replace
18	[BUG]  [BUGGY]  ret  =  getNumberDenominatorDegreesOfFreedom()  /  denominatorDegreesOfFreedom;  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  getNumberDenominatorDegreesOfFreedom()  /  denominatorDegreesOfFreedom;  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumberDenominatorDegreesOfFreedom()  /  denominatorDegreesOfFreedom;	      ret    =    getNumberDenominatorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
19	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	        ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
20	[BUG]  [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	        ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
21	[BUG]  [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  double  ret  =  getNumeratorDegreesOfFreedom();  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  double  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	        ret    =    getNumeratorDegreesOfFreedom();    double  ret  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	7	None	add
22	[BUG]  [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	        ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumberDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
23	[BUG]  [BUGGY]  double  d  =  getNumberDegreesOfFreedom()  +  1;  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  double  d  =  getNumberDegreesOfFreedom()  +  1;  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumberDegreesOfFreedom()  +  1;	      double    d    =    getNumberDegreesOfFreedom();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	9	None	replace
24	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	11	1	add
25	[BUG]  [BUGGY]  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	11	1	add
26	[BUG]  [BUGGY]  ret  =  d  /(p  -  2.0);  double  ret  =  d  /(p  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  d  /(p  -  2.0);  double  ret  =  d  /(p  -  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(p    -    2.0);    double  ret  =  d  /(p  -  2.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	11	None	add
27	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  3.0);	  	compilable	  [FE]  IllegalArgumentException  	11	1	add
28	[BUG]  [BUGGY]  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  d  /(p  -  2.0);  ret  =  d  /(p  -  3.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(p    -    2.0);    ret  =  d  /(p  -  3.0);	  	compilable	  [FE]  IllegalArgumentException  	11	1	add
29	[BUG]  [BUGGY]  ret  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  getNumberDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumberDegreesOfFreedom();	      ret    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
30	[BUG]  [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom().doubleValue()  +  1;  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom().doubleValue()  +  1;  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumeratorDegreesOfFreedom().doubleValue()  +  1;	      double    d    =    getNumeratorDegreesOfFreedom().doubleValue();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	16	None	replace
31	[BUG]  [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom().doubleValue();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]            IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom().doubleValue();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getDenominatorDegreesOfFreedom().doubleValue();	      double    d    =    getNumeratorDegreesOfFreedom().doubleValue();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	16	None	replace
32	[BUG]  [BUGGY]  double  d  =  getNumberDegreesOfFreedom().doubleValue();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]              IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  double  d  =  getNumberDegreesOfFreedom().doubleValue();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumberDegreesOfFreedom().doubleValue();	      double    d    =    getNumeratorDegreesOfFreedom().doubleValue();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	16	None	replace
33	[BUG]  [BUGGY]  d  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  d  =  getNumberDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumberDegreesOfFreedom();	      d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
34	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	13	1	add
35	[BUG]  [BUGGY]  ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  p  /(d  -  2.0);  ret  =  p  /(d  -  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    -    2.0);    ret  =  p  /(d  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	13	1	add
36	[BUG]  [BUGGY]  ret  =  p  /(d  -  2.0);  double  ret  =  p  /(d  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  p  /(d  -  2.0);  double  ret  =  p  /(d  -  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    -    2.0);    double  ret  =  p  /(d  -  2.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	13	None	add
37	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	13	1	add
38	[BUG]  [BUGGY]  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  p  /(d  -  2.0);  p  =  p  /(d  -  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    -    2.0);    p  =  p  /(d  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	13	1	add
39	[BUG]  [BUGGY]  ret  =  p  /(d  -  2.0);  double  p  =  p  /(d  -  2.0);  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  p  /(d  -  2.0);  double  p  =  p  /(d  -  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    -    2.0);    double  p  =  p  /(d  -  2.0);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	13	None	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    p    /(d    -    2.0);    d  =  p  /(d  -  2.0);	  	compilable	  [FE]  AssertionFailedError  	13	3	add
41	[BUG]  [BUGGY]  ret  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);  [FE]  AssertionFailedError  [FE]            IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  p  /(d  -  2.0);  d  =  p  /(d  -  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    -    2.0);    d  =  p  /(d  -  2.0);	  	compilable	  [FE]  AssertionFailedError  	13	3	add
42	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  d  /(p  -  1.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret  =  d  /(p  -  1.0);	  ret    =    d    /(p    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	12	3	replace
43	[BUG]  [BUGGY]  ret  =  d  /(p  -  1.0);  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  d  /(p  -  1.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  d  /(p  -  1.0);	  ret    =    d    /(p    -    2.0);    	compilable	  [FE]  IllegalArgumentException  	12	3	replace
44	[BUG]  [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom().doubleValue()  +  2;  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom().doubleValue()  +  2;  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumeratorDegreesOfFreedom().doubleValue()  +  2;	      double    d    =    getNumeratorDegreesOfFreedom().doubleValue();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	16	None	replace
45	[BUG]  [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom().doubleValue()  +  3;  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]            IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom().doubleValue()  +  3;  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumeratorDegreesOfFreedom().doubleValue()  +  3;	      double    d    =    getNumeratorDegreesOfFreedom().doubleValue();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	16	None	replace
46	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	11	1	add
47	[BUG]  [BUGGY]  ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  d  /(p  -  2.0);  p  =  d  /(p  -  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(p    -    2.0);    p  =  d  /(p  -  2.0);	  	compilable	  [FE]  IllegalArgumentException  	11	1	add
48	[BUG]  [BUGGY]  ret  =  d  /(p  -  2.0);  Double  ret  =  d  /(p  -  2.0);  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  d  /(p  -  2.0);  Double  ret  =  d  /(p  -  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(p    -    2.0);    Double  ret  =  d  /(p  -  2.0);	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	11	None	add
49	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	        ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
50	[BUG]  [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	        ret    =    getNumeratorDegreesOfFreedom();    d  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	7	1	add
51	[BUG]  [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  Ret  =  getNumeratorDegreesOfFreedom();  [CE]  cannot  find  symbol  Ret  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  Ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	        ret    =    getNumeratorDegreesOfFreedom();    Ret  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol  Ret	7	None	add
52	[BUG]  [BUGGY]  double  d  =  getNumberDenominatorDegreesOfFreedom()  +  1;  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  double  d  =  getNumberDenominatorDegreesOfFreedom()  +  1;  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumberDenominatorDegreesOfFreedom()  +  1;	      double    d    =    getNumberDenominatorDegreesOfFreedom();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	1	None	replace
53	[BUG]  [BUGGY]  d  =  getNumeratorDegreesOfFreedom()  +  1;  [CE]  variable  ret  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  d  =  getNumeratorDegreesOfFreedom()  +  1;  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumeratorDegreesOfFreedom()  +  1;	      d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  variable  ret  might  not  have  been  initialized	4	None	replace
54	[BUG]  [BUGGY]  d  =  getNumeratorDegreesOfFreedom(p);  [CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  d  =  getNumeratorDegreesOfFreedom(p);  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	d  =  getNumeratorDegreesOfFreedom(p);	      d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;	4	None	replace
55	[BUG]  [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom()  +  1;  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom()  +  1;  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumeratorDegreesOfFreedom()  +  1;	      double    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	2	None	replace
56	[BUG]  [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom(p);  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]            IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom(p);  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getNumeratorDegreesOfFreedom(p);	      double    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	2	None	replace
57	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	        d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	3	1	add
58	[BUG]  [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	        d    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	3	1	add
59	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	add	        d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	3	1	add
60	[BUG]  [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  p  =  getNumeratorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	        d    =    getNumeratorDegreesOfFreedom();    p  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	3	1	add
61	[BUG]  [BUGGY]  ret  =  getNumeratorDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  getNumeratorDenominatorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumeratorDenominatorDegreesOfFreedom();	      ret    =    getNumberDenominatorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
62	[BUG]  [BUGGY]  ret  =  p  /(d  -  2.0);  Double  p  =  p  /(d  -  2.0);  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  p  /(d  -  2.0);  Double  p  =  p  /(d  -  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    p    /(d    -    2.0);    Double  p  =  p  /(d  -  2.0);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	13	None	add
63	[BUG]  [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  double  d  =  getNumeratorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  double  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	        ret    =    getNumeratorDegreesOfFreedom();    double  d  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	7	None	add
64	[BUG]  [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom()  +  1;  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom()  +  1;  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	double  d  =  getDenominatorDegreesOfFreedom()  +  1;	      double    d    =    getDenominatorDegreesOfFreedom();    	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	15	None	replace
65	[BUG]  [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  int  d  =  getNumeratorDegreesOfFreedom();  [CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]      d  =  getNumeratorDegreesOfFreedom();  int  d  =  getNumeratorDegreesOfFreedom();  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	        d    =    getNumeratorDegreesOfFreedom();    int  d  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  getInitialDomain(double)	3	None	add
66	[BUG]  [BUGGY]  ret  =  getNumeratorDegreesOfFreedom(p);  [CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  getNumeratorDegreesOfFreedom(p);  [BUGGY]    ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret  =  getNumeratorDegreesOfFreedom(p);	      ret    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;	8	None	replace
67	[BUG]  [BUGGY]  ret  =  d  /(p  -  2.0);  Ret  =  d  /(p  -  2.0);  [CE]  cannot  find  symbol  Ret  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();      [BUGGY]  ret  =  d  /(p  -  2.0);  Ret  =  d  /(p  -  2.0);  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	147	147	1	replace	ret    =    d    /(p    -    2.0);    Ret  =  d  /(p  -  2.0);	  	non-compiled	[CE]  cannot  find  symbol  Ret	11	None	add
