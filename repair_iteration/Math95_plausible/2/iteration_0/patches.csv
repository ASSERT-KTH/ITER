bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  p  <  Double.MAX_VALUE?  Double.POSITIVE_INFINITY  :  Double.MAX_VALUE;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	add	return  p  <  Double.MAX_VALUE?  Double.POSITIVE_INFINITY  :  Double.MAX_VALUE;	return  Double.MAX_VALUE;  	compilable	  [FE]  IllegalArgumentException  	3	1	replace
2	[BUG]  [BUGGY]  return  p  <  Double.MAX_VALUE?  Double.POSITIVE_INFINITY  :  Double.MAX_VALUE;  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  p  <  Double.MAX_VALUE?  Double.POSITIVE_INFINITY  :  Double.MAX_VALUE;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	return  p  <  Double.MAX_VALUE?  Double.POSITIVE_INFINITY  :  Double.MAX_VALUE;	return  Double.MAX_VALUE;  	compilable	  [FE]  IllegalArgumentException  	3	1	replace
3	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  p  <  Double.MIN_VALUE?  Double.MAX_VALUE  :  Double.MAX_VALUE;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	add	return  p  <  Double.MIN_VALUE?  Double.MAX_VALUE  :  Double.MAX_VALUE;	return  Double.MAX_VALUE;  	compilable	  [FE]  IllegalArgumentException  	3	1	replace
4	[BUG]  [BUGGY]  return  p  <  Double.MIN_VALUE?  Double.MAX_VALUE  :  Double.MAX_VALUE;  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  p  <  Double.MIN_VALUE?  Double.MAX_VALUE  :  Double.MAX_VALUE;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	return  p  <  Double.MIN_VALUE?  Double.MAX_VALUE  :  Double.MAX_VALUE;	return  Double.MAX_VALUE;  	compilable	  [FE]  IllegalArgumentException  	3	1	replace
5	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  p  <  Double.MAX_VALUE?  Double.MIN_VALUE  :  Double.MAX_VALUE;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	add	return  p  <  Double.MAX_VALUE?  Double.MIN_VALUE  :  Double.MAX_VALUE;	return  Double.MAX_VALUE;  	compilable	  [FE]  IllegalArgumentException  	3	3	replace
6	[BUG]  [BUGGY]  return  p  <  Double.MAX_VALUE?  Double.MIN_VALUE  :  Double.MAX_VALUE;  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  p  <  Double.MAX_VALUE?  Double.MIN_VALUE  :  Double.MAX_VALUE;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	return  p  <  Double.MAX_VALUE?  Double.MIN_VALUE  :  Double.MAX_VALUE;	return  Double.MAX_VALUE;  	compilable	  [FE]  IllegalArgumentException  	3	3	replace
7	[BUG]  [BUGGY]  return  p  >  Double.MAX_VALUE;  [CE]  incompatible  types  [FE]          IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  p  >  Double.MAX_VALUE;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	return  p  >  Double.MAX_VALUE;	return  Double.MAX_VALUE;  	non-compiled	[CE]  incompatible  types	3	None	replace
8	[BUG]  [BUGGY]    [CE]  missing  return  statement  [FE]            IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]    [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	  	return  Double.MAX_VALUE;  	non-compiled	[CE]  missing  return  statement	3	None	replace
9	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]    double  denominatorDegreesOfFreedom  =  getDenominatorDegreesOfFreedom();  [BUGGY]  return  Double.MAX_VALUE;  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	add	    double  denominatorDegreesOfFreedom  =  getDenominatorDegreesOfFreedom();		compilable	  [FE]  IllegalArgumentException  	4	1	add
10	[BUG]  [BUGGY]    double  denominatorDegreesOfFreedom  =  getDenominatorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]    double  denominatorDegreesOfFreedom  =  getDenominatorDegreesOfFreedom();  [BUGGY]  return  Double.MAX_VALUE;  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	    double  denominatorDegreesOfFreedom  =  getDenominatorDegreesOfFreedom();		compilable	  [FE]  IllegalArgumentException  	4	1	add
11	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]    double  m  =  getDomainUpperBound(p);  [BUGGY]  return  Double.MAX_VALUE;  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	add	    double  m  =  getDomainUpperBound(p);		compilable	  [FE]  StackOverflowError  	4	3	add
12	[BUG]  [BUGGY]    double  m  =  getDomainUpperBound(p);  [FE]  StackOverflowError  [FE]      IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]    double  m  =  getDomainUpperBound(p);  [BUGGY]  return  Double.MAX_VALUE;  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	    double  m  =  getDomainUpperBound(p);		compilable	  [FE]  StackOverflowError  	4	3	add
13	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]    Double  m  =  getDomainUpperBound(p);  [BUGGY]  return  Double.MAX_VALUE;  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	add	    Double  m  =  getDomainUpperBound(p);		compilable	  [FE]  StackOverflowError  	4	3	add
14	[BUG]  [BUGGY]    Double  m  =  getDomainUpperBound(p);  [FE]  StackOverflowError  [FE]        IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]    Double  m  =  getDomainUpperBound(p);  [BUGGY]  return  Double.MAX_VALUE;  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	    Double  m  =  getDomainUpperBound(p);		compilable	  [FE]  StackOverflowError  	4	3	add
15	[BUG]  [BUGGY]    double  denominatorDegreesOfFreedom  =  getDenominatorDegreesOfFreedom(p);  [CE]  method  getDenominatorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]    double  denominatorDegreesOfFreedom  =  getDenominatorDegreesOfFreedom(p);  [BUGGY]  return  Double.MAX_VALUE;  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	    double  denominatorDegreesOfFreedom  =  getDenominatorDegreesOfFreedom(p);		non-compiled	[CE]  method  getDenominatorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;	4	None	add
16	[BUG]  [BUGGY]    double  denominatorDegreesOfFreedom  =  getDestinatorDegreesOfFreedom(p);  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]    double  denominatorDegreesOfFreedom  =  getDestinatorDegreesOfFreedom(p);  [BUGGY]  return  Double.MAX_VALUE;  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	    double  denominatorDegreesOfFreedom  =  getDestinatorDegreesOfFreedom(p);		non-compiled	[CE]  cannot  find  symbol	4	None	add
17	[BUG]  [BUGGY]    double  denominatorDegreesOfFreedom  =  getNumeratorDegreesOfFreedom(p);  [CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]    double  denominatorDegreesOfFreedom  =  getNumeratorDegreesOfFreedom(p);  [BUGGY]  return  Double.MAX_VALUE;  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	    double  denominatorDegreesOfFreedom  =  getNumeratorDegreesOfFreedom(p);		non-compiled	[CE]  method  getNumeratorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;	4	None	add
18	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]    double  denominatorDegreesOfFreedom  =  getNumeratorDegreesOfFreedom();  [BUGGY]  return  Double.MAX_VALUE;  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	add	    double  denominatorDegreesOfFreedom  =  getNumeratorDegreesOfFreedom();		compilable	  [FE]  IllegalArgumentException  	4	1	add
19	[BUG]  [BUGGY]    double  denominatorDegreesOfFreedom  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]    double  denominatorDegreesOfFreedom  =  getNumeratorDegreesOfFreedom();  [BUGGY]  return  Double.MAX_VALUE;  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	    double  denominatorDegreesOfFreedom  =  getNumeratorDegreesOfFreedom();		compilable	  [FE]  IllegalArgumentException  	4	1	add
20	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  Double.MIN_VALUE;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	add	return  Double.MIN_VALUE;	return  Double.MAX_VALUE;  	compilable	  [FE]  IllegalArgumentException  	3	3	replace
21	[BUG]  [BUGGY]  return  Double.MIN_VALUE;  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  Double.MIN_VALUE;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	return  Double.MIN_VALUE;	return  Double.MAX_VALUE;  	compilable	  [FE]  IllegalArgumentException  	3	3	replace
22	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  getDomainUpperBound(p);  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	add	return  getDomainUpperBound(p);	return  Double.MAX_VALUE;  	compilable	  [FE]  StackOverflowError  	3	3	replace
23	[BUG]  [BUGGY]  return  getDomainUpperBound(p);  [FE]  StackOverflowError  [FE]      IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  getDomainUpperBound(p);  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	return  getDomainUpperBound(p);	return  Double.MAX_VALUE;  	compilable	  [FE]  StackOverflowError  	3	3	replace
24	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  Float.MAX_VALUE;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	add	return  Float.MAX_VALUE;	return  Double.MAX_VALUE;  	compilable	  [FE]  IllegalArgumentException  	3	1	replace
25	[BUG]  [BUGGY]  return  Float.MAX_VALUE;  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  Float.MAX_VALUE;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	return  Float.MAX_VALUE;	return  Double.MAX_VALUE;  	compilable	  [FE]  IllegalArgumentException  	3	1	replace
26	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  Float.MIN_VALUE;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	add	return  Float.MIN_VALUE;	return  Double.MAX_VALUE;  	compilable	  [FE]  IllegalArgumentException  	3	3	replace
27	[BUG]  [BUGGY]  return  Float.MIN_VALUE;  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  Float.MIN_VALUE;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	return  Float.MIN_VALUE;	return  Double.MAX_VALUE;  	compilable	  [FE]  IllegalArgumentException  	3	3	replace
28	[BUG]  [BUGGY]    double  denominatorDegreesOfFreedom  =  getDenominatorDegreesOfFreedom().doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]    double  denominatorDegreesOfFreedom  =  getDenominatorDegreesOfFreedom().doubleValue();  [BUGGY]  return  Double.MAX_VALUE;  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	    double  denominatorDegreesOfFreedom  =  getDenominatorDegreesOfFreedom().doubleValue();		non-compiled	[CE]  double  cannot  be  dereferenced	4	None	add
29	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  Double.MAX_VALUE  /  getDomainUpperBound(p);  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	add	return  Double.MAX_VALUE  /  getDomainUpperBound(p);	return  Double.MAX_VALUE;  	compilable	  [FE]  StackOverflowError  	3	3	replace
30	[BUG]  [BUGGY]  return  Double.MAX_VALUE  /  getDomainUpperBound(p);  [FE]  StackOverflowError  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  Double.MAX_VALUE  /  getDomainUpperBound(p);  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	return  Double.MAX_VALUE  /  getDomainUpperBound(p);	return  Double.MAX_VALUE;  	compilable	  [FE]  StackOverflowError  	3	3	replace
31	[BUG]  [BUGGY]  return  Double.MAX_VALUE  /  getDomainUpperBound();  [CE]  no  suitable  method  found  for  getDomainUpperBound()  [FE]      IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  Double.MAX_VALUE  /  getDomainUpperBound();  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	return  Double.MAX_VALUE  /  getDomainUpperBound();	return  Double.MAX_VALUE;  	non-compiled	[CE]  no  suitable  method  found  for  getDomainUpperBound()	3	None	replace
32	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  Double.MAX_VALUE  /  2.0;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	add	return  Double.MAX_VALUE  /  2.0;	return  Double.MAX_VALUE;  	compilable	  [FE]  IllegalArgumentException  	3	1	replace
33	[BUG]  [BUGGY]  return  Double.MAX_VALUE  /  2.0;  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException  [CONTEXT]  protected  double  getDomainUpperBound(double  p)  {  [BUGGY]  return  Double.MAX_VALUE  /  2.0;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getDomainUpperBound  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	132	132	1	replace	return  Double.MAX_VALUE  /  2.0;	return  Double.MAX_VALUE;  	compilable	  [FE]  IllegalArgumentException  	3	1	replace
