bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ret  =  getNumberDegreesOfFreedom().doubleValue();  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  ret  =  getNumberDegreesOfFreedom().doubleValue();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	ret  =  getNumberDegreesOfFreedom().doubleValue();	      ret    =    getNumeratorDegreesOfFreedom().doubleValue();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
2	[BUG]  [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom(m,  p);  [CE]  cannot  find  symbol  m  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom(m,  p);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	double  d  =  getDenominatorDegreesOfFreedom(m,  p);	  double    d    =    getDenominatorDegreesOfFreedom(p);    	non-compiled	[CE]  cannot  find  symbol  m	9	None	replace
3	[BUG]  [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom(p,  denominatorDegreesOfFreedom);  [CE]  method  getDenominatorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom(p,  denominatorDegreesOfFreedom);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	double  d  =  getDenominatorDegreesOfFreedom(p,  denominatorDegreesOfFreedom);	  double    d    =    getDenominatorDegreesOfFreedom(p);    	non-compiled	[CE]  method  getDenominatorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;	9	None	replace
4	[BUG]  [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom(p,  m);  [CE]  cannot  find  symbol  m  [FE]            IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom(p,  m);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	double  d  =  getDenominatorDegreesOfFreedom(p,  m);	  double    d    =    getDenominatorDegreesOfFreedom(p);    	non-compiled	[CE]  cannot  find  symbol  m	9	None	replace
5	[BUG]  [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom(p,  x);  [CE]  cannot  find  symbol  x  [FE]              IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom(p,  x);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	double  d  =  getDenominatorDegreesOfFreedom(p,  x);	  double    d    =    getDenominatorDegreesOfFreedom(p);    	non-compiled	[CE]  cannot  find  symbol  x	9	None	replace
6	[BUG]  [BUGGY]  ret  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  ret  =  getNumberDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	ret  =  getNumberDegreesOfFreedom();	      ret    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
7	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  Double  d  =  getDenominatorDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	add	Double  d  =  getDenominatorDegreesOfFreedom();	      Double    d    =    getNumeratorDegreesOfFreedom();    	compilable	  [FE]  IllegalArgumentException  	7	1	replace
8	[BUG]  [BUGGY]  Double  d  =  getDenominatorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  Double  d  =  getDenominatorDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	Double  d  =  getDenominatorDegreesOfFreedom();	      Double    d    =    getNumeratorDegreesOfFreedom();    	compilable	  [FE]  IllegalArgumentException  	7	1	replace
9	[BUG]  [BUGGY]  Double  d  =  getNumberDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  Double  d  =  getNumberDenominatorDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	Double  d  =  getNumberDenominatorDegreesOfFreedom();	      Double    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
10	[BUG]  [BUGGY]  double  d  =  getNumeratorDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  double  d  =  getNumeratorDenominatorDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	double  d  =  getNumeratorDenominatorDegreesOfFreedom();	      double    d    =    getNumberDenominatorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
11	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	add	        ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	3	1	add
12	[BUG]  [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	        ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumeratorDegreesOfFreedom();	  	compilable	  [FE]  IllegalArgumentException  	3	1	add
13	[BUG]  [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  double  ret  =  getNumeratorDegreesOfFreedom();  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  double  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	        ret    =    getNumeratorDegreesOfFreedom();    double  ret  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	3	None	add
14	[BUG]  [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  ret  =  getNumberDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	        ret    =    getNumeratorDegreesOfFreedom();    ret  =  getNumberDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
15	[BUG]  [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  Ret  =  getNumeratorDegreesOfFreedom();  [CE]  cannot  find  symbol  Ret  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  Ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	        ret    =    getNumeratorDegreesOfFreedom();    Ret  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol  Ret	3	None	add
16	[BUG]  [BUGGY]  double  d  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  double  d  =  getNumberDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	double  d  =  getNumberDegreesOfFreedom();	      double    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
17	[BUG]  [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom().doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom().doubleValue();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	double  d  =  getNumeratorDegreesOfFreedom().doubleValue();	      double    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
18	[BUG]  [BUGGY]  ret  =  getDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  d  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  ret  =  getDenominatorDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	ret  =  getDenominatorDegreesOfFreedom();	      ret    =    getNumberDenominatorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol  d	8	None	replace
19	[BUG]  [BUGGY]  ret  =  getNumeratorDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  ret  =  getNumeratorDenominatorDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	ret  =  getNumeratorDenominatorDegreesOfFreedom();	      ret    =    getNumberDenominatorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
20	[BUG]  [BUGGY]  Double  d  =  getNumberDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  Double  d  =  getNumberDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	Double  d  =  getNumberDegreesOfFreedom();	      Double    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
21	[BUG]  [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom(p,  numeratorDegreesOfFreedom);  [CE]  method  getDenominatorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom(p,  numeratorDegreesOfFreedom);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	double  d  =  getDenominatorDegreesOfFreedom(p,  numeratorDegreesOfFreedom);	  double    d    =    getDenominatorDegreesOfFreedom(p);    	non-compiled	[CE]  method  getDenominatorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;	9	None	replace
22	[BUG]  [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom(p,  ret);  [CE]  method  getDenominatorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  double  d  =  getDenominatorDegreesOfFreedom(p,  ret);  [BUGGY]      ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	double  d  =  getDenominatorDegreesOfFreedom(p,  ret);	  double    d    =    getDenominatorDegreesOfFreedom(p);    	non-compiled	[CE]  method  getDenominatorDegreesOfFreedom  in  class  FDistributionImpl  cannot  be  applied  to  given  types;	9	None	replace
23	[BUG]  [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  ReflectionImpl  ret  =  getNumeratorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  ReflectionImpl  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	        ret    =    getNumeratorDegreesOfFreedom();    ReflectionImpl  ret  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
24	[BUG]  [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  Double  ret  =  getNumeratorDegreesOfFreedom();  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  Double  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	        ret    =    getNumeratorDegreesOfFreedom();    Double  ret  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	3	None	add
25	[BUG]  [BUGGY]  ret  =  getNumeratorDegreesOfFreedom().doubleValue()  +  1;  [CE]  double  cannot  be  dereferenced  [FE]                IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  ret  =  getNumeratorDegreesOfFreedom().doubleValue()  +  1;  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	ret  =  getNumeratorDegreesOfFreedom().doubleValue()  +  1;	      ret    =    getNumeratorDegreesOfFreedom().doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	6	None	replace
26	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom()  +  1;  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	add	double  d  =  getNumeratorDegreesOfFreedom()  +  1;	      double    d    =    getNumeratorDegreesOfFreedom();    	compilable	  [FE]  IllegalArgumentException  	1	1	replace
27	[BUG]  [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom()  +  1;  [FE]  IllegalArgumentException  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  double  d  =  getNumeratorDegreesOfFreedom()  +  1;  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	double  d  =  getNumeratorDegreesOfFreedom()  +  1;	      double    d    =    getNumeratorDegreesOfFreedom();    	compilable	  [FE]  IllegalArgumentException  	1	1	replace
28	[BUG]  [BUGGY]  Double  d  =  getNumeratorDegreesOfFreedom().doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]  Double  d  =  getNumeratorDegreesOfFreedom().doubleValue();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	Double  d  =  getNumeratorDegreesOfFreedom().doubleValue();	      Double    d    =    getNumeratorDegreesOfFreedom();    	non-compiled	[CE]  double  cannot  be  dereferenced	7	None	replace
29	[BUG]  [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  int  ret  =  getNumeratorDegreesOfFreedom();  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;    [BUGGY]      ret  =  getNumeratorDegreesOfFreedom();  int  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]    double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	145	145	1	replace	        ret    =    getNumeratorDegreesOfFreedom();    int  ret  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	3	None	add
