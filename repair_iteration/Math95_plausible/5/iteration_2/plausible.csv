9	[BUG]    [BUGGY]    return    ret    *    denominatorDegreesOfFreedom;    [FE]    IllegalArgumentException    [FE]        IllegalArgumentException        [CONTEXT]        protected    double    getInitialDomain(double    p)    {    double    ret;    double    d    =    getDenominatorDegreesOfFreedom();    ret    =    d    /    (d    -    2.0);        [BUGGY]    return    ret    *    denominatorDegreesOfFreedom;    [BUGGY]        }    [CLASS]    FDistributionImpl    [METHOD]    getInitialDomain    [RETURN_TYPE]    double    double    p    [VARIABLES]    double    d    denominatorDegreesOfFreedom    m    n    numeratorDegreesOfFreedom    p    ret    x    long    serialVersionUID    boolean    	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  p  *  denominatorDegreesOfFreedom;	  return    ret    *    denominatorDegreesOfFreedom;    	plausible		15	0
32	[BUG]    [BUGGY]    return    p    /    denominatorDegrees_OfFreedom;    [CE]    cannot    find    symbol    denominatorDegrees_OfFreedom    [FE]                                IllegalArgumentException        [CONTEXT]        protected    double    getInitialDomain(double    p)    {    double    ret;    double    d    =    getDenominatorDegreesOfFreedom();    ret    =    d    /    (d    -    2.0);        [BUGGY]    return    p    /    denominatorDegrees_OfFreedom;    [BUGGY]        }    [CLASS]    FDistributionImpl    [METHOD]    getInitialDomain    [RETURN_TYPE]    double    double    p    [VARIABLES]    double    d    denominatorDegreesOfFreedom    m    n    numeratorDegreesOfFreedom    p    ret    x    long    serialVersionUID    boolean    	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  p  /  d;	  return    p    /    denominatorDegrees_OfFreedom;    	plausible		11	0
108	[BUG]    [BUGGY]    return    ret    /    p;    [FE]    IllegalArgumentException    [FE]                    IllegalArgumentException        [CONTEXT]        protected    double    getInitialDomain(double    p)    {    double    ret;    double    d    =    getDenominatorDegreesOfFreedom();    ret    =    d    /    (d    -    2.0);        [BUGGY]    return    ret    /    p;    [BUGGY]        }    [CLASS]    FDistributionImpl    [METHOD]    getInitialDomain    [RETURN_TYPE]    double    double    p    [VARIABLES]    double    d    denominatorDegreesOfFreedom    m    n    numeratorDegreesOfFreedom    p    ret    x    long    serialVersionUID    boolean    	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  d  /  p;	  return    ret    /    p;    	plausible		7	0
