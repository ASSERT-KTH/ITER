bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	add	return  ret  /  denominatorDegreesOfFreedom;	return  ret;  	compilable	  [FE]  IllegalArgumentException  	9	1	replace
2	[BUG]  [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  ret  /  denominatorDegreesOfFreedom;	return  ret;  	compilable	  [FE]  IllegalArgumentException  	9	1	replace
3	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  [BUGGY]  return  ret  -  p;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	add	return  ret  -  p;	return  ret;  	compilable	  [FE]  IllegalArgumentException  	9	1	replace
4	[BUG]  [BUGGY]  return  ret  -  p;  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  [BUGGY]  return  ret  -  p;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  ret  -  p;	return  ret;  	compilable	  [FE]  IllegalArgumentException  	9	1	replace
5	[BUG]  [BUGGY]    [CE]  missing  return  statement  [FE]            IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  [BUGGY]    [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	  	return  ret;  	non-compiled	[CE]  missing  return  statement	9	None	replace
6	[BUG]  [BUGGY]    ret  =  getNumberDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  [BUGGY]    ret  =  getNumberDenominatorDegreesOfFreedom();  [BUGGY]  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	    ret  =  getNumberDenominatorDegreesOfFreedom();		non-compiled	[CE]  cannot  find  symbol	10	None	add
7	[BUG]  [BUGGY]    ret  =  getNemeratorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  [BUGGY]    ret  =  getNemeratorDegreesOfFreedom();  [BUGGY]  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	    ret  =  getNemeratorDegreesOfFreedom();		non-compiled	[CE]  cannot  find  symbol	10	None	add
8	[BUG]  [BUGGY]    ret  =  getNumeratorDegreesOfFreedom().doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  [BUGGY]    ret  =  getNumeratorDegreesOfFreedom().doubleValue();  [BUGGY]  return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	    ret  =  getNumeratorDegreesOfFreedom().doubleValue();		non-compiled	[CE]  double  cannot  be  dereferenced	10	None	add
9	[BUG]  [BUGGY]  return  ret  /  denominatorDegreesOfFreedom.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  [BUGGY]  return  ret  /  denominatorDegreesOfFreedom.doubleValue();  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  ret  /  denominatorDegreesOfFreedom.doubleValue();	return  ret;  	non-compiled	[CE]  double  cannot  be  dereferenced	9	None	replace
10	[BUG]  [BUGGY]  return  ret  /  denominatorDegrees_OfFreedom;  [CE]  cannot  find  symbol  denominatorDegrees_OfFreedom  [FE]      IllegalArgumentException  [CONTEXT]  protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  [BUGGY]  return  ret  /  denominatorDegrees_OfFreedom;  [BUGGY]  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  ret  /  denominatorDegrees_OfFreedom;	return  ret;  	non-compiled	[CE]  cannot  find  symbol  denominatorDegrees_OfFreedom	9	None	replace
