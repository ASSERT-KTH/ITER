bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  d  /  denominatorDegreesOfFreedom.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  d  /  denominatorDegreesOfFreedom.doubleValue();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  d  /  denominatorDegreesOfFreedom.doubleValue();	  return    ret    /    denominatorDegreesOfFreedom.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	9	None	replace
2	[BUG]  [BUGGY]  return  p  /  denominatorDegreesOfFreedom.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  p  /  denominatorDegreesOfFreedom.doubleValue();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  p  /  denominatorDegreesOfFreedom.doubleValue();	  return    ret    /    denominatorDegreesOfFreedom.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	9	None	replace
3	[BUG]  [BUGGY]  return  ret  /  d.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  /  d.doubleValue();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  ret  /  d.doubleValue();	  return    ret    /    denominatorDegreesOfFreedom.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	9	None	replace
4	[BUG]  [BUGGY]  return  ret  *  denominatorDegreesOfFreedom.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]              IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  *  denominatorDegreesOfFreedom.doubleValue();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  ret  *  denominatorDegreesOfFreedom.doubleValue();	  return    ret    /    denominatorDegreesOfFreedom.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	9	None	replace
5	[BUG]  [BUGGY]  ret  =  getNumberDenominatorDegreesOfFreedom().doubleValue();  [CE]  cannot  find  symbol  [FE]                IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  ret  =  getNumberDenominatorDegreesOfFreedom().doubleValue();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	ret  =  getNumberDenominatorDegreesOfFreedom().doubleValue();	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
6	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  /  p;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	add	return  ret  /  p;	  return    ret    /    denominatorDegrees_OfFreedom;    	compilable	  [FE]  IllegalArgumentException  	10	1	replace
7	[BUG]  [BUGGY]  return  ret  /  p;  [FE]  IllegalArgumentException  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  /  p;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  ret  /  p;	  return    ret    /    denominatorDegrees_OfFreedom;    	compilable	  [FE]  IllegalArgumentException  	10	1	replace
8	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  /  d;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	add	return  ret  /  d;	  return    ret    /    denominatorDegrees_OfFreedom;    	compilable	  [FE]  IllegalArgumentException  	10	1	replace
9	[BUG]  [BUGGY]  return  ret  /  d;  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  /  d;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  ret  /  d;	  return    ret    /    denominatorDegrees_OfFreedom;    	compilable	  [FE]  IllegalArgumentException  	10	1	replace
10	[BUG]  [BUGGY]  return  d  /  denominatorDegrees_OfFreedom;  [CE]  cannot  find  symbol  denominatorDegrees_OfFreedom  [FE]              IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  d  /  denominatorDegrees_OfFreedom;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  d  /  denominatorDegrees_OfFreedom;	  return    ret    /    denominatorDegrees_OfFreedom;    	non-compiled	[CE]  cannot  find  symbol  denominatorDegrees_OfFreedom	10	None	replace
11	[BUG]  [BUGGY]  return  p  /  denominatorDegrees_OfFreedom;  [CE]  cannot  find  symbol  denominatorDegrees_OfFreedom  [FE]                IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  p  /  denominatorDegrees_OfFreedom;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  p  /  denominatorDegrees_OfFreedom;	  return    ret    /    denominatorDegrees_OfFreedom;    	non-compiled	[CE]  cannot  find  symbol  denominatorDegrees_OfFreedom	10	None	replace
12	[BUG]  [BUGGY]  ret  =  getNumeratorDegreesOfFreedom().doubleValue()  +  1;  [CE]  double  cannot  be  dereferenced  [FE]                IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  ret  =  getNumeratorDegreesOfFreedom().doubleValue()  +  1;  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	ret  =  getNumeratorDegreesOfFreedom().doubleValue()  +  1;	      ret    =    getNumeratorDegreesOfFreedom().doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
13	[BUG]  [BUGGY]  ret  =  getNemeratorDegreesOfFreedom()  /  denominatorDegreesOfFreedom;  [CE]  cannot  find  symbol  [FE]              IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  ret  =  getNemeratorDegreesOfFreedom()  /  denominatorDegreesOfFreedom;  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	ret  =  getNemeratorDegreesOfFreedom()  /  denominatorDegreesOfFreedom;	      ret    =    getNemeratorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
14	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  *  denominatorDegreesOfFreedom;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	add	return  ret  *  denominatorDegreesOfFreedom;	  return    ret    /    denominatorDegreesOfFreedom;    	compilable	  [FE]  IllegalArgumentException  	2	1	replace
15	[BUG]  [BUGGY]  return  ret  *  denominatorDegreesOfFreedom;  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  *  denominatorDegreesOfFreedom;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  ret  *  denominatorDegreesOfFreedom;	  return    ret    /    denominatorDegreesOfFreedom;    	compilable	  [FE]  IllegalArgumentException  	2	1	replace
16	[BUG]  [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  ret  /  denominatorDegreesOfFreedom;  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  ret  /  denominatorDegreesOfFreedom;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    /    denominatorDegreesOfFreedom;    ret  /  denominatorDegreesOfFreedom;	  	non-compiled	[CE]  not  a  statement	1	None	add
17	[BUG]  [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  double  denominatorDegreesOfFreedom  =  getNumeratorDegreesOfFreedom();  [CE]  unreachable  statement  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  double  denominatorDegreesOfFreedom  =  getNumeratorDegreesOfFreedom();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    /    denominatorDegreesOfFreedom;    double  denominatorDegreesOfFreedom  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  unreachable  statement	1	None	add
18	[BUG]  [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  double  denominatorDegreesOfFreedom  =  getNumberDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  double  denominatorDegreesOfFreedom  =  getNumberDenominatorDegreesOfFreedom();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    /    denominatorDegreesOfFreedom;    double  denominatorDegreesOfFreedom  =  getNumberDenominatorDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
19	[BUG]  [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  double  denominatorDegreesOfFreedom  =  getNumeratorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  [CE]  unreachable  statement  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  double  denominatorDegreesOfFreedom  =  getNumeratorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    /    denominatorDegreesOfFreedom;    double  denominatorDegreesOfFreedom  =  getNumeratorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);	  	non-compiled	[CE]  unreachable  statement	1	None	add
20	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  p  -  ret;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	add	return  p  -  ret;	  return    ret    -    p;    	compilable	  [FE]  IllegalArgumentException  	4	3	replace
21	[BUG]  [BUGGY]  return  p  -  ret;  [FE]  IllegalArgumentException  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  p  -  ret;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  p  -  ret;	  return    ret    -    p;    	compilable	  [FE]  IllegalArgumentException  	4	3	replace
22	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  -  d;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	add	return  ret  -  d;	  return    ret    -    p;    	compilable	  [FE]  IllegalArgumentException  	4	3	replace
23	[BUG]  [BUGGY]  return  ret  -  d;  [FE]  IllegalArgumentException  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  -  d;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  ret  -  d;	  return    ret    -    p;    	compilable	  [FE]  IllegalArgumentException  	4	3	replace
24	[BUG]  [BUGGY]  return  ret  -  p;  ret  -  p;  [CE]  not  a  statement  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  -  p;  ret  -  p;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    -    p;    ret  -  p;	  	non-compiled	[CE]  not  a  statement	3	None	add
25	[BUG]  [BUGGY]  return  ret  -  p;  ret  =  getNumberDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  -  p;  ret  =  getNumberDenominatorDegreesOfFreedom();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    -    p;    ret  =  getNumberDenominatorDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
26	[BUG]  [BUGGY]  return  ret  -  p;  ret  =  getNumberDenominatorDegreesOfFreedom().doubleValue();  [CE]  cannot  find  symbol  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  -  p;  ret  =  getNumberDenominatorDegreesOfFreedom().doubleValue();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    -    p;    ret  =  getNumberDenominatorDegreesOfFreedom().doubleValue();	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
27	[BUG]  [BUGGY]  return  ret  -  p;  ret  /  p;  [CE]  not  a  statement  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  -  p;  ret  /  p;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    -    p;    ret  /  p;	  	non-compiled	[CE]  not  a  statement	3	None	add
28	[BUG]  [BUGGY]  return  ret  -  p;  ret  =  getNumberDenominatorDegreesOfFreedom()  +  p;  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  -  p;  ret  =  getNumberDenominatorDegreesOfFreedom()  +  p;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    -    p;    ret  =  getNumberDenominatorDegreesOfFreedom()  +  p;	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
29	[BUG]  [BUGGY]  return  ret  /  p.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  /  p.doubleValue();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return  ret  /  p.doubleValue();	  return    ret    /    denominatorDegreesOfFreedom.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	9	None	replace
30	[BUG]  [BUGGY]  ret  =  getDenominatorDegreesOfFreedom().doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]                IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  ret  =  getDenominatorDegreesOfFreedom().doubleValue();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	ret  =  getDenominatorDegreesOfFreedom().doubleValue();	      	non-compiled	[CE]  double  cannot  be  dereferenced	5	None	replace
31	[BUG]  [BUGGY]  ret  =  Math.min(ret,  p);  [CE]  missing  return  statement  [FE]                  IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  ret  =  Math.min(ret,  p);  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	ret  =  Math.min(ret,  p);	      	non-compiled	[CE]  missing  return  statement	5	None	replace
32	[BUG]  [BUGGY]  ret  =  Math.max(ret,  p);  [CE]  missing  return  statement  [FE]                    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  ret  =  Math.max(ret,  p);  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	ret  =  Math.max(ret,  p);	      	non-compiled	[CE]  missing  return  statement	5	None	replace
33	[BUG]  [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  ret  =  getNumeratorDegreesOfFreedom();  [CE]  unreachable  statement  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    /    denominatorDegreesOfFreedom;    ret  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  unreachable  statement	1	None	add
34	[BUG]  [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  ret  =  getDenominatorDegreesOfFreedom();  [CE]  unreachable  statement  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  ret  =  getDenominatorDegreesOfFreedom();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    /    denominatorDegreesOfFreedom;    ret  =  getDenominatorDegreesOfFreedom();	  	non-compiled	[CE]  unreachable  statement	1	None	add
35	[BUG]  [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  double  ret  =  getDenominatorDegreesOfFreedom();  [CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  double  ret  =  getDenominatorDegreesOfFreedom();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    /    denominatorDegreesOfFreedom;    double  ret  =  getDenominatorDegreesOfFreedom();	  	non-compiled	[CE]  variable  ret  is  already  defined  in  method  getInitialDomain(double)	1	None	add
36	[BUG]  [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  ret  =  getNumberDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  ret  =  getNumberDenominatorDegreesOfFreedom();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    /    denominatorDegreesOfFreedom;    ret  =  getNumberDenominatorDegreesOfFreedom();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
37	[BUG]  [BUGGY]  return  ret  -  p;  ret  =  getNumeratorDegreesOfFreedom();  [CE]  unreachable  statement  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  -  p;  ret  =  getNumeratorDegreesOfFreedom();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    -    p;    ret  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  unreachable  statement	3	None	add
38	[BUG]  [BUGGY]  return  ret  -  p;  double  p  =  getNumeratorDegreesOfFreedom();  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  -  p;  double  p  =  getNumeratorDegreesOfFreedom();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    -    p;    double  p  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	3	None	add
39	[BUG]  [BUGGY]  return  ret  -  p;  ret  =  getNumeratorDegreesOfFreedom().doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  -  p;  ret  =  getNumeratorDegreesOfFreedom().doubleValue();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    -    p;    ret  =  getNumeratorDegreesOfFreedom().doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	3	None	add
40	[BUG]  [BUGGY]  return  ret  -  p;  double  p  =  getNumberDenominatorDegreesOfFreedom();  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]          IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  -  p;  double  p  =  getNumberDenominatorDegreesOfFreedom();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    -    p;    double  p  =  getNumberDenominatorDegreesOfFreedom();	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	3	None	add
41	[BUG]  [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  double  denominatorDegreesOfFreedom  =  getDenominatorDegreesOfFreedom();  [CE]  unreachable  statement  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  /  denominatorDegreesOfFreedom;  double  denominatorDegreesOfFreedom  =  getDenominatorDegreesOfFreedom();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    /    denominatorDegreesOfFreedom;    double  denominatorDegreesOfFreedom  =  getDenominatorDegreesOfFreedom();	  	non-compiled	[CE]  unreachable  statement	1	None	add
42	[BUG]  [BUGGY]  return  ret  -  p;  double  p  =  getDenominatorDegreesOfFreedom();  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]    IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  -  p;  double  p  =  getDenominatorDegreesOfFreedom();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    -    p;    double  p  =  getDenominatorDegreesOfFreedom();	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	3	None	add
43	[BUG]  [BUGGY]  return  ret  -  p;  p  =  getNumeratorDegreesOfFreedom();  [CE]  unreachable  statement  [FE]      IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  -  p;  p  =  getNumeratorDegreesOfFreedom();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    -    p;    p  =  getNumeratorDegreesOfFreedom();	  	non-compiled	[CE]  unreachable  statement	3	None	add
44	[BUG]  [BUGGY]  return  ret  -  p;  double  p  =  getNumeratorDegreesOfFreedom().doubleValue();  [CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)  [FE]        IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  return  ret  -  p;  double  p  =  getNumeratorDegreesOfFreedom().doubleValue();  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	return    ret    -    p;    double  p  =  getNumeratorDegreesOfFreedom().doubleValue();	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  getInitialDomain(double)	3	None	add
45	[BUG]  [BUGGY]  ret  =  getNumeratorDenominatorDegreesOfFreedom();  [CE]  cannot  find  symbol  [FE]            IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  ret  =  getNumeratorDenominatorDegreesOfFreedom();  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	ret  =  getNumeratorDenominatorDegreesOfFreedom();	      ret    =    getNumberDenominatorDegreesOfFreedom();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
46	[BUG]  [BUGGY]  ret  =  getNumeratorDegreesOfFreedom().doubleValue()  +  denominatorDegreesOfFreedom;  [CE]  double  cannot  be  dereferenced  [FE]                IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  ret  =  getNumeratorDegreesOfFreedom().doubleValue()  +  denominatorDegreesOfFreedom;  [BUGGY]    return  ret;  }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	ret  =  getNumeratorDegreesOfFreedom().doubleValue()  +  denominatorDegreesOfFreedom;	      ret    =    getNumeratorDegreesOfFreedom().doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
47	[BUG]  [BUGGY]  ret  =  getDenominatorDegreesOfFreedom().doubleValue()  *  p;  [CE]  double  cannot  be  dereferenced  [FE]                IllegalArgumentException    [CONTEXT]    protected  double  getInitialDomain(double  p)  {  double  ret;  double  d  =  getDenominatorDegreesOfFreedom();  ret  =  d  /  (d  -  2.0);    [BUGGY]  ret  =  getDenominatorDegreesOfFreedom().doubleValue()  *  p;  [BUGGY]    }  [CLASS]  FDistributionImpl  [METHOD]  getInitialDomain  [RETURN_TYPE]  double  double  p  [VARIABLES]  double  d  denominatorDegreesOfFreedom  m  n  numeratorDegreesOfFreedom  p  ret  x  long  serialVersionUID  boolean  	projects/Math95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java	0.5773502691896258	148	148	1	replace	ret  =  getDenominatorDegreesOfFreedom().doubleValue()  *  p;	      	non-compiled	[CE]  double  cannot  be  dereferenced	5	None	replace
