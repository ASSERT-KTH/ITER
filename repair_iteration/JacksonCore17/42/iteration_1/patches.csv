bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status!=  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	add	if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status!=  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {	  if(status    ==    JsonWriteContext.STATUS_EXPECT_NAME    ||    status    ==    JsonWriteContext.STATUS_OK_AFTER_COMMA)    {    	compilable	  [FE]  JsonGenerationException  	10	2	replace
2	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status!=  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status!=  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status!=  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {	  if(status    ==    JsonWriteContext.STATUS_EXPECT_NAME    ||    status    ==    JsonWriteContext.STATUS_OK_AFTER_COMMA)    {    	compilable	  [FE]  JsonGenerationException  	10	2	replace
3	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA  ||  status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	add	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA  ||  status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {	  if(status    ==    JsonWriteContext.STATUS_EXPECT_NAME    ||    status    ==    JsonWriteContext.STATUS_OK_AFTER_COMMA)    {    	compilable	  [FE]  JsonGenerationException  	10	1	replace
4	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA  ||  status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA  ||  status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA  ||  status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {	  if(status    ==    JsonWriteContext.STATUS_EXPECT_NAME    ||    status    ==    JsonWriteContext.STATUS_OK_AFTER_COMMA)    {    	compilable	  [FE]  JsonGenerationException  	10	1	replace
5	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]        JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	add	if(status!=  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {	  if(status    ==    JsonWriteContext.STATUS_EXPECT_NAME    ||    status    ==    JsonWriteContext.STATUS_OK_AFTER_COMMA)    {    	compilable	  [FE]  JsonGenerationException  	10	2	replace
6	[BUG]  [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [FE]  JsonGenerationException  [FE]        JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status!=  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {	  if(status    ==    JsonWriteContext.STATUS_EXPECT_NAME    ||    status    ==    JsonWriteContext.STATUS_OK_AFTER_COMMA)    {    	compilable	  [FE]  JsonGenerationException  	10	2	replace
7	[BUG]  [BUGGY]  int  typeMsg  =  _writeContext.getTypeMsg();  [CE]  illegal  start  of  type  [FE]              JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  int  typeMsg  =  _writeContext.getTypeMsg();  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	int  typeMsg  =  _writeContext.getTypeMsg();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
8	[BUG]  [BUGGY]  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  [CE]  illegal  start  of  type  [FE]                JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	_reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
9	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                  JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  if(typeMsg!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	add	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  if(typeMsg!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  JsonGenerationException  	6	1	replace
10	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  if(typeMsg!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonGenerationException  [FE]                  JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  if(typeMsg!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  if(typeMsg!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  JsonGenerationException  	6	1	replace
11	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  if(typeMsg  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	add	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  if(typeMsg  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  JsonGenerationException  	6	1	replace
12	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  if(typeMsg  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonGenerationException  [FE]                    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  if(typeMsg  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  if(typeMsg  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  JsonGenerationException  	6	1	replace
13	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_ERROR)  {  [CE]  cannot  find  symbol  STATUS_ERROR  [FE]          JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_ERROR)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_ERROR)  {	  if(status    ==    JsonWriteContext.STATUS_WARNING)    {    	non-compiled	[CE]  cannot  find  symbol  STATUS_ERROR	3	None	replace
14	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_RESULT)  {  [CE]  cannot  find  symbol  STATUS_RESULT  [FE]            JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_RESULT)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_RESULT)  {	  if(status    ==    JsonWriteContext.STATUS_WARNING)    {    	non-compiled	[CE]  cannot  find  symbol  STATUS_RESULT	3	None	replace
15	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_FALSE)  {  [CE]  cannot  find  symbol  STATUS_FALSE  [FE]              JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_FALSE)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_FALSE)  {	  if(status    ==    JsonWriteContext.STATUS_WARNING)    {    	non-compiled	[CE]  cannot  find  symbol  STATUS_FALSE	3	None	replace
16	[BUG]  [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {  [CE]  illegal  start  of  expression  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status!=    JsonWriteContext.STATUS_EXPECT_NAME)    {    if(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
17	[BUG]  [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {  [CE]  illegal  start  of  expression  [FE]      JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status!=    JsonWriteContext.STATUS_EXPECT_NAME)    {    if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
18	[BUG]  [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {  if(status  >=  JsonWriteContext.STATUS_EXPECT_NAME)  {  [CE]  illegal  start  of  expression  [FE]        JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {  if(status  >=  JsonWriteContext.STATUS_EXPECT_NAME)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status!=    JsonWriteContext.STATUS_EXPECT_NAME)    {    if(status  >=  JsonWriteContext.STATUS_EXPECT_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
19	[BUG]  [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {  if(status  >>  JsonWriteContext.STATUS_EXPECT_NAME)  {  [CE]  illegal  start  of  expression  [FE]          JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {  if(status  >>  JsonWriteContext.STATUS_EXPECT_NAME)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status!=    JsonWriteContext.STATUS_EXPECT_NAME)    {    if(status  >>  JsonWriteContext.STATUS_EXPECT_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
20	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [CE]  illegal  start  of  expression  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status    ==    JsonWriteContext.STATUS_EXPECT_NAME    ||    status    ==    JsonWriteContext.STATUS_OK_AFTER_COMMA)    {    if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
21	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [CE]  illegal  start  of  expression  [FE]      JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status    ==    JsonWriteContext.STATUS_EXPECT_NAME    ||    status    ==    JsonWriteContext.STATUS_OK_AFTER_COMMA)    {    if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
22	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status!=  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [CE]  illegal  start  of  expression  [FE]        JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status!=  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status    ==    JsonWriteContext.STATUS_EXPECT_NAME    ||    status    ==    JsonWriteContext.STATUS_OK_AFTER_COMMA)    {    if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status!=  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
23	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [CE]  illegal  start  of  expression  [FE]          JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status    ==    JsonWriteContext.STATUS_EXPECT_NAME    ||    status    ==    JsonWriteContext.STATUS_OK_AFTER_COMMA)    {    if(status!=  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
24	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {  [CE]  illegal  start  of  expression  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status    ==    JsonWriteContext.STATUS_EXPECT_VALUE)    {    if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
25	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {  if(status!=  JsonWriteContext.STATUS_EXPECT_VALUE)  {  [CE]  illegal  start  of  expression  [FE]      JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {  if(status!=  JsonWriteContext.STATUS_EXPECT_VALUE)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status    ==    JsonWriteContext.STATUS_EXPECT_VALUE)    {    if(status!=  JsonWriteContext.STATUS_EXPECT_VALUE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
26	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {  if(status  >=  JsonWriteContext.STATUS_EXPECT_VALUE)  {  [CE]  illegal  start  of  expression  [FE]        JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {  if(status  >=  JsonWriteContext.STATUS_EXPECT_VALUE)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status    ==    JsonWriteContext.STATUS_EXPECT_VALUE)    {    if(status  >=  JsonWriteContext.STATUS_EXPECT_VALUE)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
27	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]        JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	add	if(status  ==  JsonWriteContext.STATUS_OK)  {	  if(status    ==    JsonWriteContext.STATUS_UNKNOWN)    {    	compilable	  [FE]  JsonGenerationException  	7	1	replace
28	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK)  {  [FE]  JsonGenerationException  [FE]        JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_OK)  {	  if(status    ==    JsonWriteContext.STATUS_UNKNOWN)    {    	compilable	  [FE]  JsonGenerationException  	7	1	replace
29	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_FOR_AS_NULL)  {  [CE]  cannot  find  symbol  STATUS_FOR_AS_NULL  [FE]          JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_FOR_AS_NULL)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_FOR_AS_NULL)  {	  if(status    ==    JsonWriteContext.STATUS_UNKNOWN)    {    	non-compiled	[CE]  cannot  find  symbol  STATUS_FOR_AS_NULL	7	None	replace
30	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_UNKNOWN  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [CE]  cannot  find  symbol  STATUS_UNKNOWN  [FE]        JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_UNKNOWN  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_UNKNOWN  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {	  if(status    ==    JsonWriteContext.STATUS_UNKNOWN)    {    	non-compiled	[CE]  cannot  find  symbol  STATUS_UNKNOWN	7	None	replace
31	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  }  [CE]  illegal  start  of  type  [FE]              JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  }  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  b  =  BYTE_BACKSLASH;  break;  }  [CE]  illegal  start  of  type  [FE]                JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  b  =  BYTE_BACKSLASH;  break;  }  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  b  =  BYTE_BACKSLASH;  break;  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_VALUE)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	add	if(status!=  JsonWriteContext.STATUS_EXPECT_VALUE)  {	  if(status!=    JsonWriteContext.STATUS_EXPECT_NAME)    {    	compilable	  [FE]  JsonGenerationException  	5	2	replace
34	[BUG]  [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_VALUE)  {  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_VALUE)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status!=  JsonWriteContext.STATUS_EXPECT_VALUE)  {	  if(status!=    JsonWriteContext.STATUS_EXPECT_NAME)    {    	compilable	  [FE]  JsonGenerationException  	5	2	replace
35	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE  ||  status  ==  JsonWriteContext.STATUS_ERROR)  {  [CE]  cannot  find  symbol  STATUS_ERROR  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE  ||  status  ==  JsonWriteContext.STATUS_ERROR)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE  ||  status  ==  JsonWriteContext.STATUS_ERROR)  {	  if(status    ==    JsonWriteContext.STATUS_EXPECT_VALUE)    {    	non-compiled	[CE]  cannot  find  symbol  STATUS_ERROR	2	None	replace
36	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	add	if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {	  if(status    ==    JsonWriteContext.STATUS_EXPECT_VALUE)    {    	compilable	  [FE]  JsonGenerationException  	2	1	replace
37	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {	  if(status    ==    JsonWriteContext.STATUS_EXPECT_VALUE)    {    	compilable	  [FE]  JsonGenerationException  	2	1	replace
38	[BUG]  [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {  int  typeMsg  =  _writeContext.getTypeMsg();  [CE]  illegal  start  of  expression  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {  int  typeMsg  =  _writeContext.getTypeMsg();  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status!=    JsonWriteContext.STATUS_EXPECT_NAME)    {    int  typeMsg  =  _writeContext.getTypeMsg();	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
39	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPR_RESULT)  {  [CE]  cannot  find  symbol  STATUS_EXPR_RESULT  [FE]          JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPR_RESULT)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_EXPR_RESULT)  {	  if(status    ==    JsonWriteContext.STATUS_NAME)    {    	non-compiled	[CE]  cannot  find  symbol  STATUS_EXPR_RESULT	8	None	replace
40	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_WARNING  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [CE]  cannot  find  symbol  STATUS_WARNING  [FE]          JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_WARNING  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_WARNING  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {	  if(status    ==    JsonWriteContext.STATUS_WARNING)    {    	non-compiled	[CE]  cannot  find  symbol  STATUS_WARNING	3	None	replace
41	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA  ||  status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [CE]  illegal  start  of  expression  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA  ||  status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status    ==    JsonWriteContext.STATUS_EXPECT_NAME    ||    status    ==    JsonWriteContext.STATUS_OK_AFTER_COMMA)    {    if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA  ||  status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
42	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  ||  status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [CE]  illegal  start  of  expression  [FE]      JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  ||  status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status    ==    JsonWriteContext.STATUS_EXPECT_NAME    ||    status    ==    JsonWriteContext.STATUS_OK_AFTER_COMMA)    {    ||  status  ==  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
43	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {  int  typeMsg  =  _writeContext.getTypeMsg();  [CE]  illegal  start  of  expression  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {  int  typeMsg  =  _writeContext.getTypeMsg();  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status    ==    JsonWriteContext.STATUS_EXPECT_VALUE)    {    int  typeMsg  =  _writeContext.getTypeMsg();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
44	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  [CE]  illegal  start  of  expression  [FE]      JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {  _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status    ==    JsonWriteContext.STATUS_EXPECT_VALUE)    {    _reportError( "Can  not   "+typeMsg+ ",  expecting  field  name ");	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
45	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	add	if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {	  if(status    ==    JsonWriteContext.STATUS_EXPECT_NAME    ||    status    ==    JsonWriteContext.STATUS_OK_AFTER_COMMA)    {    	compilable	  [FE]  JsonGenerationException  	10	1	replace
46	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {	  if(status    ==    JsonWriteContext.STATUS_EXPECT_NAME    ||    status    ==    JsonWriteContext.STATUS_OK_AFTER_COMMA)    {    	compilable	  [FE]  JsonGenerationException  	10	1	replace
47	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]        JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	add	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {	  if(status    ==    JsonWriteContext.STATUS_UNKNOWN)    {    	compilable	  [FE]  JsonGenerationException  	7	1	replace
48	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [FE]  JsonGenerationException  [FE]        JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {	  if(status    ==    JsonWriteContext.STATUS_UNKNOWN)    {    	compilable	  [FE]  JsonGenerationException  	7	1	replace
49	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_UNKNOWN  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  [CE]  cannot  find  symbol  STATUS_UNKNOWN  [FE]          JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_UNKNOWN  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_UNKNOWN  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {	  if(status    ==    JsonWriteContext.STATUS_UNKNOWN)    {    	non-compiled	[CE]  cannot  find  symbol  STATUS_UNKNOWN	7	None	replace
50	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(_outputTail  >=  _outputEnd)  {  break;  }  [CE]  break  outside  switch  or  loop  [FE]              JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(_outputTail  >=  _outputEnd)  {  break;  }  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(_outputTail  >=  _outputEnd)  {  break;  }	      	non-compiled	[CE]  break  outside  switch  or  loop	6	None	replace
51	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	add	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	      	compilable	  [FE]  JsonGenerationException  	6	1	replace
52	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  JsonGenerationException  [FE]                JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_COMMA)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	      	compilable	  [FE]  JsonGenerationException  	6	1	replace
53	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {  If(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {  If(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status    ==    JsonWriteContext.STATUS_EXPECT_VALUE)    {    If(status  ==  JsonWriteContext.STATUS_EXPECT_VALUE)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
54	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	add	if(status!=  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {	  if(status!=    JsonWriteContext.STATUS_EXPECT_NAME)    {    	compilable	  [FE]  JsonGenerationException  	5	2	replace
55	[BUG]  [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status!=  JsonWriteContext.STATUS_EXPECT_NAME  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_COLON)  {	  if(status!=    JsonWriteContext.STATUS_EXPECT_NAME)    {    	compilable	  [FE]  JsonGenerationException  	5	2	replace
56	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_MESSAGE)  {  [CE]  cannot  find  symbol  STATUS_MESSAGE  [FE]          JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_MESSAGE)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status  ==  JsonWriteContext.STATUS_MESSAGE)  {	  if(status    ==    JsonWriteContext.STATUS_NAME)    {    	non-compiled	[CE]  cannot  find  symbol  STATUS_MESSAGE	8	None	replace
57	[BUG]  [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {  If(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]    {  int  status  =  _writeContext.writeValue();    [BUGGY]  if(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {  If(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {  [BUGGY]    _reportError(   "Can  not     "+typeMsg+   ",  expecting  field  name   ");  }  if  (_cfgPrettyPrinter  ==  null)  {  byte  b;  switch  (status)  {  case  JsonWriteContext.STATUS_OK_AFTER_COMMA:  b  =  BYTE_COMMA;  break;  case  JsonWriteContext.STATUS_OK_AFTER_COLON:  b  =  BYTE_COLON;  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	927	927	1	replace	if(status!=    JsonWriteContext.STATUS_EXPECT_NAME)    {    If(status!=  JsonWriteContext.STATUS_EXPECT_NAME)  {	  	non-compiled	[CE]  ';'  expected	4	None	add
