bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    <    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	1	None	add
2	[BUG]  [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  <  0x800)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  <  0x800)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    <    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    if(ch  <  0x800)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	1	None	add
3	[BUG]  [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  [Delete]  6));  }  [CE]  ')'  expected  [FE]        JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  [Delete]  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    <    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  [Delete]  6));  }	  	non-compiled	[CE]  ')'  expected	1	None	add
4	[BUG]  [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  ';'  expected  [FE]          JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    <    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	1	None	add
5	[BUG]  [BUGGY]  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  [CE]  'else'  without  'if'  [FE]        JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
6	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]          JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    	compilable	  [FE]  JsonGenerationException  	6	1	replace
7	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [FE]  JsonGenerationException  [FE]          JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    	compilable	  [FE]  JsonGenerationException  	6	1	replace
8	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]            JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    	compilable	  [FE]  JsonGenerationException  	6	1	replace
9	[BUG]  [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [FE]  JsonGenerationException  [FE]            JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    	compilable	  [FE]  JsonGenerationException  	6	1	replace
10	[BUG]  [BUGGY]  if(ch  <  =  '0'  ||  ch  >  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]            JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  =  '0'  ||  ch  >  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  '0'  ||  ch  >  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  if(ch  <  =  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]              JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  =  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  char  ch  =  cbuf[offset++];  [CE]  'else'  without  'if'  [FE]                JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  char  ch  =  cbuf[offset++];  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	char  ch  =  cbuf[offset++];	      	non-compiled	[CE]  'else'  without  'if'	4	None	replace
13	[BUG]  [BUGGY]  if(ch  <  =  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                  JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  =  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  if(ch  <  =  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)0xc0  |  (ch  >>  6));  }  [CE]  illegal  start  of  expression  [FE]          JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  =  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)0xc0  |  (ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)0xc0  |  (ch  >>  6));  }	  if(ch    <    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)0xc0    |    (ch    >>    6));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
15	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]        JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    =    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	compilable	  [FE]  JsonGenerationException  	5	1	replace
16	[BUG]  [BUGGY]  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [FE]  JsonGenerationException  [FE]        JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    =    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	compilable	  [FE]  JsonGenerationException  	5	1	replace
17	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	compilable	  [FE]  JsonGenerationException  	2	1	replace
18	[BUG]  [BUGGY]  if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	compilable	  [FE]  JsonGenerationException  	2	1	replace
19	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]            JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	      	compilable	  [FE]  JsonGenerationException  	4	1	replace
20	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]            JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	      	compilable	  [FE]  JsonGenerationException  	4	1	replace
21	[BUG]  [BUGGY]  if(ch  <  =  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]              JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  =  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  if(ch  <  MAX_QUOTE)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  cannot  find  symbol  MAX_QUOTE  [FE]        JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  MAX_QUOTE)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  MAX_QUOTE)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    =    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	non-compiled	[CE]  cannot  find  symbol  MAX_QUOTE	5	None	replace
23	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]        JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    	compilable	  [FE]  JsonGenerationException  	6	1	replace
24	[BUG]  [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [FE]  JsonGenerationException  [FE]        JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    	compilable	  [FE]  JsonGenerationException  	6	1	replace
25	[BUG]  [BUGGY]  if(ch  <  =  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)0xc0  |  (ch  >>  6));  }  [CE]  illegal  start  of  expression  [FE]          JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  =  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)0xc0  |  (ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)0xc0  |  (ch  >>  6));  }	  if(ch    <    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)0xc0    |    (ch    >>    6));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  if(ch  <  =  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  illegal  start  of  expression  [FE]    JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  =  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  if(ch  <  =  INT_0)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  illegal  start  of  expression  [FE]        JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  =  INT_0)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  INT_0)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  if(ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]            JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]              JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  cannot  find  symbol  INT_0  [FE]        JsonGenerationException    [CONTEXT]    }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]    bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    =    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	non-compiled	[CE]  cannot  find  symbol  INT_0	5	None	replace
