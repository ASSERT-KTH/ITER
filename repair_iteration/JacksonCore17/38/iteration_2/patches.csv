bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    >=    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	23	None	add
2	[BUG]  [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  >=  0x7F)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  >=  0x7F)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    >=    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    if(ch  >=  0x7F)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	23	None	add
3	[BUG]  [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  >>  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  >>  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    >=    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    if(ch  >>  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	23	None	add
4	[BUG]  [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  [Delete]  6));  }  [CE]  ')'  expected  [FE]          JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  [Delete]  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    >=    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  [Delete]  6));  }	  	non-compiled	[CE]  ')'  expected	23	None	add
5	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	20	1	replace
6	[BUG]  [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	20	1	replace
7	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  <  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	20	1	replace
8	[BUG]  [BUGGY]  if(ch  <  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	20	1	replace
9	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]        JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  <  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    =    0x7FF)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	compilable	  [FE]  JsonGenerationException  	26	1	replace
10	[BUG]  [BUGGY]  if(ch  <  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [FE]  JsonGenerationException  [FE]        JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    =    0x7FF)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	compilable	  [FE]  JsonGenerationException  	26	1	replace
11	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]          JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  >=  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    =    0x7FF)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	compilable	  [FE]  JsonGenerationException  	26	1	replace
12	[BUG]  [BUGGY]  if(ch  >=  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [FE]  JsonGenerationException  [FE]          JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  >=  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    =    0x7FF)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	compilable	  [FE]  JsonGenerationException  	26	1	replace
13	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                  JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  JsonGenerationException  	21	1	replace
14	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  JsonGenerationException  [FE]                  JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  JsonGenerationException  	21	1	replace
15	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  JsonGenerationException  	21	1	replace
16	[BUG]  [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  JsonGenerationException  	21	1	replace
17	[BUG]  [BUGGY]  _outputTail  =  _outputBuffer[offset++];  [CE]  'else'  without  'if'  [FE]                      JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  _outputTail  =  _outputBuffer[offset++];  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	_outputTail  =  _outputBuffer[offset++];	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
18	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  'A'  ||  ch  >  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  <  'A'  ||  ch  >  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    ||    ch    >    'Z'    ||    ch    >    'z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	30	1	replace
19	[BUG]  [BUGGY]  if(ch  <  'A'  ||  ch  >  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  'A'  ||  ch  >  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  'A'  ||  ch  >  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    ||    ch    >    'Z'    ||    ch    >    'z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	30	1	replace
20	[BUG]  [BUGGY]  if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  >=  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                      JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  >=  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  >=  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    ||    ch    >    'Z'    ||    ch    >    'z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
21	[BUG]  [BUGGY]  if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  <  =  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                        JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  <  =  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  <  =  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    ||    ch    >    'Z'    ||    ch    >    'z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
22	[BUG]  [BUGGY]  if(ch  ==  'A'  &&  ch  <  =  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                          JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  'A'  &&  ch  <  =  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  ==  'A'  &&  ch  <  =  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    ||    ch    >    'Z'    ||    ch    >    'z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
23	[BUG]  [BUGGY]  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  12));  [CE]  'else'  without  'if'  [FE]            JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  12));  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  12));	  bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
24	[BUG]  [BUGGY]  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  16));  [CE]  'else'  without  'if'  [FE]              JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  16));  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  16));	  bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
25	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)0xc0  |  (ch  >>  6));  }  [CE]  ';'  expected  [FE]              JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)0xc0  |  (ch  >>  6));  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)0xc0    |    (ch    >>    6));    }    	non-compiled	[CE]  ';'  expected	25	None	replace
26	[BUG]  [BUGGY]  bbuf[_outputTail++]  =  (byte)0xc0  |  (ch  >>  6));  [CE]  ';'  expected  [FE]                JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  bbuf[_outputTail++]  =  (byte)0xc0  |  (ch  >>  6));  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	bbuf[_outputTail++]  =  (byte)0xc0  |  (ch  >>  6));	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)0xc0    |    (ch    >>    6));    }    	non-compiled	[CE]  ';'  expected	25	None	replace
27	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]            JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  6)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  <  6)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    if(ch    <    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    [Delete]    6));    }    	compilable	  [FE]  JsonGenerationException  	3	1	replace
28	[BUG]  [BUGGY]  if(ch  <  6)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [FE]  JsonGenerationException  [FE]            JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  6)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  6)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    if(ch    <    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    [Delete]    6));    }    	compilable	  [FE]  JsonGenerationException  	3	1	replace
29	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                  JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  'A'  ||  ch  >  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  <  'A'  ||  ch  >  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    ||    ch    >    'Z'    ||    ch    >    'Z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	29	1	replace
30	[BUG]  [BUGGY]  if(ch  <  'A'  ||  ch  >  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                  JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  'A'  ||  ch  >  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  'A'  ||  ch  >  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    ||    ch    >    'Z'    ||    ch    >    'Z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	29	1	replace
31	[BUG]  [BUGGY]  if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  >=  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                    JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  >=  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  >=  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    ||    ch    >    'Z'    ||    ch    >    'Z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
32	[BUG]  [BUGGY]  if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  <  =  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                      JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  <  =  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  'A'  ||  ch  >  'Z'  ||  ch  <  =  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    ||    ch    >    'Z'    ||    ch    >    'Z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
33	[BUG]  [BUGGY]  if(ch  ==  'A'  &&  ch  <  =  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                        JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  'A'  &&  ch  <  =  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  ==  'A'  &&  ch  <  =  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    ||    ch    >    'Z'    ||    ch    >    'Z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
34	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  '0'  ||  ch  >  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  <  '0'  ||  ch  >  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    '0'    ||    ch    >    '9')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	10	1	replace
35	[BUG]  [BUGGY]  if(ch  <  '0'  ||  ch  >  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  '0'  ||  ch  >  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  '0'  ||  ch  >  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    '0'    ||    ch    >    '9')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	10	1	replace
36	[BUG]  [BUGGY]  if(ch  ==  '0'  &&  ch  <  =  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                  JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  '0'  &&  ch  <  =  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  ==  '0'  &&  ch  <  =  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    '0'    ||    ch    >    '9')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
37	[BUG]  [BUGGY]  if(ch  >=  '0'  &&  ch  <  =  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                    JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  '0'  &&  ch  <  =  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  >=  '0'  &&  ch  <  =  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    '0'    ||    ch    >    '9')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_10)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  cannot  find  symbol  INT_0  [FE]            JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_10)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  INT_0  ||  ch  >  INT_10)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	non-compiled	[CE]  cannot  find  symbol  INT_0	31	None	replace
39	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  illegal  start  of  expression  [FE]              JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
40	[BUG]  [BUGGY]  if(ch  <  INT_QUOTE)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  cannot  find  symbol  INT_QUOTE  [FE]                JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  INT_QUOTE)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  INT_QUOTE)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	non-compiled	[CE]  cannot  find  symbol  INT_QUOTE	31	None	replace
41	[BUG]  [BUGGY]  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    >=    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	15	None	add
42	[BUG]  [BUGGY]  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  >=  0x800)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  >=  0x800)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    >=    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    if(ch  >=  0x800)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	15	None	add
43	[BUG]  [BUGGY]  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  >>  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  >>  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    >=    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    if(ch  >>  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	15	None	add
44	[BUG]  [BUGGY]  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  [Delete]  6));  }  [CE]  ')'  expected  [FE]          JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  [Delete]  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    >=    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  [Delete]  6));  }	  	non-compiled	[CE]  ')'  expected	15	None	add
45	[BUG]  [BUGGY]  if(ch  <  =  MAX_BYTES_TO_BUFFER)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                      JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  MAX_BYTES_TO_BUFFER)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  MAX_BYTES_TO_BUFFER)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
46	[BUG]  [BUGGY]  char  ch  =  cbuf[_outputTail++];  [CE]  'else'  without  'if'  [FE]                    JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  char  ch  =  cbuf[_outputTail++];  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	char  ch  =  cbuf[_outputTail++];	  char    ch    =    cbuf[offset++];    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
47	[BUG]  [BUGGY]  char  ch  =  cbuf[0];  [CE]  'else'  without  'if'  [FE]                      JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  char  ch  =  cbuf[0];  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	char  ch  =  cbuf[0];	  char    ch    =    cbuf[offset++];    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
48	[BUG]  [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    ==    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	8	None	add
49	[BUG]  [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    ==    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	8	None	add
50	[BUG]  [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  ==  0x7F)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  ==  0x7F)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    ==    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    if(ch  ==  0x7F)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	8	None	add
51	[BUG]  [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  [Delete]  6));  }  [CE]  ')'  expected  [FE]          JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  [Delete]  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    ==    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  [Delete]  6));  }	  	non-compiled	[CE]  ')'  expected	8	None	add
52	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]            JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x80)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  <  0x80)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    MAX_QUOTE)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	compilable	  [FE]  JsonGenerationException  	22	1	replace
53	[BUG]  [BUGGY]  if(ch  <  0x80)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [FE]  JsonGenerationException  [FE]            JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x80)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  0x80)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    MAX_QUOTE)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	compilable	  [FE]  JsonGenerationException  	22	1	replace
54	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	6	None	add
55	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  <  0x7F)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  <  0x7F)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    if(ch  <  0x7F)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	6	None	add
56	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  [Delete]  6));  }  [CE]  ')'  expected  [FE]        JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  [Delete]  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  [Delete]  6));  }	  	non-compiled	[CE]  ')'  expected	6	None	add
57	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  ';'  expected  [FE]          JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	6	None	add
58	[BUG]  [BUGGY]  if(ch  <  INT_0)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  cannot  find  symbol  INT_0  [FE]            JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  INT_0)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  INT_0)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  if(ch    <    =    INT_0)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    	non-compiled	[CE]  cannot  find  symbol  INT_0	27	None	replace
59	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  cannot  find  symbol  INT_0  [FE]              JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  INT_0)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  ==  INT_0)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  if(ch    <    =    INT_0)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    	non-compiled	[CE]  cannot  find  symbol  INT_0	27	None	replace
60	[BUG]  [BUGGY]  if(ch  >=  INT_0)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  cannot  find  symbol  INT_0  [FE]                JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  INT_0)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  >=  INT_0)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  if(ch    <    =    INT_0)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    	non-compiled	[CE]  cannot  find  symbol  INT_0	27	None	replace
61	[BUG]  [BUGGY]  if(ch  <  =  0x80)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  illegal  start  of  expression  [FE]              JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  0x80)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  0x80)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    if(ch    >=    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  if(ch  <  =  'A'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  'A'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  'A'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    &&    ch    <    =    'Z'    ||    ch    >    'z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
63	[BUG]  [BUGGY]  if(ch  >=  'A'  &&  ch  <  =  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                  JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  'A'  &&  ch  <  =  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  >=  'A'  &&  ch  <  =  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    &&    ch    <    =    'Z'    ||    ch    >    'z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
64	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  	non-compiled	[CE]  ';'  expected	19	None	add
65	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  if(ch  <  0x7F)  {  if(_outputTail  >>  _outputEnd)  {  break  main_loop;  }  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  if(ch  <  0x7F)  {  if(_outputTail  >>  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    if(ch  <  0x7F)  {  if(_outputTail  >>  _outputEnd)  {  break  main_loop;  }	  	non-compiled	[CE]  ';'  expected	19	None	add
66	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  	non-compiled	[CE]  ';'  expected	19	None	add
67	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  if(ch  <  0x7F)  {  if(_outputTail!=  _outputEnd)  {  break  main_loop;  }  [CE]  ';'  expected  [FE]          JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  if(ch  <  0x7F)  {  if(_outputTail!=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    if(ch  <  0x7F)  {  if(_outputTail!=  _outputEnd)  {  break  main_loop;  }	  	non-compiled	[CE]  ';'  expected	19	None	add
68	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                  JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  <  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    '0')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	11	1	replace
69	[BUG]  [BUGGY]  if(ch  <  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                  JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    '0')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	11	1	replace
70	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  ==  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    '0')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	11	1	replace
71	[BUG]  [BUGGY]  if(ch  ==  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  ==  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    '0')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	11	1	replace
72	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                      JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  >=  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    '0')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	11	1	replace
73	[BUG]  [BUGGY]  if(ch  >=  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                      JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  >=  '0')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    '0')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	11	1	replace
74	[BUG]  [BUGGY]  if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    ==    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    if(ch  >=  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	17	None	add
75	[BUG]  [BUGGY]  if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    ==    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	17	None	add
76	[BUG]  [BUGGY]  if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  >>  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  >>  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    ==    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    if(ch  >>  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	17	None	add
77	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	20	1	replace
78	[BUG]  [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	20	1	replace
79	[BUG]  [BUGGY]  if(ch  <  =  MA)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  illegal  start  of  expression  [FE]            JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  MA)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  MA)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  if(ch    <    =    INT_0)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
80	[BUG]  [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  ==  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  ==  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    ==    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    if(ch  ==  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	8	None	add
81	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  'A'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  <  'A'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    &&    ch    <    =    'Z'    ||    ch    >    'z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	28	1	replace
82	[BUG]  [BUGGY]  if(ch  <  'A'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  'A'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  'A'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    &&    ch    <    =    'Z'    ||    ch    >    'z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	28	1	replace
83	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  <  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  <  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    if(ch  <  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	6	None	add
84	[BUG]  [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  >=  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  if(ch  >=  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    >=    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |    (ch    >>    6));    }    if(ch  >=  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |  (ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	23	None	add
85	[BUG]  [BUGGY]  if(ch  <  =  '0'  &&  ch  >  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  '0'  &&  ch  >  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  '0'  &&  ch  >  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    '0'    ||    ch    >    '9')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
86	[BUG]  [BUGGY]  if(ch  >=  'A'  &&  ch  <  =  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                  JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  'A'  &&  ch  <  =  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  >=  'A'  &&  ch  <  =  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    ||    ch    >    'Z'    ||    ch    >    'Z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
87	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  if(ch  <  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  if(ch  <  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    if(ch  <  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  	non-compiled	[CE]  ';'  expected	19	None	add
88	[BUG]  [BUGGY]  if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  ==  0x800)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  ==  0x800)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    ==    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    if(ch  ==  0x800)  {  if(_outputTail  >>  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	17	None	add
89	[BUG]  [BUGGY]  if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  ==  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch    ==    0x800)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  	non-compiled	[CE]  ';'  expected	17	None	add
90	[BUG]  [BUGGY]  if(ch  <  =  MAX_BYTES_TO_BUFFER)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                  JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  MAX_BYTES_TO_BUFFER)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  MAX_BYTES_TO_BUFFER)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
91	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  JsonGenerationException  	21	1	replace
92	[BUG]  [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  >=  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  JsonGenerationException  	21	1	replace
93	[BUG]  [BUGGY]  if(ch  <  INT_BACKSLASH  ||  ch  >  INT_9)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  cannot  find  symbol  INT_BACKSLASH  [FE]            JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  INT_BACKSLASH  ||  ch  >  INT_9)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  INT_BACKSLASH  ||  ch  >  INT_9)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	non-compiled	[CE]  cannot  find  symbol  INT_BACKSLASH	31	None	replace
94	[BUG]  [BUGGY]  char  ch  =  cbuf[offset++]  +  1;  [CE]  'else'  without  'if'  [FE]                    JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  char  ch  =  cbuf[offset++]  +  1;  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	char  ch  =  cbuf[offset++]  +  1;	  char    ch    =    cbuf[offset++];    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
95	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  <  0x7F  ||  ch  >  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	20	1	replace
96	[BUG]  [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x7F  ||  ch  >  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  0x7F  ||  ch  >  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	20	1	replace
97	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	add	if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	20	1	replace
98	[BUG]  [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  0x800)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	20	1	replace
99	[BUG]  [BUGGY]  if(ch  <  =  0x7F  ||  ch  >  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                      JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  0x7F  ||  ch  >  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  0x7F  ||  ch  >  0x7F)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
100	[BUG]  [BUGGY]  if(ch  <  =  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                        JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  0x7FF)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
101	[BUG]  [BUGGY]  if(ch  <  =  '0'  &&  ch  <  =  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                  JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  '0'  &&  ch  <  =  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  '0'  &&  ch  <  =  '9')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    '0')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
102	[BUG]  [BUGGY]  if(ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                  JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >  'Z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    ||    ch    >    'Z'    ||    ch    >    'Z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
103	[BUG]  [BUGGY]  if(ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >=  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >=  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >=  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    &&    ch    <    =    'Z'    ||    ch    >    'z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
104	[BUG]  [BUGGY]  if(ch  <  'A'  &&  ch  <  =  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                  JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  'A'  &&  ch  <  =  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  'A'  &&  ch  <  =  'Z'  ||  ch  >  'z')  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    'A'    &&    ch    <    =    'Z'    ||    ch    >    'z')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
105	[BUG]  [BUGGY]  if(ch  <  =  INT_QUOTE)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [CE]  illegal  start  of  expression  [FE]            JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  =  INT_QUOTE)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  =  INT_QUOTE)  {  if(_outputTail  >=  _outputEnd)  {  bbuf[_outputTail++]  =  (byte)(0xc0  |(ch  >>  6));  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(_outputTail    >=    _outputEnd)    {    bbuf[_outputTail++]    =    (byte)(0xc0    |(ch    >>    6));    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
106	[BUG]  [BUGGY]  char  ch  =  cbuf[offset++]  +  '0';  [CE]  'else'  without  'if'  [FE]                    JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  char  ch  =  cbuf[offset++]  +  '0';  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	char  ch  =  cbuf[offset++]  +  '0';	  char    ch    =    cbuf[offset++];    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
107	[BUG]  [BUGGY]  _outputTail  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  [CE]  'else'  without  'if'  [FE]                  JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  _outputTail  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	_outputTail  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
108	[BUG]  [BUGGY]  _outputTail  =  _outputEnd;  [CE]  'else'  without  'if'  [FE]                    JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  _outputTail  =  _outputEnd;  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	_outputTail  =  _outputEnd;	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
109	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [CE]  cannot  find  symbol  INT_0  [FE]                JsonGenerationException      [CONTEXT]      }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }  if  ((_outputTail  +  3)  >=  _outputEnd)  {  _flushBuffer();  }  char  ch  =  cbuf[offset++];      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }  [BUGGY]      bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	654	655	1	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(_outputTail  >=  _outputEnd)  {  break  main_loop;  }	  if(ch    <    =    '0'    ||    ch    >    '9')    {    if(_outputTail    >=    _outputEnd)    {    break    main_loop;    }    	non-compiled	[CE]  cannot  find  symbol  INT_0	10	None	replace
