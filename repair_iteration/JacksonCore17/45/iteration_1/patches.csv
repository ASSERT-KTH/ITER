bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _flushBuffer();  [CE]  variable  b  might  not  have  been  initialized  [FE]                JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  _flushBuffer();  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	_flushBuffer();	      	non-compiled	[CE]  variable  b  might  not  have  been  initialized	6	None	replace
2	[BUG]  [BUGGY]  _writeBytes(raw);  [CE]  cannot  find  symbol  raw  [FE]                  JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  _writeBytes(raw);  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	_writeBytes(raw);	      	non-compiled	[CE]  cannot  find  symbol  raw	6	None	replace
3	[BUG]  [BUGGY]  _verifyPrettyValueWrite(typeMsg,  status);  [CE]  variable  b  might  not  have  been  initialized  [FE]                    JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  _verifyPrettyValueWrite(typeMsg,  status);  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	_verifyPrettyValueWrite(typeMsg,  status);	      	non-compiled	[CE]  variable  b  might  not  have  been  initialized	6	None	replace
4	[BUG]  [BUGGY]  _verifyPrettyValueWrite(raw,  status);  [CE]  cannot  find  symbol  raw  [FE]                      JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  _verifyPrettyValueWrite(raw,  status);  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	_verifyPrettyValueWrite(raw,  status);	      	non-compiled	[CE]  cannot  find  symbol  raw	6	None	replace
5	[BUG]  [BUGGY]  _outputTail  =  _outputEnd;  [CE]  variable  b  might  not  have  been  initialized  [FE]              JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  _outputTail  =  _outputEnd;  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	_outputTail  =  _outputEnd;	  if(_outputTail    >=    _outputEnd)    {    return;    }    	non-compiled	[CE]  variable  b  might  not  have  been  initialized	5	None	replace
6	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  return;  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	||(_outputTail  >=  _outputEnd))  {  return;  }	  if(_outputTail    >=    _outputEnd)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  ||  status  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  ||  status  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	||  status  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  throw  new  IllegalArgumentException( " ");  }	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  b  might  not  have  been  initialized  [FE]            JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  throw  new  IllegalArgumentException( " ");  }	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  b  might  not  have  been  initialized	3	None	replace
9	[BUG]  [BUGGY]  ||  status  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]              JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  ||  status  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	||  status  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  throw  new  IllegalArgumentException( " ");	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  ||  status  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]        JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  ||  status  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	||  status  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  throw  new  IllegalStateException( " ");  }	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  throw  new  IllegalStateException( " ");  }  [CE]  variable  b  might  not  have  been  initialized  [FE]          JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  throw  new  IllegalStateException( " ");  }	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  variable  b  might  not  have  been  initialized	7	None	replace
12	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_SECOND)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	add	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_SECOND)  {  throw  new  IllegalStateException( " ");  }	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	7	2	replace
13	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_SECOND)  {  throw  new  IllegalStateException( " ");  }  [FE]  IllegalArgumentException  [FE]            JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_SECOND)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_SECOND)  {  throw  new  IllegalStateException( " ");  }	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  IllegalArgumentException  	7	2	replace
14	[BUG]  [BUGGY]  ||  status  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  ||  status  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  return;  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	||  status  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  return;  }	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  return;  }  [CE]  variable  b  might  not  have  been  initialized  [FE]              JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  return;  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	if(status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  return;  }	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    return;    }    	non-compiled	[CE]  variable  b  might  not  have  been  initialized	4	None	replace
16	[BUG]  [BUGGY]  if(_outputTail  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  return;  }  [CE]  variable  b  might  not  have  been  initialized  [FE]                JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  if(_outputTail  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  return;  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	if(_outputTail  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  return;  }	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    return;    }    	non-compiled	[CE]  variable  b  might  not  have  been  initialized	4	None	replace
17	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]    IllegalArgumentException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
18	[BUG]  [BUGGY]  _verifyPrettyValueWrite(typeMsg);  [CE]  method  _verifyPrettyValueWrite  in  class  UTF8JsonGenerator  cannot  be  applied  to  given  types;  [FE]      IllegalArgumentException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  _verifyPrettyValueWrite(typeMsg);  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	_verifyPrettyValueWrite(typeMsg);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  method  _verifyPrettyValueWrite  in  class  UTF8JsonGenerator  cannot  be  applied  to  given  types;	2	None	replace
19	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]    IllegalArgumentException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  unreachable  statement	1	None	add
20	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [CE]  not  a  statement  [FE]      IllegalArgumentException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	throw    new    IllegalArgumentException(   "   ");    Throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  not  a  statement	1	None	add
21	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.throw  new  IllegalArgumentException( "   ");  [CE]  <identifier>  expected  [FE]        IllegalArgumentException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	throw    new    IllegalArgumentException(   "   ");    Throwables.throw  new  IllegalArgumentException( "   ");	  	non-compiled	[CE]  <identifier>  expected	1	None	add
22	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JsonWriteContext  ctxt  =  getCurrentContext();  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JsonWriteContext  ctxt  =  getCurrentContext();  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	throw    new    IllegalArgumentException(   "   ");    JsonWriteContext  ctxt  =  getCurrentContext();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
23	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [CE]  variable  b  might  not  have  been  initialized  [FE]    IllegalArgumentException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  _reportUnsupportedOperation();  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	_reportUnsupportedOperation();	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  variable  b  might  not  have  been  initialized	2	None	replace
24	[BUG]  [BUGGY]  _verifyValueWrite(typeMsg,  status);  [CE]  no  suitable  method  found  for  _verifyValueWrite(String,int)  [FE]      IllegalArgumentException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  _verifyValueWrite(typeMsg,  status);  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	_verifyValueWrite(typeMsg,  status);	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  no  suitable  method  found  for  _verifyValueWrite(String,int)	2	None	replace
25	[BUG]  [BUGGY]  _throwInternal();  [CE]  variable  b  might  not  have  been  initialized  [FE]        IllegalArgumentException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  _throwInternal();  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	_throwInternal();	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  variable  b  might  not  have  been  initialized	2	None	replace
26	[BUG]  [BUGGY]  _outputTail  =  System.currentTimeMillis();  [CE]  possible  loss  of  precision  [FE]              JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  _outputTail  =  System.currentTimeMillis();  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	_outputTail  =  System.currentTimeMillis();	  if(_outputTail    >=    _outputEnd)    {    return;    }    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
27	[BUG]  [BUGGY]  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [CE]  variable  b  might  not  have  been  initialized  [FE]                JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	_outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;	  if(_outputTail    >=    _outputEnd)    {    return;    }    	non-compiled	[CE]  variable  b  might  not  have  been  initialized	5	None	replace
28	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AS_IS  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  return;  }  [CE]  variable  b  might  not  have  been  initialized  [FE]            JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AS_IS  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  return;  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	if(status  ==  JsonWriteContext.STATUS_OK_AS_IS  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  return;  }	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    return;    }    	non-compiled	[CE]  variable  b  might  not  have  been  initialized	4	None	replace
29	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AS_IS  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  throw  new  IllegalStateException( " ");  }  [CE]  variable  b  might  not  have  been  initialized  [FE]        JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AS_IS  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	if(status  ==  JsonWriteContext.STATUS_OK_AS_IS  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  throw  new  IllegalStateException( " ");  }	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  variable  b  might  not  have  been  initialized	7	None	replace
30	[BUG]  [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AS_IS  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  b  might  not  have  been  initialized  [FE]          JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  if(status  ==  JsonWriteContext.STATUS_OK_AS_IS  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	if(status  ==  JsonWriteContext.STATUS_OK_AS_IS  ||  status  ==  JsonWriteContext.STATUS_OK_AFTER_SPACE)  {  throw  new  IllegalArgumentException( " ");  }	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  b  might  not  have  been  initialized	3	None	replace
31	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+JsonWriteContext.STATUS_OK_AS_IS. ");  [CE]  unclosed  string  literal  [FE]    IllegalArgumentException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+JsonWriteContext.STATUS_OK_AS_IS. ");  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+JsonWriteContext.STATUS_OK_AS_IS. ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
32	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+JsonWriteContext.STATUS_OK_AS_IS;  [CE]  [FE]      IllegalArgumentException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+JsonWriteContext.STATUS_OK_AS_IS;	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	2	None	replace
33	[BUG]  [BUGGY]  if(_outputTail  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  b  might  not  have  been  initialized  [FE]          JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  if(_outputTail  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	if(_outputTail  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  throw  new  IllegalArgumentException( " ");  }	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  variable  b  might  not  have  been  initialized	3	None	replace
34	[BUG]  [BUGGY]  ||  status  ||(status  ==  JsonWriteContext.STATUS_OK_AS_IS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  ||  status  ||(status  ==  JsonWriteContext.STATUS_OK_AS_IS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	||  status  ||(status  ==  JsonWriteContext.STATUS_OK_AS_IS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  throw  new  IllegalArgumentException( " ");  }	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
35	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  variable  b  might  not  have  been  initialized  [FE]                JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	      	non-compiled	[CE]  variable  b  might  not  have  been  initialized	6	None	replace
36	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [CE]  variable  b  might  not  have  been  initialized  [FE]                  JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	      	non-compiled	[CE]  variable  b  might  not  have  been  initialized	6	None	replace
37	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  return;  }  [CE]  variable  b  might  not  have  been  initialized  [FE]                    JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  return;  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  return;  }	      	non-compiled	[CE]  variable  b  might  not  have  been  initialized	6	None	replace
38	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JsonWriteContext  c  =  getCurrentContext();  [CE]  cannot  find  symbol  [FE]    IllegalArgumentException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  JsonWriteContext  c  =  getCurrentContext();  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	throw    new    IllegalArgumentException(   "   ");    JsonWriteContext  c  =  getCurrentContext();	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
39	[BUG]  [BUGGY]  if(_outputTail  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  throw  new  IllegalStateException( " ");  }  [CE]  variable  b  might  not  have  been  initialized  [FE]        JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  if(_outputTail  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	if(_outputTail  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  throw  new  IllegalStateException( " ");  }	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  variable  b  might  not  have  been  initialized	7	None	replace
40	[BUG]  [BUGGY]  ||  status  ||(status  ==  JsonWriteContext.STATUS_OK_AS_IS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          JsonGenerationException    [CONTEXT]    case  JsonWriteContext.STATUS_OK_AFTER_SPACE:  //  root-value  separator  if  (_rootValueSeparator  !=  null)  {  byte[]  raw  =  _rootValueSeparator.asUnquotedUTF8();  if  (raw.length  >  0)  {  _writeBytes(raw);  }  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:    [BUGGY]  ||  status  ||(status  ==  JsonWriteContext.STATUS_OK_AS_IS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  b;  ++_outputTail;  return;  }  _verifyPrettyValueWrite(typeMsg,  status);  [CLASS]  UTF8JsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  data  encodingBuffer  keyword  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  state  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  b  OutputStream  _outputStream  out  String  typeMsg  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  bytes  ch  dataLength  end  features  i  inputEnd  len  len2  len3  length  missing  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	949	949	1	replace	||  status  ||(status  ==  JsonWriteContext.STATUS_OK_AS_IS  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  throw  new  IllegalStateException( " ");  }	  if(status    ==    JsonWriteContext.STATUS_OK_AS_IS)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
