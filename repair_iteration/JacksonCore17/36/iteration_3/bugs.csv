bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  MAX_BYTES_TO_BUFFER)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  <  MAX_BYTES_TO_BUFFER)  {	  if(_outputTail    >=    end)    {    if(_outputTail    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	39	1	replace
2	[BUG]  [BUGGY]  if(offset  <  MAX_BYTES_TO_BUFFER)  {  [FE]  JsonGenerationException  [FE]        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  MAX_BYTES_TO_BUFFER)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  MAX_BYTES_TO_BUFFER)  {	  if(_outputTail    >=    end)    {    if(_outputTail    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	39	1	replace
3	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]          JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  MAX_BYTES_TO_BUFFER  ||  offset  >  MAX_BYTES_TO_BUFFER)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  <  MAX_BYTES_TO_BUFFER  ||  offset  >  MAX_BYTES_TO_BUFFER)  {	  if(_outputTail    >=    end)    {    if(_outputTail    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	39	1	replace
4	[BUG]  [BUGGY]  if(offset  <  MAX_BYTES_TO_BUFFER  ||  offset  >  MAX_BYTES_TO_BUFFER)  {  [FE]  JsonGenerationException  [FE]          JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  MAX_BYTES_TO_BUFFER  ||  offset  >  MAX_BYTES_TO_BUFFER)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  MAX_BYTES_TO_BUFFER  ||  offset  >  MAX_BYTES_TO_BUFFER)  {	  if(_outputTail    >=    end)    {    if(_outputTail    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	39	1	replace
5	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]            JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  len)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  >=  len)  {	  if(_outputTail    >=    end)    {    if(_outputTail    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	39	1	replace
6	[BUG]  [BUGGY]  if(offset  >=  len)  {  [FE]  JsonGenerationException  [FE]            JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  len)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  >=  len)  {	  if(_outputTail    >=    end)    {    if(_outputTail    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	39	1	replace
7	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  5)  >=  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if((  _outputTail  +  5)  >=  inputEnd)  {	  if((    _outputTail    +    3)    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	2	1	replace
8	[BUG]  [BUGGY]  if((  _outputTail  +  5)  >=  inputEnd)  {  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  5)  >=  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((  _outputTail  +  5)  >=  inputEnd)  {	  if((    _outputTail    +    3)    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	2	1	replace
9	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail    >=    _outputEnd)    {    if(_outputTail  >=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
10	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputTail  >>  _outputEnd)  {  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputTail  >>  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail    >=    _outputEnd)    {    if(_outputTail  >>  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
11	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputTail!=  _outputEnd)  {  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputTail!=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail    >=    _outputEnd)    {    if(_outputTail!=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
12	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputTail  ==  _outputEnd)  {  [CE]  ';'  expected  [FE]          JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputTail  ==  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail    >=    _outputEnd)    {    if(_outputTail  ==  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
13	[BUG]  [BUGGY]  if(offset  <  =  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                  JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  =  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  =  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
14	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  break  main_loop;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
15	[BUG]  [BUGGY]  if(ch  <  =  0x7F)  {  if(_outputTail  >>  end)  {  break  main_loop;  }  [CE]  illegal  start  of  expression  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(ch  <  =  0x7F)  {  if(_outputTail  >>  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(ch  <  =  0x7F)  {  if(_outputTail  >>  end)  {  break  main_loop;  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
16	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  <  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	22	1	replace
17	[BUG]  [BUGGY]  if(offset  <  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	22	1	replace
18	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(cbuf[offset++]  <  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(cbuf[offset++]  <  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	22	2	replace
19	[BUG]  [BUGGY]  if(cbuf[offset++]  <  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(cbuf[offset++]  <  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(cbuf[offset++]  <  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	22	2	replace
20	[BUG]  [BUGGY]  if(++offset  >=  inputEnd)  {  if(++offset  >=  inputEnd)  {  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(++offset  >=  inputEnd)  {  if(++offset  >=  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(++offset    >=    inputEnd)    {    if(++offset  >=  inputEnd)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
21	[BUG]  [BUGGY]  if(++offset  >=  inputEnd)  {  if(++offset  >>  inputEnd)  {  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(++offset  >=  inputEnd)  {  if(++offset  >>  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(++offset    >=    inputEnd)    {    if(++offset  >>  inputEnd)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
22	[BUG]  [BUGGY]  if(++offset  >=  inputEnd)  {  if(++offset!=  inputEnd)  {  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(++offset  >=  inputEnd)  {  if(++offset!=  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(++offset    >=    inputEnd)    {    if(++offset!=  inputEnd)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
23	[BUG]  [BUGGY]  if(++offset  >=  inputEnd)  {  if(++offset  ==  inputEnd)  {  [CE]  ';'  expected  [FE]          JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(++offset  >=  inputEnd)  {  if(++offset  ==  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(++offset    >=    inputEnd)    {    if(++offset  ==  inputEnd)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
24	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]          JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  >=  inputEnd)  {	  if(_outputTail    >=    end)    {    if(_outputTail    >>    end)    {    	compilable	  [FE]  JsonGenerationException  	18	1	replace
25	[BUG]  [BUGGY]  if(offset  >=  inputEnd)  {  [FE]  JsonGenerationException  [FE]          JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  >=  inputEnd)  {	  if(_outputTail    >=    end)    {    if(_outputTail    >>    end)    {    	compilable	  [FE]  JsonGenerationException  	18	1	replace
26	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(++offset  >=  len)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(++offset  >=  len)  {	  if(++offset    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	35	2	replace
27	[BUG]  [BUGGY]  if(++offset  >=  len)  {  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(++offset  >=  len)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(++offset  >=  len)  {	  if(++offset    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	35	2	replace
28	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(++offset  ==  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(++offset  ==  inputEnd)  {	  if(++offset    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	35	2	replace
29	[BUG]  [BUGGY]  if(++offset  ==  inputEnd)  {  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(++offset  ==  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(++offset  ==  inputEnd)  {	  if(++offset    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	35	2	replace
30	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]        JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(++offset  <  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(++offset  <  inputEnd)  {	  if(++offset    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	35	2	replace
31	[BUG]  [BUGGY]  if(++offset  <  inputEnd)  {  [FE]  JsonGenerationException  [FE]        JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(++offset  <  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(++offset  <  inputEnd)  {	  if(++offset    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	35	2	replace
32	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  >=  _outputEnd)  {	  if(_outputTail    >=    _outputEnd)    {    	compilable	  [FE]  JsonGenerationException  	30	1	replace
33	[BUG]  [BUGGY]  if(offset  >=  _outputEnd)  {  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  >=  _outputEnd)  {	  if(_outputTail    >=    _outputEnd)    {    	compilable	  [FE]  JsonGenerationException  	30	1	replace
34	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  0x800)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  >=  0x800)  {	  if(_outputTail    >=    _outputEnd)    {    	compilable	  [FE]  JsonGenerationException  	30	1	replace
35	[BUG]  [BUGGY]  if(offset  >=  0x800)  {  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  0x800)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  >=  0x800)  {	  if(_outputTail    >=    _outputEnd)    {    	compilable	  [FE]  JsonGenerationException  	30	1	replace
36	[BUG]  [BUGGY]  if(ch  <  0x800)  {  [CE]  cannot  find  symbol  ch  [FE]        JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(ch  <  0x800)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(ch  <  0x800)  {	  if(_outputTail    >=    _outputEnd)    {    	non-compiled	[CE]  cannot  find  symbol  ch	30	None	replace
37	[BUG]  [BUGGY]  if(_outputTail  >=  inputEnd)  {  if(_outputTail  >=  inputEnd)  {  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  inputEnd)  {  if(_outputTail  >=  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail    >=    inputEnd)    {    if(_outputTail  >=  inputEnd)  {	  	non-compiled	[CE]  ';'  expected	31	None	add
38	[BUG]  [BUGGY]  if(_outputTail  >=  inputEnd)  {  if(_outputTail  >>  inputEnd)  {  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  inputEnd)  {  if(_outputTail  >>  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail    >=    inputEnd)    {    if(_outputTail  >>  inputEnd)  {	  	non-compiled	[CE]  ';'  expected	31	None	add
39	[BUG]  [BUGGY]  if(_outputTail  >=  inputEnd)  {  if(_outputTail!=  inputEnd)  {  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  inputEnd)  {  if(_outputTail!=  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail    >=    inputEnd)    {    if(_outputTail!=  inputEnd)  {	  	non-compiled	[CE]  ';'  expected	31	None	add
40	[BUG]  [BUGGY]  if(_outputTail  >=  inputEnd)  {  if(_outputTail  ==  inputEnd)  {  [CE]  ';'  expected  [FE]          JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  inputEnd)  {  if(_outputTail  ==  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail    >=    inputEnd)    {    if(_outputTail  ==  inputEnd)  {	  	non-compiled	[CE]  ';'  expected	31	None	add
41	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  _flushBuffer();  }  [CE]  class,  interface,  or  enum  expected  [FE]                  JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  end)  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  end)  {  _flushBuffer();  }	  _flushBuffer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
42	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  _flushBuffer();  }  else  {  throw  new  JsonGenerationException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  end)  {  _flushBuffer();  }  else  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  end)  {  _flushBuffer();  }  else  {  throw  new  JsonGenerationException( " ");  }	  _flushBuffer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
43	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  _flushBuffer();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  end)  {  _flushBuffer();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  end)  {  _flushBuffer();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _flushBuffer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
44	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]              JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  3)  >=  len)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if((  _outputTail  +  3)  >=  len)  {	  if((    _outputTail    +    3)    >=    end)    {    if((    _outputTail    +    3)    ==    end)    {    	compilable	  [FE]  JsonGenerationException  	14	1	replace
45	[BUG]  [BUGGY]  if((  _outputTail  +  3)  >=  len)  {  [FE]  JsonGenerationException  [FE]              JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  3)  >=  len)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((  _outputTail  +  3)  >=  len)  {	  if((    _outputTail    +    3)    >=    end)    {    if((    _outputTail    +    3)    ==    end)    {    	compilable	  [FE]  JsonGenerationException  	14	1	replace
46	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  6)  >=  len)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if((  _outputTail  +  6)  >=  len)  {	  if((    _outputTail    +    6)    >=    end)    {    if((    _outputTail    +    6)    >=    end)    {    	compilable	  [FE]  JsonGenerationException  	25	1	replace
47	[BUG]  [BUGGY]  if((  _outputTail  +  6)  >=  len)  {  [FE]  JsonGenerationException  [FE]        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  6)  >=  len)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((  _outputTail  +  6)  >=  len)  {	  if((    _outputTail    +    6)    >=    end)    {    if((    _outputTail    +    6)    >=    end)    {    	compilable	  [FE]  JsonGenerationException  	25	1	replace
48	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]            JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  11)  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if((  _outputTail  +  11)  >=  _outputEnd)  {	  if((    _outputTail    +    5)    >=    _outputEnd)    {    if((    _outputTail    +    5)!=    _outputEnd)    {    	compilable	  [FE]  JsonGenerationException  	9	1	replace
49	[BUG]  [BUGGY]  if((  _outputTail  +  11)  >=  _outputEnd)  {  [FE]  JsonGenerationException  [FE]            JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  11)  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((  _outputTail  +  11)  >=  _outputEnd)  {	  if((    _outputTail    +    5)    >=    _outputEnd)    {    if((    _outputTail    +    5)!=    _outputEnd)    {    	compilable	  [FE]  JsonGenerationException  	9	1	replace
50	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]              JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  6)  >=  (_outputEnd  +  1))  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if((  _outputTail  +  6)  >=  (_outputEnd  +  1))  {	  if((    _outputTail    +    6)    >=    end)    {    if((    _outputTail    +    6)    ==    end)    {    	compilable	  [FE]  JsonGenerationException  	28	1	replace
51	[BUG]  [BUGGY]  if((  _outputTail  +  6)  >=  (_outputEnd  +  1))  {  [FE]  JsonGenerationException  [FE]              JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  6)  >=  (_outputEnd  +  1))  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((  _outputTail  +  6)  >=  (_outputEnd  +  1))  {	  if((    _outputTail    +    6)    >=    end)    {    if((    _outputTail    +    6)    ==    end)    {    	compilable	  [FE]  JsonGenerationException  	28	1	replace
52	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  0x800)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  <  0x800)  {	  if(_outputTail    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	32	1	replace
53	[BUG]  [BUGGY]  if(offset  <  0x800)  {  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  0x800)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  0x800)  {	  if(_outputTail    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	32	1	replace
54	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  ==  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  ==  inputEnd)  {	  if(_outputTail    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	32	1	replace
55	[BUG]  [BUGGY]  if(offset  ==  inputEnd)  {  [FE]  JsonGenerationException  [FE]      JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  ==  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  ==  inputEnd)  {	  if(_outputTail    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	32	1	replace
56	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    JsonGenerationException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	24	1	replace
57	[BUG]  [BUGGY]  if(offset  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [FE]  JsonGenerationException  [FE]                        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    JsonGenerationException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	24	1	replace
58	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                          JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    JsonGenerationException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
59	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                            JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  len)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  >=  len)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    JsonGenerationException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	24	1	replace
60	[BUG]  [BUGGY]  if(offset  >=  len)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [FE]  JsonGenerationException  [FE]                            JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  len)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  >=  len)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    JsonGenerationException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	24	1	replace
61	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                              JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(cbuf[offset++]  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(cbuf[offset++]  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    JsonGenerationException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	24	2	replace
62	[BUG]  [BUGGY]  if(cbuf[offset++]  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [FE]  JsonGenerationException  [FE]                              JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(cbuf[offset++]  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(cbuf[offset++]  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    JsonGenerationException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	24	2	replace
63	[BUG]  [BUGGY]  if((  _outputTail  +  3)  <  _outputEnd)  {  if((  _outputTail  +  3)  <  _outputEnd)  {  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  3)  <  _outputEnd)  {  if((  _outputTail  +  3)  <  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    3)    <    _outputEnd)    {    if((  _outputTail  +  3)  <  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
64	[BUG]  [BUGGY]  if((  _outputTail  +  3)  <  _outputEnd)  {  if((  _outputTail  +  3)  >=  _outputEnd)  {  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  3)  <  _outputEnd)  {  if((  _outputTail  +  3)  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    3)    <    _outputEnd)    {    if((  _outputTail  +  3)  >=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
65	[BUG]  [BUGGY]  if((  _outputTail  +  3)  <  _outputEnd)  {  If((  _outputTail  +  3)  <  _outputEnd)  {  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  3)  <  _outputEnd)  {  If((  _outputTail  +  3)  <  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    3)    <    _outputEnd)    {    If((  _outputTail  +  3)  <  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
66	[BUG]  [BUGGY]  if((  _outputTail  +  5)  >=  end)  {  if((  _outputTail  +  5)  >=  end)  {  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  5)  >=  end)  {  if((  _outputTail  +  5)  >=  end)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    5)    >=    end)    {    if((  _outputTail  +  5)  >=  end)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
67	[BUG]  [BUGGY]  if((  _outputTail  +  5)  >=  end)  {  if((  _outputTail  +  5)  >>  end)  {  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  5)  >=  end)  {  if((  _outputTail  +  5)  >>  end)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    5)    >=    end)    {    if((  _outputTail  +  5)  >>  end)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
68	[BUG]  [BUGGY]  if((  _outputTail  +  5)  >=  end)  {  if((  _outputTail  +  5)!=  end)  {  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  5)  >=  end)  {  if((  _outputTail  +  5)!=  end)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    5)    >=    end)    {    if((  _outputTail  +  5)!=  end)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
69	[BUG]  [BUGGY]  if((  _outputTail  +  5)  >=  end)  {  if((  _outputTail  +  5)  ==  end)  {  [CE]  ';'  expected  [FE]          JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  5)  >=  end)  {  if((  _outputTail  +  5)  ==  end)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    5)    >=    end)    {    if((  _outputTail  +  5)  ==  end)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
70	[BUG]  [BUGGY]  _outputTail  =  0;  [CE]  class,  interface,  or  enum  expected  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  _outputTail  =  0;  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	_outputTail  =  0;	  if(_outputTail    >=    end)    {    _outputRawMultiByteChar(ch,    cbuf,    offset,    inputEnd);    _outputTail    =    0;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
71	[BUG]  [BUGGY]  if(offset  <  len)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  _outputTail  =  0;  }  [CE]  cannot  find  symbol  ch  [FE]                        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  len)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  len)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  _outputTail  =  0;  }	  if(_outputTail    >=    end)    {    _outputRawMultiByteChar(ch,    cbuf,    offset,    inputEnd);    _outputTail    =    0;    }    	non-compiled	[CE]  cannot  find  symbol  ch	38	None	replace
72	[BUG]  [BUGGY]  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  0;  [CE]  class,  interface,  or  enum  expected  [FE]                          JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  0;  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	_outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  0;	  if(_outputTail    >=    end)    {    _outputRawMultiByteChar(ch,    cbuf,    offset,    inputEnd);    _outputTail    =    0;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
73	[BUG]  [BUGGY]  if(_outputTail  >>  end)  {  [CE]  incompatible  types  [FE]            JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >>  end)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >>  end)  {	  if(_outputTail    >=    outputEnd)    {    	non-compiled	[CE]  incompatible  types	33	None	replace
74	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]              JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  len)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(_outputTail  >=  len)  {	  if(_outputTail    >=    outputEnd)    {    	compilable	  [FE]  JsonGenerationException  	33	1	replace
75	[BUG]  [BUGGY]  if(_outputTail  >=  len)  {  [FE]  JsonGenerationException  [FE]              JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  len)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  len)  {	  if(_outputTail    >=    outputEnd)    {    	compilable	  [FE]  JsonGenerationException  	33	1	replace
76	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail!=  end)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(_outputTail!=  end)  {	  if(_outputTail    >=    outputEnd)    {    	compilable	  [FE]  JsonGenerationException  	33	1	replace
77	[BUG]  [BUGGY]  if(_outputTail!=  end)  {  [FE]  JsonGenerationException  [FE]                JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail!=  end)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail!=  end)  {	  if(_outputTail    >=    outputEnd)    {    	compilable	  [FE]  JsonGenerationException  	33	1	replace
78	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  end)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(_outputTail  >=  end)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }	  _verifyValueWrite(   "write    text    value   ");    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	42	1	replace
79	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  end)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  end)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }	  _verifyValueWrite(   "write    text    value   ");    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	42	1	replace
80	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  inputEnd)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  <  inputEnd)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }	  _verifyValueWrite(   "write    text    value   ");    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	42	1	replace
81	[BUG]  [BUGGY]  if(offset  <  inputEnd)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  inputEnd)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  inputEnd)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }	  _verifyValueWrite(   "write    text    value   ");    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	42	1	replace
82	[BUG]  [BUGGY]  if((  _outputTail  +  3)  >=  inputEnd)  {  if((  _outputTail  +  3)  >=  inputEnd)  {  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  3)  >=  inputEnd)  {  if((  _outputTail  +  3)  >=  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    3)    >=    inputEnd)    {    if((  _outputTail  +  3)  >=  inputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
83	[BUG]  [BUGGY]  if((  _outputTail  +  3)  >=  inputEnd)  {  if((  _outputTail  +  3)  >>  inputEnd)  {  [CE]  ';'  expected  [FE]      JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  3)  >=  inputEnd)  {  if((  _outputTail  +  3)  >>  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    3)    >=    inputEnd)    {    if((  _outputTail  +  3)  >>  inputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
84	[BUG]  [BUGGY]  if((  _outputTail  +  3)  >=  inputEnd)  {  if((  _outputTail  +  3)!=  inputEnd)  {  [CE]  ';'  expected  [FE]        JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  3)  >=  inputEnd)  {  if((  _outputTail  +  3)!=  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    3)    >=    inputEnd)    {    if((  _outputTail  +  3)!=  inputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
85	[BUG]  [BUGGY]  if((  _outputTail  +  3)  >=  inputEnd)  {  if((  _outputTail  +  3)  ==  inputEnd)  {  [CE]  ';'  expected  [FE]          JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  3)  >=  inputEnd)  {  if((  _outputTail  +  3)  ==  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((    _outputTail    +    3)    >=    inputEnd)    {    if((  _outputTail  +  3)  ==  inputEnd)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
86	[BUG]  [BUGGY]  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  [CE]  class,  interface,  or  enum  expected  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	_outputRawMultiByteChar(ch,  cbuf,  offset,  len);	  if(_outputTail    >=    end)    {    _outputRawMultiByteChar(ch,    cbuf,    offset,    len);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
87	[BUG]  [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  }  [CE]  cannot  find  symbol  ch  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  }	  if(_outputTail    >=    end)    {    _outputRawMultiByteChar(ch,    cbuf,    offset,    len);    }    	non-compiled	[CE]  cannot  find  symbol  ch	37	None	replace
88	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	23	1	replace
89	[BUG]  [BUGGY]  if(offset  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonGenerationException  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	23	1	replace
90	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
91	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                          JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  len)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  >=  len)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	23	1	replace
92	[BUG]  [BUGGY]  if(offset  >=  len)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonGenerationException  [FE]                          JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  len)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  >=  len)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	23	1	replace
93	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                            JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(cbuf[offset++]  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(cbuf[offset++]  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	23	2	replace
94	[BUG]  [BUGGY]  if(cbuf[offset++]  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonGenerationException  [FE]                            JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(cbuf[offset++]  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(cbuf[offset++]  <  0x800)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	23	2	replace
95	[BUG]  [BUGGY]  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  len;  [CE]  class,  interface,  or  enum  expected  [FE]                  JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  len;  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	_outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  len;	  if(_outputTail    >=    end)    {    _outputRawMultiByteChar(ch,    cbuf,    offset,    len);    _outputTail    =    len;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
96	[BUG]  [BUGGY]  _outputTail  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  [CE]  class,  interface,  or  enum  expected  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  _outputTail  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	_outputTail  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);	  if(_outputTail    >=    end)    {    _outputRawMultiByteChar(ch,    cbuf,    offset,    len);    _outputTail    =    len;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
97	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  >=  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	22	1	replace
98	[BUG]  [BUGGY]  if(offset  >=  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  >=  0x800)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	22	1	replace
99	[BUG]  [BUGGY]  if(offset  <  MAX_BYTES_TO_BUFFER)  {  _flushBuffer();  }  [CE]  class,  interface,  or  enum  expected  [FE]                  JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  MAX_BYTES_TO_BUFFER)  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  MAX_BYTES_TO_BUFFER)  {  _flushBuffer();  }	  _flushBuffer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
100	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [CE]  class,  interface,  or  enum  expected  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  end)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  end)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  _flushBuffer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
101	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  _outputMaxContiguous)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  <  _outputMaxContiguous)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    JsonGenerationException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	24	1	replace
102	[BUG]  [BUGGY]  if(offset  <  _outputMaxContiguous)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [FE]  JsonGenerationException  [FE]                        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  _outputMaxContiguous)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  _outputMaxContiguous)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    JsonGenerationException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	24	1	replace
103	[BUG]  [BUGGY]  if(offset  >=  inputEnd)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  len;  }  [CE]  cannot  find  symbol  ch  [FE]                  JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  inputEnd)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  >=  inputEnd)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  len;  }	  if(_outputTail    >=    end)    {    _outputRawMultiByteChar(ch,    cbuf,    offset,    len);    _outputTail    =    len;    }    	non-compiled	[CE]  cannot  find  symbol  ch	36	None	replace
104	[BUG]  [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  len;  }  [CE]  cannot  find  symbol  ch  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  len;  }	  if(_outputTail    >=    end)    {    _outputRawMultiByteChar(ch,    cbuf,    offset,    len);    _outputTail    =    len;    }    	non-compiled	[CE]  cannot  find  symbol  ch	36	None	replace
105	[BUG]  [BUGGY]  if(++offset  >=  inputEnd)  {  if(++offset  <  inputEnd)  {  [CE]  ';'  expected  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(++offset  >=  inputEnd)  {  if(++offset  <  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(++offset    >=    inputEnd)    {    if(++offset  <  inputEnd)  {	  	non-compiled	[CE]  ';'  expected	34	None	add
106	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]          JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  <  inputEnd)  {	  if(_outputTail    >=    end)    {    if(_outputTail    >=    outputEnd)    {    	compilable	  [FE]  JsonGenerationException  	40	1	replace
107	[BUG]  [BUGGY]  if(offset  <  inputEnd)  {  [FE]  JsonGenerationException  [FE]          JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  inputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  inputEnd)  {	  if(_outputTail    >=    end)    {    if(_outputTail    >=    outputEnd)    {    	compilable	  [FE]  JsonGenerationException  	40	1	replace
108	[BUG]  [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  _outputTail  =  0;  }  [CE]  cannot  find  symbol  ch  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  _outputTail  =  0;  }	  if(_outputTail    >=    end)    {    _outputRawMultiByteChar(ch,    cbuf,    offset,    inputEnd);    _outputTail    =    0;    }    	non-compiled	[CE]  cannot  find  symbol  ch	38	None	replace
109	[BUG]  [BUGGY]  if(offset  >=  len)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  _outputTail  =  0;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  len)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  >=  len)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  _outputTail  =  0;  }	  if(_outputTail    >=    end)    {    _outputRawMultiByteChar(ch,    cbuf,    offset,    inputEnd);    _outputTail    =    0;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
110	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]              JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  3)  ==  end)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if((  _outputTail  +  3)  ==  end)  {	  if((    _outputTail    +    3)    >=    end)    {    if((    _outputTail    +    3)    ==    end)    {    	compilable	  [FE]  JsonGenerationException  	14	1	replace
111	[BUG]  [BUGGY]  if((  _outputTail  +  3)  ==  end)  {  [FE]  JsonGenerationException  [FE]              JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  3)  ==  end)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((  _outputTail  +  3)  ==  end)  {	  if((    _outputTail    +    3)    >=    end)    {    if((    _outputTail    +    3)    ==    end)    {    	compilable	  [FE]  JsonGenerationException  	14	1	replace
112	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  inputEnd)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  >=  inputEnd)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }	  _verifyValueWrite(   "write    text    value   ");    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	42	1	replace
113	[BUG]  [BUGGY]  if(offset  >=  inputEnd)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  inputEnd)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  >=  inputEnd)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }	  _verifyValueWrite(   "write    text    value   ");    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	42	1	replace
114	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  ==  inputEnd)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  ==  inputEnd)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }	  _verifyValueWrite(   "write    text    value   ");    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	42	1	replace
115	[BUG]  [BUGGY]  if(offset  ==  inputEnd)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  ==  inputEnd)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  ==  inputEnd)  {  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  end)  {  break  main_loop;  }	  _verifyValueWrite(   "write    text    value   ");    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	42	1	replace
116	[BUG]  [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  [CE]  ';'  expected  [FE]              JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {	  if(_outputTail    >=    end)    {    if(_outputTail    ==    end)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
117	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  MAX_BYTES_TO_BUFFER)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  >=  MAX_BYTES_TO_BUFFER)  {	  if(_outputTail    >=    end)    {    if(_outputTail    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	39	1	replace
118	[BUG]  [BUGGY]  if(offset  >=  MAX_BYTES_TO_BUFFER)  {  [FE]  JsonGenerationException  [FE]        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  MAX_BYTES_TO_BUFFER)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  >=  MAX_BYTES_TO_BUFFER)  {	  if(_outputTail    >=    end)    {    if(_outputTail    >=    inputEnd)    {    	compilable	  [FE]  JsonGenerationException  	39	1	replace
119	[BUG]  [BUGGY]  if(offset  >=  inputEnd)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  }  [CE]  cannot  find  symbol  ch  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  inputEnd)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  >=  inputEnd)  {  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  }	  if(_outputTail    >=    end)    {    _outputRawMultiByteChar(ch,    cbuf,    offset,    len);    }    	non-compiled	[CE]  cannot  find  symbol  ch	37	None	replace
120	[BUG]  [BUGGY]  if(offset  >=  len)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  len)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  >=  len)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  }	  if(_outputTail    >=    end)    {    _outputRawMultiByteChar(ch,    cbuf,    offset,    len);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
121	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  ==  0x800)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  ==  0x800)  {	  if(_outputTail    >=    _outputEnd)    {    	compilable	  [FE]  JsonGenerationException  	30	1	replace
122	[BUG]  [BUGGY]  if(offset  ==  0x800)  {  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  ==  0x800)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  ==  0x800)  {	  if(_outputTail    >=    _outputEnd)    {    	compilable	  [FE]  JsonGenerationException  	30	1	replace
123	[BUG]  [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [CE]  cannot  find  symbol  ch  [FE]                  JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(ch  <  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(ch  <  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	non-compiled	[CE]  cannot  find  symbol  ch	41	None	replace
124	[BUG]  [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [CE]  cannot  find  symbol  ch  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(ch  ==  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(ch  ==  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	non-compiled	[CE]  cannot  find  symbol  ch	41	None	replace
125	[BUG]  [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [CE]  cannot  find  symbol  ch  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(ch  >=  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(ch  >=  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	non-compiled	[CE]  cannot  find  symbol  ch	41	None	replace
126	[BUG]  [BUGGY]  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  inputEnd)  {  break  main_loop;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  _verifyValueWrite( "write  text  value ");  if(_outputTail  >=  inputEnd)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	_verifyValueWrite( "write  text  value ");  if(_outputTail  >=  inputEnd)  {  break  main_loop;  }	  _verifyValueWrite(   "write    text    value   ");    if(_outputTail    >=    end)    {    break    main_loop;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
127	[BUG]  [BUGGY]  _writeByteChar(ch,  cbuf,  offset,  len);  [CE]  class,  interface,  or  enum  expected  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  _writeByteChar(ch,  cbuf,  offset,  len);  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	_writeByteChar(ch,  cbuf,  offset,  len);	  if(_outputTail    >=    end)    {    _outputRawMultiByteChar(ch,    cbuf,    offset,    len);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
128	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  3)  >=  (end  -  _outputEnd))  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if((  _outputTail  +  3)  >=  (end  -  _outputEnd))  {	  if((    _outputTail    +    3)    >=    end)    {    if((    _outputTail    +    3)    >=    end)    {    	compilable	  [FE]  JsonGenerationException  	11	1	replace
129	[BUG]  [BUGGY]  if((  _outputTail  +  3)  >=  (end  -  _outputEnd))  {  [FE]  JsonGenerationException  [FE]        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  3)  >=  (end  -  _outputEnd))  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((  _outputTail  +  3)  >=  (end  -  _outputEnd))  {	  if((    _outputTail    +    3)    >=    end)    {    if((    _outputTail    +    3)    >=    end)    {    	compilable	  [FE]  JsonGenerationException  	11	1	replace
130	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  0;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  end)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  len);  _outputTail  =  0;  }	  if(_outputTail    >=    end)    {    _outputRawMultiByteChar(ch,    cbuf,    offset,    inputEnd);    _outputTail    =    0;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
131	[BUG]  [BUGGY]  if(offset  <  len)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  _outputTail  =  0;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  len)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  _outputTail  =  0;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  len)  {  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  _outputTail  =  0;  }	  if(_outputTail    >=    end)    {    _outputRawMultiByteChar(ch,    cbuf,    offset,    inputEnd);    _outputTail    =    0;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
132	[BUG]  [BUGGY]  if(_outputTail  >=  end)  {  _flushBuffer();  }  else  {  System.arraycopy(cbuf,  0,  cbuf,  offset,  len);  _outputTail  =  len;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(_outputTail  >=  end)  {  _flushBuffer();  }  else  {  System.arraycopy(cbuf,  0,  cbuf,  offset,  len);  _outputTail  =  len;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(_outputTail  >=  end)  {  _flushBuffer();  }  else  {  System.arraycopy(cbuf,  0,  cbuf,  offset,  len);  _outputTail  =  len;  }	  _flushBuffer();    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
133	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                  JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  <  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	41	1	replace
134	[BUG]  [BUGGY]  if(offset  <  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                  JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  0x7F)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    =    0x7F)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	41	1	replace
135	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]              JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  6)  <  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if((  _outputTail  +  6)  <  _outputEnd)  {	  if((    _outputTail    +    6)    >=    _outputEnd)    {    if((    _outputTail    +    6)    ==    _outputEnd)    {    	compilable	  [FE]  JsonGenerationException  	6	1	replace
136	[BUG]  [BUGGY]  if((  _outputTail  +  6)  <  _outputEnd)  {  [FE]  JsonGenerationException  [FE]              JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  6)  <  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((  _outputTail  +  6)  <  _outputEnd)  {	  if((    _outputTail    +    6)    >=    _outputEnd)    {    if((    _outputTail    +    6)    ==    _outputEnd)    {    	compilable	  [FE]  JsonGenerationException  	6	1	replace
137	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]          JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  6)  >=  (end  -  _outputEnd))  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if((  _outputTail  +  6)  >=  (end  -  _outputEnd))  {	  if((    _outputTail    +    6)    >=    end)    {    if((    _outputTail    +    6)    >>    end)    {    	compilable	  [FE]  JsonGenerationException  	26	1	replace
138	[BUG]  [BUGGY]  if((  _outputTail  +  6)  >=  (end  -  _outputEnd))  {  [FE]  JsonGenerationException  [FE]          JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  6)  >=  (end  -  _outputEnd))  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((  _outputTail  +  6)  >=  (end  -  _outputEnd))  {	  if((    _outputTail    +    6)    >=    end)    {    if((    _outputTail    +    6)    >>    end)    {    	compilable	  [FE]  JsonGenerationException  	26	1	replace
139	[BUG]  [BUGGY]  if((  _outputTail  +  6)  <  =  end)  {  [CE]  illegal  start  of  expression  [FE]              JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if((  _outputTail  +  6)  <  =  end)  {  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if((  _outputTail  +  6)  <  =  end)  {	  if((    _outputTail    +    6)    >=    end)    {    if((    _outputTail    +    6)    ==    end)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
140	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  len)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  <  len)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	23	1	replace
141	[BUG]  [BUGGY]  if(offset  <  len)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonGenerationException  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  len)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  len)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	23	1	replace
142	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	23	1	replace
143	[BUG]  [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  JsonGenerationException  [FE]                        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  throw  new  IllegalArgumentException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	23	1	replace
144	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	22	1	replace
145	[BUG]  [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                    JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	22	1	replace
146	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  inputEnd)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  >=  inputEnd)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	22	1	replace
147	[BUG]  [BUGGY]  if(offset  >=  inputEnd)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [FE]  JsonGenerationException  [FE]                      JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  >=  inputEnd)  {  if(_outputTail  >=  end)  {  break  main_loop;  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  >=  inputEnd)  {  if(_outputTail  >=  end)  {  break  main_loop;  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    break    main_loop;    }    	compilable	  [FE]  JsonGenerationException  	22	1	replace
148	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  len)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  <  len)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    JsonGenerationException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	24	1	replace
149	[BUG]  [BUGGY]  if(offset  <  len)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [FE]  JsonGenerationException  [FE]                        JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  len)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  len)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    JsonGenerationException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	24	1	replace
150	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]                          JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	add	if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    JsonGenerationException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	24	1	replace
151	[BUG]  [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [FE]  JsonGenerationException  [FE]                          JsonGenerationException      [CONTEXT]      }  if  (_outputTail  >=  end)  {  _flushBuffer();  }  bbuf[_outputTail++]  =  (byte)  ch;  if  (++offset  >=  inputEnd)  {  break  main_loop;  }  }      [BUGGY]  if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }  [BUGGY]      _flushBuffer();  }  char  ch  =  cbuf[offset++];  if  (ch  <  0x800)  {  //  2-byte?  bbuf[_outputTail++]  =  (byte)  (0xc0  |  (ch  >>  6));  bbuf[_outputTail++]  =  (byte)  (0x80  |  (ch  &  0x3f));  }  else  {  offset  =  _outputRawMultiByteChar(ch,  cbuf,  offset,  inputEnd);  }  }  [CLASS]  UTF8JsonGenerator  [METHOD]  _writeSegmentedRaw  [RETURN_TYPE]  void  char[]  cbuf  int  offset  int  len  [VARIABLES]  byte[]  FALSE_BYTES  HEX_CHARS  NULL_BYTES  TRUE_BYTES  _entityBuffer  _outputBuffer  bbuf  outputBuffer  raw  text  boolean  _bufferRecyclable  addQuotes  bufferRecyclable  byte  BYTE_0  BYTE_BACKSLASH  BYTE_COLON  BYTE_COMMA  BYTE_LBRACKET  BYTE_LCURLY  BYTE_QUOTE  BYTE_RBRACKET  BYTE_RCURLY  BYTE_u  OutputStream  _outputStream  out  char  ch  int  MAX_BYTES_TO_BUFFER  _charBufferLength  _outputEnd  _outputMaxContiguous  _outputTail  ch  end  features  inputEnd  len  len2  len3  length  offset  outputOffset  status  char[]  _charBuffer  buf  cbuf  text  	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	0.7071067811865475	650	650	1	replace	if(offset  <  inputEnd)  {  if(_outputTail  >=  end)  {  throw  new  JsonGenerationException( " ");  }	  if(ch    <    0x800)    {    if(_outputTail    >=    end)    {    throw    new    JsonGenerationException(   "   ");    }    	compilable	  [FE]  JsonGenerationException  	24	1	replace
