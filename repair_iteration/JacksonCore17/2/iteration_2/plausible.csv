5	[BUG]    [BUGGY]    while(buf!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    [FE]    JsonGenerationException    [FE]        JsonGenerationException        [CONTEXT]        public    void    writeRaw(String    text,    int    offset,    int    len)    throws    IOException    {    final    char[]    buf    =    _charBuffer;                    [BUGGY]    while(buf!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    [BUGGY]        int    len2    =    Math.min(buf.length,    len);    text.getChars(offset,    offset+len2,    buf,    0);    writeRaw(buf,    0,    len2);        offset    +=    len2;    len    -=    len2;    }    }    [CLASS]    UTF8JsonGenerator    [METHOD]    writeRaw    [RETURN_TYPE]    void    String    text    int    offset    int    len    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    outputBuffer    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    OutputStream    _outputStream    out    String    text    int    MAX_BYTES_TO_BUFFER    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    features    len    len2    length    offset    outputOffset    status    char[]    _charBuffer    buf    text    	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	1.0	533	533	1	replace	while(buf  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(buf!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	plausible		19	0
18	[BUG]    [BUGGY]    while(buf!=    null    &&    buf.length    <    =    0)    {    [CE]    illegal    start    of    expression    [FE]            JsonGenerationException        [CONTEXT]        public    void    writeRaw(String    text,    int    offset,    int    len)    throws    IOException    {    final    char[]    buf    =    _charBuffer;                    [BUGGY]    while(buf!=    null    &&    buf.length    <    =    0)    {    [BUGGY]        int    len2    =    Math.min(buf.length,    len);    text.getChars(offset,    offset+len2,    buf,    0);    writeRaw(buf,    0,    len2);        offset    +=    len2;    len    -=    len2;    }    }    [CLASS]    UTF8JsonGenerator    [METHOD]    writeRaw    [RETURN_TYPE]    void    String    text    int    offset    int    len    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    outputBuffer    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    OutputStream    _outputStream    out    String    text    int    MAX_BYTES_TO_BUFFER    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    features    len    len2    length    offset    outputOffset    status    char[]    _charBuffer    buf    text    	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	1.0	533	533	1	replace	while(buf!=  null  &&  buf.length  ==  0)  {	  while(buf!=    null    &&    buf.length    <    =    0)    {    	plausible		28	0
20	[BUG]    [BUGGY]    _verifyValueWrite(   "write    text    value   ");    if(buf!=    null)    {    writeRaw(buf,    0,    buf.length);    }    [CE]    class,    interface,    or    enum    expected    [FE]                            JsonGenerationException        [CONTEXT]        public    void    writeRaw(String    text,    int    offset,    int    len)    throws    IOException    {    final    char[]    buf    =    _charBuffer;                    [BUGGY]    _verifyValueWrite(   "write    text    value   ");    if(buf!=    null)    {    writeRaw(buf,    0,    buf.length);    }    [BUGGY]        int    len2    =    Math.min(buf.length,    len);    text.getChars(offset,    offset+len2,    buf,    0);    writeRaw(buf,    0,    len2);        offset    +=    len2;    len    -=    len2;    }    }    [CLASS]    UTF8JsonGenerator    [METHOD]    writeRaw    [RETURN_TYPE]    void    String    text    int    offset    int    len    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    outputBuffer    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    OutputStream    _outputStream    out    String    text    int    MAX_BYTES_TO_BUFFER    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    features    len    len2    length    offset    outputOffset    status    char[]    _charBuffer    buf    text    	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	1.0	533	533	1	replace	if(buf  ==  null)  {  _verifyValueWrite( "write  text  value ");  if(buf!=  null)  {  writeRaw(buf,  0,  buf.length);  }	  _verifyValueWrite(   "write    text    value   ");    if(buf!=    null)    {    writeRaw(buf,    0,    buf.length);    }    	plausible		46	0
33	[BUG]    [BUGGY]    if(buf!=    null)    {    if(_outputTail    >=    _outputEnd)    {    writeRaw(buf,    0,    buf.length);    }    [FE]    JsonGenerationException    [FE]                        JsonGenerationException        [CONTEXT]        public    void    writeRaw(String    text,    int    offset,    int    len)    throws    IOException    {    final    char[]    buf    =    _charBuffer;                    [BUGGY]    if(buf!=    null)    {    if(_outputTail    >=    _outputEnd)    {    writeRaw(buf,    0,    buf.length);    }    [BUGGY]        int    len2    =    Math.min(buf.length,    len);    text.getChars(offset,    offset+len2,    buf,    0);    writeRaw(buf,    0,    len2);        offset    +=    len2;    len    -=    len2;    }    }    [CLASS]    UTF8JsonGenerator    [METHOD]    writeRaw    [RETURN_TYPE]    void    String    text    int    offset    int    len    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    outputBuffer    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    OutputStream    _outputStream    out    String    text    int    MAX_BYTES_TO_BUFFER    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    features    len    len2    length    offset    outputOffset    status    char[]    _charBuffer    buf    text    	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	1.0	533	533	1	replace	if(buf  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  writeRaw(buf,  0,  buf.length);  }	  if(buf!=    null)    {    if(_outputTail    >=    _outputEnd)    {    writeRaw(buf,    0,    buf.length);    }    	plausible		2	0
49	[BUG]    [BUGGY]    _verifyValueWrite(   "write    text    value   ");    if(buf!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    [CE]    class,    interface,    or    enum    expected    [FE]                        JsonGenerationException        [CONTEXT]        public    void    writeRaw(String    text,    int    offset,    int    len)    throws    IOException    {    final    char[]    buf    =    _charBuffer;                    [BUGGY]    _verifyValueWrite(   "write    text    value   ");    if(buf!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    [BUGGY]        int    len2    =    Math.min(buf.length,    len);    text.getChars(offset,    offset+len2,    buf,    0);    writeRaw(buf,    0,    len2);        offset    +=    len2;    len    -=    len2;    }    }    [CLASS]    UTF8JsonGenerator    [METHOD]    writeRaw    [RETURN_TYPE]    void    String    text    int    offset    int    len    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    outputBuffer    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    OutputStream    _outputStream    out    String    text    int    MAX_BYTES_TO_BUFFER    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    features    len    len2    length    offset    outputOffset    status    char[]    _charBuffer    buf    text    	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	1.0	533	533	1	replace	if(buf  ==  null)  {  _verifyValueWrite( "write  text  value ");  if(buf!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  _verifyValueWrite(   "write    text    value   ");    if(buf!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	plausible		61	0
80	[BUG]    [BUGGY]    while(buf!=    null    &&    len    >    0)    {    if(buf!=    null    &&    len    >    0)    {    for(int    len    =    buf.length;    len    <    len;    len++)    {    writeRaw(buf,    0,    len);    }    [CE]    ';'    expected    [FE]                JsonGenerationException        [CONTEXT]        public    void    writeRaw(String    text,    int    offset,    int    len)    throws    IOException    {    final    char[]    buf    =    _charBuffer;                    [BUGGY]    while(buf!=    null    &&    len    >    0)    {    if(buf!=    null    &&    len    >    0)    {    for(int    len    =    buf.length;    len    <    len;    len++)    {    writeRaw(buf,    0,    len);    }    [BUGGY]        int    len2    =    Math.min(buf.length,    len);    text.getChars(offset,    offset+len2,    buf,    0);    writeRaw(buf,    0,    len2);        offset    +=    len2;    len    -=    len2;    }    }    [CLASS]    UTF8JsonGenerator    [METHOD]    writeRaw    [RETURN_TYPE]    void    String    text    int    offset    int    len    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    outputBuffer    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    OutputStream    _outputStream    out    String    text    int    MAX_BYTES_TO_BUFFER    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    features    len    len2    length    offset    outputOffset    status    char[]    _charBuffer    buf    text    	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	1.0	533	533	1	replace	while(buf!=  null  &&  len  <  0)  {  if(buf!=  null  &&  buf.length  >  0)  {  writeRaw(buf,  0,  buf.length);  }	  while(buf!=    null    &&    len    >    0)    {    if(buf!=    null    &&    len    >    0)    {    for(int    len    =    buf.length;    len    <    len;    len++)    {    writeRaw(buf,    0,    len);    }    	plausible		15	0
156	[BUG]    [BUGGY]    while(buf!=    null    &&    buf.length    >=    0)    {    [FE]    JsonGenerationException    [FE]        JsonGenerationException        [CONTEXT]        public    void    writeRaw(String    text,    int    offset,    int    len)    throws    IOException    {    final    char[]    buf    =    _charBuffer;                    [BUGGY]    while(buf!=    null    &&    buf.length    >=    0)    {    [BUGGY]        int    len2    =    Math.min(buf.length,    len);    text.getChars(offset,    offset+len2,    buf,    0);    writeRaw(buf,    0,    len2);        offset    +=    len2;    len    -=    len2;    }    }    [CLASS]    UTF8JsonGenerator    [METHOD]    writeRaw    [RETURN_TYPE]    void    String    text    int    offset    int    len    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    outputBuffer    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    OutputStream    _outputStream    out    String    text    int    MAX_BYTES_TO_BUFFER    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    features    len    len2    length    offset    outputOffset    status    char[]    _charBuffer    buf    text    	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	1.0	533	533	1	replace	while(buf!=  null  &&  buf.length  <  0)  {	  while(buf!=    null    &&    buf.length    >=    0)    {    	plausible		55	0
159	[BUG]    [BUGGY]    while    (offset    <    =    0)    {    [CE]    illegal    start    of    expression    [FE]                        JsonGenerationException        [CONTEXT]        public    void    writeRaw(String    text,    int    offset,    int    len)    throws    IOException    {    final    char[]    buf    =    _charBuffer;                    [BUGGY]    while    (offset    <    =    0)    {    [BUGGY]        int    len2    =    Math.min(buf.length,    len);    text.getChars(offset,    offset+len2,    buf,    0);    writeRaw(buf,    0,    len2);        offset    +=    len2;    len    -=    len2;    }    }    [CLASS]    UTF8JsonGenerator    [METHOD]    writeRaw    [RETURN_TYPE]    void    String    text    int    offset    int    len    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    outputBuffer    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    OutputStream    _outputStream    out    String    text    int    MAX_BYTES_TO_BUFFER    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    features    len    len2    length    offset    outputOffset    status    char[]    _charBuffer    buf    text    	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	1.0	533	533	1	replace	while  (offset  <  0)  {	  while    (offset    <    =    0)    {    	plausible		7	0
161	[BUG]    [BUGGY]    while    (offset    <    =    0)    {    [CE]    illegal    start    of    expression    [FE]                        JsonGenerationException        [CONTEXT]        public    void    writeRaw(String    text,    int    offset,    int    len)    throws    IOException    {    final    char[]    buf    =    _charBuffer;                    [BUGGY]    while    (offset    <    =    0)    {    [BUGGY]        int    len2    =    Math.min(buf.length,    len);    text.getChars(offset,    offset+len2,    buf,    0);    writeRaw(buf,    0,    len2);        offset    +=    len2;    len    -=    len2;    }    }    [CLASS]    UTF8JsonGenerator    [METHOD]    writeRaw    [RETURN_TYPE]    void    String    text    int    offset    int    len    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    outputBuffer    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    OutputStream    _outputStream    out    String    text    int    MAX_BYTES_TO_BUFFER    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    features    len    len2    length    offset    outputOffset    status    char[]    _charBuffer    buf    text    	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	1.0	533	533	1	replace	while  (offset  ==  0)  {	  while    (offset    <    =    0)    {    	plausible		7	0
235	[BUG]    [BUGGY]    while(buf.length    >    0)    {    if(buf.length    >    0)    {    while(buf.length    >    0)    {    }    [CE]    ';'    expected    [FE]                JsonGenerationException        [CONTEXT]        public    void    writeRaw(String    text,    int    offset,    int    len)    throws    IOException    {    final    char[]    buf    =    _charBuffer;                    [BUGGY]    while(buf.length    >    0)    {    if(buf.length    >    0)    {    while(buf.length    >    0)    {    }    [BUGGY]        int    len2    =    Math.min(buf.length,    len);    text.getChars(offset,    offset+len2,    buf,    0);    writeRaw(buf,    0,    len2);        offset    +=    len2;    len    -=    len2;    }    }    [CLASS]    UTF8JsonGenerator    [METHOD]    writeRaw    [RETURN_TYPE]    void    String    text    int    offset    int    len    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    outputBuffer    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    OutputStream    _outputStream    out    String    text    int    MAX_BYTES_TO_BUFFER    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    features    len    len2    length    offset    outputOffset    status    char[]    _charBuffer    buf    text    	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	1.0	533	533	1	replace	while(buf  ==  null)  {  if(buf.length  >  0)  {  }	  while(buf.length    >    0)    {    if(buf.length    >    0)    {    while(buf.length    >    0)    {    }    	plausible		10	0
257	[BUG]    [BUGGY]    _verifyValueWrite(   "write    text    value   ");    if(buf!=    null)    {    writeRaw(buf,    0,    buf.length);    }    [CE]    class,    interface,    or    enum    expected    [FE]                            JsonGenerationException        [CONTEXT]        public    void    writeRaw(String    text,    int    offset,    int    len)    throws    IOException    {    final    char[]    buf    =    _charBuffer;                    [BUGGY]    _verifyValueWrite(   "write    text    value   ");    if(buf!=    null)    {    writeRaw(buf,    0,    buf.length);    }    [BUGGY]        int    len2    =    Math.min(buf.length,    len);    text.getChars(offset,    offset+len2,    buf,    0);    writeRaw(buf,    0,    len2);        offset    +=    len2;    len    -=    len2;    }    }    [CLASS]    UTF8JsonGenerator    [METHOD]    writeRaw    [RETURN_TYPE]    void    String    text    int    offset    int    len    [VARIABLES]    byte[]    FALSE_BYTES    HEX_CHARS    NULL_BYTES    TRUE_BYTES    _entityBuffer    _outputBuffer    outputBuffer    text    boolean    _bufferRecyclable    addQuotes    bufferRecyclable    byte    BYTE_0    BYTE_BACKSLASH    BYTE_COLON    BYTE_COMMA    BYTE_LBRACKET    BYTE_LCURLY    BYTE_QUOTE    BYTE_RBRACKET    BYTE_RCURLY    BYTE_u    OutputStream    _outputStream    out    String    text    int    MAX_BYTES_TO_BUFFER    _charBufferLength    _outputEnd    _outputMaxContiguous    _outputTail    features    len    len2    length    offset    outputOffset    status    char[]    _charBuffer    buf    text    	projects/JacksonCore17/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java	1.0	533	533	1	replace	if(text.length()  ==  0)  {  _verifyValueWrite( "write  text  value ");  if(buf!=  null)  {  writeRaw(buf,  0,  buf.length);  }	  _verifyValueWrite(   "write    text    value   ");    if(buf!=    null)    {    writeRaw(buf,    0,    buf.length);    }    	plausible		46	0
