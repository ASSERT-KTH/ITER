bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(providedNames!=  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]  if(providedNames!=  null)  {  [BUGGY]  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	if(providedNames!=  null)  {	if  (name  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
2	[BUG]  [BUGGY]  if(parent!=  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]  if(parent!=  null)  {  [BUGGY]  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	if(parent!=  null)  {	if  (name  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]    [BUGGY]  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	  	if  (name  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
4	[BUG]  [BUGGY]    name  =  n.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]    name  =  n.getLastChild().getQualifiedName();  [BUGGY]  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	    name  =  n.getLastChild().getQualifiedName();		non-compiled	[CE]  illegal  start  of  expression	87	None	add
5	[BUG]  [BUGGY]    Name  name  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]    Name  name  =  n.getFirstChild().getQualifiedName();  [BUGGY]  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	    Name  name  =  n.getFirstChild().getQualifiedName();		non-compiled	[CE]  illegal  start  of  expression	87	None	add
6	[BUG]  [BUGGY]    name  =  parent.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]    name  =  parent.getFirstChild().getQualifiedName();  [BUGGY]  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	    name  =  parent.getFirstChild().getQualifiedName();		non-compiled	[CE]  illegal  start  of  expression	87	None	add
7	[BUG]  [BUGGY]    name  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]    name  =  n.getFirstChild().getQualifiedName();  [BUGGY]  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	    name  =  n.getFirstChild().getQualifiedName();		non-compiled	[CE]  illegal  start  of  expression	87	None	add
8	[BUG]  [BUGGY]    Name  name  =  n.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]    Name  name  =  n.getLastChild().getQualifiedName();  [BUGGY]  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	    Name  name  =  n.getLastChild().getQualifiedName();		non-compiled	[CE]  illegal  start  of  expression	87	None	add
9	[BUG]  [BUGGY]    Name  name  =  parent.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]    Name  name  =  parent.getFirstChild().getQualifiedName();  [BUGGY]  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	    Name  name  =  parent.getFirstChild().getQualifiedName();		non-compiled	[CE]  illegal  start  of  expression	87	None	add
10	[BUG]  [BUGGY]    name  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]    name  =  n.getLastChild();  [BUGGY]  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	    name  =  n.getLastChild();		non-compiled	[CE]  illegal  start  of  expression	87	None	add
11	[BUG]  [BUGGY]    Name  pn  =  providedNames.get(name);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]    Name  pn  =  providedNames.get(name);  [BUGGY]  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	    Name  pn  =  providedNames.get(name);		non-compiled	[CE]  illegal  start  of  expression	87	None	add
12	[BUG]  [BUGGY]  if(name  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]  if(name  ==  null)  {  [BUGGY]  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	if(name  ==  null)  {	if  (name  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
13	[BUG]  [BUGGY]  if(name!=  null  &&  parent.getBooleanProp(Node.IS_NAMESPACE))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]  if(name!=  null  &&  parent.getBooleanProp(Node.IS_NAMESPACE))  {  [BUGGY]  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	if(name!=  null  &&  parent.getBooleanProp(Node.IS_NAMESPACE))  {	if  (name  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
14	[BUG]  [BUGGY]  if(name!=  null  &&  name.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]  if(name!=  null  &&  name.getType()  ==  Token.NAME)  {  [BUGGY]  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	if(name!=  null  &&  name.getType()  ==  Token.NAME)  {	if  (name  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
15	[BUG]  [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]  if(name!=  null  &&  name.length()  >  0)  {  [BUGGY]  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	if(name!=  null  &&  name.length()  >  0)  {	if  (name  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
16	[BUG]  [BUGGY]  if(name!=  null  &&  name.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]  if(name!=  null  &&  name.isQualifiedName())  {  [BUGGY]  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	if(name!=  null  &&  name.isQualifiedName())  {	if  (name  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
17	[BUG]  [BUGGY]    t  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]    t  =  n.getFirstChild();  [BUGGY]  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  }  else  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	414	414	1	replace	    t  =  n.getFirstChild();		non-compiled	[CE]  illegal  start  of  expression	87	None	add
