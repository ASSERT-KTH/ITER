bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  0),  methodName.getQualifiedName()));  return  true;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  0),  methodName.getQualifiedName()));  return  true;  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  0),  methodName.getQualifiedName()));  return  true;	  System.err.println(t.makeError(methodName,    0),    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
2	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;	  System.err.println(t.makeError(methodName,    0),    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
3	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NON_GLOBAL_NAME_ERROR,  methodName.getQualifiedName()  +  1));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NON_GLOBAL_NAME_ERROR,  methodName.getQualifiedName()  +  1));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NON_GLOBAL_NAME_ERROR,  methodName.getQualifiedName()  +  1));	  System.err.println(t.makeError(methodName,    NON_GLOBAL_NAME_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	85	None	replace
4	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NON_GLOBAL_NAME_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NON_GLOBAL_NAME_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NON_GLOBAL_NAME_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    NON_GLOBAL_NAME_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	85	None	replace
5	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "* ")))  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "* ")))  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "* ")))  {  return  true;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "   ")))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
6	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "* ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "* ")))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "* ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "   ")))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
7	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "- ")))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "- ")))  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "- ")))  {  return  true;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "   ")))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
8	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "_ ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "_ ")))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "_ ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "   ")))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
9	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  QUALIFIED_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  QUALIFIED_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  QUALIFIED_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_QUALIFIED_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
10	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ERROR,  name.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ERROR,  name.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_QUALIFIED_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
11	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
12	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
13	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()),  expected);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()),  expected);  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()),  expected);	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
14	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
15	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(methodName)?  null  :  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(methodName)?  null  :  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(methodName)?  null  :  methodName.getQualifiedName());	  throw    new    IllegalArgumentException(   "   ".equals(methodName)?    null    :    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
16	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Missing  method  name: "  +  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException( "Missing  method  name: "  +  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException( "Missing  method  name: "  +  methodName.getQualifiedName());	  throw    new    IllegalArgumentException(   "   ".equals(methodName)?    null    :    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
17	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException( " "  +  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException( " "  +  methodName.getQualifiedName());	  throw    new    IllegalArgumentException(   "   ".equals(methodName)?    null    :    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
18	[BUG]  [BUGGY]  ||  methodName.getQualifiedName()!=  null)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||  methodName.getQualifiedName()!=  null)  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||  methodName.getQualifiedName()!=  null)  {  return  true;  }	  ||    methodName.getQualifiedName()    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
19	[BUG]  [BUGGY]  ||  methodName.getQualifiedName()  ==  null)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||  methodName.getQualifiedName()  ==  null)  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||  methodName.getQualifiedName()  ==  null)  {  return  true;  }	  ||    methodName.getQualifiedName()    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
20	[BUG]  [BUGGY]  ||  methodName.getQualifiedName()  >=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||  methodName.getQualifiedName()  >=  null)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||  methodName.getQualifiedName()  >=  null)  {  return  false;  }	  ||    methodName.getQualifiedName()    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
21	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.toString());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.toString());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.toString());	  MutableTokenBuffer    tokens    =    new    MutableTokenBuffer(methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
22	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.getQualifiedName()  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.getQualifiedName()  +  1);  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.getQualifiedName()  +  1);	  MutableTokenBuffer    tokens    =    new    MutableTokenBuffer(methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
23	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.toLowerCase());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.toLowerCase());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.toLowerCase());	  MutableTokenBuffer    tokens    =    new    MutableTokenBuffer(methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
24	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.getQualifiedName(),  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.getQualifiedName(),  false);  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.getQualifiedName(),  false);	  MutableTokenBuffer    tokens    =    new    MutableTokenBuffer(methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
25	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(t.getQualifiedName());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(t.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(t.getQualifiedName());	  MutableTokenBuffer    tokens    =    new    MutableTokenBuffer(methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
26	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.getQualifiedName(),  tokens);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.getQualifiedName(),  tokens);  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.getQualifiedName(),  tokens);	  MutableTokenBuffer    tokens    =    new    MutableTokenBuffer(methodName.getQualifiedName());    if(tokens!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
27	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(tokens.getQualifiedName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(tokens.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(tokens.getQualifiedName());	  MutableTokenBuffer    tokens    =    new    MutableTokenBuffer(methodName.getQualifiedName());    if(tokens!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
28	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.getQualifiedName()  +  1);  if(tokens!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.getQualifiedName()  +  1);  if(tokens!=  null)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.getQualifiedName()  +  1);  if(tokens!=  null)  {  return  false;  }	  MutableTokenBuffer    tokens    =    new    MutableTokenBuffer(methodName.getQualifiedName());    if(tokens!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
29	[BUG]  [BUGGY]  AssertionFailedError  error  =  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  error  =  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  error  =  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t,    methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
30	[BUG]  [BUGGY]  parent.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	parent.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t,    methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
31	[BUG]  [BUGGY]  parent.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	parent.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t,    methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
32	[BUG]  [BUGGY]  AssertionFailedError.error(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.error(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.error(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t,    methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
33	[BUG]  [BUGGY]  AssertionFailedError.error(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.error(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.error(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t,    methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
34	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  return  false;  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  return  false;	  System.err.println(t.makeError(methodName,    NON_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    true;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
35	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException( " ").equals(methodName.getQualifiedName());	  throw    new    IllegalArgumentException(   "   ".equals(methodName));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
36	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  true));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  true));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  true));	  System.err.println(t.makeError(methodName,    false));    	non-compiled	[CE]  <identifier>  expected	67	None	replace
37	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  false));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  false));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  false));	  System.err.println(t.makeError(methodName,    false));    	non-compiled	[CE]  <identifier>  expected	67	None	replace
38	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  true));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  true));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  true));	  System.err.println(t.makeError(methodName,    false));    	non-compiled	[CE]  <identifier>  expected	67	None	replace
39	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  false));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  false));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  false));	  System.err.println(t.makeError(methodName,    false));    	non-compiled	[CE]  <identifier>  expected	67	None	replace
40	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUM_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUM_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_NUM_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    NUM_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
41	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NUM_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NUM_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NUM_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));	  System.err.println(t.makeError(methodName,    NUM_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
42	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));	  System.err.println(t.makeError(methodName,    INVALID_NUMBER_ERROR,    name.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
43	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NUMBER_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NUMBER_ERROR,  name.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NUMBER_ERROR,  name.getQualifiedName()));	  System.err.println(t.makeError(methodName,    INVALID_NUMBER_ERROR,    name.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
44	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  name.toString()));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  name.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  name.toString()));	  System.err.println(t.makeError(methodName,    INVALID_NUMBER_ERROR,    name.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
45	[BUG]  [BUGGY]  Error.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  Error.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	Error.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.getQualifiedName()    +    1));    	non-compiled	[CE]  <identifier>  expected	25	None	replace
46	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()  +  2));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()  +  2));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()  +  2));	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.getQualifiedName()    +    1));    	non-compiled	[CE]  <identifier>  expected	25	None	replace
47	[BUG]  [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
48	[BUG]  [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
49	[BUG]  [BUGGY]  AssertionFailedError.error(  t.makeError(  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.error(  t.makeError(  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.error(  t.makeError(  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
50	[BUG]  [BUGGY]  report(  t.makeError(  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  report(  t.makeError(  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	report(  t.makeError(  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
51	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  DEFAULT_NAME_ERROR));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  DEFAULT_NAME_ERROR));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  DEFAULT_NAME_ERROR));	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
52	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR));	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
53	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  String.valueOf(methodName.toString())));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  String.valueOf(methodName.toString())));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  String.valueOf(methodName.toString())));	  System.err.println(t.makeError(methodName,    INVALID_NUMBER_ERROR,    methodName.toString()));    	non-compiled	[CE]  <identifier>  expected	95	None	replace
54	[BUG]  [BUGGY]  safeName(methodName.getQualifiedName())  {  return  true;  }  else  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  safeName(methodName.getQualifiedName())  {  return  true;  }  else  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	safeName(methodName.getQualifiedName())  {  return  true;  }  else  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  safeName(methodName.getQualifiedName())    {    return    false;    }    else    if(methodName.getQualifiedName()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
55	[BUG]  [BUGGY]  safeName(t.getQualifiedName())  {  return  false;  }  else  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  safeName(t.getQualifiedName())  {  return  false;  }  else  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	safeName(t.getQualifiedName())  {  return  false;  }  else  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  safeName(methodName.getQualifiedName())    {    return    false;    }    else    if(methodName.getQualifiedName()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
56	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  TYPE_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  TYPE_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  TYPE_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_TYPE_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
57	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_TYPE_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_TYPE_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_TYPE_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_TYPE_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
58	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
59	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
60	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  INVALID_ERROR,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  INVALID_ERROR,  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  INVALID_ERROR,  methodName.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
61	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
62	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NON_MANY_ARGUMENTS_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NON_MANY_ARGUMENTS_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NON_MANY_ARGUMENTS_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    DEFAULT_NON_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
63	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NON_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NON_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_NON_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_NON_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
64	[BUG]  [BUGGY]  report(  t.makeError(  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  report(  t.makeError(  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	report(  t.makeError(  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
65	[BUG]  [BUGGY]  AssertionFailedError.this.add(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.this.add(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.this.add(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
66	[BUG]  [BUGGY]  AssertionFailedError.error(  t.makeError(  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.error(  t.makeError(  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.error(  t.makeError(  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
67	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	20	None	replace
68	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName())  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName())  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName())	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	20	None	replace
69	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName())  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName())  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName())	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	20	None	replace
70	[BUG]  [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  }	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	20	None	replace
71	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName())  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName())  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName())	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	20	None	replace
72	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    INVALID_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
73	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  name.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  name.getQualifiedName()));	  System.err.println(t.makeError(methodName,    INVALID_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
74	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0))  {  return  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0))  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0))  {  return  true;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
75	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()  >  0))  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()  >  0))  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()  >  0))  {  return  true;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
76	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  >=  0))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  >=  0))  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  >=  0))  {  return  true;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
77	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()).toString();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()).toString();  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()).toString();  }	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()).toString();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
78	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()).toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()).toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()).toString();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()).toString();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
79	[BUG]  [BUGGY]  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()).toString();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()).toString();  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()).toString();	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()).toString();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
80	[BUG]  [BUGGY]  return  t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()).toString();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()).toString();  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	return  t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()).toString();	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()).toString();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
81	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "   "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "   "))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "   "))  {  return  false;  }	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
82	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals( "null "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals( "null "))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals( "null "))  {  return  false;  }	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
83	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals( "* "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals( "* "))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals( "* "))  {  return  false;  }	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
84	[BUG]  [BUGGY]  ||  methodName.getQualifiedName().equals( "   "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||  methodName.getQualifiedName().equals( "   "))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||  methodName.getQualifiedName().equals( "   "))  {  return  false;  }	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
85	[BUG]  [BUGGY]  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}	  }    else    if(methodName.getQualifiedName()!=    null)    {    if(methodName.getQualifiedName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
86	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().equals( "* "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().equals( "* "))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().equals( "* "))  {  return  false;  }	  }    else    if(methodName.getQualifiedName()!=    null)    {    if(methodName.getQualifiedName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
87	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().equals( "- "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().equals( "- "))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().equals( "- "))  {  return  false;  }	  }    else    if(methodName.getQualifiedName()!=    null)    {    if(methodName.getQualifiedName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
88	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().equals( "_ "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().equals( "_ "))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().equals( "_ "))  {  return  false;  }	  }    else    if(methodName.getQualifiedName()!=    null)    {    if(methodName.getQualifiedName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
89	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()    	non-compiled	[CE]  <identifier>  expected	19	None	replace
90	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TEST_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TEST_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TEST_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()    	non-compiled	[CE]  <identifier>  expected	19	None	replace
91	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  STATE_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  STATE_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  STATE_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()    	non-compiled	[CE]  <identifier>  expected	19	None	replace
92	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()    	non-compiled	[CE]  <identifier>  expected	19	None	replace
93	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  TOO_MANY_ARGUMENTS);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  TOO_MANY_ARGUMENTS);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  TOO_MANY_ARGUMENTS);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    INVALID_ERROR);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
94	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ERROR,  TOO_MANY_ARGUMENTS_ERROR);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ERROR,  TOO_MANY_ARGUMENTS_ERROR);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ERROR,  TOO_MANY_ARGUMENTS_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    INVALID_ERROR);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
95	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ERROR,  TOO_MANY_ARGUMENTS);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ERROR,  TOO_MANY_ARGUMENTS);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ERROR,  TOO_MANY_ARGUMENTS);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    INVALID_ERROR);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
96	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ERROR,  true);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ERROR,  true);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ERROR,  true);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    INVALID_ERROR);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
97	[BUG]  [BUGGY]  }  else  if(  methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(  methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(  methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS	  }    else    if(methodName.getQualifiedName()!=    null)    {    for(AssertionFailedError    t    :    methodName.getQualifiedName())    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
98	[BUG]  [BUGGY]  }  else  if(  methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ER  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(  methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ER  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(  methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ER	  }    else    if(methodName.getQualifiedName()!=    null)    {    for(AssertionFailedError    t    :    methodName.getQualifiedName())    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
99	[BUG]  [BUGGY]  }  else  if(  methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(  methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(  methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.	  }    else    if(methodName.getQualifiedName()!=    null)    {    for(AssertionFailedError    t    :    methodName.getQualifiedName())    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
100	[BUG]  [BUGGY]  }  else  if(  methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERR  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(  methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERR  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(  methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERR	  }    else    if(methodName.getQualifiedName()!=    null)    {    for(AssertionFailedError    t    :    methodName.getQualifiedName())    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
101	[BUG]  [BUGGY]  }  else  if(  methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(  methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(  methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_	  }    else    if(methodName.getQualifiedName()!=    null)    {    for(AssertionFailedError    t    :    methodName.getQualifiedName())    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
102	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NUM_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NUM_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NUM_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DUPLICATE_NUM_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	105	None	replace
103	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEPRECATED_NUM_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEPRECATED_NUM_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEPRECATED_NUM_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DUPLICATE_NUM_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	105	None	replace
104	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NUM_ARGUMENTS_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NUM_ARGUMENTS_ERROR,  name.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NUM_ARGUMENTS_ERROR,  name.getQualifiedName()));	  System.err.println(t.makeError(methodName,    NUM_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
105	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR),    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
106	[BUG]  [BUGGY]  AssertionFailedError  error  =  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  error  =  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  error  =  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR),    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
107	[BUG]  [BUGGY]  parent.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	parent.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR),    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
108	[BUG]  [BUGGY]  AssertionFailedError.error(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.error(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.error(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR),    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
109	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  1));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  1));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  1));	  System.err.println(t.makeError(methodName,    0));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
110	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NON_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NON_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()  +  1));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NON_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()  +  1));	  System.err.println(t.makeError(methodName,    NON_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()    +    1));    	non-compiled	[CE]  <identifier>  expected	111	None	replace
111	[BUG]  [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    INVALID_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
112	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(methodName));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(methodName));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(methodName));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
113	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	Throwables.throw  new  IllegalArgumentException( " "));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
114	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	Throwables.throw  new  IllegalStateException( " ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
115	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	Throwables.throw  new  IllegalArgumentException( " ".getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
116	[BUG]  [BUGGY]  ||  t.getQualifiedName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||  t.getQualifiedName()!=  null)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||  t.getQualifiedName()!=  null)  {  return  false;  }	  ||    methodName.getQualifiedName()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
117	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_DEFAULT_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_DEFAULT_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_DEFAULT_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
118	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_MANY_ARGUMENTS_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_MANY_ARGUMENTS_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_MANY_ARGUMENTS_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    DEFAULT_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
119	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
120	[BUG]  [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  INVALID_NUMBER_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  INVALID_NUMBER_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.this.report(  t.makeError(methodName,  INVALID_NUMBER_ERROR,  methodName.getQualifiedName()));	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    INVALID_NUMBER_ERROR,    methodName.getQualifiedName()));    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
121	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	33	None	replace
122	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  INVALID_NAME,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  INVALID_NAME,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  INVALID_NAME,  methodName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	33	None	replace
123	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  pathName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  pathName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  pathName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	33	None	replace
124	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_NON_OBJECT_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
125	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NON_OBJECT_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NON_OBJECT_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NON_OBJECT_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    DEFAULT_NON_OBJECT_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
126	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  ERROR_MESSAGE_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  ERROR_MESSAGE_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  ERROR_MESSAGE_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_MESSAGE_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
127	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NAME_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NAME_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_NAME_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    ORIGINAL_NAME_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	68	None	replace
128	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }	  }    else    if(methodName.getQualifiedName()    ==    null)    {    if(methodName.getQualifiedName()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
129	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()  ==  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()  ==  null)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()  ==  null)  {  return  false;  }	  }    else    if(methodName.getQualifiedName()    ==    null)    {    if(methodName.getQualifiedName()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
130	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()  >=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()  >=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()  >=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }	  }    else    if(methodName.getQualifiedName()    ==    null)    {    if(methodName.getQualifiedName()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
131	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  VALID_NUM_ARGUMENTS_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  VALID_NUM_ARGUMENTS_ERROR,  name.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  VALID_NUM_ARGUMENTS_ERROR,  name.getQualifiedName()));	  System.err.println(t.makeError(methodName,    INVALID_NUM_ARGUMENTS_ERROR,    name.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
132	[BUG]  [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  INVALID_NUMBER_ERROR,  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  INVALID_NUMBER_ERROR,  methodName.getQualifiedName()));  return  false;  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.this.report(  t.makeError(methodName,  INVALID_NUMBER_ERROR,  methodName.getQualifiedName()));  return  false;	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    INVALID_NUMBER_ERROR,    methodName.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
133	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  name.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  name.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_EXPECTED_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
134	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  EXPECTED_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  EXPECTED_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  EXPECTED_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_EXPECTED_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
135	[BUG]  [BUGGY]  parent.report(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent.report(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	parent.report(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  parent.report(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
136	[BUG]  [BUGGY]  parent.report(t.makeError(methodName,  DEFAULT_NAME_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent.report(t.makeError(methodName,  DEFAULT_NAME_ERROR,  name.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	parent.report(t.makeError(methodName,  DEFAULT_NAME_ERROR,  name.getQualifiedName()));	  parent.report(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
137	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(t.getMessage(),  t.getMessage());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException(t.getMessage(),  t.getMessage());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException(t.getMessage(),  t.getMessage());	  throw    new    IllegalArgumentException(t.getMessage());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
138	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(t.getMessage(),  DEFAULT_MISSING_ERROR);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException(t.getMessage(),  DEFAULT_MISSING_ERROR);  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException(t.getMessage(),  DEFAULT_MISSING_ERROR);	  throw    new    IllegalArgumentException(t.getMessage());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
139	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(t.getMessage(),  DEFAULT_MESSAGE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException(t.getMessage(),  DEFAULT_MESSAGE);  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException(t.getMessage(),  DEFAULT_MESSAGE);	  throw    new    IllegalArgumentException(t.getMessage());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
140	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.getQualifiedName()));  return  true;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.getQualifiedName()));  return  true;  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.getQualifiedName()));  return  true;	  System.err.println(t.makeError(methodName,    NON_OBJECT_ERROR,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
141	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "null ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "null ")))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "null ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
142	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "__ ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "__ ")))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "__ ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
143	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0)  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0)  {  return  true;  }	  if(methodName.getQualifiedName()!=    null    ||    methodName.getQualifiedName().length()    ==    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
144	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().length()  ==  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().length()  ==  0)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().length()  ==  0)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    methodName.getQualifiedName().length()    ==    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
145	[BUG]  [BUGGY]  ||  methodName.getQualifiedName().length()  ==  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||  methodName.getQualifiedName().length()  ==  0)  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||  methodName.getQualifiedName().length()  ==  0)  {  return  true;  }	  if(methodName.getQualifiedName()!=    null    ||    methodName.getQualifiedName().length()    ==    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
146	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Missing  class: "  +  methodName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalStateException( "Missing  class: "  +  methodName);  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalStateException( "Missing  class: "  +  methodName);	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
147	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Missing  identifier: "  +  methodName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalStateException( "Missing  identifier: "  +  methodName);  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalStateException( "Missing  identifier: "  +  methodName);	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
148	[BUG]  [BUGGY]  return  t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	return  t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName());	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
149	[BUG]  [BUGGY]  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName());	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
150	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));  return  false;  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));  return  false;	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
151	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  true;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  true;  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  true;	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
152	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName()!=  null)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName()!=  null)  {  return  false;  }	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
153	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName()  ==  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName()  ==  null)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName()  ==  null)  {  return  false;  }	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
154	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName()!=  null)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName()!=  null)  {  return  false;  }	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
155	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  INVALID_NUMBER_ERROR));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  INVALID_NUMBER_ERROR));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  INVALID_NUMBER_ERROR));	  System.err.println(t.makeError(methodName,    INVALID_NUMBER_ERROR));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
156	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  name));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  name));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  name));	  System.err.println(t.makeError(methodName,    INVALID_NUMBER_ERROR));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
157	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  null));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  null));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  null));	  System.err.println(t.makeError(methodName,    INVALID_NUMBER_ERROR));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
158	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  0));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  0));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  0));	  System.err.println(t.makeError(methodName,    INVALID_NUMBER_ERROR));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
159	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
160	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TEST_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TEST_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TEST_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
161	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TEST_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TEST_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TEST_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
162	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  STATE_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  STATE_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  STATE_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
163	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  STATE_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  STATE_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  STATE_ERROR.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
164	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NUMBER_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NUMBER_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NUMBER_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    NUMBER_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
165	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NUMBER_ERROR,  methodName.getQualifiedName()  +  1));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NUMBER_ERROR,  methodName.getQualifiedName()  +  1));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NUMBER_ERROR,  methodName.getQualifiedName()  +  1));	  System.err.println(t.makeError(methodName,    NUMBER_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
166	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_NAME);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_NAME);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_NAME);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    DEFAULT_NAME);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
167	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  TOO_MANY_ARGUMENTS_ERROR,  DEFAULT_NAME);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  TOO_MANY_ARGUMENTS_ERROR,  DEFAULT_NAME);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  TOO_MANY_ARGUMENTS_ERROR,  DEFAULT_NAME);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    DEFAULT_NAME);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
168	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ARGUMENTS);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ARGUMENTS);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ARGUMENTS);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    DEFAULT_NAME);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
169	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName());  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName,    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
170	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  DEFAULT_NON_ASSIGNED_ERROR,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  DEFAULT_NON_ASSIGNED_ERROR,  methodName.getQualifiedName());  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  DEFAULT_NON_ASSIGNED_ERROR,  methodName.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName,    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
171	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "   "))  {  return  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "   "))  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "   "))  {  return  true;  }	  if(methodName.getQualifiedName()!=    null    ||    methodName.getQualifiedName().equals(   "   "))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
172	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals( "* "))  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals( "* "))  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals( "* "))  {  return  true;  }	  if(methodName.getQualifiedName()!=    null    ||    methodName.getQualifiedName().equals(   "   "))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
173	[BUG]  [BUGGY]  ||  methodName.getQualifiedName().equals( "   "))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||  methodName.getQualifiedName().equals( "   "))  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||  methodName.getQualifiedName().equals( "   "))  {  return  true;  }	  if(methodName.getQualifiedName()!=    null    ||    methodName.getQualifiedName().equals(   "   "))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
174	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    TOO_MANY_ARGUMENTS_ERROR);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
175	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  TOO_MANY_ARGUMENTS_ERROR,  false);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  TOO_MANY_ARGUMENTS_ERROR,  false);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  TOO_MANY_ARGUMENTS_ERROR,  false);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    TOO_MANY_ARGUMENTS_ERROR);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
176	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  TOO_MANY_ARGUMENTS_ERROR,  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  TOO_MANY_ARGUMENTS_ERROR,  true);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  TOO_MANY_ARGUMENTS_ERROR,  true);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    TOO_MANY_ARGUMENTS_ERROR);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
177	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  MISSING_ERROR);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  MISSING_ERROR);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  MISSING_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    TOO_MANY_ARGUMENTS_ERROR);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
178	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_NAME_ERROR);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_NAME_ERROR);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_NAME_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    TOO_MANY_ARGUMENTS_ERROR);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
179	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    INVALID_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
180	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    INVALID_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
181	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    INVALID_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
182	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(METHOD_NAME,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()  +  1));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(METHOD_NAME,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()  +  1));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(METHOD_NAME,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()  +  1));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    INVALID_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
183	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    methodName.getQualifiedName().length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
184	[BUG]  [BUGGY]  ||  methodName.getQualifiedName().length()  ==  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||  methodName.getQualifiedName().length()  ==  0)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||  methodName.getQualifiedName().length()  ==  0)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    methodName.getQualifiedName().length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
185	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().length()!=  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().length()!=  0)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().length()!=  0)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    methodName.getQualifiedName().length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
186	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(methodName.getQualifiedName()));	  throw    new    IllegalArgumentException(   "   ".equals(methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
187	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException( " ").equals(methodName.getQualifiedName()));	  throw    new    IllegalArgumentException(   "   ".equals(methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
188	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName());  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	93	None	replace
189	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  methodName.getSimpleName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  methodName.getSimpleName());  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  methodName.getSimpleName());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	93	None	replace
190	[BUG]  [BUGGY]  AssertionFailedError  error  =  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  error  =  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  error  =  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
191	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()  ==  null)  {  if(methodName.getQualifiedName().length()  >  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()  ==  null)  {  if(methodName.getQualifiedName().length()  >  0)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()  ==  null)  {  if(methodName.getQualifiedName().length()  >  0)  {  return  false;  }	  }    else    if(methodName.getQualifiedName()!=    null)    {    if(methodName.getQualifiedName().length()    >    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
192	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().length()  >=  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().length()  >=  0)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().length()  >=  0)  {  return  false;  }	  }    else    if(methodName.getQualifiedName()!=    null)    {    if(methodName.getQualifiedName().length()    >    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
193	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUM_ARGUMENTS_ERROR,  name.toString()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUM_ARGUMENTS_ERROR,  name.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_NUM_ARGUMENTS_ERROR,  name.toString()));	  System.err.println(t.makeError(methodName,    INVALID_NUM_ARGUMENTS_ERROR,    methodName.toString()));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
194	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    INVALID_NUM_ARGUMENTS_ERROR,    methodName.toString()));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
195	[BUG]  [BUGGY]  safeName(t.getQualifiedName())  {  return  false;  }  else  if(methodName.getQualifiedName()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  safeName(t.getQualifiedName())  {  return  false;  }  else  if(methodName.getQualifiedName()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	safeName(t.getQualifiedName())  {  return  false;  }  else  if(methodName.getQualifiedName()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  safeName(methodName.getQualifiedName())    {    return    false;    }    else    if(methodName.getQualifiedName()    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
196	[BUG]  [BUGGY]  safeName(methodName.getQualifiedName())  {  return  true;  }  else  if(methodName.getQualifiedName()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  safeName(methodName.getQualifiedName())  {  return  true;  }  else  if(methodName.getQualifiedName()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	safeName(methodName.getQualifiedName())  {  return  true;  }  else  if(methodName.getQualifiedName()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  safeName(methodName.getQualifiedName())    {    return    false;    }    else    if(methodName.getQualifiedName()    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
197	[BUG]  [BUGGY]  AssertionFailedError  error  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  error  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  error  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  if(methodName.getQualifiedName()    ==    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
198	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	result.add(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
199	[BUG]  [BUGGY]  return  t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	return  t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
200	[BUG]  [BUGGY]  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
201	[BUG]  [BUGGY]  return  t.makeError(methodName,  NON_OBJECT_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  t.makeError(methodName,  NON_OBJECT_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	return  t.makeError(methodName,  NON_OBJECT_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
202	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_EXTENDS);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_EXTENDS);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_EXTENDS);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    MISSING_EXTENDS);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
203	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_EXTENDS);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_EXTENDS);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_EXTENDS);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    MISSING_EXTENDS);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
204	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  EXTENDS);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  EXTENDS);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  EXTENDS);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    MISSING_EXTENDS);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
205	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  true;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  true;  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  true;	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.getQualifiedName()));    return    true;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
206	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.toLowerCase());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.toLowerCase());  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.toLowerCase());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.toString());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
207	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.toString(),  methodName.toCharArray());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.toString(),  methodName.toCharArray());  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.toString(),  methodName.toCharArray());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.toString());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
208	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(toString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(toString());  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(toString());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.toString());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
209	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  0,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  0,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  0,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    -1,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	52	None	replace
210	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  -1,  methodName.getQualifiedName()  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  -1,  methodName.getQualifiedName()  +  1));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  -1,  methodName.getQualifiedName()  +  1));	  System.err.println(t.makeError(methodName,    -1,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	52	None	replace
211	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ERROR));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ERROR));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_ERROR));	  System.err.println(t.makeError(methodName));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
212	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());  }	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.toString());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
213	[BUG]  [BUGGY]  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.toString());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.toString());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.toString());	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.toString());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
214	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.toString());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
215	[BUG]  [BUGGY]  result.add(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  result.add(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	result.add(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString()));	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.toString());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
216	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
217	[BUG]  [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName())  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName())  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName())	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
218	[BUG]  [BUGGY]  safeName(methodName.getQualifiedName())  {  return  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  safeName(methodName.getQualifiedName())  {  return  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	safeName(methodName.getQualifiedName())  {  return  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  safeName(methodName.getQualifiedName())    {    return    false;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
219	[BUG]  [BUGGY]  safeName(t.getQualifiedName())  {  return  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  safeName(t.getQualifiedName())  {  return  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	safeName(t.getQualifiedName())  {  return  false;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  safeName(methodName.getQualifiedName())    {    return    false;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
220	[BUG]  [BUGGY]  safeName(methodName.getQualifiedName())  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  safeName(methodName.getQualifiedName())  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	safeName(methodName.getQualifiedName())  {  return  true;  }	  safeName(methodName.getQualifiedName())    {    return    false;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
221	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(methodName.getQualifiedName()    ==    null)    {    if(methodName.getQualifiedName()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
222	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(methodName.getQualifiedName()    ==    null)    {    if(methodName.getQualifiedName()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
223	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()  >=  null)  {  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()  >=  null)  {  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()  >=  null)  {  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(methodName.getQualifiedName()    ==    null)    {    if(methodName.getQualifiedName()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
224	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  name.toString()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  name.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  name.toString()));	  System.err.println(t.makeError(methodName,    NON_MANY_ARGUMENTS_ERROR,    methodName.toString()));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
225	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()  ==  null)  {  if(methodName.getQualifiedName().length()  ==  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()  ==  null)  {  if(methodName.getQualifiedName().length()  ==  0)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()  ==  null)  {  if(methodName.getQualifiedName().length()  ==  0)  {  return  false;  }	  }    else    if(methodName.getQualifiedName()!=    null)    {    if(methodName.getQualifiedName().length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
226	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().length()  ==  0  ||  methodName.getQualifiedName().length()  ==  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().length()  ==  0  ||  methodName.getQualifiedName().length()  ==  0)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().length()  ==  0  ||  methodName.getQualifiedName().length()  ==  0)  {  return  false;  }	  }    else    if(methodName.getQualifiedName()!=    null)    {    if(methodName.getQualifiedName().length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
227	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName().length()  ==  0)  {  if(methodName.getQualifiedName().length()  ==  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName().length()  ==  0)  {  if(methodName.getQualifiedName().length()  ==  0)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName().length()  ==  0)  {  if(methodName.getQualifiedName().length()  ==  0)  {  return  false;  }	  }    else    if(methodName.getQualifiedName()!=    null)    {    if(methodName.getQualifiedName().length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
228	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NON_GLOBAL_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NON_GLOBAL_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NON_GLOBAL_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    NON_GLOBAL_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	27	None	replace
229	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NON_GLOBAL_ERROR,  methodName.getQualifiedName()  +  1));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NON_GLOBAL_ERROR,  methodName.getQualifiedName()  +  1));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NON_GLOBAL_ERROR,  methodName.getQualifiedName()  +  1));	  System.err.println(t.makeError(methodName,    NON_GLOBAL_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	27	None	replace
230	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()  +  1));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()  +  1));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()  +  1));	  System.err.println(t.makeError(methodName,    NON_MANY_ARGUMENTS_ERROR,    name.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
231	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  DEFAULT_QUALIFIED_ERROR));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  DEFAULT_QUALIFIED_ERROR));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  DEFAULT_QUALIFIED_ERROR));	  System.err.println(t.makeError(methodName,    DEFAULT_QUALIFIED_ERROR));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
232	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ERROR,  DEFAULT_QUALIFIED_ERROR));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ERROR,  DEFAULT_QUALIFIED_ERROR));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ERROR,  DEFAULT_QUALIFIED_ERROR));	  System.err.println(t.makeError(methodName,    DEFAULT_QUALIFIED_ERROR));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
233	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    TOO_MANY_ARGUMENTS_ERROR),    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
234	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
235	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()  >  0))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()  >  0))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()  >  0))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
236	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  >=  0))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  >=  0))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  >=  0))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
237	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  [Delete]  0))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  [Delete]  0))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  [Delete]  0))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
238	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().equals( "- ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().equals( "- ")))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().equals( "- ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "-   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
239	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "-_ ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "-_ ")))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "-_ ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "-   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
240	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "/ ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "/ ")))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "/ ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "-   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
241	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  name.toString()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  name.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  name.toString()));	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.toString()));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
242	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  VALID_NUMBER_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  VALID_NUMBER_ERROR,  name.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  VALID_NUMBER_ERROR,  name.getQualifiedName()));	  System.err.println(t.makeError(methodName,    VALID_NUMBER_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
243	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR),  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR),  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR),  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    0),    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
244	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  0),  methodName.getQualifiedName()  + ") ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  0),  methodName.getQualifiedName()  + ") ");  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  0),  methodName.getQualifiedName()  + ") ");	  System.err.println(t.makeError(methodName,    0),    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
245	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
246	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TOO_MANY_ARGUMENTS_ERROR,  methodName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TOO_MANY_ARGUMENTS_ERROR,  methodName);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TOO_MANY_ARGUMENTS_ERROR,  methodName);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
247	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TOO_MANY_ARGUMENTS_ERROR);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(TOO_MANY_ARGUMENTS_ERROR);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(TOO_MANY_ARGUMENTS_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
248	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  true);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  true);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  true);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
249	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  -1,  methodName.getQualifiedName()));  return  true;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  -1,  methodName.getQualifiedName()));  return  true;  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  -1,  methodName.getQualifiedName()));  return  true;	  System.err.println(t.makeError(methodName,    -1,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
250	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  0,  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  0,  methodName.getQualifiedName()));  return  false;  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  0,  methodName.getQualifiedName()));  return  false;	  System.err.println(t.makeError(methodName,    -1,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
251	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.toString()));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
252	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.toString()));    	non-compiled	[CE]  <identifier>  expected	100	None	replace
253	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.toCharArray());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.toCharArray());  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.toCharArray());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.toString());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
254	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.toString(),  false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.toString(),  false);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.toString(),  false);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.toString());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
255	[BUG]  [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.this.report(  t.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    NON_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
256	[BUG]  [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.this.report(  t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    INVALID_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
257	[BUG]  [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.this.report(  t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    INVALID_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
258	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    TOO_MANY_ARGUMENTS_ERROR),    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
259	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR),  pathName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR),  pathName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR),  pathName.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    TOO_MANY_ARGUMENTS_ERROR),    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
260	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR),  name.getQualifiedName());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR),  name.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR),  name.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    TOO_MANY_ARGUMENTS_ERROR),    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
261	[BUG]  [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERR  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERR  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERR	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()    	non-compiled	[CE]  <identifier>  expected	19	None	replace
262	[BUG]  [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ER  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ER  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ER	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()    	non-compiled	[CE]  <identifier>  expected	19	None	replace
263	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(METHOD_NAME,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(METHOD_NAME,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(METHOD_NAME,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()    	non-compiled	[CE]  <identifier>  expected	19	None	replace
264	[BUG]  [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()    	non-compiled	[CE]  <identifier>  expected	19	None	replace
265	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.toCharArray());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.toCharArray());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.toCharArray());	  MutableTokenBuffer    tokens    =    new    MutableTokenBuffer(methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
266	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.toUpperCase());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.toUpperCase());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.toUpperCase());	  MutableTokenBuffer    tokens    =    new    MutableTokenBuffer(methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
267	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "_ ")))  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "_ ")))  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "_ ")))  {  return  true;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "   ")))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
268	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "__ ")))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "__ ")))  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "__ ")))  {  return  true;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "   ")))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
269	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  VALID_NUMBER_ERROR,  methodName.getQualifiedName()  +  1));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  VALID_NUMBER_ERROR,  methodName.getQualifiedName()  +  1));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  VALID_NUMBER_ERROR,  methodName.getQualifiedName()  +  1));	  System.err.println(t.makeError(methodName,    INVALID_NUMBER_ERROR,    methodName.getQualifiedName()    +    1));    	non-compiled	[CE]  <identifier>  expected	96	None	replace
270	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(tokens.getQualifiedName());  if(tokens!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(tokens.getQualifiedName());  if(tokens!=  null)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(tokens.getQualifiedName());  if(tokens!=  null)  {  return  false;  }	  MutableTokenBuffer    tokens    =    new    MutableTokenBuffer(methodName.getQualifiedName());    if(tokens!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
271	[BUG]  [BUGGY]  if(methodName  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  }	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	20	None	replace
272	[BUG]  [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	20	None	replace
273	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NAME));	  System.err.println(t.makeError(methodName));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
274	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  false);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  false);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  false);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    TOO_MANY_ARGUMENTS_ERROR);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
275	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(T.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(T.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(T.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    INVALID_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
276	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DUPLICATE_NAME_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DUPLICATE_NAME_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DUPLICATE_NAME_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    INVALID_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
277	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NULL_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NULL_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NULL_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    NON_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()    +    1));    	non-compiled	[CE]  <identifier>  expected	111	None	replace
278	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    NON_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()    +    1));    	non-compiled	[CE]  <identifier>  expected	111	None	replace
279	[BUG]  [BUGGY]  System.err.println(name.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(name.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(name.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));	  System.err.println(t.makeError(methodName,    NON_MANY_ARGUMENTS_ERROR,    name.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
280	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  INVALID_NUMBER_ERROR,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  INVALID_NUMBER_ERROR,  methodName.getQualifiedName());  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  INVALID_NUMBER_ERROR,  methodName.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName,    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
281	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TOO_MANY_ARGUMENTS_ERROR);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TOO_MANY_ARGUMENTS_ERROR);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TOO_MANY_ARGUMENTS_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName,    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
282	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  -1));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  -1));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  -1));	  System.err.println(t.makeError(methodName,    0));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
283	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NUMBER_ERROR));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NUMBER_ERROR));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NUMBER_ERROR));	  System.err.println(t.makeError(methodName,    INVALID_NUMBER_ERROR));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
284	[BUG]  [BUGGY]  return  t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.toString());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.toString());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	return  t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.toString());	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.toString());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
285	[BUG]  [BUGGY]  return  t.makeError(methodName,  INVALID_NUMBER_ERROR,  methodName.toString());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  t.makeError(methodName,  INVALID_NUMBER_ERROR,  methodName.toString());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	return  t.makeError(methodName,  INVALID_NUMBER_ERROR,  methodName.toString());	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.toString());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
286	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_NAME,  TOO_MANY_ARGUMENTS_ERROR);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_NAME,  TOO_MANY_ARGUMENTS_ERROR);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_NAME,  TOO_MANY_ARGUMENTS_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    DEFAULT_NAME);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
287	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_ERROR);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_ERROR);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    DEFAULT_NAME);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
288	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_NAME,  TOO_MANY_ARGUMENTS);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_NAME,  TOO_MANY_ARGUMENTS);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_NAME,  TOO_MANY_ARGUMENTS);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    DEFAULT_NAME);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
289	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ")+  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException( " ")+  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException( " ")+  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  throw    new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	110	None	replace
290	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ")+  t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException( " ")+  t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException( " ")+  t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  throw    new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	110	None	replace
291	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR));	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
292	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()));  return  false;  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()));  return  false;	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
293	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().length()  ==  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().length()  ==  0)  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().length()  ==  0)  {  return  true;  }	  if(methodName.getQualifiedName()!=    null    ||    methodName.getQualifiedName().length()    ==    0)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
294	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(methodName)?  null  :  methodName.toString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(methodName)?  null  :  methodName.toString());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException( " ".equals(methodName)?  null  :  methodName.toString());	  throw    new    IllegalArgumentException(   "   ".equals(methodName)?    null    :    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
295	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  method  name: "  +  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  method  name: "  +  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException( "Invalid  method  name: "  +  methodName.getQualifiedName());	  throw    new    IllegalArgumentException(   "   ".equals(methodName)?    null    :    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
296	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  name.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  name.getQualifiedName()));	  System.err.println(t.makeError(methodName,    INVALID_NUMBER_ERROR,    name.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
297	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals( "- "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals( "- "))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals( "- "))  {  return  false;  }	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
298	[BUG]  [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
299	[BUG]  [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()));  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()));  }	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
300	[BUG]  [BUGGY]  if(methodName  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
301	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_MESSAGE_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_MESSAGE_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_MESSAGE_ERROR,  methodName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
302	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
303	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  NON_GLOBAL_NAME_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  NON_GLOBAL_NAME_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  NON_GLOBAL_NAME_ERROR,  methodName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
304	[BUG]  [BUGGY]  parent.report(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent.report(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	parent.report(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()));	  parent.report(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
305	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR),  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR),  methodName.getQualifiedName()));  return  false;  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR),  methodName.getQualifiedName()));  return  false;	  System.err.println(t.makeError(methodName,    0),    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
306	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR),  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR),  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR),  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    0),    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
307	[BUG]  [BUGGY]  safeName(methodName.getQualifiedName())  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  safeName(methodName.getQualifiedName())  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	safeName(methodName.getQualifiedName())  {  return  false;  }	  safeName(methodName.getQualifiedName())    {    return    false;    }    else    if(methodName.getQualifiedName()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
308	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalStateException( " "));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalStateException( " "));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
309	[BUG]  [BUGGY]  System.err.println(name.makeError(methodName,  INVALID_NUM_ARGUMENTS_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(name.makeError(methodName,  INVALID_NUM_ARGUMENTS_ERROR,  name.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(name.makeError(methodName,  INVALID_NUM_ARGUMENTS_ERROR,  name.getQualifiedName()));	  System.err.println(t.makeError(methodName,    INVALID_NUM_ARGUMENTS_ERROR,    name.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
310	[BUG]  [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  true;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  true;  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  true;	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
311	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_EXTENDS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_EXTENDS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_EXTENDS_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
312	[BUG]  [BUGGY]  AssertionFailedError  error  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  error  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  error  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR),    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
313	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERR  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERR  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERR	  }    else    if(methodName.getQualifiedName()!=    null)    {    for(AssertionFailedError    t    :    methodName.getQualifiedName())    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
314	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,	  }    else    if(methodName.getQualifiedName()!=    null)    {    for(AssertionFailedError    t    :    methodName.getQualifiedName())    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
315	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()  ==  null)  {  if(methodName.getQualifiedName().equals( "* "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()  ==  null)  {  if(methodName.getQualifiedName().equals( "* "))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()  ==  null)  {  if(methodName.getQualifiedName().equals( "* "))  {  return  false;  }	  }    else    if(methodName.getQualifiedName()!=    null)    {    if(methodName.getQualifiedName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
316	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  1,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  1,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  1,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    -1,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	52	None	replace
317	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(METHOD_NAME,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(METHOD_NAME,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(METHOD_NAME,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	33	None	replace
318	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.makeError(METHOD_NAME,  TOO_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	33	None	replace
319	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  NON_GLOBAL_EXTENDS);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  NON_GLOBAL_EXTENDS);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  NON_GLOBAL_EXTENDS);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    MISSING_EXTENDS);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
320	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()));  return  true;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()));  return  true;  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()));  return  true;	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.getQualifiedName()));    return    true;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
321	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  name.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  name.getQualifiedName()));  return  false;  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  name.getQualifiedName()));  return  false;	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.getQualifiedName()));    return    true;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
322	[BUG]  [BUGGY]  }  else  if(t.isError())  {  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(t.isError())  {  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(t.isError())  {  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(methodName.getQualifiedName()    ==    null)    {    if(methodName.getQualifiedName()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
323	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_MESSAGE_ERROR,  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_MESSAGE_ERROR,  methodName.getQualifiedName()));  return  false;  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_MESSAGE_ERROR,  methodName.getQualifiedName()));  return  false;	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
324	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  name,  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  name,  methodName.getQualifiedName()));  return  false;  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  name,  methodName.getQualifiedName()));  return  false;	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
325	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()));  return  false;  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()));  return  false;	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
326	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName(),  expected);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName(),  expected);  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName(),  expected);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
327	[BUG]  [BUGGY]  &&  methodName.getQualifiedName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  &&  methodName.getQualifiedName()!=  null)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	&&  methodName.getQualifiedName()!=  null)  {  return  false;  }	  ||    methodName.getQualifiedName()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
328	[BUG]  [BUGGY]  throw  new  IllegalStateException(t.getMessage());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalStateException(t.getMessage());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalStateException(t.getMessage());	  throw    new    IllegalArgumentException(t.getMessage());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
329	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(t.getMessage(),  methodName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException(t.getMessage(),  methodName);  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException(t.getMessage(),  methodName);	  throw    new    IllegalArgumentException(t.getMessage());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
330	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "-$ ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "-$ ")))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "-$ ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "-   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
331	[BUG]  [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  pathName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  pathName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  pathName.getQualifiedName()));	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
332	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_EXPECTED_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
333	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  1),  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  1),  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  1),  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    0),    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
334	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName() "));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName() "));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName() "));	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.getQualifiedName()    +   "));    	non-compiled	[CE]  <identifier>  expected	64	None	replace
335	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t,    methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
336	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR);  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR);	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t,    methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
337	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t,    methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
338	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  pathName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  pathName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  pathName.getQualifiedName());	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t,    methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
339	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  null));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  null));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  null));	  System.err.println(t.makeError(methodName,    false));    	non-compiled	[CE]  <identifier>  expected	67	None	replace
340	[BUG]  [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  NUMBER_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  NUMBER_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.this.report(  t.makeError(methodName,  NUMBER_ERROR,  methodName.getQualifiedName()));	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    INVALID_NUMBER_ERROR,    methodName.getQualifiedName()));    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
341	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  ALIASING_NAME_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  ALIASING_NAME_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  ALIASING_NAME_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    ORIGINAL_NAME_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	68	None	replace
342	[BUG]  [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  }	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
343	[BUG]  [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
344	[BUG]  [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  }  else  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  }  else  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  }  else  {  return  false;  }	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
345	[BUG]  [BUGGY]  return  t.makeError(methodName,  DEFAULT_MESSAGE_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  t.makeError(methodName,  DEFAULT_MESSAGE_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	return  t.makeError(methodName,  DEFAULT_MESSAGE_ERROR,  methodName.getQualifiedName()));	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
346	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  methodName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException( " "  +  methodName);  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException( " "  +  methodName);	  throw    new    IllegalArgumentException(   "   ".equals(methodName));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
347	[BUG]  [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException( " ");  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException( " ");	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
348	[BUG]  [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError.this.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException( " ");  }	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
349	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NON_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NON_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NON_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_NON_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
350	[BUG]  [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
351	[BUG]  [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()));  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()));  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()));  }	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
352	[BUG]  [BUGGY]  if(methodName  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
353	[BUG]  [BUGGY]  }  else  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName())	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
354	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  methodName.getQualifiedName()  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  methodName.getQualifiedName()  +  1);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  methodName.getQualifiedName()  +  1);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	93	None	replace
355	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  methodName.getQualifiedName(),  false);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  methodName.getQualifiedName(),  false);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  methodName.getQualifiedName(),  false);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	93	None	replace
356	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  methodName.toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  methodName.toString());  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  methodName.toString());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	93	None	replace
357	[BUG]  [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  }	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
358	[BUG]  [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  }  else  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  }  else  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  }  else  {  return  false;  }	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
359	[BUG]  [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	76	None	replace
360	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().equals( "   "))  {  return  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().equals( "   "))  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().equals( "   "))  {  return  true;  }	  if(methodName.getQualifiedName()!=    null    ||    methodName.getQualifiedName().equals(   "   "))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
361	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()  ==  null)  {  if(methodName.getQualifiedName().length()  ==  0  ||  methodName.getQualifiedName().length()  ==  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()  ==  null)  {  if(methodName.getQualifiedName().length()  ==  0  ||  methodName.getQualifiedName().length()  ==  0)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()  ==  null)  {  if(methodName.getQualifiedName().length()  ==  0  ||  methodName.getQualifiedName().length()  ==  0)  {  return  false;  }	  }    else    if(methodName.getQualifiedName()!=    null)    {    if(methodName.getQualifiedName().length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
362	[BUG]  [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()).toString();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()).toString();  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()).toString();  }	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()).toString();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
363	[BUG]  [BUGGY]  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName())+ ".toString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName())+ ".toString();  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName())+ ".toString();	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()).toString();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
364	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()!=  0))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()!=  0))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()!=  0))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
365	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  QUALIFIED_ERROR));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  QUALIFIED_ERROR));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  QUALIFIED_ERROR));	  System.err.println(t.makeError(methodName,    DEFAULT_QUALIFIED_ERROR));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
366	[BUG]  [BUGGY]  ||  t.getQualifiedName()  ==  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||  t.getQualifiedName()  ==  null)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||  t.getQualifiedName()  ==  null)  {  return  false;  }	  ||    methodName.getQualifiedName()    ==    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
367	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  ORIGINAL_NAME_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  ORIGINAL_NAME_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  ORIGINAL_NAME_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    ORIGINAL_NAME_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	68	None	replace
368	[BUG]  [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
369	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
370	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
371	[BUG]  [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
372	[BUG]  [BUGGY]  }  else  if(t.isError())  {  if(methodName.getQualifiedName().length()  ==  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(t.isError())  {  if(methodName.getQualifiedName().length()  ==  0)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(t.isError())  {  if(methodName.getQualifiedName().length()  ==  0)  {  return  false;  }	  }    else    if(methodName.getQualifiedName()!=    null)    {    if(methodName.getQualifiedName().length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
373	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.toString()));  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.toString()));  return  false;  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.toString()));  return  false;	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
374	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(methodName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(methodName);  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException( " ").equals(methodName);	  throw    new    IllegalArgumentException(   "   ".equals(methodName));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
375	[BUG]  [BUGGY]  safeName(methodName.getQualifiedName()))  {  return  false;  }  else  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  safeName(methodName.getQualifiedName()))  {  return  false;  }  else  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	safeName(methodName.getQualifiedName()))  {  return  false;  }  else  if(methodName.getQualifiedName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  safeName(methodName.getQualifiedName())    {    return    false;    }    else    if(methodName.getQualifiedName()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
376	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  for(AssertionFailedError  t  :  methodName.getQualifiedName())  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR	  }    else    if(methodName.getQualifiedName()!=    null)    {    for(AssertionFailedError    t    :    methodName.getQualifiedName())    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    true;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
377	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  STRING_NUM_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  STRING_NUM_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  STRING_NUM_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    VALID_NUM_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
378	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  STRING_LITERAL_EXPECTED_ERROR,  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  STRING_LITERAL_EXPECTED_ERROR,  methodName.getQualifiedName()));  return  false;  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  STRING_LITERAL_EXPECTED_ERROR,  methodName.getQualifiedName()));  return  false;	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
379	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()));  return  false;  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()));  return  false;	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
380	[BUG]  [BUGGY]  }  else  if(t.isError())  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(t.isError())  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(t.isError())  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }	  }    else    if(methodName.getQualifiedName()    ==    null)    {    if(methodName.getQualifiedName()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
381	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	20	None	replace
382	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()  ==  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(t,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()	  AssertionFailedError    t    =    new    AssertionFailedError(t,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	20	None	replace
383	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(methodName)?  null  :  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(methodName)?  null  :  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException( " ").equals(methodName)?  null  :  methodName.getQualifiedName());	  throw    new    IllegalArgumentException(   "   ".equals(methodName)?    null    :    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
384	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  methodName.equals(methodName)?  null  :  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException( " "  +  methodName.equals(methodName)?  null  :  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException( " "  +  methodName.equals(methodName)?  null  :  methodName.getQualifiedName());	  throw    new    IllegalArgumentException(   "   ".equals(methodName)?    null    :    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
385	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DUPLICATE_NON_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DUPLICATE_NON_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DUPLICATE_NON_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_NON_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
386	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()  + ") ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()  + ") ");  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NON_MANY_ARGUMENTS_ERROR,  name.getQualifiedName()  + ") ");	  System.err.println(t.makeError(methodName,    NON_MANY_ARGUMENTS_ERROR,    name.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	22	None	replace
387	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NON_GLOBAL_ERROR,  methodName.getQualifiedName()  + ") ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NON_GLOBAL_ERROR,  methodName.getQualifiedName()  + ") ");  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NON_GLOBAL_ERROR,  methodName.getQualifiedName()  + ") ");	  System.err.println(t.makeError(methodName,    NON_GLOBAL_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	27	None	replace
388	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(t.getQualifiedName());  if(tokens!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(t.getQualifiedName());  if(tokens!=  null)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(t.getQualifiedName());  if(tokens!=  null)  {  return  false;  }	  MutableTokenBuffer    tokens    =    new    MutableTokenBuffer(methodName.getQualifiedName());    if(tokens!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
389	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.toString());  if(tokens!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.toString());  if(tokens!=  null)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.toString());  if(tokens!=  null)  {  return  false;  }	  MutableTokenBuffer    tokens    =    new    MutableTokenBuffer(methodName.getQualifiedName());    if(tokens!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
390	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DUPLICATE_NAME_ERROR,  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DUPLICATE_NAME_ERROR,  methodName.getQualifiedName()));  return  false;  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DUPLICATE_NAME_ERROR,  methodName.getQualifiedName()));  return  false;	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.getQualifiedName()));    return    true;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
391	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  MISSING_EXTENDS_ERROR);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  MISSING_EXTENDS_ERROR);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  MISSING_EXTENDS_ERROR);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    TOO_MANY_ARGUMENTS_ERROR);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
392	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  NON_GLOBAL_NAME);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  NON_GLOBAL_NAME);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  NON_GLOBAL_NAME);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    TOO_MANY_ARGUMENTS_ERROR);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
393	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NUM_ARGUMENTS_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NUM_ARGUMENTS_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NUM_ARGUMENTS_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    INVALID_NUM_ARGUMENTS_ERROR,    methodName.toString()));    	non-compiled	[CE]  <identifier>  expected	104	None	replace
394	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  else  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException( "  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  else  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException( "  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null)  {  return  false;  }  else  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException( "	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
395	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  return  false;  }  else  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  return  false;  }  else  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()  ==  null)  {  return  false;  }  else  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException( " ");  }	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
396	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  else  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException(  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  else  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException(  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null)  {  return  false;  }  else  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException(	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
397	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  return  false;  }  else  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException( "  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  return  false;  }  else  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException( "  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()  ==  null)  {  return  false;  }  else  {  compiler.report(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  throw  new  IllegalArgumentException( "	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
398	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_MANY_ARGUMENTS_ERROR));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_MANY_ARGUMENTS_ERROR));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_MANY_ARGUMENTS_ERROR));	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR));    	non-compiled	[CE]  <identifier>  expected	11	None	replace
399	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  PROPERTY);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  PROPERTY);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  PROPERTY);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    DEFAULT_NAME);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
400	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  DEFAULT_NAME);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  DEFAULT_NAME);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  DEFAULT_NAME);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    DEFAULT_NAME);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
401	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null)  {  return  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName());  }	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR),    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
402	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  else  {  return  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName()  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  else  {  return  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName()  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null)  {  return  false;  }  else  {  return  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR),  methodName.getQualifiedName()	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR),    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
403	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  false);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  false);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  false);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
404	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError();  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError();	  AssertionFailedError    t    =    new    AssertionFailedError(methodName);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
405	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  null);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  null);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
406	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "xmlns ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "xmlns ")))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "xmlns ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
407	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	Throwables.throw  new  IllegalArgumentException( " ")	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
408	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().equals( "null "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().equals( "null "))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().equals( "null "))  {  return  false;  }	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
409	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_ERROR),  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_ERROR),  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_ERROR),  methodName.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    TOO_MANY_ARGUMENTS_ERROR),    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
410	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    TOO_MANY_ARGUMENTS_ERROR),    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
411	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  INVALID_NAME_ERROR),  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  INVALID_NAME_ERROR),  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  INVALID_NAME_ERROR),  methodName.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    TOO_MANY_ARGUMENTS_ERROR),    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
412	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()  + ") ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()  + ") ");  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.getQualifiedName()  + ") ");	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.getQualifiedName()    +   "));    	non-compiled	[CE]  <identifier>  expected	64	None	replace
413	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  methodName.getQualifiedName(),  MISSING_EXTENDS);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  methodName.getQualifiedName(),  MISSING_EXTENDS);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  methodName.getQualifiedName(),  MISSING_EXTENDS);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	93	None	replace
414	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(t,  methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  aughtExceptionHandler.handleMissingName(t,  methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	aughtExceptionHandler.handleMissingName(t,  methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    INVALID_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
415	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()  +  1));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()  +  1));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()  +  1));	  System.err.println(t.makeError(methodName,    DEFAULT_TYPE_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
416	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()  + ") ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()  + ") ");  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_TYPE_ERROR,  methodName.getQualifiedName()  + ") ");	  System.err.println(t.makeError(methodName,    DEFAULT_TYPE_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
417	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DUPLICATE_TYPE_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DUPLICATE_TYPE_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DUPLICATE_TYPE_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_TYPE_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
418	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_MISSING_EXTENDS);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_MISSING_EXTENDS);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  DEFAULT_MISSING_EXTENDS);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    MISSING_EXTENDS);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
419	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  MISSING_EXTENDS,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  MISSING_EXTENDS,  methodName.getQualifiedName());  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  MISSING_EXTENDS,  methodName.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    MISSING_EXTENDS);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
420	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NUMBER_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NUMBER_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NUMBER_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    NUMBER_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
421	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_METHOD_NAME,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_METHOD_NAME,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_METHOD_NAME,  methodName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	33	None	replace
422	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NAME_ERROR,  methodName.getQualifiedName()));  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NAME_ERROR,  methodName.getQualifiedName()));  return  false;  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_NAME_ERROR,  methodName.getQualifiedName()));  return  false;	  System.err.println(t.makeError(methodName,    ORIGINAL_NAME_ERROR,    methodName.getQualifiedName()));    return    true;    	non-compiled	[CE]  <identifier>  expected	62	None	replace
423	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()).toString();  }  else  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()).toString();  }  else  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()).toString();  }  else  {  return  false;  }	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()).toString();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
424	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  NUMBER_ARGUMENTS_ERROR));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  NUMBER_ARGUMENTS_ERROR));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  NUMBER_ARGUMENTS_ERROR));	  System.err.println(t.makeError(methodName,    INVALID_NUMBER_ERROR));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
425	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  DEFAULT_SIGNATURES_ERROR));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  DEFAULT_SIGNATURES_ERROR));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_NUMBER_ERROR,  DEFAULT_SIGNATURES_ERROR));	  System.err.println(t.makeError(methodName,    INVALID_NUMBER_ERROR));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
426	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.toString(),  methodName.toLowerCase());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.toString(),  methodName.toLowerCase());  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.toString(),  methodName.toLowerCase());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.toString());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
427	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()  +  1));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()  +  1));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  methodName.getQualifiedName()  +  1));	  System.err.println(t.makeError(methodName,    INVALID_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
428	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  STRING_LITERAL_EXPECTED_ERROR,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  STRING_LITERAL_EXPECTED_ERROR,  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  STRING_LITERAL_EXPECTED_ERROR,  methodName.getQualifiedName());	  AssertionFailedError    t    =    new    AssertionFailedError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
429	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  STRING_LITERAL_EXPECTED_ERROR));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  STRING_LITERAL_EXPECTED_ERROR));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  STRING_LITERAL_EXPECTED_ERROR));	  System.err.println(t.makeError(methodName));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
430	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR));	  System.err.println(t.makeError(methodName));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
431	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  pathName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  pathName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  INVALID_ARGUMENTS_ERROR,  pathName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(METHOD_NAME,    INVALID_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	34	None	replace
432	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()  +  1));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()  +  1));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()  +  1));	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_EXPECTED_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
433	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DUPLICATE_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DUPLICATE_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DUPLICATE_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_EXPECTED_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
434	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()  + ") ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()  + ") ");  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()  + ") ");	  System.err.println(t.makeError(methodName,    DEFAULT_NAME_EXPECTED_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
435	[BUG]  [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
436	[BUG]  [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.getQualifiedName()	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
437	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS_ERROR,  t.	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
438	[BUG]  [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());  }	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.toString());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
439	[BUG]  [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  return  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.toString());    	non-compiled	[CE]  <identifier>  expected	102	None	replace
440	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NON_GLOBAL_NAME_ERROR,  methodName.getQualifiedName()  + ") ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NON_GLOBAL_NAME_ERROR,  methodName.getQualifiedName()  + ") ");  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NON_GLOBAL_NAME_ERROR,  methodName.getQualifiedName()  + ") ");	  System.err.println(t.makeError(methodName,    NON_GLOBAL_NAME_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	85	None	replace
441	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()    	non-compiled	[CE]  <identifier>  expected	19	None	replace
442	[BUG]  [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGUMENTS	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()    	non-compiled	[CE]  <identifier>  expected	19	None	replace
443	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MAN  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MAN  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MAN	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()    	non-compiled	[CE]  <identifier>  expected	19	None	replace
444	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGU  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGU  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null)  {  AssertionFailedError  t  =  new  AssertionFailedError(TEST_ERROR,  methodName.getQualifiedName());  return  t.makeError(t,  TOO_MANY_ARGU	  AssertionFailedError    t    =    new    AssertionFailedError(TEST_ERROR,    methodName.getQualifiedName());    return    t.makeError(t,    TOO_MANY_ARGUMENTS_ERROR,    t.getQualifiedName()    	non-compiled	[CE]  <identifier>  expected	19	None	replace
445	[BUG]  [BUGGY]  safeName(methodName.getQualifiedName()))  {  return  false;  }  else  if(methodName.getQualifiedName()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  safeName(methodName.getQualifiedName()))  {  return  false;  }  else  if(methodName.getQualifiedName()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	safeName(methodName.getQualifiedName()))  {  return  false;  }  else  if(methodName.getQualifiedName()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  safeName(methodName.getQualifiedName())    {    return    false;    }    else    if(methodName.getQualifiedName()    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
446	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName(),  true);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName(),  true);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName,  methodName.getQualifiedName(),  true);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName,    methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
447	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ERROR,  methodName.getQualifiedName()  +  1));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ERROR,  methodName.getQualifiedName()  +  1));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ERROR,  methodName.getQualifiedName()  +  1));	  System.err.println(t.makeError(methodName,    DEFAULT_QUALIFIED_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
448	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_QUALIFIED_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	101	None	replace
449	[BUG]  [BUGGY]  parent.report(t.makeError(methodName,  DEFAULT_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent.report(t.makeError(methodName,  DEFAULT_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	parent.report(t.makeError(methodName,  DEFAULT_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  parent.report(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
450	[BUG]  [BUGGY]  parent.report(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  parent.report(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.toString()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	parent.report(t.makeError(methodName,  DEFAULT_NAME_ERROR,  methodName.toString()));	  parent.report(t.makeError(methodName,    DEFAULT_NAME_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
451	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  VALID_NUMBER_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  VALID_NUMBER_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  VALID_NUMBER_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    VALID_NUMBER_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
452	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DUPLICATE_NUMBER_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DUPLICATE_NUMBER_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DUPLICATE_NUMBER_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    VALID_NUMBER_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	2	None	replace
453	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( ") ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException( ") ");  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException( ") ");	  throw    new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	110	None	replace
454	[BUG]  [BUGGY]  return  t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	return  t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()));	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
455	[BUG]  [BUGGY]  return  t.makeError(methodName,  NON_GLOBAL_NAME_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  t.makeError(methodName,  NON_GLOBAL_NAME_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	return  t.makeError(methodName,  NON_GLOBAL_NAME_ERROR,  methodName.getQualifiedName()));	  return    t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
456	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  <=  0))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  <=  0))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  <=  0))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
457	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName());  }	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t,    methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
458	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t,    methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
459	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t,    methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
460	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.get  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.get  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName()!=  null)  {  return  new  AssertionFailedError(t,  methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.get	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    return    new    AssertionFailedError(t,    methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName());    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
461	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUMBER_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  INVALID_NUMBER_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  INVALID_NUMBER_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    NON_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()    +    1));    	non-compiled	[CE]  <identifier>  expected	111	None	replace
462	[BUG]  [BUGGY]  return  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  return  new  IllegalStateException( " ");  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	return  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
463	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NON_OBJECT_ERROR,  methodName.getQualifiedName()  +  1));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NON_OBJECT_ERROR,  methodName.getQualifiedName()  +  1));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NON_OBJECT_ERROR,  methodName.getQualifiedName()  +  1));	  System.err.println(t.makeError(methodName,    DEFAULT_NON_OBJECT_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
464	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NOT_OBJECT_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_NOT_OBJECT_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_NOT_OBJECT_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_NON_OBJECT_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
465	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.getQualifiedName(),  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.getQualifiedName(),  methodName.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(methodName.getQualifiedName(),  methodName.getQualifiedName());	  MutableTokenBuffer    tokens    =    new    MutableTokenBuffer(methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
466	[BUG]  [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(tokenBuffer.getQualifiedName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(tokenBuffer.getQualifiedName());  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	MutableTokenBuffer  tokens  =  new  MutableTokenBuffer(tokenBuffer.getQualifiedName());	  MutableTokenBuffer    tokens    =    new    MutableTokenBuffer(methodName.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
467	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(t.getMessage(),  DEFAULT_THRESHOLD);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  throw  new  IllegalArgumentException(t.getMessage(),  DEFAULT_THRESHOLD);  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	throw  new  IllegalArgumentException(t.getMessage(),  DEFAULT_THRESHOLD);	  throw    new    IllegalArgumentException(t.getMessage());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
468	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ERROR,  name));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ERROR,  name));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_QUALIFIED_ERROR,  name));	  System.err.println(t.makeError(methodName,    DEFAULT_QUALIFIED_ERROR));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
469	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    NON_OBJECT_ERROR,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
470	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.toString()));  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.toString()));  return  false;  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.toString()));  return  false;	  System.err.println(t.makeError(methodName,    NON_OBJECT_ERROR,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
471	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.getQualifiedName()  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.getQualifiedName()  +  1));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NON_OBJECT_ERROR,  methodName.getQualifiedName()  +  1));	  System.err.println(t.makeError(methodName,    NON_OBJECT_ERROR,    methodName.getQualifiedName()));    return    false;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
472	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName()!=  null)  {  return  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName()!=  null)  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName()!=  null)  {  return  true;  }	  if(methodName.getQualifiedName()    ==    null)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
473	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().length()!=  0)  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().length()!=  0)  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().length()!=  0)  {  return  true;  }	  if(methodName.getQualifiedName()    ==    null)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
474	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().length()  >=  0)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().length()  >=  0)  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().length()  >=  0)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    methodName.getQualifiedName().length()    ==    0)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
475	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( ". "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( ". "))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( ". "))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    methodName.getQualifiedName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
476	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DUPLICATE_NUM_ARGUMENTS_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DUPLICATE_NUM_ARGUMENTS_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DUPLICATE_NUM_ARGUMENTS_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    DUPLICATE_NUM_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	105	None	replace
477	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  STRING_LITERAL_EXPECTED_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  STRING_LITERAL_EXPECTED_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  STRING_LITERAL_EXPECTED_ERROR,  methodName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
478	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_EXPECTED_ERROR,  methodName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
479	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_ASSIGNED_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_ASSIGNED_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t.makeError(methodName,  DEFAULT_NAME_ASSIGNED_ERROR,  methodName.getQualifiedName()));	  AssertionFailedError    t    =    new    AssertionFailedError(t.makeError(methodName,    TOO_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
480	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().equals( "* "))  {  return  true;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().equals( "* "))  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().equals( "* "))  {  return  true;  }	  if(methodName.getQualifiedName()!=    null    ||    methodName.getQualifiedName().equals(   "   "))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
481	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( ". "))  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( ". "))  {  return  true;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( ". "))  {  return  true;  }	  if(methodName.getQualifiedName()!=    null    ||    methodName.getQualifiedName().equals(   "   "))    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
482	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_ANNOTATIONS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_ANNOTATIONS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_ANNOTATIONS_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    DEFAULT_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
483	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  NUM_MANY_ARGUMENTS_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  NUM_MANY_ARGUMENTS_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  NUM_MANY_ARGUMENTS_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    NUM_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
484	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DUPLICATE_NUMBER_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DUPLICATE_NUMBER_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DUPLICATE_NUMBER_ARGUMENTS_ERROR,  methodName.getQualifiedName()));	  System.err.println(t.makeError(methodName,    NUM_MANY_ARGUMENTS_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
485	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ERROR,  methodName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ERROR,  methodName);  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(methodName.getQualifiedName(),  INVALID_ERROR,  methodName);	  AssertionFailedError    t    =    new    AssertionFailedError(methodName.getQualifiedName(),    INVALID_ERROR);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
486	[BUG]  [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_MESSAGE_ERROR,  methodName.toString()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  System.err.println(t.makeError(methodName,  DEFAULT_MESSAGE_ERROR,  methodName.toString()));  [BUGGY]      return  true;  }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	System.err.println(t.makeError(methodName,  DEFAULT_MESSAGE_ERROR,  methodName.toString()));	  System.err.println(t.makeError(methodName,    DEFAULT_MESSAGE_ERROR,    methodName.getQualifiedName()));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
487	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(t,  methodName,  INVALID_NUMBER_ERROR,  methodName.getQualifiedName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  aughtExceptionHandler.handleMissingName(t,  methodName,  INVALID_NUMBER_ERROR,  methodName.getQualifiedName()));  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	aughtExceptionHandler.handleMissingName(t,  methodName,  INVALID_NUMBER_ERROR,  methodName.getQualifiedName()));	  if(methodName.getQualifiedName()!=    null)    {    return    false;    }    else    {    compiler.report(t.makeError(methodName,    INVALID_NUMBER_ERROR,    methodName.getQualifiedName()));    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
488	[BUG]  [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().equals( "  <  unknown> "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }      [BUGGY]  }  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().equals( "  <  unknown> "))  {  return  false;  }  [BUGGY]      }      [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	812	812	1	replace	}  else  if(methodName.getQualifiedName()!=  null)  {  if(methodName.getQualifiedName().equals( "  <  unknown> "))  {  return  false;  }	  }    else    if(methodName.getQualifiedName()!=    null)    {    if(methodName.getQualifiedName().equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
