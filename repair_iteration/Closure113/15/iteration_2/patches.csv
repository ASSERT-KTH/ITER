bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
2	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.NAME  &&!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.NAME  &&!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()  ==  Token.NAME  &&!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
3	[BUG]  [BUGGY]  ||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||!NodeUtil.isVarDeclaration(methodName))  {  return  false;	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
4	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  INVALID_TYPE);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  INVALID_TYPE);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  INVALID_TYPE);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg),    null);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
5	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR),  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR),  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR),  null);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg),    null);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
6	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MESSAGE_ERROR),  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MESSAGE_ERROR),  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MESSAGE_ERROR),  null);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg),    null);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
7	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_NON_OBJECT_ERROR),  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_NON_OBJECT_ERROR),  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_NON_OBJECT_ERROR),  null);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg),    null);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
8	[BUG]  [BUGGY]  Node  methodName  =  arg!=  null?  null  :  arg.getLastChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  arg!=  null?  null  :  arg.getLastChild();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  arg!=  null?  null  :  arg.getLastChild();	  Node    methodName    =    arg!=    null?    null    :    arg.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
9	[BUG]  [BUGGY]  Node  methodName  =  arg  ==  null?  null  :  arg.getQualifiedName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  arg  ==  null?  null  :  arg.getQualifiedName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  arg  ==  null?  null  :  arg.getQualifiedName();	  Node    methodName    =    arg    ==    null?    null    :    arg.getNext();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
10	[BUG]  [BUGGY]  Node  methodName  =  t.getLastChild();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  t.getLastChild();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  t.getLastChild();	  Node    methodName    =    arg.getLastChild();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
11	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME  &&  methodName.getQualifiedName()!=  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME  &&  methodName.getQualifiedName()!=  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()  ==  Token.NAME  &&  methodName.getQualifiedName()!=  null);	  Preconditions.checkState(methodName.getType()    ==    Token.NAME    ||    methodName.getQualifiedName()!=    null);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
12	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME  ||  arg.getQualifiedName()!=  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME  ||  arg.getQualifiedName()!=  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()  ==  Token.NAME  ||  arg.getQualifiedName()!=  null);	  Preconditions.checkState(methodName.getType()    ==    Token.NAME    ||    methodName.getQualifiedName()!=    null);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
13	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()!=  Token.NAME  &&  methodName.getQualifiedName()!=  null);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()!=  Token.NAME  &&  methodName.getQualifiedName()!=  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()!=  Token.NAME  &&  methodName.getQualifiedName()!=  null);	  Preconditions.checkState(methodName.getType()    ==    Token.NAME    ||    methodName.getQualifiedName()!=    null);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
14	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()!=  Token.NAME  ||  methodName.getQualifiedName()!=  null);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()!=  Token.NAME  ||  methodName.getQualifiedName()!=  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()!=  Token.NAME  ||  methodName.getQualifiedName()!=  null);	  Preconditions.checkState(methodName.getType()    ==    Token.NAME    ||    methodName.getQualifiedName()!=    null);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
15	[BUG]  [BUGGY]  ||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
16	[BUG]  [BUGGY]  if(!NodeUtil.isAssignmentOp(methodName))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isAssignmentOp(methodName))  {  return  true;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isAssignmentOp(methodName))  {  return  true;  }	  if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
17	[BUG]  [BUGGY]  if(!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
18	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
19	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  true);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  true);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  true);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg),    false);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
20	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  null),  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  null),  false);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  null),  false);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg),    false);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
21	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  true));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  true));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  true));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg),    false);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
22	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME,  methodName.getQualifiedName());  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()  ==  Token.NAME,  methodName.getQualifiedName());	  Preconditions.checkState(methodName.getType()    ==    Token.NAME,    arg.getString());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME,  methodName.getString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME,  methodName.getString());  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()  ==  Token.NAME,  methodName.getString());	  Preconditions.checkState(methodName.getType()    ==    Token.NAME,    arg.getString());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()!=  Token.NAME,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()!=  Token.NAME,  methodName.getQualifiedName());  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()!=  Token.NAME,  methodName.getQualifiedName());	  Preconditions.checkState(methodName.getType()    ==    Token.NAME,    arg.getString());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
25	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()  ==  null  &&!methodName.getQualifiedName().equals(arg.getQualifiedName())))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName.getQualifiedName()  ==  null  &&!methodName.getQualifiedName().equals(arg.getQualifiedName())))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName.getQualifiedName()  ==  null  &&!methodName.getQualifiedName().equals(arg.getQualifiedName())))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&!methodName.getQualifiedName().equals(arg.getQualifiedName())))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
26	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&!methodName.getQualifiedName().equals(arg.getQualifiedName())))  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&!methodName.getQualifiedName().equals(arg.getQualifiedName())))  {  return  false;  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName.getQualifiedName()!=  null  &&!methodName.getQualifiedName().equals(arg.getQualifiedName())))  {  return  false;	  ||(methodName.getQualifiedName()!=    null    &&!methodName.getQualifiedName().equals(arg.getQualifiedName())))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
27	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null)  {  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(!NodeUtil.isImmutableValueDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
28	[BUG]  [BUGGY]  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(!NodeUtil.isImmutableValueDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
29	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(!NodeUtil.isImmutableValueDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
30	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  if(NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  if(NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null)  {  if(NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(!NodeUtil.isImmutableValueDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
31	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  this));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  this));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  this));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    null));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
32	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  new  AssertionFailedError(t,  null));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  new  AssertionFailedError(t,  null));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  new  AssertionFailedError(t,  null));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    null));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
33	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  true);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  true);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  true);	  NodeTraversal.traverse(compiler,    methodName,    arg,    true);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
34	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  n,  true);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  n,  true);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  n,  true);	  NodeTraversal.traverse(compiler,    methodName,    arg,    true);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
35	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  e,  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  e,  true);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  e,  true);	  NodeTraversal.traverse(compiler,    methodName,    arg,    true);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
36	[BUG]  [BUGGY]  Preconditions.checkState(arg.getType()  ==  Token.NAME,  methodName.getQualifiedName());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(arg.getType()  ==  Token.NAME,  methodName.getQualifiedName());  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(arg.getType()  ==  Token.NAME,  methodName.getQualifiedName());	  Preconditions.checkState(methodName.getType()    ==    Token.NAME,    arg.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME,  arg.getFirstChild().getQualifiedName());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME,  arg.getFirstChild().getQualifiedName());  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()  ==  Token.NAME,  arg.getFirstChild().getQualifiedName());	  Preconditions.checkState(methodName.getType()    ==    Token.NAME,    arg.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()!=  Token.NAME,  arg.getQualifiedName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()!=  Token.NAME,  arg.getQualifiedName());  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()!=  Token.NAME,  arg.getQualifiedName());	  Preconditions.checkState(methodName.getType()    ==    Token.NAME,    arg.getQualifiedName());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
39	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
40	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
41	[BUG]  [BUGGY]  Node  methodName  =  t.getQualifiedName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  t.getQualifiedName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  t.getQualifiedName();	  Node    methodName    =    methodName.getNext();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
42	[BUG]  [BUGGY]  Node  methodName  =  t.getSimpleName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  t.getSimpleName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  t.getSimpleName();	  Node    methodName    =    methodName.getNext();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
43	[BUG]  [BUGGY]  Node  methodName  =  t.getSourceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  t.getSourceName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  t.getSourceName();	  Node    methodName    =    methodName.getNext();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
44	[BUG]  [BUGGY]  Node  methodName  =  t.getCurrentName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  t.getCurrentName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  t.getCurrentName();	  Node    methodName    =    methodName.getNext();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
45	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME,  arg.getFirstChild());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME,  arg.getFirstChild());  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()  ==  Token.NAME,  arg.getFirstChild());	  Preconditions.checkState(methodName.getType()    ==    Token.NAME,    arg);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
46	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME,  arg.getNext());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME,  arg.getNext());  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()  ==  Token.NAME,  arg.getNext());	  Preconditions.checkState(methodName.getType()    ==    Token.NAME,    arg);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
47	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME,  arg.getChildCount());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME,  arg.getChildCount());  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()  ==  Token.NAME,  arg.getChildCount());	  Preconditions.checkState(methodName.getType()    ==    Token.NAME,    arg);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
48	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&  arg.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&  arg.getType()  ==  Token.NAME)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  &&  arg.getType()  ==  Token.NAME)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
49	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getType()  ==  Token.NAME)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getType()  ==  Token.NAME)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
50	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  t);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  t);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  t);	  NodeTraversal.traverse(compiler,    methodName,    t);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
51	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||!methodName.getQualifiedName().equals(arg.getQualifiedName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
52	[BUG]  [BUGGY]  ||!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||!methodName.getQualifiedName().equals(arg.getQualifiedName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
53	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  &&!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||!methodName.getQualifiedName().equals(arg.getQualifiedName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
54	[BUG]  [BUGGY]  MethodName  methodName  =  arg.getLastChild();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  arg.getLastChild();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  arg.getLastChild();	  MethodName    methodName    =    arg.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
55	[BUG]  [BUGGY]  MethodName  methodName  =  t.getFirstChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  t.getFirstChild();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  t.getFirstChild();	  MethodName    methodName    =    arg.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
56	[BUG]  [BUGGY]  MethodName  methodName  =  arg.getFirstChild().getString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  arg.getFirstChild().getString();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  arg.getFirstChild().getString();	  MethodName    methodName    =    arg.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
57	[BUG]  [BUGGY]  ||  methodName.getQualifiedName()  ==  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  methodName.getQualifiedName()  ==  null)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||  methodName.getQualifiedName()  ==  null)  {  return  false;  }	  ||    methodName.getQualifiedName()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
58	[BUG]  [BUGGY]  ||  arg.getQualifiedName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  arg.getQualifiedName()!=  null)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||  arg.getQualifiedName()!=  null)  {  return  false;  }	  ||    methodName.getQualifiedName()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
59	[BUG]  [BUGGY]  ||  methodName.getQualifiedName()!=  null)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  methodName.getQualifiedName()!=  null)  {  return  true;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||  methodName.getQualifiedName()!=  null)  {  return  true;  }	  ||    methodName.getQualifiedName()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
60	[BUG]  [BUGGY]  ||  methodName.getQualifiedName()  >=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  methodName.getQualifiedName()  >=  null)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||  methodName.getQualifiedName()  >=  null)  {  return  false;  }	  ||    methodName.getQualifiedName()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
61	[BUG]  [BUGGY]  if(methodName  ==  null)  {  if(!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName  ==  null)  {  if(!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName  ==  null)  {  if(!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
62	[BUG]  [BUGGY]  ||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
63	[BUG]  [BUGGY]  ||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
64	[BUG]  [BUGGY]  ||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;	  if(methodName!=    null)    {    if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
65	[BUG]  [BUGGY]  if(methodName!=  null)  {  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null)  {  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName!=  null)  {  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
66	[BUG]  [BUGGY]  if(methodName!=  null)  {  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null)  {  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName!=  null)  {  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
67	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MESSAGE_ERROR));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MESSAGE_ERROR));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MESSAGE_ERROR));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    DEFAULT_MESSAGE_ERROR,    arg));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
68	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  TOO_MANY_ARGUMENTS_ERROR));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  TOO_MANY_ARGUMENTS_ERROR));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  TOO_MANY_ARGUMENTS_ERROR));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    DEFAULT_MESSAGE_ERROR,    arg));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
69	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg,  null));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg,  null));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg,  null));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    DEFAULT_MESSAGE_ERROR,    arg));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
70	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg,  arg));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg,  arg));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    DEFAULT_MESSAGE_ERROR,    arg));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
71	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  this,  arg));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  this,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  this,  arg));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg),    this);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
72	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  false);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  false);	  NodeTraversal.traverse(compiler,    methodName,    arg,    false);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
73	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  false,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  false,  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  false,  null);	  NodeTraversal.traverse(compiler,    methodName,    arg,    false);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
74	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  n,  false);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  n,  false);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  n,  false);	  NodeTraversal.traverse(compiler,    methodName,    arg,    false);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
75	[BUG]  [BUGGY]  Preconditions.checkArgument(methodName.getType()!=  Token.NAME);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkArgument(methodName.getType()!=  Token.NAME);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkArgument(methodName.getType()!=  Token.NAME);	  Preconditions.checkState(methodName.getType()!=    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
76	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()  >=  Token.NAME);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()  >=  Token.NAME);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()  >=  Token.NAME);	  Preconditions.checkState(methodName.getType()!=    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
77	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  if(NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  if(NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null)  {  if(NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
78	[BUG]  [BUGGY]  if(!NodeUtil.isVarDeclaration(methodName))  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isVarDeclaration(methodName))  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isVarDeclaration(methodName))  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
79	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  null,  arg));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  null,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  null,  arg));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    this));    	non-compiled	[CE]  <identifier>  expected	83	None	replace
80	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  NON_GLOBAL_EXPR_RESULT));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  NON_GLOBAL_EXPR_RESULT));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  NON_GLOBAL_EXPR_RESULT));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    this));    	non-compiled	[CE]  <identifier>  expected	83	None	replace
81	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  NON_GLOBAL_ERROR));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  NON_GLOBAL_ERROR));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  NON_GLOBAL_ERROR));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    this));    	non-compiled	[CE]  <identifier>  expected	83	None	replace
82	[BUG]  [BUGGY]  MethodName  methodName  =  (arg.getQualifiedName())+  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  (arg.getQualifiedName())+  1;  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  (arg.getQualifiedName())+  1;	  MethodName    methodName    =    arg.getQualifiedName()    +    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
83	[BUG]  [BUGGY]  MethodName  methodName  =  t.getQualifiedName()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  t.getQualifiedName()  +  1;  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  t.getQualifiedName()  +  1;	  MethodName    methodName    =    arg.getQualifiedName()    +    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
84	[BUG]  [BUGGY]  MethodName  methodName  =  null.getQualifiedName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  null.getQualifiedName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  null.getQualifiedName();	  MethodName    methodName    =    arg.getQualifiedName()    +    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
85	[BUG]  [BUGGY]  Node  methodName  =  arg!=  null?  getQualifiedName()  :  arg.getString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  arg!=  null?  getQualifiedName()  :  arg.getString();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  arg!=  null?  getQualifiedName()  :  arg.getString();	  Node    methodName    =    arg!=    null?    getQualifiedName()    :    arg.getNext();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
86	[BUG]  [BUGGY]  Node  methodName  =  arg  ==  null?  getQualifiedName()  :  arg.getString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  arg  ==  null?  getQualifiedName()  :  arg.getString();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  arg  ==  null?  getQualifiedName()  :  arg.getString();	  Node    methodName    =    arg!=    null?    getQualifiedName()    :    arg.getNext();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
87	[BUG]  [BUGGY]  Node  methodName  =  arg!=  null?  getQualifiedName()  :  arg.getLastChild();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  arg!=  null?  getQualifiedName()  :  arg.getLastChild();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  arg!=  null?  getQualifiedName()  :  arg.getLastChild();	  Node    methodName    =    arg!=    null?    getQualifiedName()    :    arg.getNext();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
88	[BUG]  [BUGGY]  Node  methodName  =  arg  ==  null?  getQualifiedName()  :  arg.getNext();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  arg  ==  null?  getQualifiedName()  :  arg.getNext();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  arg  ==  null?  getQualifiedName()  :  arg.getNext();	  Node    methodName    =    arg!=    null?    getQualifiedName()    :    arg.getNext();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
89	[BUG]  [BUGGY]  Node  methodName  =  t.getString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  t.getString();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  t.getString();	  Node    methodName    =    methodName.getString();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
90	[BUG]  [BUGGY]  ||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||!NodeUtil.isAssignmentOp(methodName))  {  return  false;	  if(methodName!=    null)    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
91	[BUG]  [BUGGY]  parent  ==  null  ||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent  ==  null  ||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	parent  ==  null  ||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
92	[BUG]  [BUGGY]  parent  ==  null  ||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent  ==  null  ||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	parent  ==  null  ||!NodeUtil.isAssignmentOp(methodName))  {  return  false;	  if(methodName!=    null)    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
93	[BUG]  [BUGGY]  Node  methodName  =  arg.getQualifiedName()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  arg.getQualifiedName()  +  1;  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  arg.getQualifiedName()  +  1;	  Node    methodName    =    arg.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
94	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  if(NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  if(NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null)  {  if(NodeUtil.isExpressionNode(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
95	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(methodName))  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isExpressionNode(methodName))  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isExpressionNode(methodName))  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
96	[BUG]  [BUGGY]  ||!NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||!NodeUtil.isExpressionNode(methodName))  {  return  false;  }	  if(!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
97	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isExpressionNode(methodName))  {  return  false;  }	  if(!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
98	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(methodName)||!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isExpressionNode(methodName)||!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isExpressionNode(methodName)||!NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
99	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
100	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.NAME  &&!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.NAME  &&!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()  ==  Token.NAME  &&!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
101	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.NAME)  {  if(!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.NAME)  {  if(!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()  ==  Token.NAME)  {  if(!NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
102	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||!NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
103	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals(arg))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals(arg))  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals(arg))  {	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().equals(arg))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
104	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().equals(arg))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().equals(arg))  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().equals(arg))  {	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().equals(arg))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
105	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals(arg))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals(arg))  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals(arg))  {	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().equals(arg))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
106	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().equals(arg.getQualifiedName()))  {	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().equals(arg))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
107	[BUG]  [BUGGY]  Node  methodName  =  arg!=  null?  null  :  arg.getQualifiedName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  arg!=  null?  null  :  arg.getQualifiedName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  arg!=  null?  null  :  arg.getQualifiedName();	  Node    methodName    =    arg!=    null?    null    :    arg.getNext();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
108	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  if(NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  if(NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null)  {  if(NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
109	[BUG]  [BUGGY]  if(!NodeUtil.isAssignmentOp(methodName))  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isAssignmentOp(methodName))  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isAssignmentOp(methodName))  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
110	[BUG]  [BUGGY]  Preconditions.checkArgument(methodName.getType()  ==  Token.NAME,  arg.getString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkArgument(methodName.getType()  ==  Token.NAME,  arg.getString());  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkArgument(methodName.getType()  ==  Token.NAME,  arg.getString());	  Preconditions.checkArgument(methodName.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
111	[BUG]  [BUGGY]  Preconditions.checkArgument(methodName.getQualifiedName()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkArgument(methodName.getQualifiedName()  ==  Token.NAME);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkArgument(methodName.getQualifiedName()  ==  Token.NAME);	  Preconditions.checkArgument(methodName.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
112	[BUG]  [BUGGY]  MethodName  methodName  =  arg!=  null?  null  :  arg.getQualifiedName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  arg!=  null?  null  :  arg.getQualifiedName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  arg!=  null?  null  :  arg.getQualifiedName();	  MethodName    methodName    =    arg    ==    null?    null    :    arg.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
113	[BUG]  [BUGGY]  MethodName  methodName  =  arg  >=  null?  null  :  arg.getQualifiedName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  arg  >=  null?  null  :  arg.getQualifiedName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  arg  >=  null?  null  :  arg.getQualifiedName();	  MethodName    methodName    =    arg    ==    null?    null    :    arg.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
114	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
115	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.NAME  &&!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.NAME  &&!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()  ==  Token.NAME  &&!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
116	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.NAME)  {  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.NAME)  {  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()  ==  Token.NAME)  {  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
117	[BUG]  [BUGGY]  AssertionFailedError.traverse(t,  methodName,  new  AssertionFailedError(t,  arg));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.traverse(t,  methodName,  new  AssertionFailedError(t,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	AssertionFailedError.traverse(t,  methodName,  new  AssertionFailedError(t,  arg));	  AssertionFailedError.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
118	[BUG]  [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  null));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  null));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  null));	  AssertionFailedError.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
119	[BUG]  [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  arg));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  arg));	  AssertionFailedError.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
120	[BUG]  [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  this);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  this);	  AssertionFailedError.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
121	[BUG]  [BUGGY]  AssertionFailedError.traverse(t,  methodName,  new  AssertionFailedError(arg));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.traverse(t,  methodName,  new  AssertionFailedError(arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	AssertionFailedError.traverse(t,  methodName,  new  AssertionFailedError(arg));	  AssertionFailedError.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
122	[BUG]  [BUGGY]  Node  methodName  =  t.getFirstChild().getString();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  t.getFirstChild().getString();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  t.getFirstChild().getString();	  Node    methodName    =    t.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
123	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  this);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  this);	  NodeTraversal.traverse(compiler,    methodName,    t,    arg);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
124	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  null);	  NodeTraversal.traverse(compiler,    methodName,    t,    arg);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
125	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  new  IllegalArgumentException( " "));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  new  IllegalArgumentException( " "));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  new  IllegalArgumentException( " "));	  NodeTraversal.traverse(compiler,    methodName,    t,    arg);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
126	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  new  AssertionFailedErrorHandler());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  new  AssertionFailedErrorHandler());  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  new  AssertionFailedErrorHandler());	  NodeTraversal.traverse(compiler,    methodName,    t,    arg);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
127	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
128	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getNext()  ==  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getNext()  ==  null)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getNext()  ==  null)  {	  if    (methodName.getNext()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
129	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  arg.getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  arg.getType()  ==  Token.VAR)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&  arg.getType()  ==  Token.VAR)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
130	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&  arg.getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&  arg.getType()  ==  Token.VAR)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  &&  arg.getType()  ==  Token.VAR)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
131	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  arg.getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  arg.getType()  ==  Token.VAR)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  arg.getType()  ==  Token.VAR)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
132	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getType()  ==  Token.VAR)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getType()  ==  Token.VAR)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
133	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getType()  ==  Token.NAME)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getType()  ==  Token.NAME)  {	  if(methodName.getQualifiedName()    ==    null    ||    arg.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
134	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_TYPE));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_TYPE));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_TYPE));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    arg));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
135	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  state,  arg));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  state,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  state,  arg));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    arg));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
136	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&  arg.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&  arg.getType()  ==  Token.STRING)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  &&  arg.getType()  ==  Token.STRING)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
137	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getType()  ==  Token.STRING)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getType()  ==  Token.STRING)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
138	[BUG]  [BUGGY]  MethodName  methodName  =  t.getRawClass();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  t.getRawClass();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  t.getRawClass();	  MethodName    methodName    =    t.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
139	[BUG]  [BUGGY]  MethodName  methodName  =  t.getSimpleName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  t.getSimpleName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  t.getSimpleName();	  MethodName    methodName    =    t.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
140	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getType()  ==  Token.STRING)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&  methodName.getType()  ==  Token.STRING)  {	  if(methodName.getQualifiedName()!=    null    &&    arg.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
141	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null)  {  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
142	[BUG]  [BUGGY]  if(!NodeUtil.isFunctionDeclaration(methodName))  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isFunctionDeclaration(methodName))  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isFunctionDeclaration(methodName))  {  if(methodName.getQualifiedName()!=  null)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
143	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  if(NodeUtil.isFunctionDeclaration(methodName)||  NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  if(NodeUtil.isFunctionDeclaration(methodName)||  NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null)  {  if(NodeUtil.isFunctionDeclaration(methodName)||  NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
144	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()  >  0))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()  >  0))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()  >  0))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
145	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
146	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  >=  0))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  >=  0))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  >=  0))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
147	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  <  2))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  <  2))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  <  2))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
148	[BUG]  [BUGGY]  MethodName  methodName  =  arg.getQualifiedName().toLowerCase(Locale.ENGLISH);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  arg.getQualifiedName().toLowerCase(Locale.ENGLISH);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  arg.getQualifiedName().toLowerCase(Locale.ENGLISH);	  MethodName    methodName    =    arg.getQualifiedName().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
149	[BUG]  [BUGGY]  MethodName  methodName  =  t.getQualifiedName().toLowerCase();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  t.getQualifiedName().toLowerCase();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  t.getQualifiedName().toLowerCase();	  MethodName    methodName    =    arg.getQualifiedName().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
150	[BUG]  [BUGGY]  MethodName  methodName  =  methodName.getQualifiedName().toLowerCase();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  methodName.getQualifiedName().toLowerCase();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  methodName.getQualifiedName().toLowerCase();	  MethodName    methodName    =    arg.getQualifiedName().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
151	[BUG]  [BUGGY]  MethodName  methodName  =  arg.getQualifiedName().toLowerCase()  +  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  arg.getQualifiedName().toLowerCase()  +  1;  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  arg.getQualifiedName().toLowerCase()  +  1;	  MethodName    methodName    =    arg.getQualifiedName().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
152	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getType()  ==  Token.NAME)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&  methodName.getType()  ==  Token.NAME)  {	  if(methodName.getQualifiedName()!=    null    &&    arg.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
153	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  INVALID_ARGUMENTS_ERROR));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  INVALID_ARGUMENTS_ERROR));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  INVALID_ARGUMENTS_ERROR));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    null));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
154	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  IOContext.EXPR_RESULT));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  IOContext.EXPR_RESULT));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  IOContext.EXPR_RESULT));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    null));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
155	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  null),  this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  null),  this);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  null),  this);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    null));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
156	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  null,  t);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  null,  t);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  null,  t);	  NodeTraversal.traverse(compiler,    methodName,    arg,    null);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
157	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  null,  false);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  null,  false);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  null,  false);	  NodeTraversal.traverse(compiler,    methodName,    arg,    null);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
158	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  null,  false));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  null,  false));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  null,  false));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    false));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
159	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  state,  false));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  state,  false));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  state,  false));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    false));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
160	[BUG]  [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  arg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  arg);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	AssertionFailedError.traverse(compiler,  methodName,  arg);	  NodeTraversal.traverse(compiler,    arg,    methodName);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
161	[BUG]  [BUGGY]  Context.traverse(compiler,  methodName,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Context.traverse(compiler,  methodName,  arg);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Context.traverse(compiler,  methodName,  arg);	  NodeTraversal.traverse(compiler,    arg,    methodName);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
162	[BUG]  [BUGGY]  Traversal.traverse(compiler,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Traversal.traverse(compiler,  methodName,  arg);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Traversal.traverse(compiler,  methodName,  arg);	  NodeTraversal.traverse(compiler,    arg,    methodName);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
163	[BUG]  [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  null));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  null));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  null));	  Traversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
164	[BUG]  [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_TYPE));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_TYPE));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_TYPE));	  Traversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
165	[BUG]  [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR));	  Traversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
166	[BUG]  [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  arg));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  arg));	  Traversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
167	[BUG]  [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  NON_GLOBAL_ERROR,  arg));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  NON_GLOBAL_ERROR,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  NON_GLOBAL_ERROR,  arg));	  Traversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
168	[BUG]  [BUGGY]  if(methodName!=  null  ||  methodName.getQualifiedName()!=  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null  ||  methodName.getQualifiedName()!=  null)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName!=  null  ||  methodName.getQualifiedName()!=  null)  {	  if(methodName    ==    null    ||    methodName.getQualifiedName()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
169	[BUG]  [BUGGY]  if(methodName!=  null  ||  methodName.getQualifiedName()  ==  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null  ||  methodName.getQualifiedName()  ==  null)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName!=  null  ||  methodName.getQualifiedName()  ==  null)  {	  if(methodName    ==    null    ||    methodName.getQualifiedName()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
170	[BUG]  [BUGGY]  if(methodName  ==  null  &&  methodName.getQualifiedName()!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName  ==  null  &&  methodName.getQualifiedName()!=  null)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName  ==  null  &&  methodName.getQualifiedName()!=  null)  {	  if(methodName    ==    null    ||    methodName.getQualifiedName()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
171	[BUG]  [BUGGY]  if(methodName  ==  null  ||  methodName.getQualifiedName()  >=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName  ==  null  ||  methodName.getQualifiedName()  >=  null)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName  ==  null  ||  methodName.getQualifiedName()  >=  null)  {	  if(methodName    ==    null    ||    methodName.getQualifiedName()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
172	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null)  {  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(!NodeUtil.isImmutableValue(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
173	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  if(NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  if(NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null)  {  if(NodeUtil.isImmutableValue(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(!NodeUtil.isImmutableValue(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
174	[BUG]  [BUGGY]  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(!NodeUtil.isImmutableValue(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
175	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||!NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||!NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||!NodeUtil.isImmutableValue(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(!NodeUtil.isImmutableValue(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
176	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().length()  >  0)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().length()  >  0)  {	  if(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
177	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  ==  0)  {	  if(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
178	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  >=  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  >=  0)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().length()  >=  0)  {	  if(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
179	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()  >  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()  >  0)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()  >  0)  {	  if(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
180	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&  arg.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&  arg.getType()  ==  Token.FUNCTION)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  &&  arg.getType()  ==  Token.FUNCTION)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
181	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  arg.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  arg.getType()  ==  Token.FUNCTION)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  arg.getType()  ==  Token.FUNCTION)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
182	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getType()  ==  Token.FUNCTION)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getType()  ==  Token.FUNCTION)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
183	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getQualifiedName()!=  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getQualifiedName()!=  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getQualifiedName()!=  null);	  Preconditions.checkState(methodName.getQualifiedName()    ==    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
184	[BUG]  [BUGGY]  Preconditions.checkArgument(methodName.getQualifiedName()!=  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkArgument(methodName.getQualifiedName()!=  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkArgument(methodName.getQualifiedName()!=  null);	  Preconditions.checkState(methodName.getQualifiedName()    ==    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
185	[BUG]  [BUGGY]  Preconditions.checkArgument(methodName.getQualifiedName()  ==  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkArgument(methodName.getQualifiedName()  ==  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkArgument(methodName.getQualifiedName()  ==  null);	  Preconditions.checkState(methodName.getQualifiedName()    ==    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
186	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getQualifiedName()!=  null,  arg.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getQualifiedName()!=  null,  arg.getType()  ==  Token.NAME);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getQualifiedName()!=  null,  arg.getType()  ==  Token.NAME);	  Preconditions.checkState(methodName.getQualifiedName()    ==    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
187	[BUG]  [BUGGY]  if(methodName  ==  null)  {  if(!NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName  ==  null)  {  if(!NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName  ==  null)  {  if(!NodeUtil.isExpressionNode(methodName))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
188	[BUG]  [BUGGY]  ||!NodeUtil.isExpressionNode(methodName))  {  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!NodeUtil.isExpressionNode(methodName))  {  return  false;  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||!NodeUtil.isExpressionNode(methodName))  {  return  false;	  if(methodName!=    null)    {    if(!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
189	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(methodName))  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(methodName))  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isAssignmentOp(methodName))  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(NodeUtil.isGetProp(methodName))    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
190	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(methodName))  {  if(!NodeUtil.isGetProp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(methodName))  {  if(!NodeUtil.isGetProp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isAssignmentOp(methodName))  {  if(!NodeUtil.isGetProp(methodName))  {  return  false;  }	  if(NodeUtil.isGetProp(methodName))    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
191	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(methodName)&&!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isGetProp(methodName)&&!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isGetProp(methodName)&&!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(NodeUtil.isGetProp(methodName))    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
192	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MISSING_ERROR,  arg));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MISSING_ERROR,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MISSING_ERROR,  arg));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    DEFAULT_MISSING_ERROR));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
193	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR,  arg));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR,  arg));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    DEFAULT_MISSING_ERROR));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
194	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  IS_EMPTY_STRING_ERROR));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  IS_EMPTY_STRING_ERROR));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  IS_EMPTY_STRING_ERROR));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    DEFAULT_MISSING_ERROR));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
195	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR,  message));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR,  message));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR,  message));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    DEFAULT_MISSING_ERROR));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
196	[BUG]  [BUGGY]  if(!NodeUtil.isFunctionDeclaration(methodName)||!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isFunctionDeclaration(methodName)||!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isFunctionDeclaration(methodName)||!NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
197	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(methodName)||!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(methodName)||!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isFunctionDeclaration(methodName)||!NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
198	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  methodName.getType()  ==  Token.FUNCTION)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&  methodName.getType()  ==  Token.FUNCTION)  {	  if(methodName.getQualifiedName()!=    null    &&    arg.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	94	None	replace
199	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  scope,  arg));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  scope,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  scope,  arg));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    scope));    	non-compiled	[CE]  <identifier>  expected	85	None	replace
200	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  this.scope));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  this.scope));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  this.scope));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    scope));    	non-compiled	[CE]  <identifier>  expected	85	None	replace
201	[BUG]  [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  null));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  null));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  null));	  Context.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
202	[BUG]  [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  state,  arg));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  state,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  state,  arg));	  Context.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
203	[BUG]  [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  arg));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  arg));	  Context.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
204	[BUG]  [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg));	  Context.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
205	[BUG]  [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_TYPE));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_TYPE));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_TYPE));	  Context.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
206	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().length()  ==  0)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().length()  ==  0)  {	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
207	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().length()!=  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().length()!=  0)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().length()!=  0)  {	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
208	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()  ==  0)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().length()  ==  0)  {	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
209	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&!NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&!NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&!NodeUtil.isExpressionNode(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
210	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||!NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||!NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||!NodeUtil.isExpressionNode(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
211	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  arg.getType()!=  Token.FUNCTION)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  arg.getType()!=  Token.FUNCTION)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&  arg.getType()!=  Token.FUNCTION)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()!=    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
212	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  arg.getType()  ==  Token.FUNCTION)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  arg.getType()  ==  Token.FUNCTION)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||  arg.getType()  ==  Token.FUNCTION)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()!=    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
213	[BUG]  [BUGGY]  if(arg.getQualifiedName()!=  null  ||  arg.getType()!=  Token.FUNCTION)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getQualifiedName()!=  null  ||  arg.getType()!=  Token.FUNCTION)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(arg.getQualifiedName()!=  null  ||  arg.getType()!=  Token.FUNCTION)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()!=    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
214	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getType()!=  Token.FUNCTION)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getType()!=  Token.FUNCTION)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getType()!=  Token.FUNCTION)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()!=    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
215	[BUG]  [BUGGY]  MethodName  methodName  =  t.getSourceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  t.getSourceName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  t.getSourceName();	  MethodName    methodName    =    methodName.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
216	[BUG]  [BUGGY]  MethodName  methodName  =  t.getMemberName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  t.getMemberName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  t.getMemberName();	  MethodName    methodName    =    methodName.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
217	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  arg.getType()!=  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  arg.getType()!=  Token.NAME)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&  arg.getType()!=  Token.NAME)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()!=    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
218	[BUG]  [BUGGY]  if(arg.getQualifiedName()!=  null  ||  arg.getType()!=  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getQualifiedName()!=  null  ||  arg.getType()!=  Token.NAME)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(arg.getQualifiedName()!=  null  ||  arg.getType()!=  Token.NAME)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()!=    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
219	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getType()!=  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getType()!=  Token.NAME)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getType()!=  Token.NAME)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()!=    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
220	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "* ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "* ")))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "* ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
221	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "- ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "- ")))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "- ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
222	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "_ ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "_ ")))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "_ ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
223	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "__ ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "__ ")))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "__ ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
224	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  this,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  this,  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  this,  null);	  NodeTraversal.traverse(compiler,    methodName,    arg,    this);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
225	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  this,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  this,  false);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  this,  false);	  NodeTraversal.traverse(compiler,    methodName,    arg,    this);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
226	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getType()  ==  Token.STRING)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getType()  ==  Token.STRING)  {	  if(methodName.getQualifiedName()    ==    null    ||    arg.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
227	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().equals( "null ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().equals( "null ")))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().equals( "null ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "null   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
228	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "false ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "false ")))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "false ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "null   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
229	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "true ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "true ")))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "true ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "null   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
230	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "undefined ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "undefined ")))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "undefined ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "null   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
231	[BUG]  [BUGGY]  Node  methodName  =  arg  ==  null?  null  :  arg.getLastChild();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  arg  ==  null?  null  :  arg.getLastChild();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  arg  ==  null?  null  :  arg.getLastChild();	  Node    methodName    =    arg    ==    null?    null    :    arg.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
232	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  arg.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  arg.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&  arg.getType()  ==  Token.NAME)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
233	[BUG]  [BUGGY]  if(arg.getQualifiedName()!=  null  ||  arg.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getQualifiedName()!=  null  ||  arg.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(arg.getQualifiedName()!=  null  ||  arg.getType()  ==  Token.NAME)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
234	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  arg.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  arg.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  arg.getType()  ==  Token.NAME)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
235	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  arg.getType()!=  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  arg.getType()!=  Token.NAME)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  arg.getType()!=  Token.NAME)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
236	[BUG]  [BUGGY]  if(methodName!=  null)  {  if(NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null)  {  if(NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName!=  null)  {  if(NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
237	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
238	[BUG]  [BUGGY]  if(methodName!=  null)  {  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null)  {  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName!=  null)  {  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(!NodeUtil.isImmutableValueDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
239	[BUG]  [BUGGY]  if(methodName  ==  null)  {  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName  ==  null)  {  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName  ==  null)  {  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(!NodeUtil.isImmutableValueDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
240	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().getType()  ==  Token.NAME)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().getType()  ==  Token.NAME)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
241	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().getType()  ==  Token.NAME)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().getType()  ==  Token.NAME)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
242	[BUG]  [BUGGY]  if(NodeUtil.isFunction(methodName))  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isFunction(methodName))  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isFunction(methodName))  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(NodeUtil.isGetProp(methodName))    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
243	[BUG]  [BUGGY]  if(NodeUtil.isName(methodName))  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isName(methodName))  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isName(methodName))  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(NodeUtil.isGetProp(methodName))    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
244	[BUG]  [BUGGY]  MethodName  methodName  =  arg  ==  null?  null  :  arg.getFirstChild();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  arg  ==  null?  null  :  arg.getFirstChild();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  arg  ==  null?  null  :  arg.getFirstChild();	  MethodName    methodName    =    arg.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
245	[BUG]  [BUGGY]  MethodName  methodName  =  arg.getNext();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  arg.getNext();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  arg.getNext();	  MethodName    methodName    =    arg.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	89	None	replace
246	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().equals( "false ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().equals( "false ")))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName.getQualifiedName()  ==  null  &&  methodName.getQualifiedName().equals( "false ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "null   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
247	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName()!=  null  ||  arg.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName()!=  null  ||  arg.getType()  ==  Token.STRING)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName()!=  null  ||  arg.getType()  ==  Token.STRING)  {	  if(methodName.getQualifiedName()    ==    null    ||    arg.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
248	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getType()  ==  Token.NAME)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
249	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName()!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName()!=  null)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName()!=  null)  {	  if(methodName.getQualifiedName()    ==    null    ||    arg.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
250	[BUG]  [BUGGY]  Node  methodName  =  arg!=  null?  getQualifiedName()  :  arg.getFirstChild();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  arg!=  null?  getQualifiedName()  :  arg.getFirstChild();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  arg!=  null?  getQualifiedName()  :  arg.getFirstChild();	  Node    methodName    =    arg!=    null?    getQualifiedName()    :    arg.getNext();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
251	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  false),  this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  false),  this);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  false),  this);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    false));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
252	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME  ||  methodName.getQualifiedName()  ==  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME  ||  methodName.getQualifiedName()  ==  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()  ==  Token.NAME  ||  methodName.getQualifiedName()  ==  null);	  Preconditions.checkState(methodName.getType()    ==    Token.NAME    ||    methodName.getQualifiedName()!=    null);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
253	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  unknown));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  unknown));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  unknown));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    null));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
254	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  false,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  false,  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  false,  null);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg),    false);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
255	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  this);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  this);	  NodeTraversal.traverse(compiler,    methodName,    t);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
256	[BUG]  [BUGGY]  MethodName  argName  =  arg.getQualifiedName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  argName  =  arg.getQualifiedName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  argName  =  arg.getQualifiedName();	  MethodName    methodName    =    arg.getQualifiedName()    +    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
257	[BUG]  [BUGGY]  MethodName  methodsName  =  arg.getQualifiedName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodsName  =  arg.getQualifiedName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodsName  =  arg.getQualifiedName();	  MethodName    methodName    =    arg.getQualifiedName()    +    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
258	[BUG]  [BUGGY]  MethodName  pathName  =  arg.getQualifiedName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  pathName  =  arg.getQualifiedName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  pathName  =  arg.getQualifiedName();	  MethodName    methodName    =    arg.getQualifiedName()    +    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
259	[BUG]  [BUGGY]  Node  methodName  =  arg!=  null?  arg.getFirstChild()  :  arg.getLastChild();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  arg!=  null?  arg.getFirstChild()  :  arg.getLastChild();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  arg!=  null?  arg.getFirstChild()  :  arg.getLastChild();	  Node    methodName    =    arg.getLastChild();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
260	[BUG]  [BUGGY]  Node  methodName  =  arg!=  null?  arg.getLastChild()  :  arg.getFirstChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  arg!=  null?  arg.getLastChild()  :  arg.getFirstChild();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  arg!=  null?  arg.getLastChild()  :  arg.getFirstChild();	  Node    methodName    =    arg.getLastChild();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
261	[BUG]  [BUGGY]  safeName(methodName.getQualifiedName())  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  safeName(methodName.getQualifiedName())  {  return  true;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	safeName(methodName.getQualifiedName())  {  return  true;  }	  if(methodName.getQualifiedName()!=    null)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
262	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_EXTENDS_ERROR,  arg));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_EXTENDS_ERROR,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_EXTENDS_ERROR,  arg));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    DEFAULT_MESSAGE_ERROR,    arg));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
263	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_TYPE_ERROR,  arg));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_TYPE_ERROR,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_TYPE_ERROR,  arg));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    DEFAULT_MESSAGE_ERROR,    arg));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
264	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg),  this);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg),  this);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg),  this);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    DEFAULT_MESSAGE_ERROR,    arg));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
265	[BUG]  [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  null));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  null));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  null));	  AssertionFailedError.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
266	[BUG]  [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  NON_GLOBAL_TYPE));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  NON_GLOBAL_TYPE));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  NON_GLOBAL_TYPE));	  AssertionFailedError.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
267	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(methodName)||!NodeUtil.isGetProp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isExpressionNode(methodName)||!NodeUtil.isGetProp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isExpressionNode(methodName)||!NodeUtil.isGetProp(methodName))  {  return  false;  }	  if(!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
268	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(methodName)||!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isExpressionNode(methodName)||!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isExpressionNode(methodName)||!NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
269	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(methodName)||!NodeUtil.isGetProp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isExpressionNode(methodName)||!NodeUtil.isGetProp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isExpressionNode(methodName)||!NodeUtil.isGetProp(methodName))  {  return  false;  }	  if(!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
270	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(methodName)||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isExpressionNode(methodName)||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isExpressionNode(methodName)||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
271	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR,  name));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR,  name));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR,  name));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    DEFAULT_MISSING_ERROR));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
272	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  UNKNOWN_EXPR_TYPE));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  UNKNOWN_EXPR_TYPE));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  UNKNOWN_EXPR_TYPE));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    DEFAULT_MISSING_ERROR));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
273	[BUG]  [BUGGY]  if(methodName  ==  null  ||  methodName.getQualifiedName().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName  ==  null  ||  methodName.getQualifiedName().length()  ==  0)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName  ==  null  ||  methodName.getQualifiedName().length()  ==  0)  {	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
274	[BUG]  [BUGGY]  if(methodName!=  null  ||  methodName.getQualifiedName().length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null  ||  methodName.getQualifiedName().length()  ==  0)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName!=  null  ||  methodName.getQualifiedName().length()  ==  0)  {	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().length()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
275	[BUG]  [BUGGY]  Node  methodName  =  getQualifiedName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  getQualifiedName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  getQualifiedName();	  Node    methodName    =    methodName.getNext();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
276	[BUG]  [BUGGY]  Node  methodName  =  arg.getParent();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  arg.getParent();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  arg.getParent();	  Node    methodName    =    methodName.getNext();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
277	[BUG]  [BUGGY]  Node  methodName  =  n.getNext();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  n.getNext();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  n.getNext();	  Node    methodName    =    methodName.getNext();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
278	[BUG]  [BUGGY]  MethodName  methodName  =(methodName  ==  null)?  null  :  methodName.getQualifiedName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =(methodName  ==  null)?  null  :  methodName.getQualifiedName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =(methodName  ==  null)?  null  :  methodName.getQualifiedName();	  MethodName    methodName    =    methodName.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
279	[BUG]  [BUGGY]  MethodName  methodName  =(methodName!=  null)?  null  :  methodName.getQualifiedName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =(methodName!=  null)?  null  :  methodName.getQualifiedName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =(methodName!=  null)?  null  :  methodName.getQualifiedName();	  MethodName    methodName    =    methodName.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
280	[BUG]  [BUGGY]  MethodName  methodName  =  this.methodName.getQualifiedName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  this.methodName.getQualifiedName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  this.methodName.getQualifiedName();	  MethodName    methodName    =    methodName.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
281	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_NAME));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_NAME));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_NAME));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    arg));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
282	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_NAMESPACE));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_NAMESPACE));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_NAMESPACE));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    arg));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
283	[BUG]  [BUGGY]  if(methodName!=  null  ||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null  ||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName!=  null  ||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
284	[BUG]  [BUGGY]  if(!NodeUtil.isFunctionDeclaration(methodName)||!NodeUtil.isImmutableValue(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isFunctionDeclaration(methodName)||!NodeUtil.isImmutableValue(arg))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isFunctionDeclaration(methodName)||!NodeUtil.isImmutableValue(arg))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
285	[BUG]  [BUGGY]  if(methodName!=  null)  {  if(NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null)  {  if(NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName!=  null)  {  if(NodeUtil.isExpressionNode(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
286	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methods,  arg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methods,  arg);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methods,  arg);	  NodeTraversal.traverse(compiler,    arg,    methodName);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
287	[BUG]  [BUGGY]  if(NodeUtil.isName(methodName)||!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isName(methodName)||!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isName(methodName)||!NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
288	[BUG]  [BUGGY]  if(!NodeUtil.isAssignmentOp(methodName)||!NodeUtil.isGetProp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isAssignmentOp(methodName)||!NodeUtil.isGetProp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isAssignmentOp(methodName)||!NodeUtil.isGetProp(methodName))  {  return  false;  }	  if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
289	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)||!NodeUtil.isGetProp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)||!NodeUtil.isGetProp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isAssignmentOp(methodName)||!NodeUtil.isGetProp(methodName))  {  return  false;  }	  if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
290	[BUG]  [BUGGY]  if(!NodeUtil.isAssignmentOp(methodName)||!NodeUtil.isFunction(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isAssignmentOp(methodName)||!NodeUtil.isFunction(arg))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isAssignmentOp(methodName)||!NodeUtil.isFunction(arg))  {  return  false;  }	  if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
291	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.NAME  &&!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.NAME  &&!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()!=  Token.NAME  &&!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
292	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()!=  Token.NAME)  {  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
293	[BUG]  [BUGGY]  if(methodName  ==  null)  {  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName  ==  null)  {  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName  ==  null)  {  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(!NodeUtil.isImmutableValue(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
294	[BUG]  [BUGGY]  if  (methodName  ==  null  ||  methodName.getNext()  ==  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if  (methodName  ==  null  ||  methodName.getNext()  ==  null)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if  (methodName  ==  null  ||  methodName.getNext()  ==  null)  {	  if    (methodName.getNext()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
295	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().getType()  ==  Token.VAR)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().getType()  ==  Token.VAR)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
296	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().getType()  ==  Token.VAR)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().getType()  ==  Token.VAR)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
297	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().getType()  ==  Token.FUNCTION)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().getType()  ==  Token.FUNCTION)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
298	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().getType()  ==  Token.FUNCTION)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().getType()  ==  Token.FUNCTION)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
299	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  scope),  this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  scope),  this);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  scope),  this);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    scope));    	non-compiled	[CE]  <identifier>  expected	85	None	replace
300	[BUG]  [BUGGY]  if(methodName  ==  null  ||  methodName.getQualifiedName()  ==  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName  ==  null  ||  methodName.getQualifiedName()  ==  null)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName  ==  null  ||  methodName.getQualifiedName()  ==  null)  {	  if(methodName    ==    null    ||    methodName.getQualifiedName()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
301	[BUG]  [BUGGY]  ||(methodName!=  null  &&!methodName.getQualifiedName().equals(arg.getQualifiedName())))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName!=  null  &&!methodName.getQualifiedName().equals(arg.getQualifiedName())))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName!=  null  &&!methodName.getQualifiedName().equals(arg.getQualifiedName())))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&!methodName.getQualifiedName().equals(arg.getQualifiedName())))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
302	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodsName,  arg,  false);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodsName,  arg,  false);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodsName,  arg,  false);	  NodeTraversal.traverse(compiler,    methodName,    arg,    true);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
303	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getQualifiedName()!=  Token.NAME);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getQualifiedName()!=  Token.NAME);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getQualifiedName()!=  Token.NAME);	  Preconditions.checkState(methodName.getType()!=    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
304	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.NAME  &&!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.NAME  &&!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()!=  Token.NAME  &&!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
305	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.NAME  ||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.NAME  ||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()!=  Token.NAME  ||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
306	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  this,  TOO_MANY_ARGUMENTS_ERROR);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  this,  TOO_MANY_ARGUMENTS_ERROR);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  this,  TOO_MANY_ARGUMENTS_ERROR);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg),    this);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
307	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  this,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  this,  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  this,  null);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg),    this);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
308	[BUG]  [BUGGY]  parent!=  null  &&!NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent!=  null  &&!NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	parent!=  null  &&!NodeUtil.isExpressionNode(methodName))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
309	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()!=  Token.NAME,  arg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()!=  Token.NAME,  arg);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()!=  Token.NAME,  arg);	  Preconditions.checkState(methodName.getType()    ==    Token.NAME,    arg);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
310	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getQualifiedName()  ==  Token.NAME,  arg);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getQualifiedName()  ==  Token.NAME,  arg);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getQualifiedName()  ==  Token.NAME,  arg);	  Preconditions.checkState(methodName.getType()    ==    Token.NAME,    arg);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
311	[BUG]  [BUGGY]  parent!=  null  &&!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent!=  null  &&!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	parent!=  null  &&!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
312	[BUG]  [BUGGY]  parent  ==  null  ||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent  ==  null  ||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	parent  ==  null  ||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
313	[BUG]  [BUGGY]  parent  ==  null  ||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent  ==  null  ||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	parent  ==  null  ||!NodeUtil.isVarDeclaration(methodName))  {  return  false;	  if(methodName!=    null)    {    if(!NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
314	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.NAME  &&!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.NAME  &&!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()!=  Token.NAME  &&!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
315	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.NAME  ||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.NAME  ||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()!=  Token.NAME  ||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
316	[BUG]  [BUGGY]  MethodName  methodName  =  t.getQualifiedName(null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  t.getQualifiedName(null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  t.getQualifiedName(null);	  MethodName    methodName    =    t.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
317	[BUG]  [BUGGY]  MethodName  methodName  =  t.getQualifiedName(arg);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  t.getQualifiedName(arg);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  t.getQualifiedName(arg);	  MethodName    methodName    =    t.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
318	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().getType()  ==  Token.STRING)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().getType()  ==  Token.STRING)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
319	[BUG]  [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  this);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  this);	  Context.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
320	[BUG]  [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  false));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  false));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  false));	  Context.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
321	[BUG]  [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  NON_GLOBAL_TYPE));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  NON_GLOBAL_TYPE));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  NON_GLOBAL_TYPE));	  Context.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
322	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName()!=  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName()!=  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName()!=  null);	  Preconditions.checkState(methodName.getQualifiedName()    ==    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
323	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  null,  TOO_MANY_ARGUMENTS_ERROR);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  null,  TOO_MANY_ARGUMENTS_ERROR);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  null,  TOO_MANY_ARGUMENTS_ERROR);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg),    null);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
324	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  null,  this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  null,  this);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  null,  this);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg),    null);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
325	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  null),  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  null),  arg);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  null),  arg);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    null));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
326	[BUG]  [BUGGY]  if(methodName!=  null  ||!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null  ||!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName!=  null  ||!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||!methodName.getQualifiedName().equals(arg.getQualifiedName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
327	[BUG]  [BUGGY]  if(methodName  ==  null)  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName  ==  null)  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName  ==  null)  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
328	[BUG]  [BUGGY]  parent  ==  null  &&!NodeUtil.isAssignmentOp(parent))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent  ==  null  &&!NodeUtil.isAssignmentOp(parent))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	parent  ==  null  &&!NodeUtil.isAssignmentOp(parent))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
329	[BUG]  [BUGGY]  parent  ==  null  &&!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent  ==  null  &&!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	parent  ==  null  &&!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
330	[BUG]  [BUGGY]  MethodName  methodName  =  arg  [Delete]  null?  null  :  arg.getQualifiedName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  arg  [Delete]  null?  null  :  arg.getQualifiedName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  arg  [Delete]  null?  null  :  arg.getQualifiedName();	  MethodName    methodName    =    arg    ==    null?    null    :    arg.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
331	[BUG]  [BUGGY]  if(methodName!=  null  ||  methodName.getQualifiedName().equals(arg))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null  ||  methodName.getQualifiedName().equals(arg))  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName!=  null  ||  methodName.getQualifiedName().equals(arg))  {	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().equals(arg))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
332	[BUG]  [BUGGY]  if(methodName  ==  null  ||  methodName.getQualifiedName().equals(arg))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName  ==  null  ||  methodName.getQualifiedName().equals(arg))  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName  ==  null  ||  methodName.getQualifiedName().equals(arg))  {	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().equals(arg))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
333	[BUG]  [BUGGY]  if(methodName  ==  null)  {  if(!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName  ==  null)  {  if(!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName  ==  null)  {  if(!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
334	[BUG]  [BUGGY]  parent!=  null  &&!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent!=  null  &&!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	parent!=  null  &&!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
335	[BUG]  [BUGGY]  parent  ==  null  ||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent  ==  null  ||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	parent  ==  null  ||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
336	[BUG]  [BUGGY]  parent  ==  null  ||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent  ==  null  ||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	parent  ==  null  ||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;	  if(methodName!=    null)    {    if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
337	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  arg.getType()!=  Token.FUNCTION)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  arg.getType()!=  Token.FUNCTION)  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  arg.getType()!=  Token.FUNCTION)  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()!=    Token.FUNCTION)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
338	[BUG]  [BUGGY]  ||(methodName!=  null  &&  methodName.getQualifiedName().length()  >  0))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName!=  null  &&  methodName.getQualifiedName().length()  >  0))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName!=  null  &&  methodName.getQualifiedName().length()  >  0))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().length()    >    0))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
339	[BUG]  [BUGGY]  Preconditions.checkArgument(methodName.getType()  ==  Token.NAME,  arg);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkArgument(methodName.getType()  ==  Token.NAME,  arg);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkArgument(methodName.getType()  ==  Token.NAME,  arg);	  Preconditions.checkArgument(methodName.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
340	[BUG]  [BUGGY]  Node  methodName  =  n.getString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  n.getString();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  n.getString();	  Node    methodName    =    methodName.getString();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
341	[BUG]  [BUGGY]  if(methodName!=  null)  {  if(NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null)  {  if(NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName!=  null)  {  if(NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
342	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null)  {  if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
343	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  new  AssertionFailedError());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  new  AssertionFailedError());  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  new  AssertionFailedError());	  NodeTraversal.traverse(compiler,    methodName,    t,    arg);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
344	[BUG]  [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  this);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  this);	  Traversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
345	[BUG]  [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg),  null);	  Traversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
346	[BUG]  [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  false));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  false));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  false));	  Traversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
347	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
348	[BUG]  [BUGGY]  MethodName  methodName  =  arg.getQualifiedName().toUpperCase();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  arg.getQualifiedName().toUpperCase();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  arg.getQualifiedName().toUpperCase();	  MethodName    methodName    =    arg.getQualifiedName().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
349	[BUG]  [BUGGY]  MethodName  methodName  =  arg.getQualifiedName().toLowerCase(Locale.US);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  arg.getQualifiedName().toLowerCase(Locale.US);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  arg.getQualifiedName().toLowerCase(Locale.US);	  MethodName    methodName    =    arg.getQualifiedName().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
350	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||!NodeUtil.isForIn(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||!NodeUtil.isForIn(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||!NodeUtil.isForIn(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
351	[BUG]  [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "xmlns ")))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "xmlns ")))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	||(methodName.getQualifiedName()!=  null  &&  methodName.getQualifiedName().equals( "xmlns ")))  {  return  false;  }	  ||(methodName.getQualifiedName()!=    null    &&    methodName.getQualifiedName().equals(   "   ")))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
352	[BUG]  [BUGGY]  if(!NodeUtil.isFunctionDeclaration(methodName)||!NodeUtil.isStatementBlock(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isFunctionDeclaration(methodName)||!NodeUtil.isStatementBlock(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isFunctionDeclaration(methodName)||!NodeUtil.isStatementBlock(methodName))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
353	[BUG]  [BUGGY]  if(!NodeUtil.isFunctionDeclaration(methodName)||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isFunctionDeclaration(methodName)||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isFunctionDeclaration(methodName)||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
354	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  t,  methodName);	  NodeTraversal.traverse(compiler,    methodName,    t);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
355	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  t);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  t);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  arg,  t);	  NodeTraversal.traverse(compiler,    methodName,    t);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
356	[BUG]  [BUGGY]  MethodName  methodName  =  t.getReferenceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  t.getReferenceName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  t.getReferenceName();	  MethodName    methodName    =    t.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
357	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  true);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  true);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  arg,  methodName,  true);	  NodeTraversal.traverse(compiler,    methodName,    arg,    true);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
358	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&  NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
359	[BUG]  [BUGGY]  if(NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isImmutableValue(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
360	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()!=  Token.NAME,  arg.getString());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()!=  Token.NAME,  arg.getString());  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()!=  Token.NAME,  arg.getString());	  Preconditions.checkState(methodName.getType()    ==    Token.NAME,    arg.getString());    	non-compiled	[CE]  <identifier>  expected	36	None	replace
361	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getType()  ==  Token.FUNCTION)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getType()  ==  Token.FUNCTION)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
362	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR,  methodName));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR,  methodName));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_MISSING_ERROR,  methodName));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    DEFAULT_MISSING_ERROR));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
363	[BUG]  [BUGGY]  MethodName  methodName  =  t.getScope().getMethodName( "getQualifiedName ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  t.getScope().getMethodName( "getQualifiedName ");  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  t.getScope().getMethodName( "getQualifiedName ");	  MethodName    methodName    =    methodName.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
364	[BUG]  [BUGGY]  MethodName  methodName  =  t.getScope().getMethodName( "method ".getQualifiedName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  t.getScope().getMethodName( "method ".getQualifiedName());  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  t.getScope().getMethodName( "method ".getQualifiedName());	  MethodName    methodName    =    methodName.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
365	[BUG]  [BUGGY]  if(methodName!=  null)  {  if(!NodeUtil.isFunction(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null)  {  if(!NodeUtil.isFunction(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName!=  null)  {  if(!NodeUtil.isFunction(methodName))  {  return  false;  }	  if(methodName!=    null)    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
366	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  this);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  this);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  arg,  methodName,  this);	  NodeTraversal.traverse(compiler,    arg,    methodName);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
367	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  null);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  arg,  methodName,  null);	  NodeTraversal.traverse(compiler,    arg,    methodName);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
368	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  t);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  t);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  arg,  methodName,  t);	  NodeTraversal.traverse(compiler,    arg,    methodName);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
369	[BUG]  [BUGGY]  if(NodeUtil.isImmutableValue(methodName))  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isImmutableValue(methodName))  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isImmutableValue(methodName))  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(NodeUtil.isGetProp(methodName))    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
370	[BUG]  [BUGGY]  Node  methodName  =  arg  ==  null?  arg.getFirstChild()  :  arg.getLastChild();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  arg  ==  null?  arg.getFirstChild()  :  arg.getLastChild();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  arg  ==  null?  arg.getFirstChild()  :  arg.getLastChild();	  Node    methodName    =    arg.getLastChild();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
371	[BUG]  [BUGGY]  Node  methodName  =  arg  ==  null?  arg.getLastChild()  :  arg.getFirstChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  arg  ==  null?  arg.getLastChild()  :  arg.getFirstChild();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  arg  ==  null?  arg.getLastChild()  :  arg.getFirstChild();	  Node    methodName    =    arg.getLastChild();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
372	[BUG]  [BUGGY]  Node  methodName  =  t.getScope().getMethodName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Node  methodName  =  t.getScope().getMethodName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Node  methodName  =  t.getScope().getMethodName();	  Node    methodName    =    methodName.getString();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
373	[BUG]  [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  scope));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  scope));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  scope));	  Context.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
374	[BUG]  [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_NAME_ERROR));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_NAME_ERROR));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Context.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_NAME_ERROR));	  Context.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	18	None	replace
375	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getType()  ==  Token.VAR)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getType()  ==  Token.VAR)  {	  if(methodName.getQualifiedName()!=    null    ||    arg.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
376	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getType()  ==  Token.NAME,  0);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getType()  ==  Token.NAME,  0);	  Preconditions.checkState(methodName.getType()    ==    Token.NAME,    arg);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
377	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  NON_GLOBAL_TAG_ERROR));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  NON_GLOBAL_TAG_ERROR));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  NON_GLOBAL_TAG_ERROR));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    this));    	non-compiled	[CE]  <identifier>  expected	83	None	replace
378	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||!NodeUtil.isFunction(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||!NodeUtil.isFunction(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||!NodeUtil.isFunction(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
379	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()!=  Token.NAME)  {  if(NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
380	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
381	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  return  true;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  return  true;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null)  {  return  true;  }	  if(methodName.getQualifiedName()!=    null)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
382	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getType()!=  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getType()!=  Token.NAME)  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getType()!=  Token.NAME)  {	  if(methodName.getQualifiedName()    ==    null    ||    arg.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
383	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  INVALID_TYPE));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  INVALID_TYPE));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  INVALID_TYPE));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    null));    	non-compiled	[CE]  <identifier>  expected	5	None	replace
384	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  false);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  arg,  methodName,  false);	  NodeTraversal.traverse(compiler,    methodName,    arg,    false);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
385	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_SIGNATURES_ERROR));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_SIGNATURES_ERROR));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_SIGNATURES_ERROR));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    arg));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
386	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_NAME_ERROR));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_NAME_ERROR));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  DEFAULT_NAME_ERROR));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg,    arg));    	non-compiled	[CE]  <identifier>  expected	7	None	replace
387	[BUG]  [BUGGY]  AssertionFailedError.traverse(t,  methodName,  new  AssertionFailedError(methodName,  arg));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.traverse(t,  methodName,  new  AssertionFailedError(methodName,  arg));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	AssertionFailedError.traverse(t,  methodName,  new  AssertionFailedError(methodName,  arg));	  AssertionFailedError.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
388	[BUG]  [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  scope));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  scope));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  scope));	  AssertionFailedError.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
389	[BUG]  [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  false));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  false));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	AssertionFailedError.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  false));	  AssertionFailedError.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
390	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  this);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  this);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg),    null);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
391	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.NAME)  {  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.NAME)  {  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()  ==  Token.NAME)  {  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(!NodeUtil.isImmutableValue(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
392	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isExpressionNode(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()    ==    null)    {    if(!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
393	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.NAME)  {  if(!NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.NAME)  {  if(!NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()  ==  Token.NAME)  {  if(!NodeUtil.isExpressionNode(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()    ==    null)    {    if(!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
394	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().equals( " "))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().equals( " "))  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||  methodName.getQualifiedName().equals( " "))  {	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().equals(arg))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
395	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals( " "))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals( " "))  {  [BUGGY]      compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  ||  methodName.getQualifiedName().equals( " "))  {	  if(methodName.getQualifiedName()    ==    null    ||    methodName.getQualifiedName().equals(arg))    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
396	[BUG]  [BUGGY]  Preconditions.checkState(methodName.getQualifiedName()  ==  null  ||  arg.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(methodName.getQualifiedName()  ==  null  ||  arg.getType()  ==  Token.NAME);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Preconditions.checkState(methodName.getQualifiedName()  ==  null  ||  arg.getType()  ==  Token.NAME);	  Preconditions.checkState(methodName.getQualifiedName()    ==    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
397	[BUG]  [BUGGY]  MethodName  methodName  =  (arg.getQualifiedName()  +  1)/  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  (arg.getQualifiedName()  +  1)/  2;  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  (arg.getQualifiedName()  +  1)/  2;	  MethodName    methodName    =    arg.getQualifiedName()    +    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
398	[BUG]  [BUGGY]  MethodName  methodName  =  (arg.getQualifiedName()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  (arg.getQualifiedName()  +  1);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  (arg.getQualifiedName()  +  1);	  MethodName    methodName    =    arg.getQualifiedName()    +    1;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
399	[BUG]  [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  this));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  this));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	Traversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg,  this));	  Traversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    arg));    	non-compiled	[CE]  <identifier>  expected	19	None	replace
400	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||!methodName.getQualifiedName().equals(arg.getQualifiedName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
401	[BUG]  [BUGGY]  if(!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!methodName.getQualifiedName().equals(arg.getQualifiedName()))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||!methodName.getQualifiedName().equals(arg.getQualifiedName()))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
402	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg),  TOO_MANY_ARGUMENTS_ERROR);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg),  TOO_MANY_ARGUMENTS_ERROR);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg),  TOO_MANY_ARGUMENTS_ERROR);	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    DEFAULT_MESSAGE_ERROR,    arg));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
403	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg,  false));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg,  false));  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  DEFAULT_MESSAGE_ERROR,  arg,  false));	  NodeTraversal.traverse(compiler,    methodName,    new    AssertionFailedError(t,    DEFAULT_MESSAGE_ERROR,    arg));    	non-compiled	[CE]  <identifier>  expected	8	None	replace
404	[BUG]  [BUGGY]  MethodName  methodName  =  arg  ==  null  ||  arg.getQualifiedName()!=  null?  null  :  arg.getQualifiedName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MethodName  methodName  =  arg  ==  null  ||  arg.getQualifiedName()!=  null?  null  :  arg.getQualifiedName();  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	MethodName  methodName  =  arg  ==  null  ||  arg.getQualifiedName()!=  null?  null  :  arg.getQualifiedName();	  MethodName    methodName    =    arg    ==    null?    null    :    arg.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
405	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.NAME)  {  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.NAME)  {  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()  ==  Token.NAME)  {  if(!NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(!NodeUtil.isImmutableValueDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
406	[BUG]  [BUGGY]  if(NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isImmutableValueDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(!NodeUtil.isImmutableValueDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
407	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  null,  this);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  null,  this);  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  null,  this);	  NodeTraversal.traverse(compiler,    methodName,    arg,    null);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
408	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()!=  null  &&  NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null  &&  NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null)    {    if(NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
409	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||!NodeUtil.isFunctionDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
410	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()!=  Token.NAME)  {  if(NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
411	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isFunction(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isFunction(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isFunction(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
412	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getType()!=  Token.NAME)  {  if(!NodeUtil.isImmutableValue(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.NAME)    {    if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
413	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getQualifiedName()  ==  null  ||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null  ||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(methodName.getQualifiedName()!=    null    ||!NodeUtil.isVarDeclaration(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
414	[BUG]  [BUGGY]  if(NodeUtil.isName(methodName)||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isName(methodName)||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isName(methodName)||!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
415	[BUG]  [BUGGY]  if(!NodeUtil.isAssignmentOp(methodName)||!NodeUtil.isFunction(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isAssignmentOp(methodName)||!NodeUtil.isFunction(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isAssignmentOp(methodName)||!NodeUtil.isFunction(methodName))  {  return  false;  }	  if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
416	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)||!NodeUtil.isFunction(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)||!NodeUtil.isFunction(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isAssignmentOp(methodName)||!NodeUtil.isFunction(methodName))  {  return  false;  }	  if(!NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
417	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(methodName)||!NodeUtil.isFunction(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isExpressionNode(methodName)||!NodeUtil.isFunction(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isExpressionNode(methodName)||!NodeUtil.isFunction(methodName))  {  return  false;  }	  if(!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
418	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(methodName)||!NodeUtil.isFunction(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isExpressionNode(methodName)||!NodeUtil.isFunction(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(NodeUtil.isExpressionNode(methodName)||!NodeUtil.isFunction(methodName))  {  return  false;  }	  if(!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
419	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(methodName)||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isExpressionNode(methodName)||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(!NodeUtil.isExpressionNode(methodName)||!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(!NodeUtil.isExpressionNode(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
