bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Node  methodName  =  arg.getFirstChild();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    Node  methodName  =  arg.getFirstChild();  [BUGGY]  if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	    Node  methodName  =  arg.getFirstChild();		non-compiled	[CE]  <identifier>  expected	101	None	add
2	[BUG]  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [BUGGY]  if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	    if(methodName.getQualifiedName()!=  null)  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	101	None	add
3	[BUG]  [BUGGY]    Node  methodName  =  arg.getNext();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    Node  methodName  =  arg.getNext();  [BUGGY]  if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	    Node  methodName  =  arg.getNext();		non-compiled	[CE]  <identifier>  expected	101	None	add
4	[BUG]  [BUGGY]    if(methodName.getQualifiedName()  ==  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    if(methodName.getQualifiedName()  ==  null)  {  return  false;  }  [BUGGY]  if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	    if(methodName.getQualifiedName()  ==  null)  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	101	None	add
5	[BUG]  [BUGGY]    Node  methodName  =  arg.getString();  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    Node  methodName  =  arg.getString();  [BUGGY]  if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	    Node  methodName  =  arg.getString();		non-compiled	[CE]  <identifier>  expected	101	None	add
6	[BUG]  [BUGGY]    Preconditions.checkState(methodName.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]              AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    Preconditions.checkState(methodName.getType()  ==  Token.NAME);  [BUGGY]  if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	    Preconditions.checkState(methodName.getType()  ==  Token.NAME);		non-compiled	[CE]  <identifier>  expected	101	None	add
7	[BUG]  [BUGGY]  if  (methodName.getNext()!=  null)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]  if  (methodName.getNext()!=  null)  {  [BUGGY]  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if  (methodName.getNext()!=  null)  {	if  (arg.getNext()  !=  null)  {  	non-compiled	[CE]  <identifier>  expected	100	None	replace
8	[BUG]  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]  if(methodName.getQualifiedName()!=  null)  {  [BUGGY]  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()!=  null)  {	if  (arg.getNext()  !=  null)  {  	non-compiled	[CE]  <identifier>  expected	100	None	replace
9	[BUG]  [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]  if(methodName.getQualifiedName()  ==  null)  {  [BUGGY]  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	if(methodName.getQualifiedName()  ==  null)  {	if  (arg.getNext()  !=  null)  {  	non-compiled	[CE]  <identifier>  expected	100	None	replace
10	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  methodName,  arg);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    NodeTraversal.traverse(compiler,  methodName,  arg);  [BUGGY]  if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	    NodeTraversal.traverse(compiler,  methodName,  arg);		non-compiled	[CE]  <identifier>  expected	101	None	add
11	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  arg,  new  AssertionFailedError(t,  methodName));  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    NodeTraversal.traverse(compiler,  arg,  new  AssertionFailedError(t,  methodName));  [BUGGY]  if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	    NodeTraversal.traverse(compiler,  arg,  new  AssertionFailedError(t,  methodName));		non-compiled	[CE]  <identifier>  expected	101	None	add
12	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg));  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg));  [BUGGY]  if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	    NodeTraversal.traverse(compiler,  methodName,  new  AssertionFailedError(t,  arg));		non-compiled	[CE]  <identifier>  expected	101	None	add
13	[BUG]  [BUGGY]    MethodName  methodName  =  arg.getQualifiedName();  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    MethodName  methodName  =  arg.getQualifiedName();  [BUGGY]  if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	    MethodName  methodName  =  arg.getQualifiedName();		non-compiled	[CE]  <identifier>  expected	101	None	add
14	[BUG]  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]  if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	    if(methodName.getQualifiedName()!=  null)  {  if(!NodeUtil.isAssignmentOp(methodName))  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	101	None	add
15	[BUG]  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  if(!NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  if(!NodeUtil.isExpressionNode(methodName))  {  return  false;  }  [BUGGY]  if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	    if(methodName.getQualifiedName()!=  null)  {  if(!NodeUtil.isExpressionNode(methodName))  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	101	None	add
16	[BUG]  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  if(!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  if(!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]  if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	    if(methodName.getQualifiedName()!=  null)  {  if(!NodeUtil.isVarDeclaration(methodName))  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	101	None	add
17	[BUG]  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  if(!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]      private  boolean  verifyIsLast(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  if(!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]  if  (arg.getNext()  !=  null)  {  compiler.report(  t.makeError(methodName,  TOO_MANY_ARGUMENTS_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	806	806	1	replace	    if(methodName.getQualifiedName()!=  null)  {  if(!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	101	None	add
