bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(methodName  ==  null)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]  if(methodName  ==  null)  {  [BUGGY]  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	if(methodName  ==  null)  {	if  (arg  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	92	None	replace
2	[BUG]  [BUGGY]  if(methodName!=  null)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]  if(methodName!=  null)  {  [BUGGY]  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	if(methodName!=  null)  {	if  (arg  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	92	None	replace
3	[BUG]  [BUGGY]  if(methodName  ==  null  ||  arg.getQualifiedName()!=  null)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]  if(methodName  ==  null  ||  arg.getQualifiedName()!=  null)  {  [BUGGY]  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	if(methodName  ==  null  ||  arg.getQualifiedName()!=  null)  {	if  (arg  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	92	None	replace
4	[BUG]  [BUGGY]  if(methodName!=  null  ||  arg.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]  if(methodName!=  null  ||  arg.getType()  ==  Token.NAME)  {  [BUGGY]  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	if(methodName!=  null  ||  arg.getType()  ==  Token.NAME)  {	if  (arg  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	92	None	replace
5	[BUG]  [BUGGY]  if(methodName  ==  null  ||  arg.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]  if(methodName  ==  null  ||  arg.getType()  ==  Token.NAME)  {  [BUGGY]  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	if(methodName  ==  null  ||  arg.getType()  ==  Token.NAME)  {	if  (arg  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	92	None	replace
6	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]              AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    [BUGGY]  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	  	if  (arg  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	92	None	replace
7	[BUG]  [BUGGY]    Node  methodName  =  arg.getFirstChild();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    Node  methodName  =  arg.getFirstChild();  [BUGGY]  if  (arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	    Node  methodName  =  arg.getFirstChild();		non-compiled	[CE]  <identifier>  expected	93	None	add
8	[BUG]  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  return  false;  }  [BUGGY]  if  (arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	    if(methodName.getQualifiedName()!=  null)  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	93	None	add
9	[BUG]  [BUGGY]    if(methodName.getQualifiedName()  ==  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    if(methodName.getQualifiedName()  ==  null)  {  return  false;  }  [BUGGY]  if  (arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	    if(methodName.getQualifiedName()  ==  null)  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	93	None	add
10	[BUG]  [BUGGY]    Node  methodName  =  arg.getQualifiedName();  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    Node  methodName  =  arg.getQualifiedName();  [BUGGY]  if  (arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	    Node  methodName  =  arg.getQualifiedName();		non-compiled	[CE]  <identifier>  expected	93	None	add
11	[BUG]  [BUGGY]    String  methodName  =  arg.getQualifiedName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    String  methodName  =  arg.getQualifiedName();  [BUGGY]  if  (arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	    String  methodName  =  arg.getQualifiedName();		non-compiled	[CE]  <identifier>  expected	93	None	add
12	[BUG]  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  for(Node  method  :  methodName.getQualifiedName())  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  for(Node  method  :  methodName.getQualifiedName())  {  return  false;  }  [BUGGY]  if  (arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	    if(methodName.getQualifiedName()!=  null)  {  for(Node  method  :  methodName.getQualifiedName())  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	93	None	add
13	[BUG]  [BUGGY]  if(methodName!=  null  ||  arg.getQualifiedName()!=  null)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]  if(methodName!=  null  ||  arg.getQualifiedName()!=  null)  {  [BUGGY]  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	if(methodName!=  null  ||  arg.getQualifiedName()!=  null)  {	if  (arg  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	92	None	replace
14	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  methodName,  arg);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    NodeTraversal.traverse(compiler,  methodName,  arg);  [BUGGY]  if  (arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	    NodeTraversal.traverse(compiler,  methodName,  arg);		non-compiled	[CE]  <identifier>  expected	93	None	add
15	[BUG]  [BUGGY]    if(methodName!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    if(methodName!=  null)  {  return  false;  }  [BUGGY]  if  (arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	    if(methodName!=  null)  {  return  false;  }		non-compiled	[CE]  <identifier>  expected	93	None	add
16	[BUG]  [BUGGY]  if(methodName  ==  null  ||  arg.getType()!=  Token.NAME)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]  if(methodName  ==  null  ||  arg.getType()!=  Token.NAME)  {  [BUGGY]  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	if(methodName  ==  null  ||  arg.getType()!=  Token.NAME)  {	if  (arg  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	92	None	replace
17	[BUG]  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  if(arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  if(arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [BUGGY]  if  (arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	    if(methodName.getQualifiedName()!=  null)  {  if(arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }		non-compiled	[CE]  <identifier>  expected	93	None	add
18	[BUG]  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  if(arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  true;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  if(arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  true;  }  [BUGGY]  if  (arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	    if(methodName.getQualifiedName()!=  null)  {  if(arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  true;  }		non-compiled	[CE]  <identifier>  expected	93	None	add
19	[BUG]  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  if(arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_OBJECT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      private  boolean  verifyNotNull(NodeTraversal  t,  Node  methodName,  Node  arg)  {  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  if(arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_OBJECT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [BUGGY]  if  (arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	779	779	1	replace	    if(methodName.getQualifiedName()!=  null)  {  if(arg  ==  null)  {  compiler.report(  t.makeError(methodName,  NULL_OBJECT_ERROR,  methodName.getQualifiedName()));  return  false;  }		non-compiled	[CE]  <identifier>  expected	93	None	add
