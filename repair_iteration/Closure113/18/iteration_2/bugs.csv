bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getLastChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getLastChild();  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getLastChild();	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getNext();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getNext();  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getNext();	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessor();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessor();  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessor();	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
4	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getFirstChild();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getFirstChild();  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getFirstChild();	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ");  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  UnsupportedOperationException( " ");	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
6	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
7	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString());  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString());	      PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
8	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  0);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  0);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
9	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild());  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild());	      PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
10	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getString());  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getString());	      PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
11	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getString());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getString());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
12	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getName());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getName());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
13	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getLineno());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getLineno());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getLineno());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
14	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.getString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.getString());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.getString());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
15	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString());  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString());	      PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
16	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getString());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getString());  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getString());	      PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
17	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  0);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  0);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
18	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
19	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getNext();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getNext();  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getNext();	      PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getParent();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
20	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getLastChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getLastChild();  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getLastChild();	      PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getParent();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
21	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  preprocessorSymbolTable.getPreprocessorSymbolTable();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  compiler  =  preprocessorSymbolTable.getPreprocessorSymbolTable();  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  preprocessorSymbolTable.getPreprocessorSymbolTable();	      PreprocessorSymbolTable    compiler    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
22	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable();  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable();	      PreprocessorSymbolTable    compiler    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
23	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable();  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable();	      PreprocessorSymbolTable    compiler    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
24	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();	      PreprocessorSymbolTable    compiler    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
25	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
26	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( " ".getMessage());	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
27	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getString());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getString());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getString());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
28	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getLineno());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getLineno());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getLineno());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
29	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getName());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getName());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
30	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.getString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.getString());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.getString());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
31	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getSourceName());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getSourceName());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getSourceName());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
32	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
33	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getLineno());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getLineno());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getLineno());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
34	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getName());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getName());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
35	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getString());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getString());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
36	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
37	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
38	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getParent();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getParent();  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getParent();	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
39	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
40	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(n.getString()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(n.getString()));  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(n.getString()));	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
41	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  Throwables.throw  new  IllegalStateException( " ".getMessage());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " ".getMessage());	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
42	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneTree();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneTree();  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneTree();	      PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
43	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  syntheticRef);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  syntheticRef);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  syntheticRef);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
44	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  null);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
45	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  compiler);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  compiler);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  compiler);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
46	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  null);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  null);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
47	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  null  :  n.getPreprocessorSymbolTable();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  null  :  n.getPreprocessorSymbolTable();  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  null  :  n.getPreprocessorSymbolTable();	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
48	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
49	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  compiler);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  compiler);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  compiler);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
50	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  factory);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  factory);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  factory);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
51	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  true);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  true);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  true);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
52	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
53	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(n.getString()));  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  IllegalArgumentException( " ".equals(n.getString()));  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  IllegalArgumentException( " ".equals(n.getString()));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
54	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getName()));  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getName()));  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getName()));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
55	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  n.getPreprocessorSymbolTable(this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  compiler  =  n.getPreprocessorSymbolTable(this);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  n.getPreprocessorSymbolTable(this);	      PreprocessorSymbolTable    compiler    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
56	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getSourceName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getSourceName());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getSourceName());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
57	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getObject();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getObject();  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getObject();	      PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.clone();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
58	[BUG]  [BUGGY]  new  UnsupportedOperationException( " ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  new  UnsupportedOperationException( " ");  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  UnsupportedOperationException( " ");	  throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
59	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneTree());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneTree());  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneTree());	      PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
60	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  compiler);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  compiler);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  compiler);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
61	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  this);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  this);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
62	[BUG]  [BUGGY]  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
63	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.toString());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.toString());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.toString());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
64	[BUG]  [BUGGY]  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  new  IllegalStateException( " ");  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
65	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  Throwable  cause  =  new  IllegalStateException( " ");  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
66	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);	      PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getParent();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
67	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getCharno());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getCharno());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getCharno());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
68	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  _config);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  _config);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  _config);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
69	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
70	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  compiler  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));	      PreprocessorSymbolTable    compiler    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
71	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
72	[BUG]  [BUGGY]  Throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  Throw  new  IllegalStateException( " ");  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
73	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getSource();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getSource();  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getSource();	      PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
74	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getKey());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getKey());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getKey());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
75	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineNumber());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineNumber());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineNumber());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
76	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  raw);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  raw);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  raw);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
77	[BUG]  [BUGGY]  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  new  IllegalArgumentException( " ");  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
78	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.getString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.getString());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.getString());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
79	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.toString());  [BUGGY]    }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.toString());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
80	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.clone());  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.clone());  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.clone());	      PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.clone();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
81	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  _config);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  _config);  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  _config);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
