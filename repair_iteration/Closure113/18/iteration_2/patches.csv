bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getLineno());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getLineno());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getLineno());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
2	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getSourceName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getSourceName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getSourceName());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
3	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unknown  symbol  table: "  +  n.getLineno());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException( "Unknown  symbol  table: "  +  n.getLineno());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  IllegalArgumentException( "Unknown  symbol  table: "  +  n.getLineno());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
4	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(false);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(false);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(true);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
5	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  false);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  false);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  false);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(true);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
6	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(false,  false);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(false,  false);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(false,  false);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(true);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
7	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(false,  true);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(false,  true);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(false,  true);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(true);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
8	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =(preprocessorSymbolTable!=  null)?  null  :  preprocessorSymbolTable.getPreprocessorSymbolTable();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =(preprocessorSymbolTable!=  null)?  null  :  preprocessorSymbolTable.getPreprocessorSymbolTable();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =(preprocessorSymbolTable!=  null)?  null  :  preprocessorSymbolTable.getPreprocessorSymbolTable();	  PreprocessorSymbolTable    compiler    =    preprocessorSymbolTable.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
9	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineNumber());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineNumber());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineNumber());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineNumber());    	non-compiled	[CE]  <identifier>  expected	75	None	replace
10	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLocalName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLocalName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLocalName());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineNumber());    	non-compiled	[CE]  <identifier>  expected	75	None	replace
11	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  null);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  null);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    this);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
12	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this,  compiler);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this,  compiler);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this,  compiler);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    this);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
13	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  false);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  false);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  false);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    this);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
14	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable(n);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable(n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable(n);	  PreprocessorSymbolTable    compiler    =    this.preprocessorSymbolTable.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
15	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getParent();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getParent();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getParent();	  PreprocessorSymbolTable    compiler    =    this.preprocessorSymbolTable.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
16	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getImplicitPrototype();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getImplicitPrototype();	  PreprocessorSymbolTable    compiler    =    this.preprocessorSymbolTable.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
17	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.clone();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.clone();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.clone();	  PreprocessorSymbolTable    compiler    =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
18	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.getParent();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.getParent();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.getParent();	  PreprocessorSymbolTable    compiler    =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
19	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.getImplicitPrototype();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.getImplicitPrototype();	  PreprocessorSymbolTable    compiler    =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
20	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.getObject();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.getObject();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.getObject();	  PreprocessorSymbolTable    compiler    =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
21	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getFirstChild());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getFirstChild());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getFirstChild());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    new    PreprocessorSymbolTable(n.clone());    	non-compiled	[CE]  <identifier>  expected	80	None	replace
22	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getString());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getString());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    new    PreprocessorSymbolTable(n.clone());    	non-compiled	[CE]  <identifier>  expected	80	None	replace
23	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getParent());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getParent());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getParent());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    new    PreprocessorSymbolTable(n.clone());    	non-compiled	[CE]  <identifier>  expected	80	None	replace
24	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n,  n.clone());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n,  n.clone());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n,  n.clone());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    new    PreprocessorSymbolTable(n.clone());    	non-compiled	[CE]  <identifier>  expected	80	None	replace
25	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getType());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getType());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getType());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    new    PreprocessorSymbolTable(n.clone());    	non-compiled	[CE]  <identifier>  expected	80	None	replace
26	[BUG]  [BUGGY]  Throw  new  IllegalStateException( " ".equals(n.getString()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throw  new  IllegalStateException( " ".equals(n.getString()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throw  new  IllegalStateException( " ".equals(n.getString()));	  Throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
27	[BUG]  [BUGGY]  Throw  new  IllegalStateException( " ".equalsIgnoreCase(n.getString()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throw  new  IllegalStateException( " ".equalsIgnoreCase(n.getString()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throw  new  IllegalStateException( " ".equalsIgnoreCase(n.getString()));	  Throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
28	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.getQualifiedName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.getQualifiedName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.getQualifiedName());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    name.getString());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
29	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.getString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.getString());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    name.getString());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
30	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.toString());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.toString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.toString());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    name.getString());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
31	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.getLineno());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.getLineno());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.getLineno());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    name.getString());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
32	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.getName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.getName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.getName());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    preprocessorSymbolTable.getString());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
33	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.getString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.getString());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    preprocessorSymbolTable.getString());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
34	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  factorySymbolTable.getString());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  factorySymbolTable.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  factorySymbolTable.getString());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    preprocessorSymbolTable.getString());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
35	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  parent);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
36	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  null);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  node,  null);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
37	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  compiler,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  compiler,  null);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  compiler,  null);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
38	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  rawConvention);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  rawConvention);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  rawConvention);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
39	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  raw,  syntheticRef);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  raw,  syntheticRef);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  raw,  syntheticRef);	  NodeTraversal.traverse(compiler,    n,    this,    raw);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
40	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  raw,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  raw,  null);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  raw,  null);	  NodeTraversal.traverse(compiler,    n,    this,    raw);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
41	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  raw,  parent);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  raw,  parent);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  raw,  parent);	  NodeTraversal.traverse(compiler,    n,    this,    raw);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
42	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  raw,  this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  raw,  this);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  raw,  this);	  NodeTraversal.traverse(compiler,    n,    this,    raw);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
43	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  n);	  NodeTraversal.traverse(compiler,    n,    this,    compiler);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
44	[BUG]  [BUGGY]  new  IllegalArgumentException( " "));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  IllegalArgumentException( " "));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalArgumentException( " "));	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	77	None	replace
45	[BUG]  [BUGGY]  new  IllegalArgumentException( "Expected  a  string  node: "  +  n.getString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  IllegalArgumentException( "Expected  a  string  node: "  +  n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalArgumentException( "Expected  a  string  node: "  +  n.getString());	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	77	None	replace
46	[BUG]  [BUGGY]  new  IllegalArgumentException( "Expected  a  string  node  to  add: "  +  n.getString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  IllegalArgumentException( "Expected  a  string  node  to  add: "  +  n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalArgumentException( "Expected  a  string  node  to  add: "  +  n.getString());	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	77	None	replace
47	[BUG]  [BUGGY]  new  IllegalArgumentException( "SymbolTable  not  found: "  +  n.getString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  IllegalArgumentException( "SymbolTable  not  found: "  +  n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalArgumentException( "SymbolTable  not  found: "  +  n.getString());	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	77	None	replace
48	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  this._config);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  this._config);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  this._config);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    _config);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
49	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  _config,  _factory);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  _config,  _factory);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  _config,  _factory);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    _config);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
50	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(_config,  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(_config,  n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(_config,  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    _config);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
51	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  _config,  _sourceName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  _config,  _sourceName);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  _config,  _sourceName);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    _config);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
52	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n.getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n.getMessage());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  n.getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
53	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").printStackTrace();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").printStackTrace();  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( " ").printStackTrace();	  Throwables.throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
54	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PreprocessorSymbolTable  not  found: "  +  n.getMessage());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "PreprocessorSymbolTable  not  found: "  +  n.getMessage());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( "PreprocessorSymbolTable  not  found: "  +  n.getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
55	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getName());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.getName());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
56	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getQualifiedName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getQualifiedName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getQualifiedName());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.getName());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
57	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " "));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
58	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getLastChild());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getLastChild());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getLastChild());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
59	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n.getLastChild());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n.getLastChild());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n.getLastChild());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
60	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n.getString());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n.getString());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n.getString());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
61	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
62	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  true);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  true);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    true);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
63	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  false);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  false);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    true);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
64	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getLineno());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getLineno());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getLineno());	  throw    new    IllegalArgumentException(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
65	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getSourceName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getSourceName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getSourceName());	  throw    new    IllegalArgumentException(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
66	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getString());	  throw    new    IllegalArgumentException(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
67	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getLineno()  + "  does  not  exist. ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getLineno()  + "  does  not  exist. ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getLineno()  + "  does  not  exist. ");	  throw    new    IllegalArgumentException(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
68	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getQualifiedName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getQualifiedName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getQualifiedName());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getName());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
69	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(factory,  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(factory,  n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(factory,  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    factory);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
70	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  factory,  compiler);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  factory,  compiler);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  factory,  compiler);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    factory);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
71	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  factory,  parent);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  factory,  parent);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  factory,  parent);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    factory);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
72	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  factory,  true);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  factory,  true);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  factory,  true);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    factory);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
73	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getSourceName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getSourceName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getSourceName());	  Throwables.throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
74	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getName());	  Throwables.throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
75	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLocalName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLocalName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLocalName());	  Throwables.throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
76	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  null,  syntheticRef);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  null,  syntheticRef);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  null,  syntheticRef);	  NodeTraversal.traverse(compiler,    n,    this,    null);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
77	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  parent);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  parent);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  parent);	  NodeTraversal.traverse(compiler,    n,    this,    null);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
78	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  syntheticRef,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  syntheticRef,  null);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  syntheticRef,  null);	  NodeTraversal.traverse(compiler,    n,    this,    null);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
79	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  1);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  1);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
80	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  0L);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  0L);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  0L);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
81	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  2);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  2);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
82	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  3);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  3);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  3);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
83	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(n);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(n);	  PreprocessorSymbolTable    compiler    =    factory.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
84	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.createPreprocessorSymbolTable(n);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.createPreprocessorSymbolTable(n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  factory.createPreprocessorSymbolTable(n);	  PreprocessorSymbolTable    compiler    =    factory.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
85	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.getDefaultPreprocessorSymbolTable();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.getDefaultPreprocessorSymbolTable();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  factory.getDefaultPreprocessorSymbolTable();	  PreprocessorSymbolTable    compiler    =    factory.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
86	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n  ==  null)?  null  :  n.getPreprocessorSymbolTable();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n  ==  null)?  null  :  n.getPreprocessorSymbolTable();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(n  ==  null)?  null  :  n.getPreprocessorSymbolTable();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(preprocessorSymbolTable!=    null)?    null    :    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
87	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable  ==  null)?  null  :  n.getPreprocessorSymbolTable();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable  ==  null)?  null  :  n.getPreprocessorSymbolTable();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable  ==  null)?  null  :  n.getPreprocessorSymbolTable();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(preprocessorSymbolTable!=    null)?    null    :    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
88	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n!=  null)?  null  :  n.getPreprocessorSymbolTable();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n!=  null)?  null  :  n.getPreprocessorSymbolTable();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(n!=  null)?  null  :  n.getPreprocessorSymbolTable();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(preprocessorSymbolTable!=    null)?    null    :    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
89	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(n.getString()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(n.getString()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(n.getString()));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
90	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equalsIgnoreCase(n.getString()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equalsIgnoreCase(n.getString()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equalsIgnoreCase(n.getString()));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
91	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(preprocessorSymbolTable.getName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(preprocessorSymbolTable.getName()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(preprocessorSymbolTable.getName()));	  throw    new    IllegalArgumentException(   "   ".equals(preprocessorSymbolTable.getName()));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
92	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(preprocessorSymbolTable.getName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(preprocessorSymbolTable.getName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  IllegalArgumentException( " ").equals(preprocessorSymbolTable.getName());	  throw    new    IllegalArgumentException(   "   ".equals(preprocessorSymbolTable.getName()));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
93	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(preprocessorSymbolTable.getName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(preprocessorSymbolTable.getName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(preprocessorSymbolTable.getName());	  throw    new    IllegalArgumentException(   "   ".equals(preprocessorSymbolTable.getName()));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
94	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  _config.createPreprocessorSymbolTable(n,  _preprocessor);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  _config.createPreprocessorSymbolTable(n,  _preprocessor);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  _config.createPreprocessorSymbolTable(n,  _preprocessor);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    _config);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
95	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  _config,  _factory);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  _config,  _factory);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  _config,  _factory);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    _config);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
96	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  _config,  _sourceName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  _config,  _sourceName);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  _config,  _sourceName);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    _config);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
97	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this._config);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this._config);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this._config);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    _config);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
98	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getSourceName(),  n.getCharno());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getSourceName(),  n.getCharno());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getSourceName(),  n.getCharno());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno(),    n.getCharno());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
99	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getCharno());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getCharno());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getCharno());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno(),    n.getCharno());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
100	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getSourceName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getSourceName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getSourceName());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno(),    n.getCharno());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
101	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getCharno(),  syntheticRef);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getCharno(),  syntheticRef);  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getCharno(),  syntheticRef);	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno(),    n.getCharno());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
102	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getPreprocessor();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getPreprocessor();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getPreprocessor();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessor();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
103	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  node.getPreprocessor();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  node.getPreprocessor();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  node.getPreprocessor();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessor();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
104	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getLineno());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getLineno());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getLineno());	  Throwables.throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
105	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getSourceName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getSourceName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getSourceName());	  Throwables.throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
106	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getQualifiedName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getQualifiedName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getQualifiedName());	  Throwables.throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	11	None	replace
107	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  null  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  null  :  n.getLastChild();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  null  :  n.getLastChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
108	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()!=  null)?  null  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()!=  null)?  null  :  n.getLastChild();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()!=  null)?  null  :  n.getLastChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
109	[BUG]  [BUGGY]  new  UnsupportedOperationException( " "));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  UnsupportedOperationException( " "));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  UnsupportedOperationException( " "));	  new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
110	[BUG]  [BUGGY]  new  UnsupportedOperationException( "PreprocessorSymbolTable  not  supported. ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  UnsupportedOperationException( "PreprocessorSymbolTable  not  supported. ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  UnsupportedOperationException( "PreprocessorSymbolTable  not  supported. ");	  new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
111	[BUG]  [BUGGY]  new  UnsupportedOperationException( "PreprocessorSymbolTable  is  not  supported. ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  UnsupportedOperationException( "PreprocessorSymbolTable  is  not  supported. ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  UnsupportedOperationException( "PreprocessorSymbolTable  is  not  supported. ");	  new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
112	[BUG]  [BUGGY]  new  UnsupportedOperationException( "PreprocessorSymbolTable  is  null. ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  UnsupportedOperationException( "PreprocessorSymbolTable  is  null. ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  UnsupportedOperationException( "PreprocessorSymbolTable  is  null. ");	  new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
113	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.clonePath();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.clonePath();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.clonePath();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.cloneTree();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
114	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  preprocessorSymbolTable.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  preprocessorSymbolTable.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  preprocessorSymbolTable.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));	  PreprocessorSymbolTable    compiler    =    n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
115	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()  +  1));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()  +  1));  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()  +  1));	  PreprocessorSymbolTable    compiler    =    n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
116	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  node.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  node.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  node.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));	  PreprocessorSymbolTable    compiler    =    n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
117	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));	  PreprocessorSymbolTable    compiler    =    n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
118	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
119	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getModule());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getModule());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getModule());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
120	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getSourceName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getSourceName());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getSourceName());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
121	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getJSDocInfo());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getJSDocInfo());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getJSDocInfo());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
122	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getMessage());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getMessage());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " "  +  n.getMessage());	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
123	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").printStackTrace();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").printStackTrace();  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " ").printStackTrace();	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
124	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "PreprocessorSymbolTable  not  found: "  +  n.getMessage());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "PreprocessorSymbolTable  not  found: "  +  n.getMessage());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( "PreprocessorSymbolTable  not  found: "  +  n.getMessage());	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
125	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  getMessage());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  getMessage());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " "  +  getMessage());	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
126	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  preprocessorSymbolTable.getPreprocessorSymbolTable(this);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  preprocessorSymbolTable.getPreprocessorSymbolTable(this);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  preprocessorSymbolTable.getPreprocessorSymbolTable(this);	  PreprocessorSymbolTable    compiler    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
127	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(this);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(this);	  PreprocessorSymbolTable    compiler    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
128	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.toString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.toString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.toString());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.toString());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
129	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getFirstChild());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getFirstChild());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getFirstChild());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    n.getString());    	non-compiled	[CE]  <identifier>  expected	16	None	replace
130	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getString(),  n.getModule());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getString(),  n.getModule());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getString(),  n.getModule());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    n.getString());    	non-compiled	[CE]  <identifier>  expected	16	None	replace
131	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getString(),  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getString(),  null);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getString(),  null);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    n.getString());    	non-compiled	[CE]  <identifier>  expected	16	None	replace
132	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()  +  1));  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()  +  1));	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
133	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  node.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  node.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  node.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
134	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  parent.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  parent.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  parent.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
135	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  NodeUtil.getPreprocessorSymbolTable(n.getString());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  NodeUtil.getPreprocessorSymbolTable(n.getString());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  NodeUtil.getPreprocessorSymbolTable(n.getString());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
136	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getFirstChild());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getFirstChild());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getFirstChild());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    n.getString());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
137	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getString(),  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getString(),  0);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getString(),  0);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    n.getString());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
138	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getString(),  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getString(),  null);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getString(),  null);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    n.getString());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
139	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getLastChild());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getLastChild());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getLastChild());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    n.getString());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
140	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  null);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  null);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    this);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
141	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  this.cloneTree());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  this.cloneTree());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  this.cloneTree());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    this);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
142	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  this.sourceName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  this.sourceName);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  this.sourceName);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    this);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
143	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.toString());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.toString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.toString());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    n.toString());    	non-compiled	[CE]  <identifier>  expected	63	None	replace
144	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.toString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.toString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.toString());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    n.toString());    	non-compiled	[CE]  <identifier>  expected	63	None	replace
145	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  0);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  0);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
146	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  n);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
147	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n.getString());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n.getString());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n.getString());	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
148	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  Object.class);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  Object.class);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  Object.class);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
149	[BUG]  [BUGGY]  new  IllegalStateException( " "));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  IllegalStateException( " "));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalStateException( " "));	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	64	None	replace
150	[BUG]  [BUGGY]  new  IllegalStateException( "PreprocessorSymbolTable  not  found: "  +  n.getString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  IllegalStateException( "PreprocessorSymbolTable  not  found: "  +  n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalStateException( "PreprocessorSymbolTable  not  found: "  +  n.getString());	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	64	None	replace
151	[BUG]  [BUGGY]  new  IllegalStateException( "PreprocessorSymbolTable  does  not  exist: "  +  n.getString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  IllegalStateException( "PreprocessorSymbolTable  does  not  exist: "  +  n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalStateException( "PreprocessorSymbolTable  does  not  exist: "  +  n.getString());	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	64	None	replace
152	[BUG]  [BUGGY]  new  IllegalStateException( "PreprocessorSymbolTable  is  null. ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  IllegalStateException( "PreprocessorSymbolTable  is  null. ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalStateException( "PreprocessorSymbolTable  is  null. ");	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	64	None	replace
153	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalStateException( " "));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwable  cause  =  new  IllegalStateException( " "));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalStateException( " "));	  Throwable    cause    =    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	65	None	replace
154	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalStateException( "PreprocessorSymbolTable  is  null. ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwable  cause  =  new  IllegalStateException( "PreprocessorSymbolTable  is  null. ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalStateException( "PreprocessorSymbolTable  is  null. ");	  Throwable    cause    =    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	65	None	replace
155	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalStateException( "PreprocessorSymbolTable  cannot  be  null. ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwable  cause  =  new  IllegalStateException( "PreprocessorSymbolTable  cannot  be  null. ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalStateException( "PreprocessorSymbolTable  cannot  be  null. ");	  Throwable    cause    =    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	65	None	replace
156	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalStateException( "PreprocessorSymbolTable  does  not  exist: ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwable  cause  =  new  IllegalStateException( "PreprocessorSymbolTable  does  not  exist: ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalStateException( "PreprocessorSymbolTable  does  not  exist: ");	  Throwable    cause    =    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	65	None	replace
157	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneTree(),  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneTree(),  n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneTree(),  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.cloneTree());    	non-compiled	[CE]  <identifier>  expected	59	None	replace
158	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.cloneTree());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.cloneTree());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.cloneTree());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.cloneTree());    	non-compiled	[CE]  <identifier>  expected	59	None	replace
159	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable(n);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable(n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable(n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
160	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  n);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
161	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  0);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  0);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
162	[BUG]  [BUGGY]  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getSourceName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getSourceName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  AssertionFailedError( "Unexpected  source  name: "  +  n.getSourceName());	  new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	62	None	replace
163	[BUG]  [BUGGY]  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  AssertionFailedError( "Unexpected  source  name: "  +  n.getString());	  new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	62	None	replace
164	[BUG]  [BUGGY]  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  AssertionFailedError( "Unexpected  source  name: "  +  n.getName());	  new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	62	None	replace
165	[BUG]  [BUGGY]  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLocalName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLocalName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLocalName());	  new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	62	None	replace
166	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  UnsupportedOperationException( " "));	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
167	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ",  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ",  n);  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  UnsupportedOperationException( " ",  n);	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
168	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  compiler.getCodingConvention());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  compiler.getCodingConvention());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  compiler.getCodingConvention());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    compiler);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
169	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(compiler,  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(compiler,  n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(compiler,  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    compiler);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
170	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  compiler.getName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  compiler.getName());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  compiler.getName());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    compiler);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
171	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getKey());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getKey());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getKey());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    n.getKey());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
172	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " "));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " "));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalArgumentException( " "));	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
173	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( "PreprocessorSymbolTable  cannot  be  null. ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( "PreprocessorSymbolTable  cannot  be  null. ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalArgumentException( "PreprocessorSymbolTable  cannot  be  null. ");	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
174	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( "PreprocessorSymbolTable  is  null. ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( "PreprocessorSymbolTable  is  null. ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalArgumentException( "PreprocessorSymbolTable  is  null. ");	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
175	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " "  +  n.getString());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
176	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " ").equals(n.getString());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
177	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getString()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getString()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " ").equals(n.getString()));	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
178	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getString());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  IllegalArgumentException( " "  +  n.getString());	  throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
179	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(n.getString());	  throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
180	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  compiler.getCodingConvention());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  compiler.getCodingConvention());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  compiler.getCodingConvention());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    compiler);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
181	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    compiler);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
182	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  this.compiler);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  this.compiler);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  this.compiler);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    compiler);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
183	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  compiler.getConvention());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  compiler.getConvention());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  compiler.getConvention());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    compiler);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
184	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getNode();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getNode();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getNode();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
185	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  n.getModule());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  n.getModule());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  n.getModule());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
186	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
187	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  n.getSourceName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  n.getSourceName());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  n.getSourceName());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
188	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  n.getJSDocInfo());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  n.getJSDocInfo());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  n.getJSDocInfo());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
189	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  1);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  1);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
190	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  0L);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  0L);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  0L);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
191	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  2);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  2);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
192	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  syntheticRef,  compiler);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  syntheticRef,  compiler);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  syntheticRef,  compiler);	  NodeTraversal.traverse(compiler,    n,    this,    syntheticRef);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
193	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  syntheticRef,  preprocessorSymbolTable);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  syntheticRef,  preprocessorSymbolTable);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  syntheticRef,  preprocessorSymbolTable);	  NodeTraversal.traverse(compiler,    n,    this,    syntheticRef);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
194	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  syntheticRef,  parent);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  syntheticRef,  parent);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  syntheticRef,  parent);	  NodeTraversal.traverse(compiler,    n,    this,    syntheticRef);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
195	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  syntheticRef,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  syntheticRef,  false);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  syntheticRef,  false);	  NodeTraversal.traverse(compiler,    n,    this,    syntheticRef);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
196	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getName());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    n.getName());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
197	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getLocalName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getLocalName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getLocalName());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    n.getName());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
198	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.getQualifiedName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.getQualifiedName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.getQualifiedName());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    name.getString());    	non-compiled	[CE]  <identifier>  expected	30	None	replace
199	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.getLineno());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.getLineno());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.getLineno());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    name.getString());    	non-compiled	[CE]  <identifier>  expected	30	None	replace
200	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.getString());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.getString());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    name.getString());    	non-compiled	[CE]  <identifier>  expected	30	None	replace
201	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.getSourceName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.getSourceName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  name.getSourceName());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.getSourceName());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
202	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n,  0);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n,  0);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
203	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.cloneTree());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.cloneTree());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.cloneTree());	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
204	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.getString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.getString());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.getString());	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
205	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n  +  1);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n  +  1);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
206	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getSourceName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getSourceName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getSourceName());	  Throwables.throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    n.getString());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
207	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n.getString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n.getString());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n.getString());	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
208	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP  +  1);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP  +  1);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
209	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
210	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n.getModule());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n.getModule());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n.getModule());	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
211	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  _config.getParent());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  _config.getParent());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  _config.getParent());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    _config);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
212	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getFirstChild(),  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getFirstChild(),  true);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getFirstChild(),  true);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    true);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
213	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  compiler.getPreprocessorSymbolTable(this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  compiler.getPreprocessorSymbolTable(this);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  compiler.getPreprocessorSymbolTable(this);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
214	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getString(),  true);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getString(),  true);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getString(),  true);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    n.getString());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
215	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  -1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  -1);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  -1);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
216	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.getNode();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.getNode();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =(PreprocessorSymbolTable)n.getNode();	  PreprocessorSymbolTable    compiler    =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
217	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this.compiler);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this.compiler);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this.compiler);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    compiler);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
218	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  compiler.getConvention());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  compiler.getConvention());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  compiler.getConvention());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    compiler);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
219	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "+preprocessorSymbolTable.getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "+preprocessorSymbolTable.getMessage());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( " "+preprocessorSymbolTable.getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
220	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  getMessage());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  getMessage());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
221	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getParent());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getParent());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getParent());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.cloneTree());    	non-compiled	[CE]  <identifier>  expected	59	None	replace
222	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getString(),  true);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getString(),  true);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getString(),  true);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    n.getString());    	non-compiled	[CE]  <identifier>  expected	16	None	replace
223	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getLastChild());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getLastChild());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getLastChild());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    n.getString());    	non-compiled	[CE]  <identifier>  expected	16	None	replace
224	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(n.getString());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  IllegalArgumentException( " ").equals(n.getString());	  throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
225	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  Boolean.TRUE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  Boolean.TRUE);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  Boolean.TRUE);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    this);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
226	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getNext());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getNext());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getNext());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
227	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  compiler.getNameNode());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  compiler.getNameNode());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  compiler.getNameNode());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    compiler);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
228	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  rawConvention);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  rawConvention);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  rawConvention);	  NodeTraversal.traverse(compiler,    n,    this,    compiler);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
229	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  factory.getParent());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  factory.getParent());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  factory.getParent());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    factory);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
230	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorParent();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorParent();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorParent();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getParent();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
231	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n,  this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n,  this);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n,  this);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
232	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneNode();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneNode();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneNode();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.cloneTree();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
233	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneChildren();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneChildren();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneChildren();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.cloneTree();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
234	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equals(n.getString()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  IllegalArgumentException( " ".equals(n.getString()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalArgumentException( " ".equals(n.getString()));	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	77	None	replace
235	[BUG]  [BUGGY]  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getName()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getName()));	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	77	None	replace
236	[BUG]  [BUGGY]  new  IllegalArgumentException( " "  +  n.getLineno());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  IllegalArgumentException( " "  +  n.getLineno());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalArgumentException( " "  +  n.getLineno());	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	77	None	replace
237	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "+preprocessorSymbolTable.getMessage());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "+preprocessorSymbolTable.getMessage());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " "+preprocessorSymbolTable.getMessage());	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
238	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getLineno());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getLineno());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getLineno());	  throw    new    IllegalArgumentException(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
239	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ").printStackTrace();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ").printStackTrace();  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  UnsupportedOperationException( " ").printStackTrace();	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
240	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( ", ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( ", ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  UnsupportedOperationException( ", ");	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
241	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.toString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.toString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.toString());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.toString());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
242	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.removeFirstChild();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.removeFirstChild();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.removeFirstChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
243	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalStateException( "preprocessorSymbolTable.cannotAddStringNode() ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwable  cause  =  new  IllegalStateException( "preprocessorSymbolTable.cannotAddStringNode() ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalStateException( "preprocessorSymbolTable.cannotAddStringNode() ");	  Throwable    cause    =    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	65	None	replace
244	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.getSourceName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.getSourceName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.getSourceName());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.getSourceName());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
245	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getLineNumber());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getLineNumber());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getLineNumber());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.getSourceName());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
246	[BUG]  [BUGGY]  new  UnsupportedOperationException( " "  +  compiler.getCodingConvention());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  UnsupportedOperationException( " "  +  compiler.getCodingConvention());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  UnsupportedOperationException( " "  +  compiler.getCodingConvention());	  new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
247	[BUG]  [BUGGY]  new  UnsupportedOperationException( "] ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  UnsupportedOperationException( "] ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  UnsupportedOperationException( "] ");	  new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
248	[BUG]  [BUGGY]  new  UnsupportedOperationException( " ")  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  UnsupportedOperationException( " ")  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  UnsupportedOperationException( " ")	  new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
249	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  compiler);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  compiler);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  compiler);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
250	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  this);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  this);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
251	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  factory);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  factory);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n,  factory);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)createPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
252	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getName()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getName()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getName()));	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
253	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ".equals(n.getString()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ".equals(n.getString()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalArgumentException( " ".equals(n.getString()));	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
254	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getParent()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getParent()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getParent()));	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
255	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getType()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getType()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getType()));	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
256	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  null);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  null);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(true);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
257	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getString(),  n.getCharno());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getString(),  n.getCharno());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getString(),  n.getCharno());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno(),    n.getCharno());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
258	[BUG]  [BUGGY]  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getCharno());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getCharno());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getCharno());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno(),    n.getCharno());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
259	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.toString());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.toString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.toString());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getSourceName());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
260	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP  -  1);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP  -  1);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
261	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)preprocessorSymbolTable.getProp(Node.SOURCENAME_PROP);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)preprocessorSymbolTable.getProp(Node.SOURCENAME_PROP);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)preprocessorSymbolTable.getProp(Node.SOURCENAME_PROP);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
262	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(n.getString()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(n.getString()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(n.getString()));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
263	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(preprocessorSymbolTable.getName()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(preprocessorSymbolTable.getName()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(preprocessorSymbolTable.getName()));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
264	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getName()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getName()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getName()));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
265	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  parent.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  parent.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  parent.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));	  PreprocessorSymbolTable    compiler    =    n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
266	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this.preprocessor);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this.preprocessor);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this.preprocessor);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    this);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
267	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this,  null);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  this,  null);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    this);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
268	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(_config,  n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(_config,  n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(_config,  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    _config);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
269	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImplicitPrototype();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImplicitPrototype();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessor();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
270	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getNode();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getNode();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getNode();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessor();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
271	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  compiler.getPreprocessor();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  compiler.getPreprocessor();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  compiler.getPreprocessor();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessor();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
272	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  null  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  null  :  n.getLastChild();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  null  :  n.getLastChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
273	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable  instanceof  PreprocessorSymbolTable)?(PreprocessorSymbolTable)preprocessorSymbolTable  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable  instanceof  PreprocessorSymbolTable)?(PreprocessorSymbolTable)preprocessorSymbolTable  :  n.getLastChild();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable  instanceof  PreprocessorSymbolTable)?(PreprocessorSymbolTable)preprocessorSymbolTable  :  n.getLastChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
274	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  n.getFirstChild()  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  n.getFirstChild()  :  n.getLastChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
275	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.toString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.toString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.toString());	  Throwables.throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
276	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getImplicitPrototype();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getImplicitPrototype();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getImplicitPrototype();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
277	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  preprocessorSymbolTable,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  preprocessorSymbolTable,  null);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  preprocessorSymbolTable,  null);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
278	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  preprocessorSymbolTable);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  preprocessorSymbolTable);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  preprocessorSymbolTable);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
279	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  rawSource);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  rawSource);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  rawSource);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
280	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  preprocessorSymbolTable.getName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  preprocessorSymbolTable.getName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  IllegalArgumentException( " "  +  preprocessorSymbolTable.getName());	  throw    new    IllegalArgumentException(   "   ".equals(preprocessorSymbolTable.getName()));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
281	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  patternSymbolTable.getName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  patternSymbolTable.getName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  IllegalArgumentException( " "  +  patternSymbolTable.getName());	  throw    new    IllegalArgumentException(   "   ".equals(preprocessorSymbolTable.getName()));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
282	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getName()),  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getName()),  n);  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getName()),  n);	  throw    new    IllegalArgumentException(   "   ".equals(preprocessorSymbolTable.getName()));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
283	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getString()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getString()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  IllegalArgumentException( " ".equals(preprocessorSymbolTable.getString()));	  throw    new    IllegalArgumentException(   "   ".equals(preprocessorSymbolTable.getName()));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
284	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  factory);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  factory);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  factory);	  NodeTraversal.traverse(compiler,    n,    this,    syntheticRef);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
285	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  preprocessorSymbolTable);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  preprocessorSymbolTable);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  preprocessorSymbolTable);	  NodeTraversal.traverse(compiler,    n,    this,    syntheticRef);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
286	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  rawRef);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  rawRef);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  rawRef);	  NodeTraversal.traverse(compiler,    n,    this,    syntheticRef);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
287	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  compiler.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  compiler.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  compiler.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
288	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  raw,  compiler);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  raw,  compiler);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  raw,  compiler);	  NodeTraversal.traverse(compiler,    n,    this,    raw);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
289	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  raw,  this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  raw,  this);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  raw,  this);	  NodeTraversal.traverse(compiler,    n,    this,    raw);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
290	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(n.getString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(n.getString());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(n.getString());	  PreprocessorSymbolTable    compiler    =    factory.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
291	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(n.getFirstChild());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(n.getFirstChild());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(n.getFirstChild());	  PreprocessorSymbolTable    compiler    =    factory.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
292	[BUG]  [BUGGY]  new  IllegalStateException( ", ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  IllegalStateException( ", ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalStateException( ", ");	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	64	None	replace
293	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n,  compiler.getCodingConvention());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n,  compiler.getCodingConvention());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n,  compiler.getCodingConvention());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    new    PreprocessorSymbolTable(n.clone());    	non-compiled	[CE]  <identifier>  expected	80	None	replace
294	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.clone(),  compiler);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.clone(),  compiler);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.clone(),  compiler);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    new    PreprocessorSymbolTable(n.clone());    	non-compiled	[CE]  <identifier>  expected	80	None	replace
295	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getFirstChild());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getFirstChild());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getFirstChild());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
296	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable(this);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable(this);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable(this);	  PreprocessorSymbolTable    compiler    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
297	[BUG]  [BUGGY]  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  IllegalStateException( " ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	IllegalStateException( " ");	  Throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
298	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throw  new  IllegalArgumentException( " ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throw  new  IllegalArgumentException( " ");	  Throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
299	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  compiler.getCodec());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  compiler.getCodec());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  compiler.getCodec());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    compiler);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
300	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(n.getName()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(n.getName()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  IllegalArgumentException( " ".equals(n.getName()));	  throw    new    IllegalArgumentException(   "   ".equals(preprocessorSymbolTable.getName()));    	non-compiled	[CE]  <identifier>  expected	54	None	replace
301	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  factory.getString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  factory.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  factory.getString());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    preprocessorSymbolTable.getString());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
302	[BUG]  [BUGGY]  Throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.getName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.getName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  preprocessorSymbolTable.getName());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    preprocessorSymbolTable.getString());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
303	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  NodeUtil.newStringNode( " "));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  NodeUtil.newStringNode( " "));  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  NodeUtil.newStringNode( " "));	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    this);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
304	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  IOContext.DEFAULT_SYNTHETIC);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  IOContext.DEFAULT_SYNTHETIC);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  IOContext.DEFAULT_SYNTHETIC);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    this);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
305	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable  instanceof  PreprocessorSymbolTable)?(PreprocessorSymbolTable)preprocessorSymbolTable  :  n.getFirstChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable  instanceof  PreprocessorSymbolTable)?(PreprocessorSymbolTable)preprocessorSymbolTable  :  n.getFirstChild();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable  instanceof  PreprocessorSymbolTable)?(PreprocessorSymbolTable)preprocessorSymbolTable  :  n.getFirstChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
306	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ")  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ")  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalArgumentException( " ")	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
307	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(n.getStackTrace());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  IllegalArgumentException( " ").printStackTrace(n.getStackTrace());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  IllegalArgumentException( " ").printStackTrace(n.getStackTrace());	  throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	53	None	replace
308	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getString());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unexpected  source  name: "  +  n.getLineno(),  n.getString());	  throw    new    AssertionFailedError(   "Unexpected    source    name:   "    +    n.getLineno(),    n.getCharno());    	non-compiled	[CE]  <identifier>  expected	67	None	replace
309	[BUG]  [BUGGY]  NodeUtil.redeclareVarsInsideBranch(n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeUtil.redeclareVarsInsideBranch(n);  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeUtil.redeclareVarsInsideBranch(n);	  Throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
310	[BUG]  [BUGGY]  new  IllegalStateException( "PreprocessorSymbolTable  does  not  exist: ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  IllegalStateException( "PreprocessorSymbolTable  does  not  exist: ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalStateException( "PreprocessorSymbolTable  does  not  exist: ");	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	64	None	replace
311	[BUG]  [BUGGY]  new  IllegalStateException( "PreprocessorSymbolTable  is  not  implemented  by ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  IllegalStateException( "PreprocessorSymbolTable  is  not  implemented  by ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalStateException( "PreprocessorSymbolTable  is  not  implemented  by ");	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	64	None	replace
312	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(n.getString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(n.getString());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(n.getString());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(true);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
313	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getQualifiedName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getQualifiedName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getQualifiedName());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    n.getName());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
314	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getString(),  n.getModule());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getString(),  n.getModule());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.getString(),  n.getModule());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    n.getString());    	non-compiled	[CE]  <identifier>  expected	10	None	replace
315	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneTree(),  n.cloneTree());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneTree(),  n.cloneTree());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneTree(),  n.cloneTree());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.cloneTree());    	non-compiled	[CE]  <identifier>  expected	59	None	replace
316	[BUG]  [BUGGY]  Throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getString());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getString());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    name.getString());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
317	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(n,  factory);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(n,  factory);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  factory.getPreprocessorSymbolTable(n,  factory);	  PreprocessorSymbolTable    compiler    =    factory.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
318	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  processorSymbolTable);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  processorSymbolTable);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  this,  processorSymbolTable);	  NodeTraversal.traverse(compiler,    n,    this,    syntheticRef);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
319	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getClass());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getClass());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " "  +  n.getClass());	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
320	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getName());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getName());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
321	[BUG]  [BUGGY]  new  IllegalArgumentException( " ")  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  IllegalArgumentException( " ")  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  IllegalArgumentException( " ")	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	77	None	replace
322	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.clone(),  n.clone());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.clone(),  n.clone());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.clone(),  n.clone());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    new    PreprocessorSymbolTable(n.clone());    	non-compiled	[CE]  <identifier>  expected	80	None	replace
323	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(_config  ==  null)?  getPreprocessorSymbolTable(n,  _config):  null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(_config  ==  null)?  getPreprocessorSymbolTable(n,  _config):  null;  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(_config  ==  null)?  getPreprocessorSymbolTable(n,  _config):  null;	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    _config);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
324	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ")  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ")  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  UnsupportedOperationException( " ")	  Throwables.throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
325	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getLineno());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getLineno());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throw  new  IllegalArgumentException( "Unexpected  source  name: "  +  n.getLineno());	  throw    new    IllegalArgumentException(   "Unexpected    source    name:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
326	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "),  n.getMessage());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "),  n.getMessage());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( " "),  n.getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
327	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  }  else  if(n.getType()  ==  Token.STRING)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  }  else  if(n.getType()  ==  Token.STRING)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( " ");  }  else  if(n.getType()  ==  Token.STRING)  {  throw  new  IllegalArgumentException( " ");  }	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
328	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  }  else  if(n.getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  }  else  if(n.getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalArgumentException( " ");  }  else  if(n.getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  }	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
329	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getLineno(),  n.getCharno());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getLineno(),  n.getCharno());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Invalid  constructor  symbol  table: "  +  n.getLineno(),  n.getCharno());	  throw    new    AssertionFailedError(   "Invalid    constructor    symbol    table:   "    +    n.getLineno());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
330	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  factory);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  factory);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  factory);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
331	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  processorSymbolTable(n));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  processorSymbolTable(n));  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  processorSymbolTable(n));	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
332	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null,  syntheticRef);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  null,  syntheticRef);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	NodeTraversal.traverse(compiler,  n,  null,  syntheticRef);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
333	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.getFirstChild());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.getFirstChild());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.getFirstChild());	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
334	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n,  Object.class);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n,  Object.class);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n,  Object.class);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
335	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getCompiler();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getCompiler();  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  this.preprocessorSymbolTable.getCompiler();	  PreprocessorSymbolTable    compiler    =    this.preprocessorSymbolTable.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
336	[BUG]  [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.getName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.getName());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  name.getName());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    name.getString());    	non-compiled	[CE]  <identifier>  expected	30	None	replace
337	[BUG]  [BUGGY]  Throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throw  new  AssertionFailedError( "Unknown  symbol  table: "  +  n.getString());	  throw    new    AssertionFailedError(   "Unknown    symbol    table:   "    +    name.getString());    	non-compiled	[CE]  <identifier>  expected	30	None	replace
338	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  preprocessorSymbolTable.getPreprocessorSymbolTable(n);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  preprocessorSymbolTable.getPreprocessorSymbolTable(n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  preprocessorSymbolTable.getPreprocessorSymbolTable(n);	  PreprocessorSymbolTable    compiler    =    preprocessorSymbolTable.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
339	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(n.getFirstChild()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(n.getFirstChild()));  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(n.getFirstChild()));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
340	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  n.getName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  n.getName());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n.getString(),  n.getName());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
341	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalStateException( "PreprocessorSymbolTable  is  not  implemented  here: ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwable  cause  =  new  IllegalStateException( "PreprocessorSymbolTable  is  not  implemented  here: ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalStateException( "PreprocessorSymbolTable  is  not  implemented  here: ");	  Throwable    cause    =    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	65	None	replace
342	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalStateException( "PreprocessorSymbolTable  is  not  implemented  by  default. ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwable  cause  =  new  IllegalStateException( "PreprocessorSymbolTable  is  not  implemented  by  default. ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwable  cause  =  new  IllegalStateException( "PreprocessorSymbolTable  is  not  implemented  by  default. ");	  Throwable    cause    =    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	65	None	replace
343	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()),  n.getModule());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()),  n.getModule());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()),  n.getModule());	  PreprocessorSymbolTable    compiler    =    n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
344	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getString(),  n.getName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getString(),  n.getName());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  n.getString(),  n.getName());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    n.getString());    	non-compiled	[CE]  <identifier>  expected	16	None	replace
345	[BUG]  [BUGGY]  new  UnsupportedOperationException( "SymbolTable  is  not  supported. ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  UnsupportedOperationException( "SymbolTable  is  not  supported. ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  UnsupportedOperationException( "SymbolTable  is  not  supported. ");	  new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
346	[BUG]  [BUGGY]  new  UnsupportedOperationException( "Unsupported  Operation  method: ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  new  UnsupportedOperationException( "Unsupported  Operation  method: ");  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	new  UnsupportedOperationException( "Unsupported  Operation  method: ");	  new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
347	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").printStackTrace(n.getString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").printStackTrace(n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " ").printStackTrace(n.getString());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
348	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").append(n.getString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").append(n.getString());  [BUGGY]      }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	Throwables.throw  new  IllegalStateException( " ").append(n.getString());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	40	None	replace
349	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()),  n.getModule());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()),  n.getModule());  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()),  n.getModule());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(NodeUtil.getSourceName(n.getString()));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
350	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  compiler,  compiler);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  compiler,  compiler);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  compiler,  compiler);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    compiler);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
351	[BUG]  [BUGGY]  PreprocessorSymbolTable  compiler  =  n.getPreprocessorSymbolTable(this,  n);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  compiler  =  n.getPreprocessorSymbolTable(this,  n);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  compiler  =  n.getPreprocessorSymbolTable(this,  n);	  PreprocessorSymbolTable    compiler    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
352	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  _config,  _preprocessor);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  _config,  _preprocessor);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  _config,  _preprocessor);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    _config);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
353	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  _config,  _objectIdReader);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  if  (preprocessorSymbolTable  ==  null)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  _config,  _objectIdReader);  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  compiler.getCodingConvention(),  name,  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1173	1173	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  createPreprocessorSymbolTable(n,  _config,  _objectIdReader);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    createPreprocessorSymbolTable(n,    _config);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
