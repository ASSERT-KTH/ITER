bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  for(Node  methodName  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  boolean  verifyOfType(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  for(Node  methodName  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  }  [BUGGY]  if  (arg.getType()  !=  desiredType)  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	793	793	1	replace	    if(methodName.getQualifiedName()!=  null)  {  for(Node  methodName  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  }		non-compiled	[CE]  <identifier>  expected	97	None	add
2	[BUG]  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  for(Node  methodName  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  boolean  verifyOfType(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  for(Node  methodName  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [BUGGY]  if  (arg.getType()  !=  desiredType)  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	793	793	1	replace	    if(methodName.getQualifiedName()!=  null)  {  for(Node  methodName  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }		non-compiled	[CE]  <identifier>  expected	97	None	add
3	[BUG]  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  for(Node  methodName  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  true;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      private  boolean  verifyOfType(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  for(Node  methodName  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  true;  }  [BUGGY]  if  (arg.getType()  !=  desiredType)  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	793	793	1	replace	    if(methodName.getQualifiedName()!=  null)  {  for(Node  methodName  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  true;  }		non-compiled	[CE]  <identifier>  expected	97	None	add
4	[BUG]  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  for(Node  arg  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]      private  boolean  verifyOfType(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  for(Node  arg  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  }  [BUGGY]  if  (arg.getType()  !=  desiredType)  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	793	793	1	replace	    if(methodName.getQualifiedName()!=  null)  {  for(Node  arg  :  methodName.getQualifiedName())  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  }		non-compiled	[CE]  <identifier>  expected	97	None	add
5	[BUG]  [BUGGY]  if  (methodName.getType()!=  desiredType)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  boolean  verifyOfType(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]  if  (methodName.getType()!=  desiredType)  {  [BUGGY]  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	793	793	1	replace	if  (methodName.getType()!=  desiredType)  {	if  (arg.getType()  !=  desiredType)  {  	non-compiled	[CE]  <identifier>  expected	96	None	replace
6	[BUG]  [BUGGY]  if  (methodName.getQualifiedName()!=  desiredType)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  boolean  verifyOfType(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]  if  (methodName.getQualifiedName()!=  desiredType)  {  [BUGGY]  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	793	793	1	replace	if  (methodName.getQualifiedName()!=  desiredType)  {	if  (arg.getType()  !=  desiredType)  {  	non-compiled	[CE]  <identifier>  expected	96	None	replace
7	[BUG]  [BUGGY]  if  (arg.getType()  ==  desiredType)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      private  boolean  verifyOfType(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]  if  (arg.getType()  ==  desiredType)  {  [BUGGY]  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	793	793	1	replace	if  (arg.getType()  ==  desiredType)  {	if  (arg.getType()  !=  desiredType)  {  	non-compiled	[CE]  <identifier>  expected	96	None	replace
8	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  boolean  verifyOfType(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]    NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType);  [BUGGY]  if  (arg.getType()  !=  desiredType)  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	793	793	1	replace	    NodeTraversal.traverse(compiler,  methodName,  arg,  desiredType);		non-compiled	[CE]  <identifier>  expected	97	None	add
9	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  arg,  desiredType);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  boolean  verifyOfType(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]    NodeTraversal.traverse(compiler,  arg,  desiredType);  [BUGGY]  if  (arg.getType()  !=  desiredType)  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	793	793	1	replace	    NodeTraversal.traverse(compiler,  arg,  desiredType);		non-compiled	[CE]  <identifier>  expected	97	None	add
10	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  arg,  new  AssertionFailedError(t,  methodName));  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      private  boolean  verifyOfType(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]    NodeTraversal.traverse(compiler,  arg,  new  AssertionFailedError(t,  methodName));  [BUGGY]  if  (arg.getType()  !=  desiredType)  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	793	793	1	replace	    NodeTraversal.traverse(compiler,  arg,  new  AssertionFailedError(t,  methodName));		non-compiled	[CE]  <identifier>  expected	97	None	add
11	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  arg,  new  AssertionFailedError(methodName));  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]      private  boolean  verifyOfType(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]    NodeTraversal.traverse(compiler,  arg,  new  AssertionFailedError(methodName));  [BUGGY]  if  (arg.getType()  !=  desiredType)  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	793	793	1	replace	    NodeTraversal.traverse(compiler,  arg,  new  AssertionFailedError(methodName));		non-compiled	[CE]  <identifier>  expected	97	None	add
12	[BUG]  [BUGGY]    MethodName  methodName  =  arg.getQualifiedName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]      private  boolean  verifyOfType(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]    MethodName  methodName  =  arg.getQualifiedName();  [BUGGY]  if  (arg.getType()  !=  desiredType)  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	793	793	1	replace	    MethodName  methodName  =  arg.getQualifiedName();		non-compiled	[CE]  <identifier>  expected	97	None	add
13	[BUG]  [BUGGY]    String  methodName  =  arg.getQualifiedName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError  [CONTEXT]      private  boolean  verifyOfType(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]    String  methodName  =  arg.getQualifiedName();  [BUGGY]  if  (arg.getType()  !=  desiredType)  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	793	793	1	replace	    String  methodName  =  arg.getQualifiedName();		non-compiled	[CE]  <identifier>  expected	97	None	add
14	[BUG]  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  if(arg.getType()!=  desiredType)  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  boolean  verifyOfType(NodeTraversal  t,  Node  methodName,  Node  arg,  int  desiredType)  {  [BUGGY]    if(methodName.getQualifiedName()!=  null)  {  if(arg.getType()!=  desiredType)  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [BUGGY]  if  (arg.getType()  !=  desiredType)  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	793	793	1	replace	    if(methodName.getQualifiedName()!=  null)  {  if(arg.getType()!=  desiredType)  {  compiler.report(  t.makeError(methodName,  INVALID_ARGUMENT_ERROR,  methodName.getQualifiedName()));  return  false;  }		non-compiled	[CE]  <identifier>  expected	97	None	add
