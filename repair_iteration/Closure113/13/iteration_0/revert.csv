projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java793
projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java793if(methodName.getQualifiedName()!=null){for(NodemethodName:methodName.getQualifiedName()){compiler.report(t.makeError(methodName,INVALID_ARGUMENT_ERROR,methodName.getQualifiedName()));}
projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java793if(methodName.getQualifiedName()!=null){for(NodemethodName:methodName.getQualifiedName()){compiler.report(t.makeError(methodName,INVALID_ARGUMENT_ERROR,methodName.getQualifiedName()));returnfalse;}
projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java793if(methodName.getQualifiedName()!=null){for(NodemethodName:methodName.getQualifiedName()){compiler.report(t.makeError(methodName,INVALID_ARGUMENT_ERROR,methodName.getQualifiedName()));returntrue;}
projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java793if(methodName.getQualifiedName()!=null){for(Nodearg:methodName.getQualifiedName()){compiler.report(t.makeError(methodName,INVALID_ARGUMENT_ERROR,methodName.getQualifiedName()));}
projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java793if(arg.getType()!=desiredType){
projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java793if(methodName.getType()!=desiredType){
projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java793if(methodName.getQualifiedName()!=desiredType){
projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java793if(arg.getType()==desiredType){
projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java793NodeTraversal.traverse(compiler,methodName,arg,desiredType);
projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java793NodeTraversal.traverse(compiler,arg,desiredType);
projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java793NodeTraversal.traverse(compiler,arg,newAssertionFailedError(t,methodName));
projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java793NodeTraversal.traverse(compiler,arg,newAssertionFailedError(methodName));
projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java793MethodNamemethodName=arg.getQualifiedName();
projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java793StringmethodName=arg.getQualifiedName();
projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java793if(methodName.getQualifiedName()!=null){if(arg.getType()!=desiredType){compiler.report(t.makeError(methodName,INVALID_ARGUMENT_ERROR,methodName.getQualifiedName()));returnfalse;}
