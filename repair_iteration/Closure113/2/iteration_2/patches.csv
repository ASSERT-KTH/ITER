bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  class,  interface,  or  enum  expected  [FE]        AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError    <    Node>    left    =    provided.getFirstChild();    maybeAddStringNodeToSymbolTable(left);    	non-compiled	[CE]  class,  interface,  or  enum  expected	457	None	replace
2	[BUG]  [BUGGY]  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  class,  interface,  or  enum  expected  [FE]          AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError    <    Node>    left    =    provided.getFirstChild();    maybeAddStringNodeToSymbolTable(left);    	non-compiled	[CE]  class,  interface,  or  enum  expected	457	None	replace
3	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError    <    Node>    left    =    provided.getFirstChild();    maybeAddStringNodeToSymbolTable(left);    	non-compiled	[CE]  not  a  statement	457	None	replace
4	[BUG]  [BUGGY]  AssertionFailedError  <  Node>  left  =  n.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  Node>  left  =  n.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  Node>  left  =  n.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError    <    Node>    left    =    provided.getFirstChild();    maybeAddStringNodeToSymbolTable(left);    	non-compiled	[CE]  class,  interface,  or  enum  expected	457	None	replace
5	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError    <    Node>    left    =    provided.getFirstChild();    maybeAddStringNodeToSymbolTable(left);    	non-compiled	[CE]  not  a  statement	457	None	replace
6	[BUG]  [BUGGY]  Node  parent  =  left.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  Node  parent  =  left.getParent();  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	Node  parent  =  left.getParent();	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError    <    Node>    left    =    provided.getFirstChild();    maybeAddStringNodeToSymbolTable(left);    	non-compiled	[CE]  class,  interface,  or  enum  expected	457	None	replace
7	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError    <    Node>    left    =    provided.getFirstChild();    maybeAddStringNodeToSymbolTable(left);    	non-compiled	[CE]  not  a  statement	457	None	replace
8	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  left.getLastChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  left.getLastChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  left.getLastChild();  maybeAddStringNodeToSymbolTable(left);	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError    <    Node>    left    =    provided.getFirstChild();    maybeAddStringNodeToSymbolTable(left);    	non-compiled	[CE]  not  a  statement	457	None	replace
9	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  provided.getLastChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  provided.getLastChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  provided.getLastChild();  maybeAddStringNodeToSymbolTable(left);	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError    <    Node>    left    =    provided.getFirstChild();    maybeAddStringNodeToSymbolTable(left);    	non-compiled	[CE]  not  a  statement	457	None	replace
10	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError    <    Node>    left    =    provided.getFirstChild();    maybeAddStringNodeToSymbolTable(left);    	non-compiled	[CE]  not  a  statement	457	None	replace
11	[BUG]  [BUGGY]  AssertionFailedError  <  Node>  left  =  arg.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  Node>  left  =  arg.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  Node>  left  =  arg.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError    <    Node>    left    =    provided.getFirstChild();    maybeAddStringNodeToSymbolTable(left);    	non-compiled	[CE]  class,  interface,  or  enum  expected	457	None	replace
12	[BUG]  [BUGGY]  AssertionFailedError  <  Node>  left  =  left.getLastChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  Node>  left  =  left.getLastChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  Node>  left  =  left.getLastChild();  maybeAddStringNodeToSymbolTable(left);	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError    <    Node>    left    =    provided.getFirstChild();    maybeAddStringNodeToSymbolTable(left);    	non-compiled	[CE]  class,  interface,  or  enum  expected	457	None	replace
13	[BUG]  [BUGGY]  Node  parent  =  left.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  Node  parent  =  left.getFirstChild();  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	Node  parent  =  left.getFirstChild();	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError    <    Node>    left    =    provided.getFirstChild();    maybeAddStringNodeToSymbolTable(left);    	non-compiled	[CE]  class,  interface,  or  enum  expected	457	None	replace
14	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  }  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  }	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError    <    Node>    left    =    provided.getFirstChild();    maybeAddStringNodeToSymbolTable(left);    	non-compiled	[CE]  not  a  statement	457	None	replace
15	[BUG]  [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [CE]  >  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);    	non-compiled	[CE]  >  expected	350	None	replace
16	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  }  [CE]  >  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  }	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);    	non-compiled	[CE]  >  expected	350	None	replace
17	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  }  [CE]  >  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  }	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);    	non-compiled	[CE]  >  expected	350	None	replace
18	[BUG]  [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  }  [CE]  >  expected  [FE]                                AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided  ==  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  }	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);    	non-compiled	[CE]  >  expected	350	None	replace
19	[BUG]  [BUGGY]  If(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  }  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  If(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	If(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  }	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);    	non-compiled	[CE]  	350	None	replace
20	[BUG]  [BUGGY]  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	350	None	replace
21	[BUG]  [BUGGY]  If(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  }  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  If(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	If(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  }	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);    	non-compiled	[CE]  	350	None	replace
22	[BUG]  [BUGGY]  If(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  If(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	If(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);    	non-compiled	[CE]  ';'  expected	350	None	replace
23	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [CE]  >  expected  [FE]                                          AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);    	non-compiled	[CE]  >  expected	350	None	replace
24	[BUG]  [BUGGY]  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [CE]  illegal  start  of  expression  [FE]                                            AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	350	None	replace
25	[BUG]  [BUGGY]  If(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [CE]  ';'  expected  [FE]                                              AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  If(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	If(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);    	non-compiled	[CE]  ';'  expected	350	None	replace
26	[BUG]  [BUGGY]  AssertionFailedError  <=  parent.getType()  ==  Token.NAME?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_  [CE]  not  a  statement  [FE]                                                AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <=  parent.getType()  ==  Token.NAME?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <=  parent.getType()  ==  Token.NAME?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  NON_STRING_PASSED_TO_SET_CSS_	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);    	non-compiled	[CE]  not  a  statement	350	None	replace
27	[BUG]  [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  >  expected  [FE]                                                  AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);    	non-compiled	[CE]  >  expected	350	None	replace
28	[BUG]  [BUGGY]  AssertionFailedError  <=  parent.getType()  ==  Token.NAME?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  NON_STRING_PASSED_TO_SET_CSS  [CE]  not  a  statement  [FE]                                                    AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <=  parent.getType()  ==  Token.NAME?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  NON_STRING_PASSED_TO_SET_CSS  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <=  parent.getType()  ==  Token.NAME?  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  :  NON_STRING_PASSED_TO_SET_CSS	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);    	non-compiled	[CE]  not  a  statement	350	None	replace
29	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
30	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  If(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  If(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    If(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  ';'  expected	24	None	add
31	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getParent();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getParent();  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    Node  parent  =  n.getParent();	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
32	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    if(parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
33	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
34	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getFirstChild();  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    Node  parent  =  n.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
35	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  Node  parent  =  arg.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  Node  parent  =  arg.getFirstChild();  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    Node  parent  =  arg.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
36	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.CALL)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    if(parent!=  null  &&  parent.getType()  ==  Token.CALL)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
37	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
38	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.BLOCK)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.BLOCK)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    if(parent!=  null  &&  parent.getType()  ==  Token.BLOCK)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
39	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.EMPTY)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.EMPTY)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    if(parent!=  null  &&  parent.getType()  ==  Token.EMPTY)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
40	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getLastChild();  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    Node  parent  =  n.getLastChild();	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
41	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.MOVED)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.MOVED)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    if(parent!=  null  &&  parent.getType()  ==  Token.MOVED)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
42	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=    null    &&    parent.getType()    ==    Token.NAME)    {    if(parent!=  null  &&  parent.getType()  ==  Token.GETPROP)  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
43	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype   "))  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP    &&    parent.getLastChild().getString().equals(   "prototype   "))    {    if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	744	None	add
44	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  if(provided  ==  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  if(provided  ==  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype   "))  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP    &&    parent.getLastChild().getString().equals(   "prototype   "))    {    if(provided  ==  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	744	None	add
45	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  Node  parent  =  n.getParent();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  Node  parent  =  n.getParent();  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP    &&    parent.getLastChild().getString().equals(   "prototype   "))    {    Node  parent  =  n.getParent();	  	non-compiled	[CE]  illegal  start  of  expression	744	None	add
46	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  Node  parent  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  Node  parent  =  n.getFirstChild();  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP    &&    parent.getLastChild().getString().equals(   "prototype   "))    {    Node  parent  =  n.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	744	None	add
47	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getLastChild().getString().equals( "prototype   "))  {  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getLastChild().getString().equals( "prototype   "))  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP    &&    parent.getLastChild().getString().equals(   "prototype   "))    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getLastChild().getString().equals( "prototype   "))  {	  	non-compiled	[CE]  >  expected	744	None	add
48	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype   "))  {  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype   "))  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP    &&    parent.getLastChild().getString().equals(   "prototype   "))    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype   "))  {	  	non-compiled	[CE]  >  expected	744	None	add
49	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getFirstChild().getString().equals( "prototype   "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getFirstChild().getString().equals( "prototype   "))  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP    &&    parent.getLastChild().getString().equals(   "prototype   "))    {    if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getFirstChild().getString().equals( "prototype   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	744	None	add
50	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  if(provided  ==  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getFirstChild().getString().equals( "prototype   "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  if(provided  ==  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getFirstChild().getString().equals( "prototype   "))  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP    &&    parent.getLastChild().getString().equals(   "prototype   "))    {    if(provided  ==  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getFirstChild().getString().equals( "prototype   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	744	None	add
51	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( ".prototype   "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( ".prototype   "))  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP    &&    parent.getLastChild().getString().equals(   "prototype   "))    {    if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( ".prototype   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	744	None	add
52	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  if(provided  ==  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( ".prototype   "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  if(provided  ==  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( ".prototype   "))  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP    &&    parent.getLastChild().getString().equals(   "prototype   "))    {    if(provided  ==  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( ".prototype   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	744	None	add
53	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  Preconditions.checkState(parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype   "));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  Preconditions.checkState(parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype   "));  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP    &&    parent.getLastChild().getString().equals(   "prototype   "))    {    Preconditions.checkState(parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype   "));	  	non-compiled	[CE]  illegal  start  of  expression	744	None	add
54	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getFirstChild().getString().equals( "prototype   "))  {  [CE]  >  expected  [FE]                          AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals(   "prototype   "))  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getFirstChild().getString().equals( "prototype   "))  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP    &&    parent.getLastChild().getString().equals(   "prototype   "))    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getFirstChild().getString().equals( "prototype   "))  {	  	non-compiled	[CE]  >  expected	744	None	add
55	[BUG]  [BUGGY]  Node  left  =  left.getNext();  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  Node  left  =  left.getNext();  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	Node  left  =  left.getNext();	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node    left    =    left.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	410	None	replace
56	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node    left    =    left.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	410	None	replace
57	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  parent.detachFromParent();  }  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  parent.detachFromParent();  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  parent.detachFromParent();  }	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node    left    =    left.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	410	None	replace
58	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  parent.detachFromParent();  compiler.reportCodeChange();  }  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  parent.detachFromParent();  compiler.reportCodeChange();  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  parent.detachFromParent();  compiler.reportCodeChange();  }	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node    left    =    left.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	410	None	replace
59	[BUG]  [BUGGY]  if(left!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  [CE]  variable  left  is  already  defined  in  method  processRequireCall(NodeTraversal,Node,Node)  [FE]                      AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node    left    =    left.getNext();    	non-compiled	[CE]  variable  left  is  already  defined  in  method  processRequireCall(NodeTraversal,Node,Node)	410	None	replace
60	[BUG]  [BUGGY]  if(left!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node    left    =    left.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	410	None	replace
61	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node    left    =    left.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	410	None	replace
62	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  parent.replaceChild(n,  left);  }  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  parent.replaceChild(n,  left);  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  parent.replaceChild(n,  left);  }	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node    left    =    left.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	410	None	replace
63	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node    left    =    left.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	410	None	replace
64	[BUG]  [BUGGY]  AssertionError.make(t,  n,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  left.getType())  {  Node  left  =  left.getNext();  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionError.make(t,  n,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  left.getType())  {  Node  left  =  left.getNext();  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionError.make(t,  n,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR,  left.getType())  {  Node  left  =  left.getNext();	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node    left    =    left.getNext();    	non-compiled	[CE]  ';'  expected	410	None	replace
65	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  parent.removeChild(left);  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  parent.removeChild(left);  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  parent.removeChild(left);  }	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node    left    =    left.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	410	None	replace
66	[BUG]  [BUGGY]  If(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  If(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	If(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node    left    =    left.getNext();    	non-compiled	[CE]  ';'  expected	410	None	replace
67	[BUG]  [BUGGY]  if(left!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  parent.detachFromParent();  }  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  parent.detachFromParent();  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  }  else  {  parent.detachFromParent();  }	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node    left    =    left.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	410	None	replace
68	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FOR)    {    if(left!=  null  &&  left.getType()  ==  Token.FOR)  {	  	non-compiled	[CE]  illegal  start  of  expression	536	None	add
69	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FOR)    {    if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	536	None	add
70	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.BLOCK)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.BLOCK)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FOR)    {    if(left!=  null  &&  left.getType()  ==  Token.BLOCK)  {	  	non-compiled	[CE]  illegal  start  of  expression	536	None	add
71	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FOR)    {    if(left!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	536	None	add
72	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FOR)    {    if(left!=  null  &&  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	536	None	add
73	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  If(left!=  null  &&  left.getType()  ==  Token.FOR)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  If(left!=  null  &&  left.getType()  ==  Token.FOR)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FOR)    {    If(left!=  null  &&  left.getType()  ==  Token.FOR)  {	  	non-compiled	[CE]  ';'  expected	536	None	add
74	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FOR)    {    if(left!=  null  &&  left.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  illegal  start  of  expression	536	None	add
75	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.CALL)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FOR)    {    if(left!=  null  &&  left.getType()  ==  Token.CALL)  {	  	non-compiled	[CE]  illegal  start  of  expression	536	None	add
76	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FOR)    {    if(left!=  null  &&  left.getType()  ==  Token.EXPR_RESULT)  {	  	non-compiled	[CE]  illegal  start  of  expression	536	None	add
77	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.ASSIGN)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.ASSIGN)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FOR)    {    if(left!=  null  &&  left.getType()  ==  Token.ASSIGN)  {	  	non-compiled	[CE]  illegal  start  of  expression	536	None	add
78	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.GETPROP)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FOR)    {    if(left!=  null  &&  left.getType()  ==  Token.GETPROP)  {	  	non-compiled	[CE]  illegal  start  of  expression	536	None	add
79	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left  ==  null  &&  left.getType()  ==  Token.FOR)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left  ==  null  &&  left.getType()  ==  Token.FOR)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FOR)    {    if(left  ==  null  &&  left.getType()  ==  Token.FOR)  {	  	non-compiled	[CE]  illegal  start  of  expression	536	None	add
80	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  If(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  If(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FOR)    {    If(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  ';'  expected	536	None	add
81	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.IF)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.IF)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FOR)    {    if(left!=  null  &&  left.getType()  ==  Token.IF)  {	  	non-compiled	[CE]  illegal  start  of  expression	536	None	add
82	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.SEMI)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  if(left!=  null  &&  left.getType()  ==  Token.SEMI)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FOR)    {    if(left!=  null  &&  left.getType()  ==  Token.SEMI)  {	  	non-compiled	[CE]  illegal  start  of  expression	536	None	add
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.STRING)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided  ==  null  &&  parent.getType()  ==  Token.STRING)  {	  if(parent!=    null    &&    provided.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	650	1	replace
84	[BUG]  [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.STRING)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.STRING)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided  ==  null  &&  parent.getType()  ==  Token.STRING)  {	  if(parent!=    null    &&    provided.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	650	1	replace
85	[BUG]  [BUGGY]  if(provided!=  null  &&  provided.getType()  ==  Token.STRING)  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided!=  null  &&  provided.getType()  ==  Token.STRING)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  provided.getType()  ==  Token.STRING)  {	  if(parent!=    null    &&    provided.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  cannot  find  symbol	650	None	replace
86	[BUG]  [BUGGY]  if(provided  >=  null  &&  parent.getType()  ==  Token.STRING)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided  >=  null  &&  parent.getType()  ==  Token.STRING)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided  >=  null  &&  parent.getType()  ==  Token.STRING)  {	  if(parent!=    null    &&    provided.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	650	None	replace
87	[BUG]  [BUGGY]  if(provided!=  null  &&  child.getType()  ==  Token.STRING)  {  [CE]  cannot  find  symbol  child  [FE]                  AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided!=  null  &&  child.getType()  ==  Token.STRING)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  child.getType()  ==  Token.STRING)  {	  if(parent!=    null    &&    provided.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  child	650	None	replace
88	[BUG]  [BUGGY]  if(provided!=  null  &&  typeDecl.getType()  ==  Token.STRING)  {  [CE]  cannot  find  symbol  typeDecl  [FE]                    AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided!=  null  &&  typeDecl.getType()  ==  Token.STRING)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  typeDecl.getType()  ==  Token.STRING)  {	  if(parent!=    null    &&    provided.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  typeDecl	650	None	replace
89	[BUG]  [BUGGY]  if(provided  >>  null  &&  parent.getType()  ==  Token.STRING)  {  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]                      AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided  >>  null  &&  parent.getType()  ==  Token.STRING)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided  >>  null  &&  parent.getType()  ==  Token.STRING)  {	  if(parent!=    null    &&    provided.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	650	None	replace
90	[BUG]  [BUGGY]  if(suffix!=  null  &&  parent.getType()  ==  Token.STRING)  {  [CE]  cannot  find  symbol  suffix  [FE]                        AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(suffix!=  null  &&  parent.getType()  ==  Token.STRING)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(suffix!=  null  &&  parent.getType()  ==  Token.STRING)  {	  if(parent!=    null    &&    provided.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  suffix	650	None	replace
91	[BUG]  [BUGGY]  if(provided!=  null  &&  shared.getType()  ==  Token.STRING)  {  [CE]  cannot  find  symbol  shared  [FE]                          AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(provided!=  null  &&  shared.getType()  ==  Token.STRING)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  shared.getType()  ==  Token.STRING)  {	  if(parent!=    null    &&    provided.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  shared	650	None	replace
92	[BUG]  [BUGGY]  if(child!=  null  ||  left.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  child  [FE]                  AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(child!=  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(child!=  null  ||  left.getType()  ==  Token.NAME)  {	  if(right!=    null    ||    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  child	265	None	replace
93	[BUG]  [BUGGY]  if(last!=  null  ||  left.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  last  [FE]                    AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(last!=  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(last!=  null  ||  left.getType()  ==  Token.NAME)  {	  if(right!=    null    ||    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  last	265	None	replace
94	[BUG]  [BUGGY]  if(requireNode!=  null  ||  left.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  requireNode  [FE]                      AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(requireNode!=  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(requireNode!=  null  ||  left.getType()  ==  Token.NAME)  {	  if(right!=    null    ||    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  requireNode	265	None	replace
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(n  ==  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(n  ==  null  ||  left.getType()  ==  Token.NAME)  {	  if(right!=    null    ||    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	265	1	replace
96	[BUG]  [BUGGY]  if(n  ==  null  ||  left.getType()  ==  Token.NAME)  {  [FE]  AssertionFailedError  [FE]                        AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(n  ==  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(n  ==  null  ||  left.getType()  ==  Token.NAME)  {	  if(right!=    null    ||    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	265	1	replace
97	[BUG]  [BUGGY]  if(firstNode!=  null  ||  left.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  firstNode  [FE]                          AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(firstNode!=  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(firstNode!=  null  ||  left.getType()  ==  Token.NAME)  {	  if(right!=    null    ||    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  firstNode	265	None	replace
98	[BUG]  [BUGGY]  if(name!=  null  ||  left.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  name  [FE]                            AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(name!=  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(name!=  null  ||  left.getType()  ==  Token.NAME)  {	  if(right!=    null    ||    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  name	265	None	replace
99	[BUG]  [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n));  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n));  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n));	  if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR    ||    error(t.getMessage(),    n));    	non-compiled	[CE]  >  expected	667	None	replace
100	[BUG]  [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  left));  [CE]  >  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  left));  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  left));	  if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR    ||    error(t.getMessage(),    n));    	non-compiled	[CE]  >  expected	667	None	replace
101	[BUG]  [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  arg));  [CE]  >  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  arg));  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  arg));	  if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR    ||    error(t.getMessage(),    n));    	non-compiled	[CE]  >  expected	667	None	replace
102	[BUG]  [BUGGY]  if(parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n));  }  [CE]  >  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n));  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n));  }	  if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR    ||    error(t.getMessage(),    n));    	non-compiled	[CE]  >  expected	667	None	replace
103	[BUG]  [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n),  INVALID_CSS_RENAMING_MAP);  [CE]  >  expected  [FE]                                AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n),  INVALID_CSS_RENAMING_MAP);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n),  INVALID_CSS_RENAMING_MAP);	  if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR    ||    error(t.getMessage(),    n));    	non-compiled	[CE]  >  expected	667	None	replace
104	[BUG]  [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  parent));  [CE]  >  expected  [FE]                                  AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  parent));  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  parent));	  if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR    ||    error(t.getMessage(),    n));    	non-compiled	[CE]  >  expected	667	None	replace
105	[BUG]  [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  error(t.getMessage(),  n));  [CE]  >  expected  [FE]                                    AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  error(t.getMessage(),  n));  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  error(t.getMessage(),  n));	  if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR    ||    error(t.getMessage(),    n));    	non-compiled	[CE]  >  expected	667	None	replace
106	[BUG]  [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n),  INVALID_PROVIDE_ERROR);  [CE]  >  expected  [FE]                                      AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n),  INVALID_PROVIDE_ERROR);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n),  INVALID_PROVIDE_ERROR);	  if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR    ||    error(t.getMessage(),    n));    	non-compiled	[CE]  >  expected	667	None	replace
107	[BUG]  [BUGGY]  If(parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n));  }  [CE]  [FE]                                        AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  If(parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n));  }  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	If(parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n));  }	  if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR    ||    error(t.getMessage(),    n));    	non-compiled	[CE]  	667	None	replace
108	[BUG]  [BUGGY]  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n));  [CE]  not  a  statement  [FE]                                          AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n));  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n));	  if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR    ||    error(t.getMessage(),    n));    	non-compiled	[CE]  not  a  statement	667	None	replace
109	[BUG]  [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n),  INVALID_DEFINE_ANNOTATION);  [CE]  >  expected  [FE]                                            AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n),  INVALID_DEFINE_ANNOTATION);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n),  INVALID_DEFINE_ANNOTATION);	  if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR    ||    error(t.getMessage(),    n));    	non-compiled	[CE]  >  expected	667	None	replace
110	[BUG]  [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n);  [CE]  >  expected  [FE]                                              AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n);  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n);	  if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError    <    NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR    ||    error(t.getMessage(),    n));    	non-compiled	[CE]  >  expected	667	None	replace
111	[BUG]  [BUGGY]  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError    <    NON_STRING_REQUIRE_ERROR    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  >  expected	548	None	replace
112	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError    <    NON_STRING_REQUIRE_ERROR    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  >  expected	548	None	replace
113	[BUG]  [BUGGY]  If(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  If(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	If(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError    <    NON_STRING_REQUIRE_ERROR    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ';'  expected	548	None	replace
114	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError    <    NON_STRING_REQUIRE_ERROR    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  >  expected	548	None	replace
115	[BUG]  [BUGGY]  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError    <    NON_STRING_REQUIRE_ERROR    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  >  expected	548	None	replace
116	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                                AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError    <    NON_STRING_REQUIRE_ERROR    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  >  expected	548	None	replace
117	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                                  AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError    <    NON_STRING_REQUIRE_ERROR    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  >  expected	548	None	replace
118	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                                    AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError    <    NON_STRING_REQUIRE_ERROR    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  >  expected	548	None	replace
119	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                                      AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError    <    NON_STRING_REQUIRE_ERROR    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  >  expected	548	None	replace
120	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.REQUIRE)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                                        AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.REQUIRE)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.REQUIRE)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError    <    NON_STRING_REQUIRE_ERROR    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  >  expected	548	None	replace
121	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CALL)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                                          AssertionFailedError      [CONTEXT]      }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);            [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CALL)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.CALL)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError    <    NON_STRING_REQUIRE_ERROR    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  >  expected	548	None	replace
