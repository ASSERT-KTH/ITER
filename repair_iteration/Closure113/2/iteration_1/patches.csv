bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
2	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  If(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  If(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    If(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
3	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  parent.detachFromParent();  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  parent.detachFromParent();  compiler.reportCodeChange();  }  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  parent.detachFromParent();  compiler.reportCodeChange();  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
4	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left  ==  null  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left  ==  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left  ==  null  &&  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
5	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  right.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  right.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  right.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
6	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
7	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  }  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
8	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
9	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  left.getType()  ==  Token.FOR)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
10	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  If(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  parent.detachFromParent();  compiler.reportCodeChange();  }  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  If(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  parent.detachFromParent();  compiler.reportCodeChange();  }  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    If(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  parent.detachFromParent();  compiler.reportCodeChange();  }	  	non-compiled	[CE]  ';'  expected	17	None	add
11	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.BLOCK)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.BLOCK)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  left.getType()  ==  Token.BLOCK)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
12	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(right!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(right!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(right!=  null  &&  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
13	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  left.getType()  ==  Token.GETPROP)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
14	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  parent.detachFromParent();  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  parent.detachFromParent();  compiler.reportCodeChange();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  parent.detachFromParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
16	[BUG]  [BUGGY]  if(parent!=  null  &&  left.getType()  ==  Token.NAME)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left  ==  null  &&  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
18	[BUG]  [BUGGY]  if(left  ==  null  &&  left.getType()  ==  Token.NAME)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left  ==  null  &&  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
19	[BUG]  [BUGGY]  if(right!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  right  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(right!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(right!=  null  &&  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  right	26	None	replace
20	[BUG]  [BUGGY]  if(left!=  null  &&  right.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  right  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  right.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  right.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  right	26	None	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
22	[BUG]  [BUGGY]  if(left!=  null  &&  parent.getType()  ==  Token.NAME)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
23	[BUG]  [BUGGY]  if(left!=  null  &&  provided.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  provided.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  provided.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
25	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent  ==  null  &&  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
27	[BUG]  [BUGGY]  if(parent  ==  null  &&  left.getType()  ==  Token.NAME)  {  [FE]  AssertionFailedError  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  &&  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
28	[BUG]  [BUGGY]  if(left  >=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  >=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left  >=  null  &&  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	26	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
30	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.VAR)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  left.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
32	[BUG]  [BUGGY]  if(parent!=  null  &&  left.getType()  ==  Token.VAR)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  left.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left  ==  null  &&  left.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
34	[BUG]  [BUGGY]  if(left  ==  null  &&  left.getType()  ==  Token.VAR)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left  ==  null  &&  left.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.EXPR_RESULT)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
36	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.EXPR_RESULT)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.EXPR_RESULT)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.BLOCK)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.BLOCK)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
38	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.BLOCK)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.BLOCK)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.BLOCK)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.CALL)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.CALL)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
40	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.CALL)  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.CALL)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.CALL)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
42	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.STRING)  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION  ||  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.FUNCTION  ||  left.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
44	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION  ||  left.getType()  ==  Token.VAR)  {  [FE]  AssertionFailedError  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION  ||  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.FUNCTION  ||  left.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
45	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.REQUIRE)  {  [CE]  cannot  find  symbol  REQUIRE  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.REQUIRE)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.REQUIRE)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  cannot  find  symbol  REQUIRE	34	None	replace
46	[BUG]  [BUGGY]  if(right!=  null  &&  left.getType()  ==  Token.VAR)  {  [CE]  cannot  find  symbol  right  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(right!=  null  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(right!=  null  &&  left.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  cannot  find  symbol  right	34	None	replace
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  left.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
48	[BUG]  [BUGGY]  if(parent!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [FE]  AssertionFailedError  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  left.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
49	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
50	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  if(provided  ==  null  ||  left.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  if(provided  ==  null  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    if(provided  ==  null  ||  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
51	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  Node  parent  =  left.getParent();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  Node  parent  =  left.getParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    Node  parent  =  left.getParent();	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
52	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	19	None	add
53	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  If(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  If(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    If(provided!=  null  ||  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
54	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;	  	non-compiled	[CE]  >  expected	19	None	add
55	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);	  	non-compiled	[CE]  >  expected	19	None	add
56	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	19	None	add
57	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  If(provided  ==  null  ||  left.getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  If(provided  ==  null  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    If(provided  ==  null  ||  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  ';'  expected	19	None	add
58	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	19	None	add
59	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	19	None	add
60	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	19	None	add
61	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  ||  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  ||  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	19	None	add
62	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	19	None	add
63	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;  [CE]  >  expected  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;	  	non-compiled	[CE]  >  expected	19	None	add
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
65	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
67	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
68	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.REQUIRE)  {  [CE]  cannot  find  symbol  REQUIRE  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.REQUIRE)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.REQUIRE)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  REQUIRE	11	None	replace
69	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
70	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
71	[BUG]  [BUGGY]  if(child!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  cannot  find  symbol  child  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(child!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(child!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  child	11	None	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
73	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING)  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.EMPTY)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.EMPTY)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
75	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.EMPTY)  {  [FE]  AssertionFailedError  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.EMPTY)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.EMPTY)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
77	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.GETPROP)  {  [FE]  AssertionFailedError  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
78	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
79	[BUG]  [BUGGY]  if(left!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [FE]  AssertionFailedError  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
80	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    if(left!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
81	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  If(left!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  If(left!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    If(left!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
82	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
83	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  right.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  right.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    if(left!=  null  &&  right.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
84	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left  ==  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left  ==  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    if(left  ==  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
85	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    if(left!=  null  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
86	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(right!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(right!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    if(right!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
87	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    if(parent!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
88	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
89	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  left.getType()  ==  Token.EMPTY)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  left.getType()  ==  Token.EMPTY)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    if(left!=  null  &&  left.getType()  ==  Token.EMPTY)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
90	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  left.getType()  ==  Token.BLOCK)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  left.getType()  ==  Token.BLOCK)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    if(left!=  null  &&  left.getType()  ==  Token.BLOCK)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
91	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  left.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    if(left!=  null  &&  left.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
92	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  left.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  left.getType()  ==  Token.CALL)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    if(left!=  null  &&  left.getType()  ==  Token.CALL)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
93	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  left.getType()  ==  Token.MOVED)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  left.getType()  ==  Token.MOVED)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    if(left!=  null  &&  left.getType()  ==  Token.MOVED)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
94	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  n,  parent);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
95	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
96	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  n,  this);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
97	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  unrecognizedRequires);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  unrecognizedRequires);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  unrecognizedRequires);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
98	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  left,  this);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  left,  this);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
99	[BUG]  [BUGGY]  Node  originalRoot  =  n.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  Node  originalRoot  =  n.getLastChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	Node  originalRoot  =  n.getLastChild();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
100	[BUG]  [BUGGY]  Node  parent  =  n.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  Node  parent  =  n.getParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	Node  parent  =  n.getParent();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
101	[BUG]  [BUGGY]  Node  originalRoot  =  n.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]                                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  Node  originalRoot  =  n.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	Node  originalRoot  =  n.getFirstChild();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
102	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  arg);  [CE]  class,  interface,  or  enum  expected  [FE]                                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  left,  arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  left,  arg);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
103	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitives());  [CE]  class,  interface,  or  enum  expected  [FE]                                                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitives());  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitives());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
104	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  left,  requiresLevel);  [CE]  class,  interface,  or  enum  expected  [FE]                                                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  n,  left,  requiresLevel);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  n,  left,  requiresLevel);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
105	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  left);  [CE]  class,  interface,  or  enum  expected  [FE]                                                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeUtil.removeChild(parent,  left);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeUtil.removeChild(parent,  left);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
106	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiredLevel);  [CE]  class,  interface,  or  enum  expected  [FE]                                                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiredLevel);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  requiredLevel);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
107	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  left,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  n,  left,  this);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  n,  left,  this);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
108	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
109	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(provided  ==  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(provided  ==  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    if(provided  ==  null  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
110	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  If(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  If(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    If(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
111	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;	  	non-compiled	[CE]  >  expected	21	None	add
112	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);	  	non-compiled	[CE]  >  expected	21	None	add
113	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getParent();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    Node  parent  =  n.getParent();	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
114	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
115	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  	non-compiled	[CE]  >  expected	21	None	add
116	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);	  	non-compiled	[CE]  >  expected	21	None	add
117	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	21	None	add
118	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	21	None	add
119	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    Node  parent  =  n.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
120	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	21	None	add
121	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.VAR);  [CE]  >  expected  [FE]                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.VAR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.VAR);	  	non-compiled	[CE]  >  expected	21	None	add
122	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	21	None	add
123	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
124	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  if(provided  ==  null  &&  left.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  if(provided  ==  null  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    if(provided  ==  null  &&  left.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
125	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    if(provided!=  null  &&  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
126	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  If(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  If(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    If(provided!=  null  &&  left.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  ';'  expected	33	None	add
127	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
128	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.VAR)  {  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  >  expected	33	None	add
129	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.VAR)  {  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  >  expected	33	None	add
130	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	33	None	add
131	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.VAR)  {  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  >  expected	33	None	add
132	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;	  	non-compiled	[CE]  >  expected	33	None	add
133	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	33	None	add
134	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	33	None	add
135	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  &&  left.getType()  ==  Token.VAR)  {  [CE]  >  expected  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  &&  left.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  >  expected	33	None	add
136	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.VAR);  [CE]  >  expected  [FE]                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.VAR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.VAR);	  	non-compiled	[CE]  >  expected	33	None	add
137	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  if(provided  ==  null  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  if(provided  ==  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    if(provided  ==  null  &&  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
138	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  if(provided!=  null  &&  parent!=  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  if(provided!=  null  &&  parent!=  null)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    if(provided!=  null  &&  parent!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
139	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  if(provided  ==  null  &&  parent!=  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  if(provided  ==  null  &&  parent!=  null)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    if(provided  ==  null  &&  parent!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
140	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  if(provided!=  null  &&  parent  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  if(provided!=  null  &&  parent  ==  null)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    if(provided!=  null  &&  parent  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
141	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  If(provided!=  null  &&  parent!=  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  If(provided!=  null  &&  parent!=  null)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    If(provided!=  null  &&  parent!=  null)  {	  	non-compiled	[CE]  ';'  expected	23	None	add
142	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;	  	non-compiled	[CE]  >  expected	23	None	add
143	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);	  	non-compiled	[CE]  >  expected	23	None	add
144	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.REQUIRE_ERROR)  {  parent.detachFromParent();  compiler.reportCodeChange();  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.REQUIRE_ERROR)  {  parent.detachFromParent();  compiler.reportCodeChange();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.REQUIRE_ERROR)  {  parent.detachFromParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  >  expected	23	None	add
145	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  n.getType()  ==  Token.REQUIRE)  {  parent.detachFromParent();  compiler.reportCodeChange();  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  n.getType()  ==  Token.REQUIRE)  {  parent.detachFromParent();  compiler.reportCodeChange();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  n.getType()  ==  Token.REQUIRE)  {  parent.detachFromParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  >  expected	23	None	add
146	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;	  	non-compiled	[CE]  >  expected	23	None	add
147	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT)  {  parent.detachFromParent();  compiler.reportCodeChange();  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT)  {  parent.detachFromParent();  compiler.reportCodeChange();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT)  {  parent.detachFromParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  >  expected	23	None	add
148	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  provided.getType()  ==  Token.REQUIRE)  {  parent.detachFromParent();  compiler.reportCodeChange();  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  provided.getType()  ==  Token.REQUIRE)  {  parent.detachFromParent();  compiler.reportCodeChange();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  provided.getType()  ==  Token.REQUIRE)  {  parent.detachFromParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  >  expected	23	None	add
149	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  n.getType()  ==  Token.REQUIRE_ERROR)  {  parent.detachFromParent();  compiler.reportCodeChange();  [CE]  >  expected  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  n.getType()  ==  Token.REQUIRE_ERROR)  {  parent.detachFromParent();  compiler.reportCodeChange();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  n.getType()  ==  Token.REQUIRE_ERROR)  {  parent.detachFromParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  >  expected	23	None	add
150	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  n.getType()  ==  Token.EXPR_RESULT)  {  parent.detachFromParent();  compiler.reportCodeChange();  [CE]  >  expected  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  n.getType()  ==  Token.EXPR_RESULT)  {  parent.detachFromParent();  compiler.reportCodeChange();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  n.getType()  ==  Token.EXPR_RESULT)  {  parent.detachFromParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  >  expected	23	None	add
151	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT)  {  parent.detachFromParent();  compiler.reportCodeChange  [CE]  >  expected  [FE]                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT)  {  parent.detachFromParent();  compiler.reportCodeChange  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT)  {  parent.detachFromParent();  compiler.reportCodeChange	  	non-compiled	[CE]  >  expected	23	None	add
152	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT)  {  parent.detachFromParent();  [CE]  >  expected  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT)  {  parent.detachFromParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT)  {  parent.detachFromParent();	  	non-compiled	[CE]  >  expected	23	None	add
153	[BUG]  [BUGGY]  if(left!=  null  &&  right.getType()  ==  Token.FUNCTION)  {  [CE]  cannot  find  symbol  right  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  right.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  right.getType()  ==  Token.FUNCTION)  {	  if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  right	18	None	replace
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left  ==  null  &&  left.getType()  ==  Token.FUNCTION)  {	  if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
155	[BUG]  [BUGGY]  if(left  ==  null  &&  left.getType()  ==  Token.FUNCTION)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left  ==  null  &&  left.getType()  ==  Token.FUNCTION)  {	  if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.EMPTY)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.EMPTY)  {	  if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
157	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.EMPTY)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.EMPTY)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.EMPTY)  {	  if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
158	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
159	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  if(provided  ==  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  if(provided  ==  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    if(provided  ==  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
160	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  If(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  If(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    If(provided!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
161	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;	  	non-compiled	[CE]  >  expected	25	None	add
162	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);	  	non-compiled	[CE]  >  expected	25	None	add
163	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	25	None	add
164	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  if(provided!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  if(provided!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    if(provided!=  null  &&  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
165	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  parent.detachFromParent();  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  parent.detachFromParent();  compiler.reportCodeChange();  }  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  parent.detachFromParent();  compiler.reportCodeChange();  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
166	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  parent  =  left.getParent();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  parent  =  left.getParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node  parent  =  left.getParent();	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
167	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  	non-compiled	[CE]  >  expected	25	None	add
168	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	25	None	add
169	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	25	None	add
170	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	25	None	add
171	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.VAR);  [CE]  >  expected  [FE]                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.VAR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.VAR);	  	non-compiled	[CE]  >  expected	25	None	add
172	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	25	None	add
173	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
174	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    if(provided  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
175	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  If(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  If(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    If(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
176	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
177	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FOR)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FOR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    if(provided!=  null  &&  parent.getType()  ==  Token.FOR)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
178	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  Node  parent  =  n.getParent();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  Node  parent  =  n.getParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    Node  parent  =  n.getParent();	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
179	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
180	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;	  	non-compiled	[CE]  >  expected	10	None	add
181	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    if(provided!=  null  &&  parent.getType()  ==  Token.GETPROP)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
182	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  If(provided  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  If(provided  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    If(provided  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
183	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);	  	non-compiled	[CE]  >  expected	10	None	add
184	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.BLOCK)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.BLOCK)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    if(provided!=  null  &&  parent.getType()  ==  Token.BLOCK)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
185	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.CALL)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    if(provided!=  null  &&  parent.getType()  ==  Token.CALL)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
186	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;  [CE]  >  expected  [FE]                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;	  	non-compiled	[CE]  >  expected	10	None	add
187	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    if(provided!=  null  &&  parent.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  provided!=  null)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  provided!=  null)  {	  if(provided!=    null    &&    parent!=    null)    {    	compilable	  [FE]  AssertionFailedError  	24	1	replace
189	[BUG]  [BUGGY]  if(parent!=  null  &&  provided!=  null)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  provided!=  null)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  provided!=  null)  {	  if(provided!=    null    &&    parent!=    null)    {    	compilable	  [FE]  AssertionFailedError  	24	1	replace
190	[BUG]  [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.REQUIRE)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.REQUIRE)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  provided.getType()  ==  Token.REQUIRE)  {	  if(provided!=    null    &&    parent!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
191	[BUG]  [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  provided.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
192	[BUG]  [BUGGY]  if(parent!=  null  &&  providedModule!=  null)  {  [CE]  cannot  find  symbol  providedModule  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  providedModule!=  null)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  providedModule!=  null)  {	  if(provided!=    null    &&    parent!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  providedModule	24	None	replace
193	[BUG]  [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.EXPR_RESULT)  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  provided.getType()  ==  Token.EXPR_RESULT)  {	  if(provided!=    null    &&    parent!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
194	[BUG]  [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.FUNCTION)  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  provided.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    &&    parent!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
195	[BUG]  [BUGGY]  if(parent!=  null  &&  provided.hasChildren())  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  provided.hasChildren())  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  provided.hasChildren())  {	  if(provided!=    null    &&    parent!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
196	[BUG]  [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.FUNCTION  &&  parent!=  null)  {  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.FUNCTION  &&  parent!=  null)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  provided.getType()  ==  Token.FUNCTION  &&  parent!=  null)  {	  if(provided!=    null    &&    parent!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
198	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
199	[BUG]  [BUGGY]  if(child!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  cannot  find  symbol  child  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(child!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(child!=  null  ||  parent.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  cannot  find  symbol  child	7	None	replace
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided  ==  null  &&  parent.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
201	[BUG]  [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.GETPROP)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided  ==  null  &&  parent.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
202	[BUG]  [BUGGY]  if(parent!=  null  ||  child.getType()  ==  Token.GETPROP)  {  [CE]  cannot  find  symbol  child  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  ||  child.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  ||  child.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  cannot  find  symbol  child	7	None	replace
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent  ==  null  &&  parent.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
204	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.GETPROP)  {  [FE]  AssertionFailedError  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  &&  parent.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
205	[BUG]  [BUGGY]  if(child  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  cannot  find  symbol  child  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(child  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(child  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  cannot  find  symbol  child	7	None	replace
206	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.REQUIRE)  {  [CE]  cannot  find  symbol  REQUIRE  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.REQUIRE)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.REQUIRE)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  cannot  find  symbol  REQUIRE	7	None	replace
207	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getString().equals( "require "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getString().equals( "require "))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  RuntimeException  	30	1	replace
208	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getString().equals( "require "))  {  [FE]  RuntimeException  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getString().equals( "require "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getString().equals( "require "))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  RuntimeException  	30	1	replace
209	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getString().equals( "prototype "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getString().equals( "prototype "))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  RuntimeException  	30	1	replace
210	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getString().equals( "prototype "))  {  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getString().equals( "prototype "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getString().equals( "prototype "))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  RuntimeException  	30	1	replace
211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  >=  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  >=  Token.NAME)  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
212	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  >=  Token.NAME)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  >=  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  >=  Token.NAME)  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
213	[BUG]  [BUGGY]  if(last!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  last  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(last!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(last!=  null  &&  left.getType()  ==  Token.NAME)  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  last	30	None	replace
214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getType()  ==  Token.FUNCTION)  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
215	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getType()  ==  Token.FUNCTION)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getType()  ==  Token.FUNCTION)  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
216	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  parent.equals(n.getString()))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  parent.equals(n.getString()))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  RuntimeException  	30	1	replace
217	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  parent.equals(n.getString()))  {  [FE]  RuntimeException  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  parent.equals(n.getString()))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  parent.equals(n.getString()))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  RuntimeException  	30	1	replace
218	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
219	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  if(provided  ==  null  ||  left.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  if(provided  ==  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    if(provided  ==  null  ||  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
220	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  If(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  If(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    If(provided!=  null  ||  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
221	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;	  	non-compiled	[CE]  >  expected	13	None	add
222	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);	  	non-compiled	[CE]  >  expected	13	None	add
223	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	13	None	add
224	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  If(provided  ==  null  ||  left.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  If(provided  ==  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    If(provided  ==  null  ||  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  ';'  expected	13	None	add
225	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  parent  =  left.getParent();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  parent  =  left.getParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    Node  parent  =  left.getParent();	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
226	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	13	None	add
227	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	13	None	add
228	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	13	None	add
229	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	13	None	add
230	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  >  expected  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  	non-compiled	[CE]  >  expected	13	None	add
231	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	13	None	add
232	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	13	None	add
233	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.REQUIRE)  {  [CE]  cannot  find  symbol  REQUIRE  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.REQUIRE)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.REQUIRE)  {	  if(provided    ==    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	non-compiled	[CE]  cannot  find  symbol  REQUIRE	5	None	replace
234	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME)  {	  if(provided    ==    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
235	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME)  {  [FE]  AssertionFailedError  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME)  {	  if(provided    ==    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
236	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent  ==  null  ||  parent.getType()  ==  Token.STRING)  {	  if(provided    ==    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
237	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.STRING)  {  [FE]  AssertionFailedError  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.STRING)  {	  if(provided    ==    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
238	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION)  {	  if(provided    ==    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
239	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [FE]  AssertionFailedError  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION)  {	  if(provided    ==    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
240	[BUG]  [BUGGY]  if(parent  ==  null  ||  provided.getType()  ==  Token.REQUIRE)  {  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  provided.getType()  ==  Token.REQUIRE)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  ||  provided.getType()  ==  Token.REQUIRE)  {	  if(provided    ==    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
241	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN)  {	  if(provided    ==    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
242	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [FE]  AssertionFailedError  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN)  {	  if(provided    ==    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.EMPTY)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent  ==  null  ||  parent.getType()  ==  Token.EMPTY)  {	  if(provided    ==    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
244	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.EMPTY)  {  [FE]  AssertionFailedError  [FE]                                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.EMPTY)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.EMPTY)  {	  if(provided    ==    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
245	[BUG]  [BUGGY]  if(child  ==  null  ||  parent.getType()  ==  Token.REQUIRE)  {  [CE]  cannot  find  symbol  child  [FE]                                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(child  ==  null  ||  parent.getType()  ==  Token.REQUIRE)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(child  ==  null  ||  parent.getType()  ==  Token.REQUIRE)  {	  if(provided    ==    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	non-compiled	[CE]  cannot  find  symbol  child	5	None	replace
246	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.REQUIRE)  {  [CE]  cannot  find  symbol  REQUIRE  [FE]                                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.REQUIRE)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  ||  parent.getType()!=  Token.REQUIRE)  {	  if(provided    ==    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	non-compiled	[CE]  cannot  find  symbol  REQUIRE	5	None	replace
247	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
248	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
249	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.OBJECTLIT)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
250	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.OBJECTLIT)  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.OBJECTLIT)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
251	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CALL)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.CALL)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
252	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CALL)  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.CALL)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.CALL)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
253	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.RESULT)  {  [CE]  cannot  find  symbol  RESULT  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.RESULT)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.RESULT)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.REQUIRE)    {    	non-compiled	[CE]  cannot  find  symbol  RESULT	2	None	replace
254	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.REQUIRE)  {  [CE]  cannot  find  symbol  REQUIRE  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.REQUIRE)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  &&  parent.getType()  ==  Token.REQUIRE)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.REQUIRE)    {    	non-compiled	[CE]  cannot  find  symbol  REQUIRE	2	None	replace
255	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent  ==  null  &&  parent.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
256	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.VAR)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  &&  parent.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
257	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.BLOCK)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.BLOCK)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
258	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.BLOCK)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.BLOCK)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.BLOCK)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
259	[BUG]  [BUGGY]  if(child!=  null  &&  parent.getType()  ==  Token.VAR)  {  [CE]  cannot  find  symbol  child  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(child!=  null  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(child!=  null  &&  parent.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  cannot  find  symbol  child	28	None	replace
260	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
261	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
262	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left  ==  null  ||  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
263	[BUG]  [BUGGY]  if(left  ==  null  ||  left.getType()  ==  Token.NAME)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left  ==  null  ||  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
264	[BUG]  [BUGGY]  if(left!=  null  ||  provided.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  ||  provided.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  ||  provided.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
265	[BUG]  [BUGGY]  if(right!=  null  ||  left.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  right  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(right!=  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(right!=  null  ||  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  right	14	None	replace
266	[BUG]  [BUGGY]  if(left!=  null  ||  right.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  right  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  ||  right.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  ||  right.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  right	14	None	replace
267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent  ==  null  ||  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
268	[BUG]  [BUGGY]  if(parent  ==  null  ||  left.getType()  ==  Token.NAME)  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  ||  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided  ==  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided  ==  null  &&  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
270	[BUG]  [BUGGY]  if(provided  ==  null  &&  left.getType()  ==  Token.NAME)  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided  ==  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided  ==  null  &&  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
271	[BUG]  [BUGGY]  if(left  >=  null  ||  left.getType()  ==  Token.NAME)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  >=  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left  >=  null  ||  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	14	None	replace
272	[BUG]  [BUGGY]  if(child!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  cannot  find  symbol  child  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(child!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(child!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  child	9	None	replace
273	[BUG]  [BUGGY]  if(child!=  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  child  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(child!=  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(child!=  null  ||  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  child	4	None	replace
274	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided  ==  null  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
275	[BUG]  [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.NAME)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided  ==  null  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
276	[BUG]  [BUGGY]  if(parent!=  null  ||  child.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  child  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  ||  child.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  ||  child.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  child	4	None	replace
277	[BUG]  [BUGGY]  if(child  ==  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  child  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(child  ==  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(child  ==  null  ||  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  child	4	None	replace
278	[BUG]  [BUGGY]  if(parent!=  null  ||  provided.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  ||  provided.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  ||  provided.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
279	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
280	[BUG]  [BUGGY]  if(parent!=  null  &&  left.getType()  ==  Token.STRING)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
281	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left  ==  null  &&  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
282	[BUG]  [BUGGY]  if(left  ==  null  &&  left.getType()  ==  Token.STRING)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left  ==  null  &&  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
283	[BUG]  [BUGGY]  if(right!=  null  &&  left.getType()  ==  Token.STRING)  {  [CE]  cannot  find  symbol  right  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(right!=  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(right!=  null  &&  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  right	32	None	replace
284	[BUG]  [BUGGY]  if(left!=  null  &&  right.getType()  ==  Token.STRING)  {  [CE]  cannot  find  symbol  right  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  right.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  right.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  right	32	None	replace
285	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  parent.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  parent.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
286	[BUG]  [BUGGY]  if(left!=  null  &&  parent.getType()  ==  Token.STRING)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  parent.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  parent.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
287	[BUG]  [BUGGY]  if(left!=  null  &&  provided.getType()  ==  Token.STRING)  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  provided.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  provided.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
288	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent  ==  null  &&  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
289	[BUG]  [BUGGY]  if(parent  ==  null  &&  left.getType()  ==  Token.STRING)  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  &&  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
290	[BUG]  [BUGGY]  if(left  >=  null  &&  left.getType()  ==  Token.STRING)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  >=  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left  >=  null  &&  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	32	None	replace
291	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
292	[BUG]  [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
293	[BUG]  [BUGGY]  if(child!=  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  child  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(child!=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(child!=  null  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  child	22	None	replace
294	[BUG]  [BUGGY]  if(parent!=  null  &&  child.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  child  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  child.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  child.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  child	22	None	replace
295	[BUG]  [BUGGY]  if(parent  >=  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  >=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  >=  null  &&  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	22	None	replace
296	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
297	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  if(provided  ==  null  &&  left.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  if(provided  ==  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    if(provided  ==  null  &&  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
298	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  If(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  If(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    If(provided!=  null  &&  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  ';'  expected	31	None	add
299	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  Node  parent  =  left.getParent();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  Node  parent  =  left.getParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    Node  parent  =  left.getParent();	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
300	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;	  	non-compiled	[CE]  >  expected	31	None	add
301	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);	  	non-compiled	[CE]  >  expected	31	None	add
302	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	31	None	add
303	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	31	None	add
304	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	31	None	add
305	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION;  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION;	  	non-compiled	[CE]  >  expected	31	None	add
306	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	31	None	add
307	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	31	None	add
308	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  >  expected  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  	non-compiled	[CE]  >  expected	31	None	add
309	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	31	None	add
310	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;  [CE]  >  expected  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;	  	non-compiled	[CE]  >  expected	31	None	add
311	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
312	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  if(provided  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  if(provided  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    if(provided  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
313	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  If(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  If(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    If(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
314	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	15	None	add
315	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	15	None	add
316	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  If(provided  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  If(provided  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    If(provided  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
317	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	15	None	add
318	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	15	None	add
319	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;	  	non-compiled	[CE]  >  expected	15	None	add
320	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_MAPPING_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	15	None	add
321	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_RESULT_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_RESULT_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_RESULT_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	15	None	add
322	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	15	None	add
323	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NODE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NODE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NODE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	15	None	add
324	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	15	None	add
325	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [CE]  >  expected  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);	  	non-compiled	[CE]  >  expected	15	None	add
326	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
327	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided  ==  null  &&  parent.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided  ==  null  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    if(provided  ==  null  &&  parent.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
328	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
329	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  If(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  If(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    If(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  ';'  expected	27	None	add
330	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
331	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    if(provided  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
332	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  Node  parent  =  n.getParent();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  Node  parent  =  n.getParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    Node  parent  =  n.getParent();	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
333	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;	  	non-compiled	[CE]  >  expected	27	None	add
334	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  parent.getType()  ==  Token.BLOCK)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  parent.getType()  ==  Token.BLOCK)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    if(provided!=  null  &&  parent.getType()  ==  Token.BLOCK)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
335	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);	  	non-compiled	[CE]  >  expected	27	None	add
336	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;	  	non-compiled	[CE]  >  expected	27	None	add
337	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided  ==  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided  ==  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    if(provided  ==  null  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
338	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  If(provided  ==  null  &&  parent.getType()  ==  Token.VAR)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  If(provided  ==  null  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    If(provided  ==  null  &&  parent.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  ';'  expected	27	None	add
339	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FOR)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FOR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    if(provided!=  null  &&  parent.getType()  ==  Token.FOR)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
340	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  parent.getType()  ==  Token.CALL)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  parent.getType()  ==  Token.CALL)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    if(provided!=  null  &&  parent.getType()  ==  Token.CALL)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
341	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  if(provided  ==  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  if(provided  ==  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    if(provided  ==  null  ||  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
342	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
343	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getParent();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    Node  parent  =  n.getParent();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
344	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  If(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  If(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    If(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
345	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  If(provided  ==  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  If(provided  ==  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    If(provided  ==  null  ||  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
346	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;	  	non-compiled	[CE]  >  expected	3	None	add
347	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);	  	non-compiled	[CE]  >  expected	3	None	add
348	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  	non-compiled	[CE]  >  expected	3	None	add
349	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	3	None	add
350	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);	  	non-compiled	[CE]  >  expected	3	None	add
351	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  was:  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  was:  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  was:  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  ';'  expected	3	None	add
352	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	3	None	add
353	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    Node  parent  =  n.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
354	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	3	None	add
355	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	3	None	add
356	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  if(provided  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  if(provided  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    if(provided  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
357	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
358	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  If(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  If(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    If(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
359	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  Node  parent  =  n.getParent();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  Node  parent  =  n.getParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    Node  parent  =  n.getParent();	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
360	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  If(provided  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  If(provided  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    If(provided  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {	  	non-compiled	[CE]  ';'  expected	6	None	add
361	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  >  expected	6	None	add
362	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  >  expected	6	None	add
363	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  >  expected	6	None	add
364	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  >  expected	6	None	add
365	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  n.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  n.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  n.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  >  expected	6	None	add
366	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_RESULT_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_RESULT_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_RESULT_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  >  expected	6	None	add
367	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  >  expected  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.GETPROP)  {	  	non-compiled	[CE]  >  expected	6	None	add
368	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  n.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  [CE]  >  expected  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  n.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  n.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  >  expected	6	None	add
369	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  }  [CE]  >  expected  [FE]                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  }  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  compiler.reportCodeChange();  }	  	non-compiled	[CE]  >  expected	6	None	add
370	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  [CE]  >  expected  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  parent.detachFromParent();	  	non-compiled	[CE]  >  expected	6	None	add
371	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  if(provided  ==  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  if(provided  ==  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    if(provided  ==  null  ||  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
372	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
373	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  If(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  If(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    If(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
374	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  If(provided  ==  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  If(provided  ==  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    If(provided  ==  null  ||  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  ';'  expected	8	None	add
375	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  Node  parent  =  n.getParent();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  Node  parent  =  n.getParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    Node  parent  =  n.getParent();	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
376	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	8	None	add
377	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  if(provided  ==  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  if(provided  ==  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    if(provided  ==  null  ||  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
378	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR;	  	non-compiled	[CE]  >  expected	8	None	add
379	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	8	None	add
380	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
381	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	8	None	add
382	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [CE]  >  expected  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);	  	non-compiled	[CE]  >  expected	8	None	add
383	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	8	None	add
384	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;  [CE]  >  expected  [FE]                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_REQUIRE_ERROR;	  	non-compiled	[CE]  >  expected	8	None	add
385	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  n.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  n.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	8	None	add
386	[BUG]  [BUGGY]  if(parent!=  null  ||  provided.getType()  ==  Token.REQUIRE)  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  ||  provided.getType()  ==  Token.REQUIRE)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  ||  provided.getType()  ==  Token.REQUIRE)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
387	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.RESULT)  {  [CE]  cannot  find  symbol  RESULT  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.RESULT)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.RESULT)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	non-compiled	[CE]  cannot  find  symbol  RESULT	1	None	replace
388	[BUG]  [BUGGY]  if(child!=  null  ||  parent.getType()  ==  Token.REQUIRE)  {  [CE]  cannot  find  symbol  child  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(child!=  null  ||  parent.getType()  ==  Token.REQUIRE)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(child!=  null  ||  parent.getType()  ==  Token.REQUIRE)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	non-compiled	[CE]  cannot  find  symbol  child	1	None	replace
389	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	16	1	replace
390	[BUG]  [BUGGY]  if(left  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	16	1	replace
391	[BUG]  [BUGGY]  if(right!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  cannot  find  symbol  right  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(right!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(right!=  null  ||  left.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  right	16	None	replace
392	[BUG]  [BUGGY]  if(left!=  null  ||  left.getType()  ==  Token.REQUIRE)  {  [CE]  cannot  find  symbol  REQUIRE  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  ||  left.getType()  ==  Token.REQUIRE)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  ||  left.getType()  ==  Token.REQUIRE)  {	  if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  REQUIRE	16	None	replace
393	[BUG]  [BUGGY]  if(left!=  null  ||  right.getType()  ==  Token.FUNCTION)  {  [CE]  cannot  find  symbol  right  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  ||  right.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  ||  right.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  right	16	None	replace
394	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	16	1	replace
395	[BUG]  [BUGGY]  if(parent  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  ||  left.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	16	1	replace
396	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left  ==  null  ||  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
397	[BUG]  [BUGGY]  if(left  ==  null  ||  left.getType()  ==  Token.STRING)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left  ==  null  ||  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
398	[BUG]  [BUGGY]  if(right!=  null  ||  left.getType()  ==  Token.STRING)  {  [CE]  cannot  find  symbol  right  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(right!=  null  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(right!=  null  ||  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  right	20	None	replace
399	[BUG]  [BUGGY]  if(left!=  null  ||  right.getType()  ==  Token.STRING)  {  [CE]  cannot  find  symbol  right  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  ||  right.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  ||  right.getType()  ==  Token.STRING)  {	  if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  right	20	None	replace
400	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent  ==  null  ||  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
401	[BUG]  [BUGGY]  if(parent  ==  null  ||  left.getType()  ==  Token.STRING)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  ||  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
402	[BUG]  [BUGGY]  if(left!=  null  ||  provided.getType()  ==  Token.STRING)  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  ||  provided.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  ||  provided.getType()  ==  Token.STRING)  {	  if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
403	[BUG]  [BUGGY]  if(left  >=  null  ||  left.getType()  ==  Token.STRING)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  >=  null  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left  >=  null  ||  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	20	None	replace
404	[BUG]  [BUGGY]  if(child!=  null  ||  left.getType()  ==  Token.STRING)  {  [CE]  cannot  find  symbol  child  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(child!=  null  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(child!=  null  ||  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  child	20	None	replace
405	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  NodeUtil.isExpressionNode(parent))  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  NodeUtil.isExpressionNode(parent))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  NodeUtil.isExpressionNode(parent))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
406	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  NodeUtil.isLiteralValue(left))  {  [CE]  method  isLiteralValue  in  class  NodeUtil  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  NodeUtil.isLiteralValue(left))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  NodeUtil.isLiteralValue(left))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  method  isLiteralValue  in  class  NodeUtil  cannot  be  applied  to  given  types;	30	None	replace
407	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	25	None	add
408	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  left  =  left.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
409	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	25	None	add
410	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node  left  =  left.getNext();	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
411	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	25	None	add
412	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getFirstChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node  left  =  left.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
413	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	25	None	add
414	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	25	None	add
415	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	25	None	add
416	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  n.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    Node  left  =  n.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
417	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	25	None	add
418	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  NodeTraversal.traverse(compiler,  left,  this);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  NodeTraversal.traverse(compiler,  left,  this);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    NodeTraversal.traverse(compiler,  left,  this);	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
419	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	25	None	add
420	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_ERROR  ||  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_ERROR  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_ERROR  ||  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	19	None	add
421	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  NodeTraversal.traverse(compiler,  left,  this);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  NodeTraversal.traverse(compiler,  left,  this);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    NodeTraversal.traverse(compiler,  left,  this);	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
422	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  Node>  left  =  left.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
423	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  Node  left  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  Node  left  =  n.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    Node  left  =  n.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
424	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  Node  left  =  left.getNext();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  Node  left  =  left.getNext();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    Node  left  =  left.getNext();	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
425	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  LATE_PROVIDE_ERROR  ||  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  LATE_PROVIDE_ERROR  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  LATE_PROVIDE_ERROR  ||  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	19	None	add
426	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives());  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives());	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
427	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  	non-compiled	[CE]  >  expected	19	None	add
428	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  Node  left  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  Node  left  =  n.getLastChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    Node  left  =  n.getLastChild();	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
429	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	19	None	add
430	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  ||  parent.getType()  ==  Token.STRING)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	1	1	replace
431	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.STRING)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  ||  parent.getType()  ==  Token.STRING)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	1	1	replace
432	[BUG]  [BUGGY]  if(parent!=  null  ||  left.getType()  ==  Token.REQUIRE)  {  [CE]  cannot  find  symbol  REQUIRE  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  ||  left.getType()  ==  Token.REQUIRE)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  ||  left.getType()  ==  Token.REQUIRE)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	non-compiled	[CE]  cannot  find  symbol  REQUIRE	1	None	replace
433	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
434	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
435	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	8	None	add
436	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
437	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  Node  parent  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  Node  parent  =  n.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    Node  parent  =  n.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
438	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  Node  parent  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  Node  parent  =  n.getLastChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    Node  parent  =  n.getLastChild();	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
439	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	8	None	add
440	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
441	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	8	None	add
442	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	8	None	add
443	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.VAR)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  >  expected	33	None	add
444	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  Node>  left  =  left.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
445	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  Node  left  =  left.getNext();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  Node  left  =  left.getNext();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    Node  left  =  left.getNext();	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
446	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.VAR)  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  >  expected	33	None	add
447	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  Node  left  =  left.getFirstChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  Node  left  =  left.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    Node  left  =  left.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
448	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	33	None	add
449	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  Node  parent  =  left.getParent();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  Node  parent  =  left.getParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    Node  parent  =  left.getParent();	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
450	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.VAR)  {  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  >  expected	33	None	add
451	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	33	None	add
452	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left!=  null  &&  left.getType()  ==  Token.VAR)  {  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left!=  null  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left!=  null  &&  left.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  >  expected	33	None	add
453	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	33	None	add
454	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  Node  left  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  Node  left  =  n.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    Node  left  =  n.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
455	[BUG]  [BUGGY]  if(left!=  null  ||  provided.getType()  ==  Token.FUNCTION)  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  ||  provided.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  ||  provided.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
456	[BUG]  [BUGGY]  if(right!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  cannot  find  symbol  right  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(right!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(right!=  null  &&  left.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  right	16	None	replace
457	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
458	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
459	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.VAR)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  >  expected	27	None	add
460	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
461	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
462	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
463	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	27	None	add
464	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	27	None	add
465	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  Node>  left  =  provided.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
466	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.VAR)  {  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  >  expected	27	None	add
467	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
468	[BUG]  [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided  ==  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
469	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NEW)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.NEW)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
470	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NEW)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NEW)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NEW)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
471	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  Node  left  =  left.getNext();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  Node  left  =  left.getNext();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    Node  left  =  left.getNext();	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
472	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  Node>  left  =  left.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
473	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_ERROR  ||  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_ERROR  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_ERROR  ||  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	31	None	add
474	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_ERROR  &&  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_ERROR  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_ERROR  &&  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	31	None	add
475	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  Node  left  =  left.getFirstChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  Node  left  =  left.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    Node  left  =  left.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
476	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  NodeTraversal.traverse(compiler,  left,  this);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  NodeTraversal.traverse(compiler,  left,  this);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    NodeTraversal.traverse(compiler,  left,  this);	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
477	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	31	None	add
478	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  Node  left  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  Node  left  =  n.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    Node  left  =  n.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
479	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	31	None	add
480	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
481	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
482	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
483	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  Node>  left  =  left.getNext();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  Node>  left  =  left.getNext();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  Node>  left  =  left.getNext();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
484	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.GETPROP)  {  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.GETPROP)  {	  	non-compiled	[CE]  >  expected	6	None	add
485	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  parent.getType()  ==  Token.GETPROP)  {	  	non-compiled	[CE]  >  expected	6	None	add
486	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
487	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
488	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  Node  parent  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  Node  parent  =  n.getLastChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    Node  parent  =  n.getLastChild();	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
489	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.GETPROP)  {  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.GETPROP)  {	  	non-compiled	[CE]  >  expected	6	None	add
490	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
491	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  Node  parent  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  Node  parent  =  n.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    Node  parent  =  n.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
492	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  if(provided!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  if(provided!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    if(provided!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
493	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	13	None	add
494	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  left  =  left.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
495	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	13	None	add
496	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  NodeTraversal.traverse(compiler,  left,  this);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  NodeTraversal.traverse(compiler,  left,  this);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    NodeTraversal.traverse(compiler,  left,  this);	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
497	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  n.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    Node  left  =  n.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
498	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    Node  left  =  left.getNext();	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
499	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	13	None	add
500	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  n.getLastChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    Node  left  =  n.getLastChild();	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
501	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives());  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives());	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
502	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	13	None	add
503	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    Node  left  =  left.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
504	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives());  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitives());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
505	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  providedModule,  error);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  n,  providedModule,  error);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  n,  providedModule,  error);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
506	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitive(t,  n));  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitive(t,  n));  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitive(t,  n));	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
507	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  providedModule);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  n,  providedModule);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  n,  providedModule);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
508	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  providedModule,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  n,  providedModule,  this);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  n,  providedModule,  this);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
509	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  providedModule,  false);  [CE]  class,  interface,  or  enum  expected  [FE]                                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  n,  providedModule,  false);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  n,  providedModule,  false);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
510	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  n,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  left,  n,  this);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  left,  n,  this);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
511	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitive());  [CE]  class,  interface,  or  enum  expected  [FE]                                              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitive());  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  left,  new  ProcessClosurePrimitive());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
512	[BUG]  [BUGGY]  if(parent  ==  null  ||  left.getType()  ==  Token.REQUIRE)  {  [CE]  cannot  find  symbol  REQUIRE  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  left.getType()  ==  Token.REQUIRE)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  ||  left.getType()  ==  Token.REQUIRE)  {	  if(provided    ==    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	non-compiled	[CE]  cannot  find  symbol  REQUIRE	5	None	replace
513	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
514	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  Node  parent  =  n.getParent();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  Node  parent  =  n.getParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    Node  parent  =  n.getParent();	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
515	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent!=  null)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent!=  null)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent!=  null)  {	  	non-compiled	[CE]  >  expected	23	None	add
516	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT)  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT)  {	  	non-compiled	[CE]  >  expected	23	None	add
517	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
518	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
519	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  Node>  left  =  provided.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
520	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent!=  null)  {  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent!=  null)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent!=  null)  {	  	non-compiled	[CE]  >  expected	23	None	add
521	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  Node>  left  =  provided.getParent();  maybeAddStringNodeToSymbolTable(left);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  Node>  left  =  provided.getParent();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  Node>  left  =  provided.getParent();  maybeAddStringNodeToSymbolTable(left);	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
522	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	23	None	add
523	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	15	None	add
524	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  Node>  left  =  left.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
525	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  Node  parent  =  left.getParent();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  Node  parent  =  left.getParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    Node  parent  =  left.getParent();	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
526	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	15	None	add
527	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	15	None	add
528	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  n.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    Node  left  =  n.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
529	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  NodeTraversal.traverse(compiler,  left,  this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  NodeTraversal.traverse(compiler,  left,  this);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    NodeTraversal.traverse(compiler,  left,  this);	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
530	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	15	None	add
531	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  left.getNext();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  left.getNext();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    Node  left  =  left.getNext();	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
532	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  n.getLastChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    Node  left  =  n.getLastChild();	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
533	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.EXPECTED)  {  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.EXPECTED)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.EXPECTED)  {	  	non-compiled	[CE]  >  expected	15	None	add
534	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
535	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.EXPR_RESULT);  [CE]  >  expected  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  >  expected	15	None	add
536	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.FOR)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
537	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FOR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.FOR)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
538	[BUG]  [BUGGY]  if(left!=  null  &&  right.getType()  ==  Token.VAR)  {  [CE]  cannot  find  symbol  right  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  right.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  right.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  cannot  find  symbol  right	34	None	replace
539	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NEW)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.NEW)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
540	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NEW)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NEW)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NEW)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
541	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	10	None	add
542	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
543	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	10	None	add
544	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
545	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  Node>  left  =  provided.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
546	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	10	None	add
547	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  Node  parent  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  Node  parent  =  n.getLastChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    Node  parent  =  n.getLastChild();	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
548	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	10	None	add
549	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  Node  parent  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  Node  parent  =  n.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    Node  parent  =  n.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
550	[BUG]  [BUGGY]  if(left  ==  null  ||  provided.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  ||  provided.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left  ==  null  ||  provided.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
551	[BUG]  [BUGGY]  if(child!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  child  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(child!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(child!=  null  &&  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  child	26	None	replace
552	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
553	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
554	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  left.getNext();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  left.getNext();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  left  =  left.getNext();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
555	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	3	None	add
556	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
557	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	3	None	add
558	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getLastChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    Node  parent  =  n.getLastChild();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
559	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
560	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	3	None	add
561	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	3	None	add
562	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	3	None	add
563	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
564	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided  ==  null  &&  parent.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
565	[BUG]  [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.VAR)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided  ==  null  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided  ==  null  &&  parent.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
566	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FOR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.FOR)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
567	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FOR)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FOR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.FOR)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	28	1	replace
568	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getFirstChild();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    Node  left  =  left.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
569	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getNext();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    Node  left  =  left.getNext();	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
570	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	29	None	add
571	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getFirstChild();  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  left.getFirstChild();  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    Node  left  =  left.getFirstChild();  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
572	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  Node  left  =  n.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    Node  left  =  n.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
573	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	29	None	add
574	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	29	None	add
575	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  left  =  left.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
576	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	29	None	add
577	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	29	None	add
578	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	29	None	add
579	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	29	None	add
580	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  left  =  left.getFirstChild();  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
581	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  left.getFirstChild();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  left.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    Node  left  =  left.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
582	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  left.getNext();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  left.getNext();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    Node  left  =  left.getNext();	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
583	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  Node>  left  =  left.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
584	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  n.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    Node  left  =  n.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
585	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.STRING)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
586	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.EMPTY)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.EMPTY)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  left.getType()  ==  Token.EMPTY)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
587	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  left.getLastChild();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  left.getLastChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    Node  left  =  left.getLastChild();	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
588	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  n.getLastChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    Node  left  =  n.getLastChild();	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
589	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.BASE_CLASS)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.BASE_CLASS)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  left.getType()  ==  Token.BASE_CLASS)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
590	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  &&  parent.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
591	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.STRING)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  parent.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
592	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.ASSIGN)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.ASSIGN)  {	  if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
593	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.ASSIGN)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.ASSIGN)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.ASSIGN)  {	  if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	18	1	replace
594	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  &&  parent.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
595	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.GETPROP)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  parent.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
596	[BUG]  [BUGGY]  if(child!=  null  &&  parent.getType()  ==  Token.GETPROP)  {  [CE]  cannot  find  symbol  child  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(child!=  null  &&  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(child!=  null  &&  parent.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  cannot  find  symbol  child	7	None	replace
597	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  parent.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
598	[BUG]  [BUGGY]  if(left!=  null  &&  parent.getType()  ==  Token.GETPROP)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  parent.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
599	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	21	None	add
600	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
601	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
602	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	21	None	add
603	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  left  =  parent.getFirstChild();  maybeAddStringNodeToSymbolTable(left);	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
604	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	21	None	add
605	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  left.getNext();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  left.getNext();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  left  =  left.getNext();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
606	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
607	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	21	None	add
608	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  Node  parent  =  n.getLastChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    Node  parent  =  n.getLastChild();	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
609	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  Node>  left  =  provided.getFirstChild();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  Node>  left  =  provided.getFirstChild();	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
610	[BUG]  [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.GETPROP)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  provided.getType()  ==  Token.GETPROP)  {	  if(provided!=    null    &&    parent!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
611	[BUG]  [BUGGY]  if(child!=  null  &&  parent!=  null)  {  [CE]  cannot  find  symbol  child  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(child!=  null  &&  parent!=  null)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(child!=  null  &&  parent!=  null)  {	  if(provided!=    null    &&    parent!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  child	24	None	replace
612	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided  ==  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided  ==  null  &&  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
613	[BUG]  [BUGGY]  if(provided  ==  null  &&  left.getType()  ==  Token.STRING)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided  ==  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided  ==  null  &&  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
614	[BUG]  [BUGGY]  if(child!=  null  &&  left.getType()  ==  Token.STRING)  {  [CE]  cannot  find  symbol  child  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(child!=  null  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(child!=  null  &&  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  child	32	None	replace
615	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  &&  left.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	16	1	replace
616	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  left.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    	compilable	  [FE]  AssertionFailedError  	16	1	replace
617	[BUG]  [BUGGY]  if(left  ==  null  ||  provided.getType()  ==  Token.FUNCTION)  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  ||  provided.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left  ==  null  ||  provided.getType()  ==  Token.FUNCTION)  {	  if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
618	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.hasChildren())  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.hasChildren())  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
619	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.hasChildren())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.hasChildren())  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.hasChildren())  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
620	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(parent))  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(parent))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(parent))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
621	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "require "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "require "))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
622	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "require "))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "require "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "require "))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
623	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getChildCount()  >  1)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getChildCount()  >  1)  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
624	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getChildCount()  >  1)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getChildCount()  >  1)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getChildCount()  >  1)  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
625	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(parent))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(parent))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
626	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(parent))  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(parent))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(parent))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
627	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "prototype "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "prototype "))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
628	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "prototype "))  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "prototype "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "prototype "))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
629	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().endsWith( "__ "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().endsWith( "__ "))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
630	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().endsWith( "__ "))  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().endsWith( "__ "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().endsWith( "__ "))  {	  if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	30	1	replace
631	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  left,  requiredModule);  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  n,  left,  requiredModule);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  n,  left,  requiredModule);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
632	[BUG]  [BUGGY]  ns.putBooleanProp(Node.SOURCENAME_PROP,  true);  [CE]  class,  interface,  or  enum  expected  [FE]                                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  ns.putBooleanProp(Node.SOURCENAME_PROP,  true);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	ns.putBooleanProp(Node.SOURCENAME_PROP,  true);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
633	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  left));  [CE]  class,  interface,  or  enum  expected  [FE]                                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  left));  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  left));	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
634	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiredModule);  [CE]  class,  interface,  or  enum  expected  [FE]                                      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiredModule);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  requiredModule);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
635	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosureRequire());  [CE]  class,  interface,  or  enum  expected  [FE]                                        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  NodeTraversal.traverse(compiler,  left,  new  ProcessClosureRequire());  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	NodeTraversal.traverse(compiler,  left,  new  ProcessClosureRequire());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
636	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	15	None	add
637	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	15	None	add
638	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.FUNCTION);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.FUNCTION);	  	non-compiled	[CE]  >  expected	15	None	add
639	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.FUNCTION	  	non-compiled	[CE]  >  expected	15	None	add
640	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  parent.detachFromParent();  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  parent.detachFromParent();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.FUNCTION)  {  parent.detachFromParent();	  	non-compiled	[CE]  >  expected	15	None	add
641	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
642	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.NAME)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
643	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.VAR)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
644	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.VAR)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.VAR)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
645	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.CALL)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.CALL)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
646	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.CALL)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.CALL)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.CALL)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
647	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.EXPECTED)  {  [CE]  cannot  find  symbol  EXPECTED  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.EXPECTED)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.EXPECTED)  {	  if(provided    ==    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	non-compiled	[CE]  cannot  find  symbol  EXPECTED	5	None	replace
648	[BUG]  [BUGGY]  if(parent!=  null  &&  provided.contains(n.getString()))  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  provided.contains(n.getString()))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  provided.contains(n.getString()))  {	  if(provided!=    null    &&    parent!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
649	[BUG]  [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.VAR)  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  provided.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    parent!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
650	[BUG]  [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.STRING)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  provided.getType()  ==  Token.STRING)  {	  if(provided!=    null    &&    parent!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
651	[BUG]  [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.ASSIGN)  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.ASSIGN)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  provided.getType()  ==  Token.ASSIGN)  {	  if(provided!=    null    &&    parent!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
652	[BUG]  [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.BLOCK)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  provided.getType()  ==  Token.BLOCK)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  provided.getType()  ==  Token.BLOCK)  {	  if(provided!=    null    &&    parent!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
653	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME	  	non-compiled	[CE]  >  expected	25	None	add
654	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	25	None	add
655	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	25	None	add
656	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	25	None	add
657	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME	  	non-compiled	[CE]  >  expected	25	None	add
658	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.EXPECTED)  {  [CE]  cannot  find  symbol  EXPECTED  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.EXPECTED)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.EXPECTED)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  cannot  find  symbol  EXPECTED	11	None	replace
659	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided!=  null  &&  parent!=  null)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided!=  null  &&  parent!=  null)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided!=  null  &&  parent!=  null)  {	  	non-compiled	[CE]  >  expected	23	None	add
660	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR;	  	non-compiled	[CE]  >  expected	23	None	add
661	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
662	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT);  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  >  expected	23	None	add
663	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT);  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.EXPR_RESULT);	  	non-compiled	[CE]  >  expected	23	None	add
664	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  provided.getType()  ==  Token.VAR;  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  provided.getType()  ==  Token.VAR;  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  provided.getType()  ==  Token.VAR;	  	non-compiled	[CE]  >  expected	23	None	add
665	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getModule()));  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getModule()));  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getModule()));	  	non-compiled	[CE]  >  expected	23	None	add
666	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getModule(),  left,  left));  [CE]  >  expected  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getModule(),  left,  left));  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getModule(),  left,  left));	  	non-compiled	[CE]  >  expected	23	None	add
667	[BUG]  [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n));  [CE]  >  expected  [FE]                    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent!=  null)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n));  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent!=    null)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  error(t.getMessage(),  n));	  	non-compiled	[CE]  >  expected	23	None	add
668	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.NAME	  	non-compiled	[CE]  >  expected	13	None	add
669	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	13	None	add
670	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	13	None	add
671	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME	  	non-compiled	[CE]  >  expected	13	None	add
672	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  left.getType()  ==  Token.STRING  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  left.getType()  ==  Token.STRING  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  left.getType()  ==  Token.STRING	  	non-compiled	[CE]  >  expected	31	None	add
673	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING	  	non-compiled	[CE]  >  expected	31	None	add
674	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  &&  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  &&  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	31	None	add
675	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	31	None	add
676	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError.warning(t,  left,  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError.warning(t,  left,  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError.warning(t,  left,  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
677	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError.warning(t,  left,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError.warning(t,  left,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError.warning(t,  left,  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
678	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING);  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING);	  	non-compiled	[CE]  >  expected	31	None	add
679	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||!(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR);  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||!(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||!(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR);	  	non-compiled	[CE]  >  expected	8	None	add
680	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR);  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR);	  	non-compiled	[CE]  >  expected	8	None	add
681	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT))  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT))  {	  	non-compiled	[CE]  >  expected	8	None	add
682	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.ASSIGN))  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.ASSIGN))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.ASSIGN))  {	  	non-compiled	[CE]  >  expected	8	None	add
683	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  left.getFirstChild();  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  parent.detachFromParent();  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  left.getFirstChild();  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  parent.detachFromParent();  compiler.reportCodeChange();  }  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    Node  left  =  left.getFirstChild();  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  parent.detachFromParent();  compiler.reportCodeChange();  }	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
684	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  left.getFirstChild();  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  Node  left  =  left.getFirstChild();  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    Node  left  =  left.getFirstChild();  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
685	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  }  parent.detachFromParent();  compiler.reportCodeChange();  }  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  }  parent.detachFromParent();  compiler.reportCodeChange();  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
686	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  }  parent.detachFromParent();  compiler.reportCodeChange();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  }  parent.detachFromParent();  compiler.reportCodeChange();  }  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  }  parent.detachFromParent();  compiler.reportCodeChange();  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
687	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION  ||  left.getString().equals( "prototype "))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION  ||  left.getString().equals( "prototype "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  left.getType()  ==  Token.FUNCTION  ||  left.getString().equals( "prototype "))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
688	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION  ||  left.getString().equals( "require "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION  ||  left.getString().equals( "require "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  left.getType()  ==  Token.FUNCTION  ||  left.getString().equals( "require "))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
689	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left  >=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left  >=  null  &&  left.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left  >=  null  &&  left.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
690	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  }  parent.detachFromParent();  compiler.reportCodeChange();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  }  parent.detachFromParent();  compiler.reportCodeChange();  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.FUNCTION)    {    if(left!=  null  &&  left.getType()  ==  Token.FUNCTION)  {  }  parent.detachFromParent();  compiler.reportCodeChange();	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
691	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
692	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getType()  ==  Token.NAME)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=  null  &&  left.getType()  ==  Token.NAME  ||  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	14	1	replace
693	[BUG]  [BUGGY]  if(right  ==  null  ||  left.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  right  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(right  ==  null  ||  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(right  ==  null  ||  left.getType()  ==  Token.NAME)  {	  if(provided!=    null    ||    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol  right	14	None	replace
694	[BUG]  [BUGGY]  if(left  ==  null  ||  provided.getType()  ==  Token.STRING)  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left  ==  null  ||  provided.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left  ==  null  ||  provided.getType()  ==  Token.STRING)  {	  if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
695	[BUG]  [BUGGY]  if(right  ==  null  ||  left.getType()  ==  Token.STRING)  {  [CE]  cannot  find  symbol  right  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(right  ==  null  ||  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(right  ==  null  ||  left.getType()  ==  Token.STRING)  {	  if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  cannot  find  symbol  right	20	None	replace
696	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.VAR)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  >  expected	27	None	add
697	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.VAR);  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.VAR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.VAR);	  	non-compiled	[CE]  >  expected	27	None	add
698	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.VAR);  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.VAR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.VAR);	  	non-compiled	[CE]  >  expected	27	None	add
699	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.VAR)  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  >  expected	27	None	add
700	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.VAR);  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.VAR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.VAR);	  	non-compiled	[CE]  >  expected	27	None	add
701	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    if(provided!=  null  &&  parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
702	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.VAR)  {  if(provided!=  null  &&  parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.VAR)    {    if(provided!=  null  &&  parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
703	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.hasChildren())  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.hasChildren())  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
704	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.hasChildren())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.hasChildren())  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.hasChildren())  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
705	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(parent))  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(parent))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(parent))  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
706	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "require "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "require "))  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
707	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "require "))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "require "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "require "))  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
708	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getChildCount()  >  1)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getChildCount()  >  1)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
709	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getChildCount()  >  1)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getChildCount()  >  1)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getChildCount()  >  1)  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
710	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "prototype "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "prototype "))  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
711	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "prototype "))  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "prototype "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  left.getType()  ==  Token.NAME  &&  parent.getString().equals( "prototype "))  {	  if(provided!=    null    &&    left.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	26	1	replace
712	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left!=  null  &&  left.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	29	None	add
713	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  parent.detachFromParent();  compiler.reportCodeChange();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  parent.detachFromParent();  compiler.reportCodeChange();  }  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  parent.detachFromParent();  compiler.reportCodeChange();  }	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
714	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	29	None	add
715	[BUG]  [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left  ==  null  &&  left.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(left!=  null  &&  left.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left  ==  null  &&  left.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(left!=    null    &&    left.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left  ==  null  &&  left.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	29	None	add
716	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.EXPECTED)  {  [CE]  cannot  find  symbol  EXPECTED  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.EXPECTED)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.EXPECTED)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	non-compiled	[CE]  cannot  find  symbol  EXPECTED	1	None	replace
717	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	1	1	replace
718	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {	  if(provided!=    null    ||    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	1	1	replace
719	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left.getType()  ==  Token.VAR)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  left.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  >  expected	33	None	add
720	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.VAR);  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.VAR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.VAR);	  	non-compiled	[CE]  >  expected	33	None	add
721	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  left.getType()  ==  Token.VAR)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  left.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  >  expected	33	None	add
722	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.VAR)  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  >  expected	33	None	add
723	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.VAR  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.VAR  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.VAR	  	non-compiled	[CE]  >  expected	33	None	add
724	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.VAR);  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.VAR)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.VAR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  left.getType()  ==  Token.VAR);	  	non-compiled	[CE]  >  expected	33	None	add
725	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided  ==  null  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided  ==  null  &&  left.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
726	[BUG]  [BUGGY]  if(provided  ==  null  &&  left.getType()  ==  Token.VAR)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided  ==  null  &&  left.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided  ==  null  &&  left.getType()  ==  Token.VAR)  {	  if(provided!=    null    &&    left.getType()    ==    Token.VAR)    {    	compilable	  [FE]  AssertionFailedError  	34	1	replace
727	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(parent))  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(parent))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(parent))  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
728	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  left.getString().equals( "prototype "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  left.getString().equals( "prototype "))  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  RuntimeException  	22	1	replace
729	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  left.getString().equals( "prototype "))  {  [FE]  RuntimeException  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  left.getString().equals( "prototype "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  left.getString().equals( "prototype "))  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  RuntimeException  	22	1	replace
730	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  left.getString().equals( "require "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  left.getString().equals( "require "))  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  RuntimeException  	22	1	replace
731	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  left.getString().equals( "require "))  {  [FE]  RuntimeException  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  left.getString().equals( "require "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME  ||  left.getString().equals( "require "))  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  RuntimeException  	22	1	replace
732	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.hasChildren())  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.hasChildren())  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
733	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.hasChildren())  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.hasChildren())  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  parent.hasChildren())  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
734	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(parent))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(parent))  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
735	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(parent))  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(parent))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(parent))  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
736	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(parent))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(parent))  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
737	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(parent))  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(parent))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(parent))  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
738	[BUG]  [BUGGY]  [FE]  RuntimeException  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  ||  left.getString().equals( "require "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  &&  parent.getType()  ==  Token.NAME  ||  left.getString().equals( "require "))  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  RuntimeException  	22	1	replace
739	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  ||  left.getString().equals( "require "))  {  [FE]  RuntimeException  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  ||  left.getString().equals( "require "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  parent.getType()  ==  Token.NAME  ||  left.getString().equals( "require "))  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  RuntimeException  	22	1	replace
740	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(n))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(n))  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
741	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(n))  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(n))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  parent.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(n))  {	  if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
742	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
743	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  [FE]  AssertionFailedError  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {	  if(provided!=    null    &&    parent.getType()    ==    Token.REQUIRE)    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
744	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype "))  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
745	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().equals( "prototype "))  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
746	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  NodeUtil.isExpressionNode(parent))  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  NodeUtil.isExpressionNode(parent))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  NodeUtil.isExpressionNode(parent))  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
747	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  left.getString().equals( "prototype "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  left.getString().equals( "prototype "))  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
748	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  left.getString().equals( "prototype "))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  left.getString().equals( "prototype "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  left.getString().equals( "prototype "))  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
749	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().endsWith( "__ "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().endsWith( "__ "))  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
750	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().endsWith( "__ "))  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().endsWith( "__ "))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP  &&  parent.getLastChild().getString().endsWith( "__ "))  {	  if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    	compilable	  [FE]  AssertionFailedError  	7	1	replace
751	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING  &&  parent.hasChildren())  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	add	if(provided!=  null  &&  left.getType()  ==  Token.STRING  &&  parent.hasChildren())  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
752	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING  &&  parent.hasChildren())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING  &&  parent.hasChildren())  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  left.getType()  ==  Token.STRING  &&  parent.hasChildren())  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	compilable	  [FE]  AssertionFailedError  	32	1	replace
753	[BUG]  [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING  &&  NodeUtil.isExpressionNode(parent))  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  left.getType()  ==  Token.STRING  &&  NodeUtil.isExpressionNode(parent))  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=  null  &&  left.getType()  ==  Token.STRING  &&  NodeUtil.isExpressionNode(parent))  {	  if(provided!=    null    &&    left.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
754	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  left.getType()  ==  Token.STRING  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  left.getType()  ==  Token.STRING  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  ||  left.getType()  ==  Token.STRING	  	non-compiled	[CE]  >  expected	19	None	add
755	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING	  	non-compiled	[CE]  >  expected	19	None	add
756	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  &&  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	19	None	add
757	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  &&  left.getType()  ==  Token.STRING)  {  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  &&  left.getType()  ==  Token.STRING)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  &&  left.getType()  ==  Token.STRING)  {	  	non-compiled	[CE]  >  expected	19	None	add
758	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING);  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR  ||  left.getType()  ==  Token.STRING);	  	non-compiled	[CE]  >  expected	19	None	add
759	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError.warning(t,  left,  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError.warning(t,  left,  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError.warning(t,  left,  NON_STRING_PASSED_TO_SET_CSS_NAME_ERROR);	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
760	[BUG]  [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  left.getType()  ==  Token.STRING)  {  AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    left.getType()    ==    Token.STRING)    {    AssertionFailedError  <  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR);	  	non-compiled	[CE]  >  expected	19	None	add
761	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||!(parent.getType()  ==  Token.GETPROP);  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||!(parent.getType()  ==  Token.GETPROP);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||!(parent.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  >  expected	6	None	add
762	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  ||  left.getType()  ==  Token.GETPROP)  {	  	non-compiled	[CE]  >  expected	6	None	add
763	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  if(provided!=  null  ||  parent.getType()  ==  Token.SETPROP)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  if(provided!=  null  ||  parent.getType()  ==  Token.SETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    if(provided!=  null  ||  parent.getType()  ==  Token.SETPROP)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
764	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.GETPROP);  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.GETPROP);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  >  expected	6	None	add
765	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  if(provided!=  null  ||  parent.getType()  ==  Token.REQUIRE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  if(provided!=  null  ||  parent.getType()  ==  Token.REQUIRE)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    if(provided!=  null  ||  parent.getType()  ==  Token.REQUIRE)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
766	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  [CE]  >  expected  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.GETPROP)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  left.getType()  ==  Token.GETPROP)  {	  	non-compiled	[CE]  >  expected	6	None	add
767	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.GETPROP);  [CE]  >  expected  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.GETPROP);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.GETPROP)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.GETPROP);	  	non-compiled	[CE]  >  expected	6	None	add
768	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  provided.getType()  ==  Token.NAME)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  provided.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  provided.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  >  expected	21	None	add
769	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	21	None	add
770	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	21	None	add
771	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	21	None	add
772	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  provided.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	21	None	add
773	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  &&  parent.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	3	None	add
774	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||  parent.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	3	None	add
775	[BUG]  [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.NAME);  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  ||  parent.getType()  ==  Token.NAME)  {  AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.NAME);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    ||    parent.getType()    ==    Token.NAME)    {    AssertionFailedError  <  NON_STRING_REQUIRE_ERROR  ||!(parent.getType()  ==  Token.NAME);	  	non-compiled	[CE]  >  expected	3	None	add
776	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]    AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  parent.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	10	None	add
777	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
778	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  Node>  left  =  left.getFirstChild();  maybeAddStringNodeToSymbolTable(arg);	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
779	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
780	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  provided.getType()  ==  Token.FUNCTION)  {  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  provided.getType()  ==  Token.FUNCTION)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    AssertionFailedError  <  NON_STRING_PROVIDE_ERROR  &&  provided.getType()  ==  Token.FUNCTION)  {	  	non-compiled	[CE]  >  expected	10	None	add
781	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.ASSIGN)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.ASSIGN)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
782	[BUG]  [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPECTED)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  maybeAddToSymbolTable(left);  maybeAddStringNodeToSymbolTable(arg);          [BUGGY]  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPECTED)  {  [BUGGY]    parent.detachFromParent();  compiler.reportCodeChange();  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processRequireCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  provided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	329	329	1	replace	if(provided!=    null    &&    parent.getType()    ==    Token.FUNCTION)    {    if(provided!=  null  &&  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPECTED)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
