bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(n!=  null  &&!preprocessorSymbolTable.isEmpty())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&!preprocessorSymbolTable.isEmpty())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&!preprocessorSymbolTable.isEmpty())  {	  if(preprocessorSymbolTable!=    null    &&!preprocessorSymbolTable.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
2	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||!preprocessorSymbolTable.isEmpty())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||!preprocessorSymbolTable.isEmpty())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||!preprocessorSymbolTable.isEmpty())  {	  if(preprocessorSymbolTable!=    null    &&!preprocessorSymbolTable.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
3	[BUG]  [BUGGY]  if(n  ==  null  &&!preprocessorSymbolTable.isEmpty())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&!preprocessorSymbolTable.isEmpty())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n  ==  null  &&!preprocessorSymbolTable.isEmpty())  {	  if(preprocessorSymbolTable!=    null    &&!preprocessorSymbolTable.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
4	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.size()  >  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.size()  >  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.size()  >  0)  {	  if(preprocessorSymbolTable!=    null    ||    preprocessorSymbolTable.size()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
5	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.size()  >=  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.size()  >=  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.size()  >=  0)  {	  if(preprocessorSymbolTable!=    null    ||    preprocessorSymbolTable.size()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
6	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.size()  <  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.size()  <  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.size()  <  0)  {	  if(preprocessorSymbolTable!=    null    ||    preprocessorSymbolTable.size()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
7	[BUG]  [BUGGY]  if(n!=  null  &&  PreprocessorSymbolTable.hasReference(n))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  PreprocessorSymbolTable.hasReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  PreprocessorSymbolTable.hasReference(n))  {	  if(preprocessorSymbolTable!=    null    &&    PreprocessorSymbolTable.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
8	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  PreprocessorSymbolTable.hasReference(n))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  PreprocessorSymbolTable.hasReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  PreprocessorSymbolTable.hasReference(n))  {	  if(preprocessorSymbolTable!=    null    &&    PreprocessorSymbolTable.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
9	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.hasReference(n)||  preprocessorSymbolTable.addReference(n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.hasReference(n)||  preprocessorSymbolTable.addReference(n);  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.hasReference(n)||  preprocessorSymbolTable.addReference(n);	  if(preprocessorSymbolTable!=    null    &&    PreprocessorSymbolTable.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
10	[BUG]  [BUGGY]  if(n!=  null  &&  PreprocessorSymbolTable.hasReference(preprocessorSymbolTable))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  PreprocessorSymbolTable.hasReference(preprocessorSymbolTable))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  PreprocessorSymbolTable.hasReference(preprocessorSymbolTable))  {	  if(preprocessorSymbolTable!=    null    &&    PreprocessorSymbolTable.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
11	[BUG]  [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.getReferences().size()  >=  0)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.getReferences().size()  >=  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  preprocessorSymbolTable.getReferences().size()  >=  0)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().size()    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
12	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getReferences().size()  >=  0)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getReferences().size()  >=  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getReferences().size()  >=  0)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().size()    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
13	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  n);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  n);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
14	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable(n);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable(n);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable(n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
15	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n  ==  null)?  null  :  n.getPreprocessorSymbolTable(this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n  ==  null)?  null  :  n.getPreprocessorSymbolTable(this);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(n  ==  null)?  null  :  n.getPreprocessorSymbolTable(this);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
16	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  0);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  0);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
17	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.hasReference(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(parent!=  null  &&  parent.hasReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(parent!=  null  &&  parent.hasReference(n))  {	  if(preprocessorSymbolTable!=    null    &&    parent.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
18	[BUG]  [BUGGY]  if(n!=  null  &&  parent.hasReference(n))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  parent.hasReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  parent.hasReference(n))  {	  if(preprocessorSymbolTable!=    null    &&    parent.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
19	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  parent.hasReference(n))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  parent.hasReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  parent.hasReference(n))  {	  if(preprocessorSymbolTable!=    null    &&    parent.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
20	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.size()  ==  1)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.size()  ==  1)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.size()  ==  1)  {	  if(preprocessorSymbolTable!=    null    ||    preprocessorSymbolTable.size()    ==    1)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
21	[BUG]  [BUGGY]  if(n!=  null  ||  preprocessorSymbolTable.size()  ==  1)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||  preprocessorSymbolTable.size()  ==  1)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  ||  preprocessorSymbolTable.size()  ==  1)  {	  if(preprocessorSymbolTable!=    null    ||    preprocessorSymbolTable.size()    ==    1)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
22	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.size()  >  1)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.size()  >  1)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.size()  >  1)  {	  if(preprocessorSymbolTable!=    null    ||    preprocessorSymbolTable.size()    ==    1)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
23	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.isReferenced())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.isReferenced())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  n.isReferenced())  {	  if(preprocessorSymbolTable!=    null    &&    n.isReferenced())    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
24	[BUG]  [BUGGY]  if(n!=  null  &&  n.isReferenced())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  n.isReferenced())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  n.isReferenced())  {	  if(preprocessorSymbolTable!=    null    &&    n.isReferenced())    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
25	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getParentNode();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getParentNode();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getParentNode();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getImmediateParentNode();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
26	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImmediatePrefixNode();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImmediatePrefixNode();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImmediatePrefixNode();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getImmediateParentNode();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
27	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImmediatePrefix();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImmediatePrefix();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImmediatePrefix();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getImmediateParentNode();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
28	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getFirstChild());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getFirstChild());  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getFirstChild());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    new    PreprocessorSymbolTable(n.clone());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
29	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getType());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getType());  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getType());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    new    PreprocessorSymbolTable(n.clone());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
30	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getParent());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getParent());  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getParent());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    new    PreprocessorSymbolTable(n.clone());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
31	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getString());  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.getString());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    new    PreprocessorSymbolTable(n.clone());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
32	[BUG]  [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.size()  >=  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.size()  >=  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  preprocessorSymbolTable.size()  >=  0)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.size()    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
33	[BUG]  [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.containsKey(n))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.containsKey(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  preprocessorSymbolTable.containsKey(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.containsKey(n))    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
34	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.containsKey(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.containsKey(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.containsKey(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.containsKey(n))    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
35	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  parent.containsKey(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  parent.containsKey(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  parent.containsKey(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.containsKey(n))    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
36	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  factory.containsKey(n))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  factory.containsKey(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  factory.containsKey(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.containsKey(n))    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
37	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()!=  null)?  null  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()!=  null)?  null  :  n.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()!=  null)?  null  :  n.getLastChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(n.getFirstChild()    ==    null)?    null    :    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
38	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getLastChild()  ==  null)?  null  :  n.getFirstChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getLastChild()  ==  null)?  null  :  n.getFirstChild();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getLastChild()  ==  null)?  null  :  n.getFirstChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(n.getFirstChild()    ==    null)?    null    :    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
39	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n  ==  null)?  null  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n  ==  null)?  null  :  n.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(n  ==  null)?  null  :  n.getLastChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(n.getFirstChild()    ==    null)?    null    :    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
40	[BUG]  [BUGGY]  if(n!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.hasReference(n))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.hasReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.hasReference(n))  {	  if(preprocessorSymbolTable!=    null    &&    Preconditions.checkState(preprocessorSymbolTable.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
41	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  Preconditions.checkState(preprocessorSymbolTable.hasReference(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  Preconditions.checkState(preprocessorSymbolTable.hasReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  Preconditions.checkState(preprocessorSymbolTable.hasReference(n))  {	  if(preprocessorSymbolTable!=    null    &&    Preconditions.checkState(preprocessorSymbolTable.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
42	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(!preprocessorSymbolTable.hasReference(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(!preprocessorSymbolTable.hasReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(!preprocessorSymbolTable.hasReference(n))  {	  if(preprocessorSymbolTable!=    null    &&    Preconditions.checkState(preprocessorSymbolTable.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
43	[BUG]  [BUGGY]  if(n  ==  null  &&  Preconditions.checkState(preprocessorSymbolTable.hasReference(n))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  Preconditions.checkState(preprocessorSymbolTable.hasReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n  ==  null  &&  Preconditions.checkState(preprocessorSymbolTable.hasReference(n))  {	  if(preprocessorSymbolTable!=    null    &&    Preconditions.checkState(preprocessorSymbolTable.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
44	[BUG]  [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable.hasReference(n))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable.hasReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n  ==  null  ||  preprocessorSymbolTable.hasReference(n))  {	  if(preprocessorSymbolTable    ==    null    ||    preprocessorSymbolTable.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
45	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getNode();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getNode();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getNode();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getObject();    	non-compiled	[CE]  <identifier>  expected	50	None	replace
46	[BUG]  [BUGGY]  if(n!=  null  &&  PreprocessorSymbolTable.isReferenceName())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  PreprocessorSymbolTable.isReferenceName())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  PreprocessorSymbolTable.isReferenceName())  {	  if(preprocessorSymbolTable!=    null    &&    PreprocessorSymbolTable.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
47	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenceName(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenceName(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenceName(n))  {	  if(preprocessorSymbolTable!=    null    &&    PreprocessorSymbolTable.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
48	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  PreprocessorSymbolTable.isReferenceName())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  PreprocessorSymbolTable.isReferenceName())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  PreprocessorSymbolTable.isReferenceName())  {	  if(preprocessorSymbolTable!=    null    &&    PreprocessorSymbolTable.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
49	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenceName()  ||  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenceName()  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenceName()  ||  n.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable!=    null    &&    PreprocessorSymbolTable.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
50	[BUG]  [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.canAddReference(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.canAddReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  preprocessorSymbolTable.canAddReference(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.canAddReference(n))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
51	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.canAddReference(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.canAddReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.canAddReference(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.canAddReference(n))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
52	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  factory.canAddReference(n))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  factory.canAddReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  factory.canAddReference(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.canAddReference(n))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
53	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  parent.canAddReference(n))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  parent.canAddReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  parent.canAddReference(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.canAddReference(n))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
54	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&!preprocessorSymbolTable.isReference())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&!preprocessorSymbolTable.isReference())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&!preprocessorSymbolTable.isReference())  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isReference())    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
55	[BUG]  [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable.size()  ==  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable.size()  ==  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n  ==  null  ||  preprocessorSymbolTable.size()  ==  0)  {	  if(preprocessorSymbolTable    ==    null    ||    preprocessorSymbolTable.size()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
56	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  &&  preprocessorSymbolTable.size()  ==  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable  ==  null  &&  preprocessorSymbolTable.size()  ==  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable  ==  null  &&  preprocessorSymbolTable.size()  ==  0)  {	  if(preprocessorSymbolTable    ==    null    ||    preprocessorSymbolTable.size()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
57	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getReferences().size()  ==  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getReferences().size()  ==  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getReferences().size()  ==  0)  {	  if(preprocessorSymbolTable!=    null    ||    preprocessorSymbolTable.getReferences().size()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
58	[BUG]  [BUGGY]  if(n!=  null  ||  preprocessorSymbolTable.getReferences().size()  >  0)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||  preprocessorSymbolTable.getReferences().size()  >  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  ||  preprocessorSymbolTable.getReferences().size()  >  0)  {	  if(preprocessorSymbolTable!=    null    ||    preprocessorSymbolTable.getReferences().size()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
59	[BUG]  [BUGGY]  if(n!=  null  ||!preprocessorSymbolTable.isReferenced())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||!preprocessorSymbolTable.isReferenced())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  ||!preprocessorSymbolTable.isReferenced())  {	  if(preprocessorSymbolTable!=    null    ||!preprocessorSymbolTable.isReferenced())    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
60	[BUG]  [BUGGY]  if(n  ==  null  ||!preprocessorSymbolTable.isReferenced())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!preprocessorSymbolTable.isReferenced())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n  ==  null  ||!preprocessorSymbolTable.isReferenced())  {	  if(preprocessorSymbolTable!=    null    ||!preprocessorSymbolTable.isReferenced())    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
61	[BUG]  [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.isReferenceName())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.isReferenceName())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n  ==  null  &&  preprocessorSymbolTable.isReferenceName())  {	  if(n    ==    null    ||    preprocessorSymbolTable.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
62	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.isReferenceName())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.isReferenceName())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  n.isReferenceName())  {	  if(n    ==    null    ||    preprocessorSymbolTable.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	32	None	replace
63	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneTree(),  n);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneTree(),  n);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneTree(),  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.cloneTree());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
64	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.cloneTree());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.cloneTree());  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  n.cloneTree());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.cloneTree());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
65	[BUG]  [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.getReferences().size()  >  1)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.getReferences().size()  >  1)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  preprocessorSymbolTable.getReferences().size()  >  1)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().size()    >    1)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
66	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getReferences().size()  >  1)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getReferences().size()  >  1)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getReferences().size()  >  1)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().size()    >    1)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
67	[BUG]  [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.getReferences().size()  >  1)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.getReferences().size()  >  1)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n  ==  null  &&  preprocessorSymbolTable.getReferences().size()  >  1)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().size()    >    1)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
68	[BUG]  [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.hasReferenced())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.hasReferenced())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  preprocessorSymbolTable.hasReferenced())  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.hasReferenced())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
69	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.hasReferenced())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.hasReferenced())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.hasReferenced())  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.hasReferenced())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
70	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.hasReference())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.hasReference())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.hasReference())  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.hasReferenced())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
71	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(n.isReferenced()))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(n.isReferenced()))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(n.isReferenced()))  {	  if(preprocessorSymbolTable!=    null    &&    Preconditions.checkState(preprocessorSymbolTable.isReferenced()))    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
72	[BUG]  [BUGGY]  if(n!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenced()))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenced()))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenced()))  {	  if(preprocessorSymbolTable!=    null    &&    Preconditions.checkState(preprocessorSymbolTable.isReferenced()))    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
73	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  Preconditions.checkState(preprocessorSymbolTable.isReferenced()))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  Preconditions.checkState(preprocessorSymbolTable.isReferenced()))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  Preconditions.checkState(preprocessorSymbolTable.isReferenced()))  {	  if(preprocessorSymbolTable!=    null    &&    Preconditions.checkState(preprocessorSymbolTable.isReferenced()))    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
74	[BUG]  [BUGGY]  if(n  ==  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenced()))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenced()))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n  ==  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenced()))  {	  if(preprocessorSymbolTable!=    null    &&    Preconditions.checkState(preprocessorSymbolTable.isReferenced()))    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
75	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.isReferenced(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.isReferenced(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.isReferenced(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isReferenced(n))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
76	[BUG]  [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.isReferenced(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.isReferenced(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  preprocessorSymbolTable.isReferenced(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isReferenced(n))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
77	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(!preprocessorSymbolTable.isReferenced(n)||  preprocessorSymbolTable.isReferenced(n))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(!preprocessorSymbolTable.isReferenced(n)||  preprocessorSymbolTable.isReferenced(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(!preprocessorSymbolTable.isReferenced(n)||  preprocessorSymbolTable.isReferenced(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isReferenced(n))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
78	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.isReferenced(n)||  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.isReferenced(n)||  n.getType()  ==  Token.NAME)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.isReferenced(n)||  n.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isReferenced(n))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
79	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.isReference())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.isReference())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  n.isReference())  {	  if(n    ==    null    ||    preprocessorSymbolTable.isReference())    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
80	[BUG]  [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.isReference())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.isReference())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n  ==  null  &&  preprocessorSymbolTable.isReference())  {	  if(n    ==    null    ||    preprocessorSymbolTable.isReference())    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
81	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  n.isReference())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  n.isReference())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable  ==  null  ||  n.isReference())  {	  if(n    ==    null    ||    preprocessorSymbolTable.isReference())    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
82	[BUG]  [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.getReferences().isEmpty())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.getReferences().isEmpty())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  preprocessorSymbolTable.getReferences().isEmpty())  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
83	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getReferences().isEmpty())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getReferences().isEmpty())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getReferences().isEmpty())  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
84	[BUG]  [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.getReferences().isEmpty())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.getReferences().isEmpty())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n  ==  null  &&  preprocessorSymbolTable.getReferences().isEmpty())  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
85	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  parent.getReferences().isEmpty())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  parent.getReferences().isEmpty())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  parent.getReferences().isEmpty())  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
86	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  n.getReferences().size()  >  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  n.getReferences().size()  >  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  n.getReferences().size()  >  0)  {	  if(n!=    null    &&    preprocessorSymbolTable.getReferences().size()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
87	[BUG]  [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.getReferences().size()  >  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.getReferences().size()  >  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n  ==  null  &&  preprocessorSymbolTable.getReferences().size()  >  0)  {	  if(n!=    null    &&    preprocessorSymbolTable.getReferences().size()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
88	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  n.isReference())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  n.isReference())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  n.isReference())  {	  if(n!=    null    &&    preprocessorSymbolTable.isReference())    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
89	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  n.getType()  ==  Token.REFERENCE)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  n.getType()  ==  Token.REFERENCE)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  n.getType()  ==  Token.REFERENCE)  {	  if(n!=    null    &&    preprocessorSymbolTable.isReference())    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
90	[BUG]  [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.hasReference(n))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.hasReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n  ==  null  &&  preprocessorSymbolTable.hasReference(n))  {	  if(preprocessorSymbolTable    ==    null    &&    preprocessorSymbolTable.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
91	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.removeFirstChild();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.removeFirstChild();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.removeFirstChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
92	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.isExported(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.isExported(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.isExported(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isExported(n))    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
93	[BUG]  [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.isExported(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.isExported(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  preprocessorSymbolTable.isExported(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isExported(n))    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
94	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  isExported(n))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  isExported(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  isExported(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isExported(n))    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
95	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.isExported(n)||  n.getType()  ==  Token.REFERENCE)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.isExported(n)||  n.getType()  ==  Token.REFERENCE)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.isExported(n)||  n.getType()  ==  Token.REFERENCE)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isExported(n))    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
96	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessor();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessor();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessor();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getNext();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
97	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getReference();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getReference();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getReference();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
98	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.getType()  ==  Token.STRING)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.getType()  ==  Token.STRING)  {	  if(preprocessorSymbolTable!=    null    &&    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
99	[BUG]  [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.getType()  ==  Token.STRING)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  preprocessorSymbolTable.getType()  ==  Token.STRING)  {	  if(preprocessorSymbolTable!=    null    &&    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
100	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {	  if(preprocessorSymbolTable!=    null    &&    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
101	[BUG]  [BUGGY]  if(n!=  null  &&  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  n.getType()  ==  Token.STRING)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  n.getType()  ==  Token.STRING)  {	  if(preprocessorSymbolTable!=    null    &&    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
102	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.getType()  ==  Token.NAME)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable!=    null    &&    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
103	[BUG]  [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.getType()  ==  Token.NAME)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  preprocessorSymbolTable.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable!=    null    &&    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
104	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable!=    null    &&    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
105	[BUG]  [BUGGY]  if(n!=  null  &&  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  n.getType()  ==  Token.NAME)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  n.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable!=    null    &&    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
106	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getReferences().length  >  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getReferences().length  >  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getReferences().length  >  0)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
107	[BUG]  [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.getReferences().length  >  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.getReferences().length  >  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  preprocessorSymbolTable.getReferences().length  >  0)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
108	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.getReferences().length  >  1)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.getReferences().length  >  1)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.getReferences().length  >  1)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
109	[BUG]  [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.getReferences().length  >  0)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.getReferences().length  >  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n  ==  null  &&  preprocessorSymbolTable.getReferences().length  >  0)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
110	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
111	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getModule());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getModule());  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getModule());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
112	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  0);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  0);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
113	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  null  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  null  :  n.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  null  :  n.getLastChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
114	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(n.getType()  ==  Token.NAME);  preprocessorSymbolTable.addReference(n);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(n.getType()  ==  Token.NAME);  preprocessorSymbolTable.addReference(n);  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(n.getType()  ==  Token.NAME);  preprocessorSymbolTable.addReference(n);	  if(n!=    null    &&    preprocessorSymbolTable.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
115	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(n.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(n.getType()  ==  Token.NAME);	  if(n!=    null    &&    preprocessorSymbolTable.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
116	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(n.isReferenceName()))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(n.isReferenceName()))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(n.isReferenceName()))  {	  if(preprocessorSymbolTable!=    null    &&    Preconditions.checkState(preprocessorSymbolTable.isReferenceName()))    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
117	[BUG]  [BUGGY]  if(n!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenceName()))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenceName()))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenceName()))  {	  if(preprocessorSymbolTable!=    null    &&    Preconditions.checkState(preprocessorSymbolTable.isReferenceName()))    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
118	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  Preconditions.checkState(preprocessorSymbolTable.isReferenceName()))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  Preconditions.checkState(preprocessorSymbolTable.isReferenceName()))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  Preconditions.checkState(preprocessorSymbolTable.isReferenceName()))  {	  if(preprocessorSymbolTable!=    null    &&    Preconditions.checkState(preprocessorSymbolTable.isReferenceName()))    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
119	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(n.getType()  ==  Token.REFERENCE))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(n.getType()  ==  Token.REFERENCE))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(n.getType()  ==  Token.REFERENCE))  {	  if(preprocessorSymbolTable!=    null    &&    Preconditions.checkState(preprocessorSymbolTable.isReferenceName()))    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
120	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getFirstChild()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getFirstChild()  +  1;  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getFirstChild()  +  1;	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n    +    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
121	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.clone()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.clone()  +  1;  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.clone()  +  1;	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n    +    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
122	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneTree()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneTree()  +  1;  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneTree()  +  1;	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n    +    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
123	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPrefix();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPrefix();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPrefix();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getParent();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
124	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(false);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(false);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(true);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
125	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  false);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  false);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  false);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(true);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
126	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  true);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  true);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  true);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(true);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
127	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  null);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  null);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(true);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
128	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReference(n))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReference(n))  {	  if(preprocessorSymbolTable!=    null    &&    PreprocessorSymbolTable.isReference())    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
129	[BUG]  [BUGGY]  if(n!=  null  &&  PreprocessorSymbolTable.isReference())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  PreprocessorSymbolTable.isReference())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  PreprocessorSymbolTable.isReference())  {	  if(preprocessorSymbolTable!=    null    &&    PreprocessorSymbolTable.isReference())    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
130	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  PreprocessorSymbolTable.isReference())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  PreprocessorSymbolTable.isReference())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  PreprocessorSymbolTable.isReference())  {	  if(preprocessorSymbolTable!=    null    &&    PreprocessorSymbolTable.isReference())    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
131	[BUG]  [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.getReferences().size()  ==  0)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.getReferences().size()  ==  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  preprocessorSymbolTable.getReferences().size()  ==  0)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().size()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
132	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.getReferences().size()  ==  1)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.getReferences().size()  ==  1)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.getReferences().size()  ==  1)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().size()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
133	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneReference();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneReference();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneReference();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.cloneTree();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
134	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneChildren();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneChildren();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.cloneChildren();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.cloneTree();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
135	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getLastChild());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getLastChild());  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getLastChild());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
136	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n.getLastChild());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n.getLastChild());  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n.getLastChild());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
137	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
138	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getNext());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getNext());  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getNext());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
139	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.size()  ==  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.size()  ==  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  n.size()  ==  0)  {	  if(n!=    null    ||    preprocessorSymbolTable.size()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
140	[BUG]  [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.size()  ==  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.size()  ==  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  preprocessorSymbolTable.size()  ==  0)  {	  if(n!=    null    ||    preprocessorSymbolTable.size()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
141	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  1);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  1);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
142	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  0L);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  0L);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  0L);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
143	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  2);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  2);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
144	[BUG]  [BUGGY]  if(n!=  null  ||  preprocessorSymbolTable.isReferenced())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||  preprocessorSymbolTable.isReferenced())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  ||  preprocessorSymbolTable.isReferenced())  {	  if(preprocessorSymbolTable!=    null    ||    preprocessorSymbolTable.isReferenced())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
145	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  &&  preprocessorSymbolTable.isReferenced())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable  ==  null  &&  preprocessorSymbolTable.isReferenced())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable  ==  null  &&  preprocessorSymbolTable.isReferenced())  {	  if(preprocessorSymbolTable!=    null    ||    preprocessorSymbolTable.isReferenced())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
146	[BUG]  [BUGGY]  if(n!=  null  &&  n.isReferenceName())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  n.isReferenceName())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  n.isReferenceName())  {	  if(preprocessorSymbolTable!=    null    &&    n.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	29	None	replace
147	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.isReferenceName()  ||  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.isReferenceName()  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.isReferenceName()  ||  n.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isReferenceName()    &&    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
148	[BUG]  [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.isReferenceName()  &&  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.isReferenceName()  &&  n.getType()  ==  Token.NAME)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  preprocessorSymbolTable.isReferenceName()  &&  n.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isReferenceName()    &&    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
149	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.isReferenceName()  &&  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.isReferenceName()  &&  n.getType()  ==  Token.NAME)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.isReferenceName()  &&  n.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isReferenceName()    &&    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
150	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  n.isReferenceName()  &&  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  n.isReferenceName()  &&  n.getType()  ==  Token.NAME)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  n.isReferenceName()  &&  n.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isReferenceName()    &&    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
151	[BUG]  [BUGGY]  if(n!=  null  &&!preprocessorSymbolTable.isReferenceName())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&!preprocessorSymbolTable.isReferenceName())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&!preprocessorSymbolTable.isReferenceName())  {	  if(preprocessorSymbolTable!=    null    &&!preprocessorSymbolTable.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
152	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||!preprocessorSymbolTable.isReferenceName())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||!preprocessorSymbolTable.isReferenceName())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||!preprocessorSymbolTable.isReferenceName())  {	  if(preprocessorSymbolTable!=    null    &&!preprocessorSymbolTable.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
153	[BUG]  [BUGGY]  if(n  ==  null  &&!preprocessorSymbolTable.isReferenceName())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&!preprocessorSymbolTable.isReferenceName())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n  ==  null  &&!preprocessorSymbolTable.isReferenceName())  {	  if(preprocessorSymbolTable!=    null    &&!preprocessorSymbolTable.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
154	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.clone(),  this);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.clone(),  this);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  new  PreprocessorSymbolTable(n.clone(),  this);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    new    PreprocessorSymbolTable(n.clone());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
155	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getType()  ==  Token.NAME)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable!=    null    &&    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
156	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenceName()  ||  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenceName()  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenceName()  ||  n.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable!=    null    &&    Preconditions.checkState(preprocessorSymbolTable.isReferenceName()))    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
157	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneReference());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneReference());  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneReference());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.cloneTree());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
158	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneChildren());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneChildren());  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneChildren());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.cloneTree());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
159	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  &&!preprocessorSymbolTable.isEmpty())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable  ==  null  &&!preprocessorSymbolTable.isEmpty())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable  ==  null  &&!preprocessorSymbolTable.isEmpty())  {	  if(preprocessorSymbolTable!=    null    &&!preprocessorSymbolTable.isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	73	None	replace
160	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  &&  preprocessorSymbolTable.size()  >  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable  ==  null  &&  preprocessorSymbolTable.size()  >  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable  ==  null  &&  preprocessorSymbolTable.size()  >  0)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.size()    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
161	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.hasReference(n)||  preprocessorSymbolTable.hasReference(n))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.hasReference(n)||  preprocessorSymbolTable.hasReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.hasReference(n)||  preprocessorSymbolTable.hasReference(n))  {	  if(preprocessorSymbolTable!=    null    &&    Preconditions.checkState(preprocessorSymbolTable.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
162	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.hasReferences())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.hasReferences())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.hasReferences())  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.hasReferenced())    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
163	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  preprocessorSymbolTable.size()  >  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  preprocessorSymbolTable.size()  >  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable  ==  null  ||  preprocessorSymbolTable.size()  >  0)  {	  if(preprocessorSymbolTable!=    null    ||    preprocessorSymbolTable.size()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
164	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReference()))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReference()))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReference()))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isReference())    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
165	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getChildCount());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getChildCount());  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getChildCount());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	25	None	replace
166	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.hasReference(n)||  preprocessorSymbolTable.containsKey(n.getString()))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.hasReference(n)||  preprocessorSymbolTable.containsKey(n.getString()))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.hasReference(n)||  preprocessorSymbolTable.containsKey(n.getString()))  {	  if(preprocessorSymbolTable!=    null    &&    PreprocessorSymbolTable.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
167	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenced()  ||  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenced()  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenced()  ||  n.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable!=    null    &&    Preconditions.checkState(preprocessorSymbolTable.isReferenced()))    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
168	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  -1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  -1);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  -1);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
169	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getParent()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getParent()  +  1;  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getParent()  +  1;	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n    +    1;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
170	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.containsKey(n)||  preprocessorSymbolTable.containsKey(n))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.containsKey(n)||  preprocessorSymbolTable.containsKey(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.containsKey(n)||  preprocessorSymbolTable.containsKey(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.containsKey(n))    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
171	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.containsKey(n)))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.containsKey(n)))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.containsKey(n)))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.containsKey(n))    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
172	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.getReferences().size()  >  1))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.getReferences().size()  >  1))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.getReferences().size()  >  1))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().size()    >    1)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
173	[BUG]  [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable.isReferenced())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable.isReferenced())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n  ==  null  ||  preprocessorSymbolTable.isReferenced())  {	  if(n    ==    null    &&    preprocessorSymbolTable.isReferenced())    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
174	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenced(n)||  preprocessorSymbolTable.isReferenced(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenced(n)||  preprocessorSymbolTable.isReferenced(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenced(n)||  preprocessorSymbolTable.isReferenced(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isReferenced(n))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
175	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenced(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenced(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isReferenced(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isReferenced(n))    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
176	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isExported(n)||  preprocessorSymbolTable.isExported(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isExported(n)||  preprocessorSymbolTable.isExported(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isExported(n)||  preprocessorSymbolTable.isExported(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isExported(n))    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
177	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isExported(n)))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isExported(n)))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.isExported(n)))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isExported(n))    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
178	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.getReferences().isEmpty()))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.getReferences().isEmpty()))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.getReferences().isEmpty()))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().isEmpty())    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
179	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.canAddReference(n)))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.canAddReference(n)))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.canAddReference(n)))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.canAddReference(n))    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
180	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getLastChild()  :  n;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getLastChild()  :  n;  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getLastChild()  :  n;	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
181	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()!=  null)?  n.getLastChild()  :  n;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()!=  null)?  n.getLastChild()  :  n;  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()!=  null)?  n.getLastChild()  :  n;	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
182	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImmediatePreprocessorNode();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImmediatePreprocessorNode();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImmediatePreprocessorNode();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getImmediateParentNode();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
183	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImmediatePreprocessor();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImmediatePreprocessor();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImmediatePreprocessor();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getImmediateParentNode();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
184	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.getReferences().length  >  0))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.getReferences().length  >  0))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  Preconditions.checkState(preprocessorSymbolTable.getReferences().length  >  0))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.getReferences().length    >    0)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
185	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  preprocessorSymbolTable.isReferenced())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  preprocessorSymbolTable.isReferenced())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable  ==  null  ||  preprocessorSymbolTable.isReferenced())  {	  if(preprocessorSymbolTable!=    null    ||    preprocessorSymbolTable.isReferenced())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
186	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  &&!preprocessorSymbolTable.isReferenceName())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable  ==  null  &&!preprocessorSymbolTable.isReferenceName())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable  ==  null  &&!preprocessorSymbolTable.isReferenceName())  {	  if(preprocessorSymbolTable!=    null    &&!preprocessorSymbolTable.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	28	None	replace
187	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getType()  ==  Token.STRING)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  ||  preprocessorSymbolTable.getType()  ==  Token.STRING)  {	  if(preprocessorSymbolTable!=    null    &&    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
188	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  parentSymbolTable.isReferenceName()  &&  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  parentSymbolTable.isReferenceName()  &&  n.getType()  ==  Token.NAME)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  parentSymbolTable.isReferenceName()  &&  n.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.isReferenceName()    &&    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
189	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneTree(),  n.cloneTree());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneTree(),  n.cloneTree());  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.cloneTree(),  n.cloneTree());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.cloneTree());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
190	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenceName()  &&  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenceName()  &&  n.getType()  ==  Token.NAME)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenceName()  &&  n.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable!=    null    &&    PreprocessorSymbolTable.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
191	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenceName()  &&  n.getString().endsWith( "__ "))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenceName()  &&  n.getString().endsWith( "__ "))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenceName()  &&  n.getString().endsWith( "__ "))  {	  if(preprocessorSymbolTable!=    null    &&    PreprocessorSymbolTable.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
192	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenceName()  &&  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenceName()  &&  n.getType()  ==  Token.STRING)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenceName()  &&  n.getType()  ==  Token.STRING)  {	  if(preprocessorSymbolTable!=    null    &&    PreprocessorSymbolTable.isReferenceName())    {    	non-compiled	[CE]  <identifier>  expected	69	None	replace
193	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  parentSymbolTable.hasReference(n))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  parentSymbolTable.hasReference(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  parentSymbolTable.hasReference(n))  {	  if(n!=    null    ||    preprocessorSymbolTable.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
194	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||!preprocessorSymbolTable.isReferenced())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable  ==  null  ||!preprocessorSymbolTable.isReferenced())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable  ==  null  ||!preprocessorSymbolTable.isReferenced())  {	  if(preprocessorSymbolTable!=    null    ||!preprocessorSymbolTable.isReferenced())    {    	non-compiled	[CE]  <identifier>  expected	4	None	replace
195	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImmediateParentNode(this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImmediateParentNode(this);  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getImmediateParentNode(this);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getImmediateParentNode();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
196	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getName());  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getName());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
197	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.size()  >  1)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.size()  >  1)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.size()  >  1)  {	  if(preprocessorSymbolTable!=    null    ||    preprocessorSymbolTable.size()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
198	[BUG]  [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.size()  >  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  preprocessorSymbolTable.size()  >  0)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(n!=  null  &&  preprocessorSymbolTable.size()  >  0)  {	  if(preprocessorSymbolTable!=    null    ||    preprocessorSymbolTable.size()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
199	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  parent.hasReference(n)||  parent.hasChildren())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  parent.hasReference(n)||  parent.hasChildren())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  parent.hasReference(n)||  parent.hasChildren())  {	  if(preprocessorSymbolTable!=    null    &&    parent.hasReference(n))    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
200	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenced())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenced())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  PreprocessorSymbolTable.isReferenced())  {	  if(preprocessorSymbolTable!=    null    ||    preprocessorSymbolTable.isReferenced())    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
201	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  n!=  preprocessorSymbolTable.size())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  n!=  preprocessorSymbolTable.size())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  n!=  preprocessorSymbolTable.size())  {	  if(n!=    null    ||    preprocessorSymbolTable.size()    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
202	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  this.preprocessorSymbolTable.containsKey(n))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  this.preprocessorSymbolTable.containsKey(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  this.preprocessorSymbolTable.containsKey(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.containsKey(n))    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
203	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.containsKey(n)||  preprocessorSymbolTable.containsKey(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.containsKey(n)||  preprocessorSymbolTable.containsKey(n))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.containsKey(n)||  preprocessorSymbolTable.containsKey(n))  {	  if(preprocessorSymbolTable!=    null    &&    preprocessorSymbolTable.containsKey(n))    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
204	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.size()  >=  1)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.size()  >=  1)  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.size()  >=  1)  {	  if(preprocessorSymbolTable!=    null    ||    preprocessorSymbolTable.size()    ==    1)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
205	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  n!=  preprocessorSymbolTable.isReference())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  n!=  preprocessorSymbolTable.isReference())  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  n!=  preprocessorSymbolTable.isReference())  {	  if(n!=    null    ||    preprocessorSymbolTable.isReference())    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
206	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.getReferenceName().equals(n.getString()))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.getReferenceName().equals(n.getString()))  {  [BUGGY]      preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	if(preprocessorSymbolTable!=  null  &&  preprocessorSymbolTable.getReferenceName().equals(n.getString()))  {	  if(preprocessorSymbolTable!=    null    &&    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
207	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  n.getFirstChild()  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  n.getFirstChild()  :  n.getLastChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
208	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable  ==  null)?  n.getFirstChild()  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable  ==  null)?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable  ==  null)?  n.getFirstChild()  :  n.getLastChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
209	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  n.getLastChild()  :  n.getFirstChild();  [timeout]  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  n.getLastChild()  :  n.getFirstChild();  [BUGGY]      if  (preprocessorSymbolTable  !=  null)  {  preprocessorSymbolTable.addReference(n);  }  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1212	1212	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  n.getLastChild()  :  n.getFirstChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[timeout]	37	None	replace
