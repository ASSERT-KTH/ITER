bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  ClassCallback());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  ClassCallback());  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  parent,  new  ClassCallback());	  NodeTraversal.traverse(compiler,    n,    new    ClassCallback());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ClassCallback(),  t);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ClassCallback(),  t);  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  ClassCallback(),  t);	  NodeTraversal.traverse(compiler,    n,    new    ClassCallback());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  pn,  new  ClassCallback());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  pn,  new  ClassCallback());  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  pn,  new  ClassCallback());	  NodeTraversal.traverse(compiler,    n,    new    ClassCallback());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null,  new  ClassCallback());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  null,  new  ClassCallback());  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  null,  new  ClassCallback());	  NodeTraversal.traverse(compiler,    n,    new    ClassCallback());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  t);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  t);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  this,  t);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
6	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  null);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  parent);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  parent);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  this,  parent);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  parent,  this);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  parent,  this);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  parent);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.CALL);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(n.getType()!=  Token.CALL);  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(n.getType()!=  Token.CALL);	  Preconditions.checkState(n.getType()    ==    Token.CALL);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
11	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.CALL);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.CALL);  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(t.getType()  ==  Token.CALL);	  Preconditions.checkState(n.getType()    ==    Token.CALL);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
12	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.CALL);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.CALL);  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(parent.getType()  ==  Token.CALL);	  Preconditions.checkState(n.getType()    ==    Token.CALL);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
13	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL  ||  n.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(n.getType()  ==  Token.CALL  ||  n.getType()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.CALL);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
14	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  Class[]  {  t.getModule()  }  );  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  Class[]  {  t.getModule()  }  );  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  parent,  new  Class[]  {  t.getModule()  }  );	      NodeTraversal.traverse(compiler,    n,    new    Class[]    {    t.getModule()    }    );    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
15	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  parent,  t.getModule()  }  );  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  parent,  t.getModule()  }  );  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  Class[]  {  parent,  t.getModule()  }  );	      NodeTraversal.traverse(compiler,    n,    new    Class[]    {    t.getModule()    }    );    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
16	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t.getModule()  },  pn);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t.getModule()  },  pn);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t.getModule()  },  pn);	      NodeTraversal.traverse(compiler,    n,    new    Class[]    {    t.getModule()    }    );    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
17	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  pn,  new  Class[]  {  t.getModule()  }  );  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  pn,  new  Class[]  {  t.getModule()  }  );  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  pn,  new  Class[]  {  t.getModule()  }  );	      NodeTraversal.traverse(compiler,    n,    new    Class[]    {    t.getModule()    }    );    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  pn.addDependency(parent,  t.getModule());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  pn.addDependency(parent,  t.getModule());  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	pn.addDependency(parent,  t.getModule());	  pn.addDefinition(n,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  parent.addDefinition(n,  t.getModule());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  parent.addDefinition(n,  t.getModule());  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	parent.addDefinition(n,  t.getModule());	  pn.addDefinition(n,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getModule());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getModule());  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getModule());	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(n.getType()!=  Token.NAME);	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.NAME);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(t.getType()  ==  Token.NAME);	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME);	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t.getModule(),  pn));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t.getModule(),  pn));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t.getModule(),  pn));	      NodeTraversal.traverse(compiler,    n,    new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
25	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  pn,  new  AssertionFailedError(t.getModule()));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  pn,  new  AssertionFailedError(t.getModule()));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  pn,  new  AssertionFailedError(t.getModule()));	      NodeTraversal.traverse(compiler,    n,    new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
26	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssertionFailedError(t.getModule()));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssertionFailedError(t.getModule()));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  parent,  new  AssertionFailedError(t.getModule()));	      NodeTraversal.traverse(compiler,    n,    new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
27	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  AssertionFailedError(t.getModule()));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  AssertionFailedError(t.getModule()));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  this,  new  AssertionFailedError(t.getModule()));	      NodeTraversal.traverse(compiler,    n,    new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
28	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t.getModule(),  this));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t.getModule(),  this));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t.getModule(),  this));	      NodeTraversal.traverse(compiler,    n,    new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t,  pn));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t,  pn));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t,  pn));	      NodeTraversal.traverse(compiler,    n,    new    AssertionFailedError(t));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  AssertionFailedError(t));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  AssertionFailedError(t));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  this,  new  AssertionFailedError(t));	      NodeTraversal.traverse(compiler,    n,    new    AssertionFailedError(t));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  pn,  new  AssertionFailedError(t));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  pn,  new  AssertionFailedError(t));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  pn,  new  AssertionFailedError(t));	      NodeTraversal.traverse(compiler,    n,    new    AssertionFailedError(t));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssertionFailedError(t));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  AssertionFailedError(t));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  parent,  new  AssertionFailedError(t));	      NodeTraversal.traverse(compiler,    n,    new    AssertionFailedError(t));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t),  pn);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t),  pn);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t),  pn);	      NodeTraversal.traverse(compiler,    n,    new    AssertionFailedError(t));    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  RuntimeException( " "));  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  RuntimeException( " "));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  parent,  new  RuntimeException( " "));	      NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
35	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Failed  to  parse "));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Failed  to  parse "));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Failed  to  parse "));	      NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
36	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Failed  to  parse  class "));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Failed  to  parse  class "));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Failed  to  parse  class "));	      NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Failed  to  initialize  class  call: "));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Failed  to  initialize  class  call: "));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Failed  to  initialize  class  call: "));	      NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n,  parent  }  );  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n,  parent  }  );  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n,  parent  }  );	      NodeTraversal.traverse(compiler,    n,    new    Class[]    {    t,    n    }    );    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
39	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  parent  }  );  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  parent  }  );  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  parent  }  );	      NodeTraversal.traverse(compiler,    n,    new    Class[]    {    t,    n    }    );    	non-compiled	[CE]  orphaned  case	15	None	replace
40	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  Class[]  {  t,  n  }  );  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  parent,  new  Class[]  {  t,  n  }  );  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  parent,  new  Class[]  {  t,  n  }  );	      NodeTraversal.traverse(compiler,    n,    new    Class[]    {    t,    n    }    );    	non-compiled	[CE]  orphaned  case	15	None	replace
41	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  parent,  t,  n  }  );  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  parent,  t,  n  }  );  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  Class[]  {  parent,  t,  n  }  );	      NodeTraversal.traverse(compiler,    n,    new    Class[]    {    t,    n    }    );    	non-compiled	[CE]  orphaned  case	15	None	replace
42	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.FUNCTION);  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(n.getType()!=  Token.FUNCTION);  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(n.getType()!=  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	7	None	replace
43	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION,  t.getModule());  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION,  t.getModule());  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION,  t.getModule());	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	7	None	replace
44	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION);  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION);  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(parent.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	7	None	replace
45	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.FUNCTION);  [CE]  orphaned  case  [FE]              AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.FUNCTION);  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(t.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	7	None	replace
46	[BUG]  [BUGGY]  pn.setModule(parent.getModule());  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  pn.setModule(parent.getModule());  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	pn.setModule(parent.getModule());	      pn.setModule(t.getModule());    	non-compiled	[CE]  orphaned  case	3	None	replace
47	[BUG]  [BUGGY]  pn.addDeclaration(n,  t.getModule());  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  pn.addDeclaration(n,  t.getModule());  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	pn.addDeclaration(n,  t.getModule());	      pn.addDeclaration(parent,    t.getModule());    	non-compiled	[CE]  orphaned  case	9	None	replace
48	[BUG]  [BUGGY]  pn.addDeclaration(t,  parent.getModule());  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  pn.addDeclaration(t,  parent.getModule());  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	pn.addDeclaration(t,  parent.getModule());	      pn.addDeclaration(parent,    t.getModule());    	non-compiled	[CE]  orphaned  case	9	None	replace
49	[BUG]  [BUGGY]  pn.addDeclaration(declaration,  t.getModule());  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  pn.addDeclaration(declaration,  t.getModule());  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	pn.addDeclaration(declaration,  t.getModule());	      pn.addDeclaration(parent,    t.getModule());    	non-compiled	[CE]  orphaned  case	9	None	replace
50	[BUG]  [BUGGY]  if(t.getModule()!=  null)  {  pn.addDefinition(parent,  t.getModule());  }  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  if(t.getModule()!=  null)  {  pn.addDefinition(parent,  t.getModule());  }  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	if(t.getModule()!=  null)  {  pn.addDefinition(parent,  t.getModule());  }	      pn.addDefinition(parent,    t.getModule());    	non-compiled	[CE]  orphaned  case	1	None	replace
51	[BUG]  [BUGGY]  if(t.getModule()!=  null)  {  pn.addDefinition(parent,  t.getModule());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  orphaned  case  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  if(t.getModule()!=  null)  {  pn.addDefinition(parent,  t.getModule());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	if(t.getModule()!=  null)  {  pn.addDefinition(parent,  t.getModule());  }  else  {  throw  new  IllegalStateException( " ");  }	      pn.addDefinition(parent,    t.getModule());    	non-compiled	[CE]  orphaned  case	1	None	replace
52	[BUG]  [BUGGY]  pn.addDefinition(t,  parent.getModule());  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  pn.addDefinition(t,  parent.getModule());  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	pn.addDefinition(t,  parent.getModule());	      pn.addDefinition(parent,    t.getModule());    	non-compiled	[CE]  orphaned  case	1	None	replace
53	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  pn,  parent);  [CE]  orphaned  case  [FE]                  AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  pn,  parent);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  pn,  parent);	      NodeTraversal.traverse(compiler,    parent,    n);    	non-compiled	[CE]  orphaned  case	6	None	replace
54	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  n);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  t,  n);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  t,  n);	      NodeTraversal.traverse(compiler,    parent,    n);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
55	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  pn,  n);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  pn,  n);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  pn,  n);	      NodeTraversal.traverse(compiler,    parent,    n);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
56	[BUG]  [BUGGY]  Traversal.traverse(compiler,  n,  parent);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Traversal.traverse(compiler,  n,  parent);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Traversal.traverse(compiler,  n,  parent);	      NodeTraversal.traverse(compiler,    parent,    n);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "));  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "));	      NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
58	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " ")));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " ")));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " ")));	      NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
59	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  pn);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  pn);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  this,  pn);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
60	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  null);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  null);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  this,  null);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
61	[BUG]  [BUGGY]  pn.addDependency(t.getModule());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  pn.addDependency(t.getModule());  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	pn.addDependency(t.getModule());	      pn.addDefinition(parent,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
62	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL  &&  NodeUtil.isFunctionDeclaration(n));  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL  &&  NodeUtil.isFunctionDeclaration(n));  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(n.getType()  ==  Token.CALL  &&  NodeUtil.isFunctionDeclaration(n));	  Preconditions.checkState(n.getType()    ==    Token.CALL);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
63	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  pn);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  pn);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  pn);	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
64	[BUG]  [BUGGY]  if(t.getModule()!=  null)  {  pn.addDefinition(n,  t.getModule());  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  if(t.getModule()!=  null)  {  pn.addDefinition(n,  t.getModule());  }  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	if(t.getModule()!=  null)  {  pn.addDefinition(n,  t.getModule());  }	  pn.addDefinition(n,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
65	[BUG]  [BUGGY]  pn.add(parent,  t.getModule());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  pn.add(parent,  t.getModule());  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	pn.add(parent,  t.getModule());	  pn.addDefinition(n,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
66	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n  },  this);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n  },  this);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n  },  this);	      NodeTraversal.traverse(compiler,    n,    new    Class[]    {    t,    n    }    );    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
67	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n  },  false);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n  },  false);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n  },  false);	      NodeTraversal.traverse(compiler,    n,    new    Class[]    {    t,    n    }    );    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
68	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n  },  parent);  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n  },  parent);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n  },  parent);	      NodeTraversal.traverse(compiler,    n,    new    Class[]    {    t,    n    }    );    	non-compiled	[CE]  orphaned  case	15	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||!NodeUtil.isFunctionDeclaration(n));  [CE]  orphaned  case  [FE]        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||!NodeUtil.isFunctionDeclaration(n));  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||!NodeUtil.isFunctionDeclaration(n));	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  orphaned  case	7	None	replace
70	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t,  n));  [CE]  orphaned  case  [FE]                AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t,  n));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t,  n));	      NodeTraversal.traverse(compiler,    n,    new    AssertionFailedError(t));    	non-compiled	[CE]  orphaned  case	5	None	replace
71	[BUG]  [BUGGY]  pn.addDeclaration(declaration);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  pn.addDeclaration(declaration);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	pn.addDeclaration(declaration);	      pn.addDeclaration(parent,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
72	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t.getModule()  },  this);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t.getModule()  },  this);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t.getModule()  },  this);	      NodeTraversal.traverse(compiler,    n,    new    Class[]    {    t.getModule()    }    );    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
73	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  parent,  n);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  t,  parent,  n);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  t,  parent,  n);	      NodeTraversal.traverse(compiler,    parent,    n);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
74	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Failed  to  add  class  definitions ",  t));  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Failed  to  add  class  definitions ",  t));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  RuntimeException( "Failed  to  add  class  definitions ",  t));	      NodeTraversal.traverse(compiler,    n,    new    RuntimeException(   "   "));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
75	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ClassCallbacks());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ClassCallbacks());  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  ClassCallbacks());	  NodeTraversal.traverse(compiler,    n,    new    ClassCallback());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
76	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ClassCallback(),  this);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ClassCallback(),  this);  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  ClassCallback(),  this);	  NodeTraversal.traverse(compiler,    n,    new    ClassCallback());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
77	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  parent,  n,  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  parent,  n,  this);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  parent,  n,  this);	      NodeTraversal.traverse(compiler,    parent,    n);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
78	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION);  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL);  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
80	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME);	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
81	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.CALL);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.CALL);  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.CALL);	  Preconditions.checkState(n.getType()    ==    Token.CALL);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
82	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL  ||  n.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.CALL  ||  n.getType()  ==  Token.NAME);  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	Preconditions.checkState(n.getType()  ==  Token.CALL  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.CALL);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
83	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n,  pn  }  );  [CE]  orphaned  case  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n,  pn  }  );  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n,  pn  }  );	      NodeTraversal.traverse(compiler,    n,    new    Class[]    {    t,    n    }    );    	non-compiled	[CE]  orphaned  case	15	None	replace
84	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n,  null  }  );  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n,  null  }  );  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n,  null  }  );	      NodeTraversal.traverse(compiler,    n,    new    Class[]    {    t,    n    }    );    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
85	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n,  this  }  );  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n,  this  }  );  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t,  n,  this  }  );	      NodeTraversal.traverse(compiler,    n,    new    Class[]    {    t,    n    }    );    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
86	[BUG]  [BUGGY]  if(t.getModule()!=  null)  {  pn.addDefinition(parent,  t.getModule());  }  else  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  if(t.getModule()!=  null)  {  pn.addDefinition(parent,  t.getModule());  }  else  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	if(t.getModule()!=  null)  {  pn.addDefinition(parent,  t.getModule());  }  else  {  NodeTraversal.traverse(compiler,  n,  this);  }	      pn.addDefinition(parent,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
87	[BUG]  [BUGGY]  if(t.getModule()!=  null)  {  pn.addDefinition(parent,  t.getModule());  }  else  {  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  if(t.getModule()!=  null)  {  pn.addDefinition(parent,  t.getModule());  }  else  {  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));  }  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	if(t.getModule()!=  null)  {  pn.addDefinition(parent,  t.getModule());  }  else  {  NodeTraversal.traverse(compiler,  n,  new  RuntimeException( " "));  }	      pn.addDefinition(parent,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
88	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t.getModule()  },  false);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t.getModule()  },  false);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  Class[]  {  t.getModule()  },  false);	      NodeTraversal.traverse(compiler,    n,    new    Class[]    {    t.getModule()    }    );    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
89	[BUG]  [BUGGY]  pn.addModule(t.getModule());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  pn.addModule(t.getModule());  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	pn.addModule(t.getModule());	      pn.setModule(t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
90	[BUG]  [BUGGY]  if(t.getModule()!=  null)  {  pn.addDeclaration(parent,  t.getModule());  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  if(t.getModule()!=  null)  {  pn.addDeclaration(parent,  t.getModule());  }  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	if(t.getModule()!=  null)  {  pn.addDeclaration(parent,  t.getModule());  }	      pn.addDeclaration(parent,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
91	[BUG]  [BUGGY]  if(t.getModule()!=  null)  {  pn.addDeclaration(parent,  t.getModule());  }  else  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  if(t.getModule()!=  null)  {  pn.addDeclaration(parent,  t.getModule());  }  else  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	if(t.getModule()!=  null)  {  pn.addDeclaration(parent,  t.getModule());  }  else  {  NodeTraversal.traverse(compiler,  n,  this);  }	      pn.addDeclaration(parent,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
92	[BUG]  [BUGGY]  if(t.getModule()!=  null)  {  pn.addDeclaration(parent,  t.getModule());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  if(t.getModule()!=  null)  {  pn.addDeclaration(parent,  t.getModule());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	if(t.getModule()!=  null)  {  pn.addDeclaration(parent,  t.getModule());  }  else  {  throw  new  IllegalStateException( " ");  }	      pn.addDeclaration(parent,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
93	[BUG]  [BUGGY]  if(t.getModule()!=  null)  {  pn.addDefinition(n,  t.getModule());  }  else  {  NodeTraversal.traverse(compiler,  n,  this);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  if(t.getModule()!=  null)  {  pn.addDefinition(n,  t.getModule());  }  else  {  NodeTraversal.traverse(compiler,  n,  this);  }  [BUGGY]        private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	if(t.getModule()!=  null)  {  pn.addDefinition(n,  t.getModule());  }  else  {  NodeTraversal.traverse(compiler,  n,  this);  }	  pn.addDefinition(n,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
94	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t,  n.getModule()));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t,  n.getModule()));  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t,  n.getModule()));	      NodeTraversal.traverse(compiler,    n,    new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
95	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t.getModule()),  pn);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    pn.addDefinition(parent,  t.getModule());  }  }  }  }    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t.getModule()),  pn);  [BUGGY]    }    private  void  processBaseClassCall(NodeTraversal  t,  Node  n)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	425	425	1	replace	NodeTraversal.traverse(compiler,  n,  new  AssertionFailedError(t.getModule()),  pn);	      NodeTraversal.traverse(compiler,    n,    new    AssertionFailedError(t.getModule()));    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
