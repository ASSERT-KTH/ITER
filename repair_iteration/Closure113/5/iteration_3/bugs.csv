bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  arg  =  t.getLastChild().getNext();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  arg  =  t.getLastChild().getNext();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  t.getLastChild().getNext();	  Node    arg    =    t.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
2	[BUG]  [BUGGY]  Node  arg  =  t.getFirstChild().getParent();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  arg  =  t.getFirstChild().getParent();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  t.getFirstChild().getParent();	  Node    arg    =    t.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.VAR);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.VAR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()!=  Token.VAR);	  Preconditions.checkState(n.getType()!=    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.VAR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.VAR);	  Preconditions.checkState(n.getType()!=    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
5	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getModule());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getModule());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME,  t.getModule());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME,  t.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()!=  Token.NAME,  t.getModule());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getModule());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getModule());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  FUNCTION_NAMESPACE_ERROR);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  FUNCTION_NAMESPACE_ERROR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  FUNCTION_NAMESPACE_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    INVALID_DEFINE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
9	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR,  name);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR,  name);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR,  name);	  NodeTraversal.traverse(compiler,    n,    parent,    INVALID_DEFINE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
10	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  INVALID_DEFINE_ERROR,  parent);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  INVALID_DEFINE_ERROR,  parent);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  INVALID_DEFINE_ERROR,  parent);	  NodeTraversal.traverse(compiler,    n,    parent,    INVALID_DEFINE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
11	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR,  ns);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR,  ns);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR,  ns);	  NodeTraversal.traverse(compiler,    n,    parent,    INVALID_DEFINE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
12	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR,  sourceName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR,  sourceName);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR,  sourceName);	  NodeTraversal.traverse(compiler,    n,    parent,    INVALID_DEFINE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
13	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getFirstChild());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getFirstChild());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    n.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
14	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getLastChild());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getLastChild());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getLastChild());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    n.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
15	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  moduleGraph);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  moduleGraph);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  moduleGraph);	  NodeTraversal.traverse(compiler,    n,    parent,    new    ProvidedName());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
16	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  this);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  this);	  NodeTraversal.traverse(compiler,    n,    parent,    new    ProvidedName());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
17	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  pn);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  pn);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  pn);	  NodeTraversal.traverse(compiler,    n,    parent,    new    ProvidedName());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
18	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  requiredLevel);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  requiredLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  requiredLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    new    ProvidedName());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  &&  n.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  &&  n.getType()  ==  Token.FUNCTION);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR  &&  n.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.VAR    ||    n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.FUNCTION);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.VAR    ||    n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
21	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  n.getType()!=  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  n.getType()!=  Token.FUNCTION);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR  ||  n.getType()!=  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.VAR    ||    n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
22	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);	  Preconditions.checkState(n.getType()    ==    Token.VAR    ||    n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.NAME);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()!=  Token.NAME);	  Preconditions.checkState(n.getType()!=    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  parent.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  parent.getFirstChild());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  parent.getFirstChild());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    n.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
25	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME,  n.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME,  n.getFirstChild());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME,  n.getFirstChild());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    n.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
26	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getLastChild());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getLastChild());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getLastChild());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    n.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
27	[BUG]  [BUGGY]  String  name  =  n.getSimpleName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  String  name  =  n.getSimpleName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  n.getSimpleName();	  String    name    =    t.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
28	[BUG]  [BUGGY]  Name  name  =  t.getSimpleName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  t.getSimpleName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  t.getSimpleName();	  String    name    =    t.getSimpleName();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME,  parent);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME,  parent);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME,  parent);	  Preconditions.checkState(n.getType()    ==    Token.NAME,    INVALID_DEFINE_NAME);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME);	  Preconditions.checkState(n.getType()    ==    Token.NAME,    INVALID_DEFINE_NAME);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
31	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME);	  Preconditions.checkState(n.getType()    ==    Token.NAME,    INVALID_DEFINE_NAME);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
32	[BUG]  [BUGGY]  Node  arg  =  n.getFirstChild().getFirstChild();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  arg  =  n.getFirstChild().getFirstChild();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  n.getFirstChild().getFirstChild();	  Node    arg    =    n.getFirstChild().getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
33	[BUG]  [BUGGY]  Node  arg  =  parent.getFirstChild().getLastChild();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  arg  =  parent.getFirstChild().getLastChild();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  parent.getFirstChild().getLastChild();	  Node    arg    =    n.getFirstChild().getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
34	[BUG]  [BUGGY]  Node  arg  =  t.getFirstChild().getLastChild();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  arg  =  t.getFirstChild().getLastChild();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  t.getFirstChild().getLastChild();	  Node    arg    =    n.getFirstChild().getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
36	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.NAME);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
39	[BUG]  [BUGGY]  name  =  n.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  name  =  n.getLastChild().getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	name  =  n.getLastChild().getQualifiedName();	  name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
40	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  expr,  scope);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  expr,  scope);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  expr,  scope);	  NodeTraversal.traverse(compiler,    n,    parent,    expr);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
41	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  expr,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  expr,  this);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  expr,  this);	  NodeTraversal.traverse(compiler,    n,    parent,    expr);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
42	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  expr,  args);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  expr,  args);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  expr,  args);	  NodeTraversal.traverse(compiler,    n,    parent,    expr);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
43	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  expr,  typeDecl);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  expr,  typeDecl);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  expr,  typeDecl);	  NodeTraversal.traverse(compiler,    n,    parent,    expr);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
44	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  expr,  parent);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  expr,  parent);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  expr,  parent);	  NodeTraversal.traverse(compiler,    n,    parent,    expr);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
45	[BUG]  [BUGGY]  Node  arg  =  n.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  arg  =  n.getLastChild().getQualifiedName();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  n.getLastChild().getQualifiedName();	  Node    arg    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
46	[BUG]  [BUGGY]  Node  arg  =  parent.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  arg  =  parent.getFirstChild().getQualifiedName();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  parent.getFirstChild().getQualifiedName();	  Node    arg    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
47	[BUG]  [BUGGY]  Node  arg  =  n.getFirstChild().getQualifiedName()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  arg  =  n.getFirstChild().getQualifiedName()  +  1;  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  n.getFirstChild().getQualifiedName()  +  1;	  Node    arg    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
48	[BUG]  [BUGGY]  Node  arg  =  t.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  arg  =  t.getFirstChild().getQualifiedName();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  t.getFirstChild().getQualifiedName();	  Node    arg    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  parent.getFirstChild()!=  n);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  parent.getFirstChild()!=  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  parent.getFirstChild()!=  n);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  n);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkArgument(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(parent.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
52	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  args);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  args);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  args);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
53	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  &&  n.getFirstChild()!=  parent);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  &&  n.getFirstChild()!=  parent);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  &&  n.getFirstChild()!=  parent);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()!=    parent);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
54	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  n);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  n);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()!=    parent);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
55	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()!=  n);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()!=  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()!=  n);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()!=    parent);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
56	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  parent);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  parent);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  parent);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()!=    parent);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
57	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  &&  n.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  &&  n.getType()  ==  Token.GETPROP);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP  &&  n.getType()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
58	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  parent.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  parent.getType()  ==  Token.GETPROP);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  parent.getType()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
59	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  n.getType()!=  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  n.getType()!=  Token.GETPROP);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  n.getType()!=  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
60	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.GETPROP  ||  n.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.GETPROP  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()!=  Token.GETPROP  ||  n.getType()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
61	[BUG]  [BUGGY]  String  name  =  t.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  String  name  =  t.getFirstChild().getString();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  t.getFirstChild().getString();	  String    name    =    t.getLastChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
62	[BUG]  [BUGGY]  Name  name  =  t.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  t.getFirstChild().getString();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  t.getFirstChild().getString();	  String    name    =    t.getLastChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
63	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  n.getFirstChild();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  n.getFirstChild();	  Name    name    =    n.getString();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
64	[BUG]  [BUGGY]  Name  name  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  n.getLastChild();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  n.getLastChild();	  Name    name    =    n.getString();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
65	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  sourceName,  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  sourceName,  this);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  sourceName,  this);	  NodeTraversal.traverse(compiler,    n,    parent,    sourceName);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
66	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.sourceName);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.sourceName);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this.sourceName);	  NodeTraversal.traverse(compiler,    n,    parent,    sourceName);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
67	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  sourceName,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  sourceName,  null);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  sourceName,  null);	  NodeTraversal.traverse(compiler,    n,    parent,    sourceName);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.GETPROP);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()!=  Token.GETPROP);	  Preconditions.checkState(n.getType()!=    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.GETPROP);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()!=    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
70	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME,  parent);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME,  parent);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME,  parent);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    INVALID_DEFINE_NAME);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
71	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_CSS_RENAMING_MAP);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_CSS_RENAMING_MAP);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_CSS_RENAMING_MAP);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    INVALID_DEFINE_NAME);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
72	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()!=  Token.FUNCTION);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()!=  Token.FUNCTION);	  Preconditions.checkState(parent.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
73	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.FUNCTION);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(t.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(parent.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
74	[BUG]  [BUGGY]  Node  name  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  name  =  n.getLastChild();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  name  =  n.getLastChild();	  Node    name    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
75	[BUG]  [BUGGY]  Node  name  =  parent.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  name  =  parent.getFirstChild();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  name  =  parent.getFirstChild();	  Node    name    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
76	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  checkLevel);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  checkLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  checkLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    requiresLevel);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
77	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  verifyLevel);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  verifyLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  verifyLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    requiresLevel);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
78	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  checkedLevel);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  checkedLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  checkedLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    requiresLevel);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
79	[BUG]  [BUGGY]  Node  name  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  name  =  n.getFirstChild().getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  name  =  n.getFirstChild().getQualifiedName();	  Node    name    =    n.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
80	[BUG]  [BUGGY]  Node  name  =  n.getLastChild().getString();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  name  =  n.getLastChild().getString();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  name  =  n.getLastChild().getString();	  Node    name    =    n.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
81	[BUG]  [BUGGY]  Node  name  =  parent.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  name  =  parent.getFirstChild().getString();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  name  =  parent.getFirstChild().getString();	  Node    name    =    n.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
82	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args.length  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args.length  +  1);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args.length  +  1);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    args.length);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
83	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  args.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  args.length);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  args.length);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    args.length);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
84	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getFirstChild().getString());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getFirstChild().getString());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getFirstChild().getString());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    args.length);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
85	[BUG]  [BUGGY]  Preconditions.checkArgument(args.getType()  ==  Token.NAME,  n.getString());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(args.getType()  ==  Token.NAME,  n.getString());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(args.getType()  ==  Token.NAME,  n.getString());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    args.length);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
86	[BUG]  [BUGGY]  Node  parent  =  t.getImmediateParentNode();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  parent  =  t.getImmediateParentNode();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  t.getImmediateParentNode();	  Node    parent    =    n.getImmediateParentNode();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
87	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  parent.getModule());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  parent.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP,  parent.getModule());	  Preconditions.checkState(n.getType()    ==    Token.GETPROP,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
88	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.GETPROP,  n.getModule());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.GETPROP,  n.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(t.getType()  ==  Token.GETPROP,  n.getModule());	  Preconditions.checkState(n.getType()    ==    Token.GETPROP,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
89	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.GETPROP,  t.getModule());  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.GETPROP,  t.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()!=  Token.GETPROP,  t.getModule());	  Preconditions.checkState(n.getType()    ==    Token.GETPROP,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
90	[BUG]  [BUGGY]  name  =  n.getLastChild().getString();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  name  =  n.getLastChild().getString();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	name  =  n.getLastChild().getString();	  name    =    n.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
91	[BUG]  [BUGGY]  Name  name  =  parent.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  parent.getFirstChild().getString();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  parent.getFirstChild().getString();	  Name    name    =    n.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
92	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getSourceName());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getSourceName());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getSourceName());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
93	[BUG]  [BUGGY]  Preconditions.checkArgument(t.getType()  ==  Token.NAME,  n.getSourceName());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(t.getType()  ==  Token.NAME,  n.getSourceName());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(t.getType()  ==  Token.NAME,  n.getSourceName());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
94	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  pn.getSourceName());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  pn.getSourceName());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  pn.getSourceName());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
95	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  parent);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  parent);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP,  parent);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP,    n);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
96	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n.getFirstChild());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n.getFirstChild());	  Preconditions.checkState(n.getType()    ==    Token.GETPROP,    n);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
97	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n,  parent);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n,  parent);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n,  parent);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP,    n);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
98	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.GETPROP,  n);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.GETPROP,  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.GETPROP,  n);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP,    n);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
99	[BUG]  [BUGGY]  Name  =  n.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  =  n.getLastChild().getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  =  n.getLastChild().getQualifiedName();	  Name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
100	[BUG]  [BUGGY]  Name  =  parent.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  =  parent.getFirstChild().getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  =  parent.getFirstChild().getQualifiedName();	  Name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
101	[BUG]  [BUGGY]  Name  =  n.getFirstChild().getQualifiedName()  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  =  n.getFirstChild().getQualifiedName()  +  1;  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  =  n.getFirstChild().getQualifiedName()  +  1;	  Name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
102	[BUG]  [BUGGY]  String  name  =  n.getFirstChild().getSourceName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  String  name  =  n.getFirstChild().getSourceName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  n.getFirstChild().getSourceName();	  String    name    =    n.getSourceName();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
103	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    parent.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
104	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  &&  parent.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  &&  parent.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  &&  parent.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    parent.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
105	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.getType()!=  Token.EXPR_RESULT);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    parent.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
106	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
107	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.EXPR_RESULT);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
108	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
109	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME,  n);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME,  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME,  n);	  Preconditions.checkState(parent.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
110	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName()  +  1;  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  n.getFirstChild().getQualifiedName()  +  1;	  Name    name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
111	[BUG]  [BUGGY]  Name  name  =  parent.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  parent.getFirstChild().getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  parent.getFirstChild().getQualifiedName();	  Name    name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
112	[BUG]  [BUGGY]  Name  name  =  t.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  t.getFirstChild().getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  t.getFirstChild().getQualifiedName();	  Name    name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
113	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  &&  parent.getFirstChild()  ==  n);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  &&  parent.getFirstChild()  ==  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP  &&  parent.getFirstChild()  ==  n);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP    &&    parent.getFirstChild()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
114	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.GETPROP  &&  parent.getFirstChild()!=  n);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.GETPROP  &&  parent.getFirstChild()!=  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.GETPROP  &&  parent.getFirstChild()!=  n);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP    &&    parent.getFirstChild()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
115	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  parent.getFirstChild()!=  n);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  parent.getFirstChild()!=  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  parent.getFirstChild()!=  n);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP    &&    parent.getFirstChild()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
116	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.GETPROP  &&  parent.getFirstChild()  ==  n);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.GETPROP  &&  parent.getFirstChild()  ==  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()!=  Token.GETPROP  &&  parent.getFirstChild()  ==  n);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP    &&    parent.getFirstChild()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
117	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  &&  n.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  &&  n.getType()  ==  Token.NAME);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR  &&  n.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.VAR    ||    n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
118	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.NAME);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.VAR    ||    n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
119	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  n.getType()!=  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  n.getType()!=  Token.NAME);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR  ||  n.getType()!=  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.VAR    ||    n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
120	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR);	  Preconditions.checkState(n.getType()    ==    Token.VAR    ||    n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
121	[BUG]  [BUGGY]  String  name  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  String  name  =  n.getFirstChild();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  n.getFirstChild();	  String    name    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
122	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  null);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  null);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  null);	  NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
123	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  moduleGraph);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  moduleGraph);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  moduleGraph);	  NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
124	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  explicitNode);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  explicitNode);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  explicitNode);	  NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
125	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  requiredLevel);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  requiredLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  requiredLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
126	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  typeDecl);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  typeDecl);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  typeDecl);	  NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
127	[BUG]  [BUGGY]  Node  parent  =  n.removeLastChild();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  parent  =  n.removeLastChild();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  n.removeLastChild();	  Node    parent    =    n.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
128	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.VAR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(t.getType()  ==  Token.VAR);	  Preconditions.checkState(parent.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
129	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.NAME,  n.getSourceName());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.NAME,  n.getSourceName());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(t.getType()  ==  Token.NAME,  n.getSourceName());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
130	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  parent.getSourceName());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  parent.getSourceName());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  parent.getSourceName());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
131	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME,  t.getSourceName());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME,  t.getSourceName());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()!=  Token.NAME,  t.getSourceName());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
132	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  parent.getString());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  parent.getString());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  parent.getString());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
133	[BUG]  [BUGGY]  Node  parent  =  t.getParent();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  parent  =  t.getParent();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  t.getParent();	  Node    parent    =    t.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
134	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild().getString());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild().getString());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild().getString());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
135	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  name.getString());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  name.getString());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  name.getString());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
136	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME,  n.getString());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME,  n.getString());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME,  n.getString());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
137	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiredLevel,  pn);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiredLevel,  pn);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  requiredLevel,  pn);	  NodeTraversal.traverse(compiler,    n,    parent,    requiredLevel);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
138	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiredLevel,  args);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiredLevel,  args);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  requiredLevel,  args);	  NodeTraversal.traverse(compiler,    n,    parent,    requiredLevel);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
139	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  &&  t.inGlobalScope());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  &&  t.inGlobalScope());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  &&  t.inGlobalScope());	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    t.inGlobalScope());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
140	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  t.inGlobalScope());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  t.inGlobalScope());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  t.inGlobalScope());	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    t.inGlobalScope());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
141	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.inGlobalScope());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.inGlobalScope());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.inGlobalScope());	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    t.inGlobalScope());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
142	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.FUNCTION  ||  t.inGlobalScope());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.FUNCTION  ||  t.inGlobalScope());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()!=  Token.FUNCTION  ||  t.inGlobalScope());	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    t.inGlobalScope());    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
143	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  needsLevel,  requiredLevel);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  needsLevel,  requiredLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  needsLevel,  requiredLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    needsLevel);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
144	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  needsLevel,  moduleGraph);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  needsLevel,  moduleGraph);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  needsLevel,  moduleGraph);	  NodeTraversal.traverse(compiler,    n,    parent,    needsLevel);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
145	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiresLevel,  pn);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiresLevel,  pn);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  requiresLevel,  pn);	  NodeTraversal.traverse(compiler,    n,    parent,    needsLevel);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
146	[BUG]  [BUGGY]  String  name  =  n.getName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  String  name  =  n.getName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  n.getName();	  String    name    =    t.getName();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
147	[BUG]  [BUGGY]  Name  name  =  t.getName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  t.getName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  t.getName();	  String    name    =    t.getName();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
148	[BUG]  [BUGGY]  Node  arg  =  parent.getFirstChild().getParent();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  arg  =  parent.getFirstChild().getParent();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  parent.getFirstChild().getParent();	  Node    arg    =    n.getFirstChild().getParent();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
149	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  &&  t.inGlobalScope());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  &&  t.inGlobalScope());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR  &&  t.inGlobalScope());	  Preconditions.checkState(n.getType()    ==    Token.VAR    ||    t.inGlobalScope());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
150	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  t.inGlobalScope());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  t.inGlobalScope());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  t.inGlobalScope());	  Preconditions.checkState(n.getType()    ==    Token.VAR    ||    t.inGlobalScope());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
151	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.VAR  ||  t.inGlobalScope());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.VAR  ||  t.inGlobalScope());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()!=  Token.VAR  ||  t.inGlobalScope());	  Preconditions.checkState(n.getType()    ==    Token.VAR    ||    t.inGlobalScope());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
152	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.VAR  ||  n.inGlobalScope());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.VAR  ||  n.inGlobalScope());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(t.getType()  ==  Token.VAR  ||  n.inGlobalScope());	  Preconditions.checkState(n.getType()    ==    Token.VAR    ||    t.inGlobalScope());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
153	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  typeDecl);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  typeDecl);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  typeDecl);	  NodeTraversal.traverse(compiler,    n,    parent,    moduleGraph);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
154	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.moduleGraph);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.moduleGraph);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this.moduleGraph);	  NodeTraversal.traverse(compiler,    n,    parent,    moduleGraph);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
155	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  moduleGraph,  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  moduleGraph,  this);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  moduleGraph,  this);	  NodeTraversal.traverse(compiler,    n,    parent,    moduleGraph);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
156	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  moduleGraph,  args);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  moduleGraph,  args);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  moduleGraph,  args);	  NodeTraversal.traverse(compiler,    n,    parent,    moduleGraph);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
157	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  moduleGraph,  typeDecl);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  moduleGraph,  typeDecl);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  moduleGraph,  typeDecl);	  NodeTraversal.traverse(compiler,    n,    parent,    moduleGraph);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
158	[BUG]  [BUGGY]  Name  n  =  parent.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  n  =  parent.getLastChild().getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  n  =  parent.getLastChild().getQualifiedName();	  Name    n    =    n.getLastChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
159	[BUG]  [BUGGY]  Name  n  =  t.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  n  =  t.getLastChild().getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  n  =  t.getLastChild().getQualifiedName();	  Name    n    =    n.getLastChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
160	[BUG]  [BUGGY]  Name  n  =  n.getLastChild().getQualifiedName()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  n  =  n.getLastChild().getQualifiedName()  +  1;  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  n  =  n.getLastChild().getQualifiedName()  +  1;	  Name    n    =    n.getLastChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
161	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  parent.getModule());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  parent.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  parent.getModule());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
162	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.NAME,  n.getModule());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.NAME,  n.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(t.getType()  ==  Token.NAME,  n.getModule());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
163	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME,  t.getModule());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME,  t.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()!=  Token.NAME,  t.getModule());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
164	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME,  t.getModule());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME,  t.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME,  t.getModule());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
165	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getString());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getString());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getString());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
166	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getFirstChild().getString());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getFirstChild().getString());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getFirstChild().getString());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
167	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  name.getString());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  name.getString());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  name.getString());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
168	[BUG]  [BUGGY]  Name  name  =  parent.getLastChild().getString();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  parent.getLastChild().getString();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  parent.getLastChild().getString();	  Name    name    =    n.getLastChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
169	[BUG]  [BUGGY]  Name  name  =  t.getLastChild().getString();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  t.getLastChild().getString();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  t.getLastChild().getString();	  Name    name    =    n.getLastChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
170	[BUG]  [BUGGY]  Node  arg  =  n.getLastChild().getString();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  arg  =  n.getLastChild().getString();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  n.getLastChild().getString();	  Node    arg    =    n.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
171	[BUG]  [BUGGY]  Node  arg  =  parent.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  arg  =  parent.getFirstChild().getString();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  parent.getFirstChild().getString();	  Node    arg    =    n.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
172	[BUG]  [BUGGY]  Name  n  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  n  =  n.getLastChild();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  n  =  n.getLastChild();	  Name    n    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
173	[BUG]  [BUGGY]  Name  n  =  parent.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  n  =  parent.getFirstChild();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  n  =  parent.getFirstChild();	  Name    n    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
174	[BUG]  [BUGGY]  Name  n  =  n.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  n  =  n.getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  n  =  n.getQualifiedName();	  Name    n    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
175	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.invocationTarget);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.invocationTarget);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this.invocationTarget);	  NodeTraversal.traverse(compiler,    n,    parent,    invocationTarget);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
176	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  invocationTarget,  moduleGraph);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  invocationTarget,  moduleGraph);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  invocationTarget,  moduleGraph);	  NodeTraversal.traverse(compiler,    n,    parent,    invocationTarget);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
177	[BUG]  [BUGGY]  Name  name  =  parent.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  parent.getLastChild().getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  parent.getLastChild().getQualifiedName();	  Name    name    =    n.getLastChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
178	[BUG]  [BUGGY]  Name  name  =  t.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  t.getLastChild().getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  t.getLastChild().getQualifiedName();	  Name    name    =    n.getLastChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
179	[BUG]  [BUGGY]  Name  name  =  n.getLastChild().getQualifiedName()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  n.getLastChild().getQualifiedName()  +  1;  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  n.getLastChild().getQualifiedName()  +  1;	  Name    name    =    n.getLastChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
180	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR,  parent.getModule());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR,  parent.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR,  parent.getModule());	  Preconditions.checkState(n.getType()    ==    Token.VAR,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
181	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.VAR,  n.getModule());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.VAR,  n.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(t.getType()  ==  Token.VAR,  n.getModule());	  Preconditions.checkState(n.getType()    ==    Token.VAR,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
182	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.VAR,  t.getModule());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.VAR,  t.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()!=  Token.VAR,  t.getModule());	  Preconditions.checkState(n.getType()    ==    Token.VAR,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
183	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR,  t.getModule());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR,  t.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.VAR,  t.getModule());	  Preconditions.checkState(n.getType()    ==    Token.VAR,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
184	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    parent);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
185	[BUG]  [BUGGY]  Preconditions.checkArgument(parent.getType()  ==  Token.NAME,  n);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(parent.getType()  ==  Token.NAME,  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(parent.getType()  ==  Token.NAME,  n);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    parent);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
186	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  parent);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  parent);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  parent);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    parent);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
187	[BUG]  [BUGGY]  Node  arg  =  firstNode.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  arg  =  firstNode.getFirstChild().getNext();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  firstNode.getFirstChild().getNext();	  Node    arg    =    parent.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
188	[BUG]  [BUGGY]  Node  arg  =  node.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  arg  =  node.getFirstChild().getNext();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  node.getFirstChild().getNext();	  Node    arg    =    parent.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
189	[BUG]  [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(t.getType()  ==  Token.GETPROP);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(t.getType()  ==  Token.GETPROP);	  Preconditions.checkState(parent.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
190	[BUG]  [BUGGY]  Name  name  =  n.getQualifiedName()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  n.getQualifiedName()  +  1;  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  n.getQualifiedName()  +  1;	  Name    name    =    n.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
191	[BUG]  [BUGGY]  Name  name  =  parent.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  parent.getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  parent.getQualifiedName();	  Name    name    =    n.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
192	[BUG]  [BUGGY]  Node  parent  =  t.getOwnerFunction();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  parent  =  t.getOwnerFunction();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  t.getOwnerFunction();	  Node    parent    =    n.getOwnerFunction();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
193	[BUG]  [BUGGY]  Name  n  =  parent.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  n  =  parent.getFirstChild().getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  n  =  parent.getFirstChild().getQualifiedName();	  Name    n    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
194	[BUG]  [BUGGY]  Name  n  =  t.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  n  =  t.getFirstChild().getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  n  =  t.getFirstChild().getQualifiedName();	  Name    n    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
195	[BUG]  [BUGGY]  Name  n  =  n.getFirstChild().getQualifiedName()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  n  =  n.getFirstChild().getQualifiedName()  +  1;  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  n  =  n.getFirstChild().getQualifiedName()  +  1;	  Name    n    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
196	[BUG]  [BUGGY]  Name  name  =  t.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  t.getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  t.getQualifiedName();	  String    name    =    t.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
197	[BUG]  [BUGGY]  String  name  =  t.getQualifiedName()  + ": ";  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  String  name  =  t.getQualifiedName()  + ": ";  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  t.getQualifiedName()  + ": ";	  String    name    =    t.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
198	[BUG]  [BUGGY]  String  name  =  t.getQualifiedName()  + "n ";  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  String  name  =  t.getQualifiedName()  + "n ";  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  t.getQualifiedName()  + "n ";	  String    name    =    t.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
199	[BUG]  [BUGGY]  Node  arg  =  parent.getLastChild().getNext();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  arg  =  parent.getLastChild().getNext();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  parent.getLastChild().getNext();	  Node    arg    =    n.getLastChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
200	[BUG]  [BUGGY]  Node  arg  =  n.getLastChild().getParent();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  arg  =  n.getLastChild().getParent();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  n.getLastChild().getParent();	  Node    arg    =    n.getLastChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
201	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  t.inGlobalScope());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  t.inGlobalScope());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  t.inGlobalScope());	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
202	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
203	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION,  n.getFirstChild().getString());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION,  n.getFirstChild().getString());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION,  n.getFirstChild().getString());	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
204	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  &&  parent.getLastChild()!=  n);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  &&  parent.getLastChild()!=  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP  &&  parent.getLastChild()!=  n);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP    &&    parent.getFirstChild()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
205	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  arg);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  arg);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  arg);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    parent);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
206	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  arg.getSourceName());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  arg.getSourceName());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  arg.getSourceName());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
207	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getName());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getName());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent.getName());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
208	[BUG]  [BUGGY]  Name  n  =  n.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  n  =  n.getFirstChild().getNext();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  n  =  n.getFirstChild().getNext();	  Name    n    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
209	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  CheckLevel.INVALID_DEFINE_ERROR);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  CheckLevel.INVALID_DEFINE_ERROR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  CheckLevel.INVALID_DEFINE_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    requiresLevel);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
210	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  CheckLevel.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  CheckLevel.EXPR_RESULT);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  CheckLevel.EXPR_RESULT);	  NodeTraversal.traverse(compiler,    n,    parent,    requiresLevel);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
211	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  checksLevel);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  checksLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  checksLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    requiresLevel);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
212	[BUG]  [BUGGY]  Preconditions.checkArgument(args.getType()  ==  Token.NAME,  n.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(args.getType()  ==  Token.NAME,  n.length);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(args.getType()  ==  Token.NAME,  n.length);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    args.length);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
213	[BUG]  [BUGGY]  Preconditions.checkArgument(args.length  ==  n.getType());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(args.length  ==  n.getType());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(args.length  ==  n.getType());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    args.length);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
214	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args.length  *  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args.length  *  2);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args.length  *  2);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    args.length);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
215	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.GETPROP  ||  parent.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.GETPROP  ||  parent.getType()  ==  Token.GETPROP);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.GETPROP  ||  parent.getType()  ==  Token.GETPROP);	  Preconditions.checkState(parent.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
216	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  BASE_CLASS_ERROR);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  BASE_CLASS_ERROR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  BASE_CLASS_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    INVALID_DEFINE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
217	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  EXPECTED_STRING_ERROR);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  EXPECTED_STRING_ERROR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  EXPECTED_STRING_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    INVALID_DEFINE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
218	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  DUPLICATE_NAMESPACE_ERROR);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  DUPLICATE_NAMESPACE_ERROR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  DUPLICATE_NAMESPACE_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    INVALID_DEFINE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
219	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  EXPECTED_OBJECT_ERROR);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  EXPECTED_OBJECT_ERROR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  EXPECTED_OBJECT_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    INVALID_DEFINE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
220	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  arg.getModule());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  arg.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  arg.getModule());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
221	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getFirstChild().getModule());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getFirstChild().getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getFirstChild().getModule());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
222	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  arg.getString());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  arg.getString());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  arg.getString());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
223	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()!=  n);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()!=  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()!=  n);	  Preconditions.checkState(parent.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
224	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()!=  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()!=  null);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()!=  null);	  Preconditions.checkState(parent.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
225	[BUG]  [BUGGY]  Name  name  =  n.getfirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  n.getfirstChild().getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  n.getfirstChild().getQualifiedName();	  Name    name    =    n.getLastChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
226	[BUG]  [BUGGY]  Name  name  =  n.getName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  n.getName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  n.getName();	  String    name    =    t.getName();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
227	[BUG]  [BUGGY]  Node  parent  =  n.getOwnerFunction().getParent();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  parent  =  n.getOwnerFunction().getParent();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  n.getOwnerFunction().getParent();	  Node    parent    =    n.getOwnerFunction();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
228	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||!NodeUtil.isFunctionDeclaration(n));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||!NodeUtil.isFunctionDeclaration(n));  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||!NodeUtil.isFunctionDeclaration(n));	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
229	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
230	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.GETPROP  &&  n.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.GETPROP  &&  n.getType()  ==  Token.GETPROP);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()!=  Token.GETPROP  &&  n.getType()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
231	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
232	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  INVALID_DEFINE_ERROR);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  INVALID_DEFINE_ERROR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  INVALID_DEFINE_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
233	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  t.getModule()!=  null);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  t.getModule()!=  null);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR  ||  t.getModule()!=  null);	  Preconditions.checkState(n.getType()    ==    Token.VAR,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
234	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  INVALID_CSS_RENAMING_MAP);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  INVALID_CSS_RENAMING_MAP);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  INVALID_CSS_RENAMING_MAP);	  Preconditions.checkState(n.getType()    ==    Token.NAME,    INVALID_DEFINE_NAME);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
235	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  INVALID_ARGUMENT_ERROR);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  INVALID_ARGUMENT_ERROR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  INVALID_ARGUMENT_ERROR);	  Preconditions.checkState(n.getType()    ==    Token.NAME,    INVALID_DEFINE_NAME);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
236	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.GETPROP,  t.getModule());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.GETPROP,  t.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.GETPROP,  t.getModule());	  Preconditions.checkState(n.getType()    ==    Token.GETPROP,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
237	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  t.getModule()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  t.getModule()  ==  Token.GETPROP);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  t.getModule()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
238	[BUG]  [BUGGY]  Name  name  =  n.getfirstChild().getString();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  n.getfirstChild().getString();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  n.getfirstChild().getString();	  Name    name    =    n.getLastChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
239	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME,  t.getSourceName());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME,  t.getSourceName());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME,  t.getSourceName());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
240	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  parent.getName());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  parent.getName());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  parent.getName());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
241	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  parent.inGlobalScope());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  parent.inGlobalScope());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR  ||  parent.inGlobalScope());	  Preconditions.checkState(n.getType()    ==    Token.VAR    ||    t.inGlobalScope());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
242	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  t.inGlobalScope());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  t.inGlobalScope());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  t.inGlobalScope());	  Preconditions.checkState(n.getType()    ==    Token.VAR    ||    t.inGlobalScope());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
243	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  INVALID_DEFINE_NAME_ERROR);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  INVALID_DEFINE_NAME_ERROR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  INVALID_DEFINE_NAME_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    new    ProvidedName());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
244	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  INVALID_DEFINE_ERROR);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  INVALID_DEFINE_ERROR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  INVALID_DEFINE_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    new    ProvidedName());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
245	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(n.getString()));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(n.getString()));  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(n.getString()));	  NodeTraversal.traverse(compiler,    n,    parent,    new    ProvidedName());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
246	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(null));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(null));  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(null));	  NodeTraversal.traverse(compiler,    n,    parent,    new    ProvidedName());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
247	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  arg);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  arg);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()  ==  arg);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
248	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  CheckLevel.EXPECTED_REQUIRE);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  CheckLevel.EXPECTED_REQUIRE);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  CheckLevel.EXPECTED_REQUIRE);	  NodeTraversal.traverse(compiler,    n,    parent,    requiredLevel);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
249	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  t.inGlobalScope());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  t.inGlobalScope());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  t.inGlobalScope());	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
250	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
251	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.FUNCTION);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(parent.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
252	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.GETPROP);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.GETPROP);	  Preconditions.checkState(parent.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
253	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_NAME_ERROR);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_NAME_ERROR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_NAME_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    invocationTarget);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
254	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  invocationTarget,  requiredLevel);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  invocationTarget,  requiredLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  invocationTarget,  requiredLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    invocationTarget);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
255	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  NON_GLOBAL_DEFINE_ERROR);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  NON_GLOBAL_DEFINE_ERROR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  NON_GLOBAL_DEFINE_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    moduleGraph);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
256	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_ARGUMENT_ERROR);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_ARGUMENT_ERROR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_ARGUMENT_ERROR);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    INVALID_DEFINE_NAME);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
257	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_TYPE);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_TYPE);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_TYPE);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    INVALID_DEFINE_NAME);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
258	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  t.getModule()!=  null);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  t.getModule()!=  null);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  t.getModule()!=  null);	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
259	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild().getName();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  name  =  n.getFirstChild().getName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  n.getFirstChild().getName();	  Name    name    =    n.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
260	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    parent.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
261	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()!=  n);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()!=  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()!=  n);	  Preconditions.checkState(parent.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
262	[BUG]  [BUGGY]  String  name  =  t.getQualifiedName()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  String  name  =  t.getQualifiedName()  +  1;  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  t.getQualifiedName()  +  1;	  String    name    =    t.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
263	[BUG]  [BUGGY]  Name  n  =  n.getfirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  n  =  n.getfirstChild().getQualifiedName();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  n  =  n.getfirstChild().getQualifiedName();	  Name    n    =    n.getLastChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
264	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  sourceName,  INVALID_DEFINE_ERROR);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  sourceName,  INVALID_DEFINE_ERROR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  sourceName,  INVALID_DEFINE_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    sourceName);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
265	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  n);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  n);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()!=    parent);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
266	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  n);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  n);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()!=    parent);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
267	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  expr,  INVALID_DEFINE_ERROR);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  expr,  INVALID_DEFINE_ERROR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  expr,  INVALID_DEFINE_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    expr);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
268	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  expr,  INVALID_DEFINE_NAMESPACE);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  expr,  INVALID_DEFINE_NAMESPACE);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  expr,  INVALID_DEFINE_NAMESPACE);	  NodeTraversal.traverse(compiler,    n,    parent,    expr);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
269	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.expr);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.expr);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this.expr);	  NodeTraversal.traverse(compiler,    n,    parent,    expr);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
270	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getQualifiedName());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getQualifiedName());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
271	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getName());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getName());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getName());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
272	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  t.getSourceName()!=  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  t.getSourceName()!=  null);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  t.getSourceName()!=  null);	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
273	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getReturnType());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getReturnType());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getReturnType());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
274	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR,  requiresLevel);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR,  requiresLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR,  requiresLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    INVALID_DEFINE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
275	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR,  this);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR,  this);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR,  this);	  NodeTraversal.traverse(compiler,    n,    parent,    INVALID_DEFINE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
276	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  EXPECTED_DEFINE_ERROR);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  EXPECTED_DEFINE_ERROR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  EXPECTED_DEFINE_ERROR);	  NodeTraversal.traverse(compiler,    n,    parent,    INVALID_DEFINE_ERROR);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
277	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()!=  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.FUNCTION    ||    parent.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
278	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP)||  n.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP)||  n.getType()  ==  Token.GETPROP);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP)||  n.getType()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.GETPROP    ||    n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
279	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  t.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  t.getQualifiedName());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  t.getQualifiedName());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
280	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  t.getName());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  t.getName());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  t.getName());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
281	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  t.getReturnType());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  t.getReturnType());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  t.getReturnType());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
282	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  t.getSourceName()!=  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  t.getSourceName()!=  null);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  t.getSourceName()!=  null);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    t.getSourceName());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
283	[BUG]  [BUGGY]  Node  name  =  n.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  name  =  n.getFirstChild().getNext();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  name  =  n.getFirstChild().getNext();	  Node    name    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
284	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  t.getModule()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  t.getModule()  ==  Token.VAR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  t.getModule()  ==  Token.VAR);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
285	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  CheckLevel);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  CheckLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  CheckLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    requiresLevel);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
286	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  t.getModule()  ==  Token.SCRIPT);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  t.getModule()  ==  Token.SCRIPT);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  t.getModule()  ==  Token.SCRIPT);	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
287	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  t.getModule()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  t.getModule()  ==  Token.VAR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  t.getModule()  ==  Token.VAR);	  Preconditions.checkState(n.getType()    ==    Token.NAME,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
288	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requireLevel);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requireLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  requireLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    sourceName);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
289	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    INVALID_DEFINE_NAME);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
290	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME,  t.getModule());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME,  t.getModule());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME,  t.getModule());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    INVALID_DEFINE_NAME);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
291	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME,  n.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME,  n.getFirstChild());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME,  n.getFirstChild());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    INVALID_DEFINE_NAME);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
292	[BUG]  [BUGGY]  Name  =  n.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  =  n.getFirstChild().getString();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  =  n.getFirstChild().getString();	  Name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
293	[BUG]  [BUGGY]  Node  parent  =  n.getImmediateParent();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  parent  =  n.getImmediateParent();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  n.getImmediateParent();	  Node    parent    =    n.getPreviousParent();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
294	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||!t.inGlobalScope());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||!t.inGlobalScope());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||!t.inGlobalScope());	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
295	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.NAME);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.NAME);	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
296	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.VAR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.VAR);	  Preconditions.checkArgument(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
297	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n.getString());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n.getString());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n.getString());	  Preconditions.checkState(n.getType()    ==    Token.GETPROP,    n);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
298	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.VAR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.VAR);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
299	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()  ==  Token.VAR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()  ==  Token.VAR);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
300	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()  ==  Token.FUNCTION);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getFirstChild().getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
301	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.NAME,    INVALID_DEFINE_NAME);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
302	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(t.getModule()));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(t.getModule()));  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(t.getModule()));	  NodeTraversal.traverse(compiler,    n,    parent,    new    ProvidedName());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
303	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  requiresLevel);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  requiresLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName(),  requiresLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    new    ProvidedName());    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
304	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  invocationTarget,  requiresLevel);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  invocationTarget,  requiresLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  invocationTarget,  requiresLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    invocationTarget);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
305	[BUG]  [BUGGY]  Name  n  =  n.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Name  n  =  n.getFirstChild().getString();  [BUGGY]      if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  n  =  n.getFirstChild().getString();	  Name    n    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
306	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getChildCount());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getChildCount());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getChildCount());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    n.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
307	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args.length  >  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args.length  >  0);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args.length  >  0);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    args.length);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
308	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args.length  >  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args.length  >  1);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args.length  >  1);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    args.length);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
309	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.VAR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.VAR);	  Preconditions.checkState(parent.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
310	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiredLevel,  checkLevel);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiredLevel,  checkLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  requiredLevel,  checkLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    requiredLevel);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
311	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.requireLevel);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this.requireLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this.requireLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    requiredLevel);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
312	[BUG]  [BUGGY]  Node  parent  =  t.getParentNode();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Node  parent  =  t.getParentNode();  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  t.getParentNode();	  Node    parent    =    t.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
313	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  expr,  requiredLevel);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  expr,  requiredLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  expr,  requiredLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    expr);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
314	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.VAR  ||  t.inGlobalScope());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.VAR  ||  t.inGlobalScope());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.VAR  ||  t.inGlobalScope());	  Preconditions.checkState(n.getType()    ==    Token.VAR    ||    t.inGlobalScope());    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
315	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  t.getModule()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  t.getModule()  ==  Token.FUNCTION);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR  ||  t.getModule()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.VAR,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
316	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  t.getModule()  ==  Token.SCRIPT);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  t.getModule()  ==  Token.SCRIPT);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR  ||  t.getModule()  ==  Token.SCRIPT);	  Preconditions.checkState(n.getType()    ==    Token.VAR,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
317	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  t.getModule()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  t.getModule()  ==  Token.NAME);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR  ||  t.getModule()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.VAR,    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
318	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.VAR);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.VAR);	  Preconditions.checkState(parent.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
319	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  moduleGraph,  requiredLevel);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  moduleGraph,  requiredLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  moduleGraph,  requiredLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    moduleGraph);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
320	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  phaseGraph);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  phaseGraph);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  phaseGraph);	  NodeTraversal.traverse(compiler,    n,    parent,    moduleGraph);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
321	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  requiresLevel);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  requiresLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  requiresLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
322	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  expr);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this,  expr);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this,  expr);	  NodeTraversal.traverse(compiler,    n,    parent,    this);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
323	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  parent.getFirstChild()!=  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  parent.getFirstChild()!=  null);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  parent.getFirstChild()!=  null);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
324	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()!=  Token.NAME  &&  parent.getFirstChild()  ==  n);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME    &&    parent.getFirstChild()!=    n);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
325	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getString());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getString());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getString());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
326	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getChildCount());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getChildCount());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getChildCount());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    n.getFirstChild());    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
327	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiresLevel,  checkLevel);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiresLevel,  checkLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  requiresLevel,  checkLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    needsLevel);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
328	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  needsLevel,  checkLevel);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  needsLevel,  checkLevel);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  needsLevel,  checkLevel);	  NodeTraversal.traverse(compiler,    n,    parent,    needsLevel);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
329	[BUG]  [BUGGY]  Preconditions.checkState(n,  parent.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n,  parent.getType()  ==  Token.GETPROP);  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n,  parent.getType()  ==  Token.GETPROP);	  Preconditions.checkState(parent.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
330	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getQualifiedName());  [BUGGY]      String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getQualifiedName());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
