bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  name  =  n.getString();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]  String  name  =  n.getString();  [BUGGY]  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  n.getString();	String  name  =  null;  	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
2	[BUG]  [BUGGY]  String  name  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]  String  name  =  n.getFirstChild().getQualifiedName();  [BUGGY]  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  n.getFirstChild().getQualifiedName();	String  name  =  null;  	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
3	[BUG]  [BUGGY]  String  name  =  n.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]  String  name  =  n.getFirstChild().getString();  [BUGGY]  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  n.getFirstChild().getString();	String  name  =  null;  	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
4	[BUG]  [BUGGY]  String  name  =  n.getLastChild().getString();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]  String  name  =  n.getLastChild().getString();  [BUGGY]  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  n.getLastChild().getString();	String  name  =  null;  	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
5	[BUG]  [BUGGY]  String  name  =  n.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]  String  name  =  n.getLastChild().getQualifiedName();  [BUGGY]  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  n.getLastChild().getQualifiedName();	String  name  =  null;  	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
6	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]              AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]    [BUGGY]  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	  	String  name  =  null;  	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
7	[BUG]  [BUGGY]    Node  parent  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]    Node  parent  =  n.getFirstChild();  [BUGGY]  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	    Node  parent  =  n.getFirstChild();		non-compiled	[CE]  illegal  start  of  expression	81	None	add
8	[BUG]  [BUGGY]    Node  parent  =  n.getParent();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]    Node  parent  =  n.getParent();  [BUGGY]  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	    Node  parent  =  n.getParent();		non-compiled	[CE]  illegal  start  of  expression	81	None	add
9	[BUG]  [BUGGY]    Preconditions.checkState(n.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]    Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	    Preconditions.checkState(n.getType()  ==  Token.NAME);		non-compiled	[CE]  illegal  start  of  expression	81	None	add
10	[BUG]  [BUGGY]    Node  parent  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]    Node  parent  =  n.getLastChild();  [BUGGY]  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	    Node  parent  =  n.getLastChild();		non-compiled	[CE]  illegal  start  of  expression	81	None	add
11	[BUG]  [BUGGY]    Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]    Preconditions.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	    Preconditions.checkState(n.getType()  ==  Token.FUNCTION);		non-compiled	[CE]  illegal  start  of  expression	81	None	add
12	[BUG]  [BUGGY]    Preconditions.checkState(n.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]    Preconditions.checkState(n.getType()  ==  Token.GETPROP);  [BUGGY]  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	    Preconditions.checkState(n.getType()  ==  Token.GETPROP);		non-compiled	[CE]  illegal  start  of  expression	81	None	add
13	[BUG]  [BUGGY]    NodeTraversal.traverse(compiler,  n,  parent);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]    NodeTraversal.traverse(compiler,  n,  parent);  [BUGGY]  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	    NodeTraversal.traverse(compiler,  n,  parent);		non-compiled	[CE]  illegal  start  of  expression	81	None	add
14	[BUG]  [BUGGY]  String  name  =  n.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]  String  name  =  n.getQualifiedName();  [BUGGY]  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  n.getQualifiedName();	String  name  =  null;  	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
15	[BUG]  [BUGGY]    Preconditions.checkState(n.getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]    Preconditions.checkState(n.getType()  ==  Token.VAR);  [BUGGY]  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	    Preconditions.checkState(n.getType()  ==  Token.VAR);		non-compiled	[CE]  illegal  start  of  expression	81	None	add
16	[BUG]  [BUGGY]    Preconditions.checkArgument(n.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]    Preconditions.checkArgument(n.getType()  ==  Token.NAME);  [BUGGY]  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	    Preconditions.checkArgument(n.getType()  ==  Token.NAME);		non-compiled	[CE]  illegal  start  of  expression	81	None	add
17	[BUG]  [BUGGY]    Node  arg  =  n.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]    Node  arg  =  n.getFirstChild().getNext();  [BUGGY]  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	    Node  arg  =  n.getFirstChild().getNext();		non-compiled	[CE]  illegal  start  of  expression	81	None	add
18	[BUG]  [BUGGY]  String  name  =  t.getSourceName();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  [BUGGY]  String  name  =  t.getSourceName();  [BUGGY]  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  t.getSourceName();	String  name  =  null;  	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
