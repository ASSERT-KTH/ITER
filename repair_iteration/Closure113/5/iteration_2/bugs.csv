bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.FUNCTION);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.FUNCTION);	      Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()!=  Token.FUNCTION);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()!=  Token.FUNCTION);	      Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);	      Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);	      Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  n.getFirstChild().getQualifiedName();	  String    name    =    n.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  Name  name  =  n.getLastChild().getString();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Name  name  =  n.getLastChild().getString();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  n.getLastChild().getString();	  String    name    =    n.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  Node  parent  =  n.getNext();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  parent  =  n.getNext();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  n.getNext();	      Node    parent    =    n.getParent();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
8	[BUG]  [BUGGY]  Node  parent  =  n.getPreviousParent();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  parent  =  n.getPreviousParent();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  n.getPreviousParent();	      Node    parent    =    n.getParent();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args.length);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args.length);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  args.length);	      Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
10	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getString());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getString());  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getString());	      Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
11	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  t.getModule());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  t.getModule());  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  t.getModule());	      Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
12	[BUG]  [BUGGY]  Node  parent  =  n.getParentNode();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  parent  =  n.getParentNode();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  n.getParentNode();	      Node    parent    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  String  name  =  n.getSourceName();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  String  name  =  n.getSourceName();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  n.getSourceName();	  String    name    =    t.getSourceName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
14	[BUG]  [BUGGY]  String  name  =  t.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  String  name  =  t.getQualifiedName();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  t.getQualifiedName();	  String    name    =    t.getSourceName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
15	[BUG]  [BUGGY]  String  name  =  t.getSimpleName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  String  name  =  t.getSimpleName();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  t.getSimpleName();	  String    name    =    t.getSourceName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
16	[BUG]  [BUGGY]  String  name  =  t.getName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  String  name  =  t.getName();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  t.getName();	  String    name    =    t.getSourceName();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
17	[BUG]  [BUGGY]  String  name  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  String  name  =  n.getLastChild();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  n.getLastChild();	  String    name    =    n.getString();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  Name  name  =  n.getString();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Name  name  =  n.getString();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  n.getString();	  String    name    =    n.getString();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  Name  n  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Name  n  =  n.getFirstChild();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  n  =  n.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Name  name  =  n.getFirstChild().getString();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  n.getFirstChild().getString();	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  Node  name  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  name  =  n.getFirstChild();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  name  =  n.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  Node  parent  =  t.getLastChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  parent  =  t.getLastChild();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  t.getLastChild();	      Node    parent    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
23	[BUG]  [BUGGY]  Node  parent  =  t.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  parent  =  t.getFirstChild();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  t.getFirstChild();	      Node    parent    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()!=  Token.GETPROP);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()!=  Token.GETPROP);	      Preconditions.checkState(n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
25	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.GETPROP);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.GETPROP);	      Preconditions.checkState(n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
26	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  n.getType()  ==  Token.GETPROP);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP  ||  n.getType()  ==  Token.GETPROP);	      Preconditions.checkState(n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  t.getModule());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  t.getModule());  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP,  t.getModule());	      Preconditions.checkState(n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  Name  name  =  n.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Name  name  =  n.getLastChild().getQualifiedName();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  n.getLastChild().getQualifiedName();	  String    name    =    n.getLastChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  Name  n  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Name  n  =  n.getFirstChild().getQualifiedName();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  n  =  n.getFirstChild().getQualifiedName();	  String    name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  Node  arg  =  n.getLastChild().getNext();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  arg  =  n.getLastChild().getNext();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  n.getLastChild().getNext();	      Node    arg    =    n.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
31	[BUG]  [BUGGY]  Node  arg  =  parent.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  arg  =  parent.getFirstChild().getNext();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  parent.getFirstChild().getNext();	      Node    arg    =    n.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
32	[BUG]  [BUGGY]  Node  arg  =  n.getFirstChild().getParent();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  arg  =  n.getFirstChild().getParent();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  n.getFirstChild().getParent();	      Node    arg    =    n.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
33	[BUG]  [BUGGY]  Node  arg  =  t.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  arg  =  t.getFirstChild().getNext();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  t.getFirstChild().getNext();	      Node    arg    =    n.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
34	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getModule());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getModule());  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getModule());	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME);	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()!=  Token.NAME);	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getString());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getString());  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getString());	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  this);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  this);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
39	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  moduleGraph);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  moduleGraph);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  moduleGraph);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
40	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiredLevel);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiredLevel);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  requiredLevel);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  sourceName);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  sourceName);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  sourceName);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
42	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  expr);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  expr);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  expr);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  Name  n  =  n.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Name  n  =  n.getLastChild().getQualifiedName();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  n  =  n.getLastChild().getQualifiedName();	  String    name    =    n.getLastChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.VAR);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()!=  Token.VAR);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()!=  Token.VAR);	      Preconditions.checkState(n.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
45	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.VAR);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(parent.getType()  ==  Token.VAR);	      Preconditions.checkState(n.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
46	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.FUNCTION);	      Preconditions.checkState(n.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
47	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.NAME);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.NAME);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.NAME);	      Preconditions.checkState(n.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
48	[BUG]  [BUGGY]  Name  name  =  n.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Name  name  =  n.getQualifiedName();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  name  =  n.getQualifiedName();	  String    name    =    n.getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.EXPR_RESULT);	      Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
50	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  t.inGlobalScope());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  t.inGlobalScope());  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  t.inGlobalScope());	      Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
51	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  parent);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  parent);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  parent);	      Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
52	[BUG]  [BUGGY]  Node  parent  =  n.getImmediateParentNode();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  parent  =  n.getImmediateParentNode();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  n.getImmediateParentNode();	      Node    parent    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
53	[BUG]  [BUGGY]  Node  parent  =  n.getfirstChild();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  parent  =  n.getfirstChild();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  n.getfirstChild();	      Node    parent    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  Node  parent  =  n.getPreviousChild();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  parent  =  n.getPreviousChild();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  n.getPreviousChild();	      Node    parent    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
55	[BUG]  [BUGGY]  Name  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Name  =  n.getFirstChild().getQualifiedName();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Name  =  n.getFirstChild().getQualifiedName();	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
56	[BUG]  [BUGGY]  Node  arg  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  arg  =  n.getFirstChild().getQualifiedName();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  n.getFirstChild().getQualifiedName();	      Node    arg    =    n.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
57	[BUG]  [BUGGY]  Node  arg  =  n.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  arg  =  n.getFirstChild().getString();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  n.getFirstChild().getString();	      Node    arg    =    n.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
58	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  INVALID_DEFINE_ERROR);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
59	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  invocationTarget);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  invocationTarget);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  invocationTarget);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
60	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  t.inGlobalScope());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR  ||  t.inGlobalScope());  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR  ||  t.inGlobalScope());	      Preconditions.checkState(n.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
61	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP,  n);	      Preconditions.checkState(n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
62	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  &&  parent.getFirstChild()!=  n);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.GETPROP  &&  parent.getFirstChild()!=  n);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.GETPROP  &&  parent.getFirstChild()!=  n);	      Preconditions.checkState(n.getType()    ==    Token.GETPROP);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
63	[BUG]  [BUGGY]  String  name  =  n.getFirstChild().getQualifiedName()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  String  name  =  n.getFirstChild().getQualifiedName()  +  1;  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  n.getFirstChild().getQualifiedName()  +  1;	  String    name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
64	[BUG]  [BUGGY]  name  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  name  =  n.getFirstChild().getQualifiedName();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	name  =  n.getFirstChild().getQualifiedName();	  String    name    =    n.getLastChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME);	      Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
66	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  parent);	      Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  INVALID_DEFINE_NAME);	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getSourceName());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getSourceName());  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getSourceName());	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
69	[BUG]  [BUGGY]  Node  name  =  n.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  name  =  n.getFirstChild().getString();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  name  =  n.getFirstChild().getString();	      	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
70	[BUG]  [BUGGY]  Node  parent  =  n.removeFirstChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  parent  =  n.removeFirstChild();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  n.removeFirstChild();	      Node    parent    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
71	[BUG]  [BUGGY]  Node  arg  =  n.getFirstChild().getLastChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  arg  =  n.getFirstChild().getLastChild();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  arg  =  n.getFirstChild().getLastChild();	      Node    arg    =    n.getFirstChild().getNext();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
72	[BUG]  [BUGGY]  String  name  =  t.getLastChild().getString();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  String  name  =  t.getLastChild().getString();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	String  name  =  t.getLastChild().getString();	  String    name    =    n.getLastChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
73	[BUG]  [BUGGY]  name  =  n.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  name  =  n.getFirstChild().getString();  [BUGGY]    if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	name  =  n.getFirstChild().getString();	  String    name    =    n.getLastChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
74	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
75	[BUG]  [BUGGY]  Node  parent  =  n.getOwnerFunction();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Node  parent  =  n.getOwnerFunction();  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Node  parent  =  n.getOwnerFunction();	      Node    parent    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
76	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.FUNCTION);	      Preconditions.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
77	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR,  t.getModule());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.VAR,  t.getModule());  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkState(n.getType()  ==  Token.VAR,  t.getModule());	      Preconditions.checkState(n.getType()    ==    Token.VAR);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
78	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiresLevel);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  requiresLevel);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  requiresLevel);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
79	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName());  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  new  ProvidedName());	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
80	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  needsLevel);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  NodeTraversal.traverse(compiler,  n,  parent,  needsLevel);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	NodeTraversal.traverse(compiler,  n,  parent,  needsLevel);	      NodeTraversal.traverse(compiler,    n,    parent);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
81	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  t.getSourceName());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  t.getSourceName());  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  t.getSourceName());	      Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
82	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getFirstChild());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getFirstChild());  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getFirstChild());	      Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
83	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleCandidateProvideDefinition(  NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n);  [BUGGY]    String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();  }  else  if  (n.isAssign()  &&  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  if  (parent.getBooleanProp(Node.IS_NAMESPACE))  {  processProvideFromPreviousPass(t,  name,  parent);  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleCandidateProvideDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	406	406	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  &&  parent.getFirstChild()!=  n);	      Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
