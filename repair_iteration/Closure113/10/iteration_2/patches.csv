bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  null);	  NodeTraversal.traverse(compiler,    methodName,    arg,    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
2	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  null,  Token.STRING);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  null,  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  null,  Token.STRING);	  NodeTraversal.traverse(compiler,    methodName,    arg,    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
3	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  null,  false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  null,  false);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  null,  false);	  NodeTraversal.traverse(compiler,    methodName,    arg,    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
4	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)||    verifyLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
5	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyFirstArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyFirstArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyFirstArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)||    verifyLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
6	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isExpressionNode(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
7	[BUG]  [BUGGY]  ||!NodeUtil.isExpressionNode(arg))  {  return  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!NodeUtil.isExpressionNode(arg))  {  return  false;  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||!NodeUtil.isExpressionNode(arg))  {  return  false;	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isExpressionNode(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
8	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsLast(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsLast(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsLast(t,  arg,  arg);	  return    verify(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
9	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);	  return    verify(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
10	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);	  return    verify(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
11	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgument(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgument(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgument(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyFirstArgument(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
12	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgument(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgument(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgument(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyFirstArgument(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
13	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyFirstArgument(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyFirstArgument(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyFirstArgument(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyFirstArgument(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
14	[BUG]  [BUGGY]  &&!StringUtils.isEmpty(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&!StringUtils.isEmpty(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&!StringUtils.isEmpty(methodName))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(!StringUtils.isEmpty(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
15	[BUG]  [BUGGY]  ||!StringUtils.isEmpty(methodName))  {  return  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!StringUtils.isEmpty(methodName))  {  return  false;  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||!StringUtils.isEmpty(methodName))  {  return  false;	  if(arg.getType()    ==    Token.STRING)    {    if(!StringUtils.isEmpty(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
16	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(!NodeUtil.isGetProp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(!NodeUtil.isGetProp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  if(!NodeUtil.isGetProp(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isForIn(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
17	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(!NodeUtil.isFunction(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(!NodeUtil.isFunction(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  if(!NodeUtil.isFunction(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isForIn(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
18	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(!NodeUtil.isAssign(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(!NodeUtil.isAssign(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  if(!NodeUtil.isAssign(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isForIn(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
19	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLastArgumentIsString(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLastArgumentIsString(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLastArgumentIsString(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
20	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgumentIsString(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgumentIsString(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgumentIsString(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
21	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(!NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
22	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isExpressionNode(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
23	[BUG]  [BUGGY]  &&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isExpressionNode(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
24	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isExpressionNode(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
25	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
26	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLastArgument(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLastArgument(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLastArgument(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
27	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkArgumentIsLast(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkArgumentIsLast(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkArgumentIsLast(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
28	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  checkIsLast(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  checkIsLast(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  checkIsLast(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
29	[BUG]  [BUGGY]  AssertionFailedError.checkNotNull(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkNotNull(t,  methodName,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkNotNull(t,  methodName,  arg);	  AssertionFailedError.checkNotNull(t,    methodName);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
30	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentNotNull(t,  methodName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentNotNull(t,  methodName);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentNotNull(t,  methodName);	  AssertionFailedError.checkNotNull(t,    methodName);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
31	[BUG]  [BUGGY]  AssertionFailedError.checkState(methodName!=  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkState(methodName!=  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkState(methodName!=  null);	  AssertionFailedError.checkNotNull(t,    methodName);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
32	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentNull(t,  methodName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentNull(t,  methodName);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentNull(t,  methodName);	  AssertionFailedError.checkNotNull(t,    methodName);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
33	[BUG]  [BUGGY]  AssertionFailedError.checkState(methodName  ==  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkState(methodName  ==  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkState(methodName  ==  null);	  AssertionFailedError.checkNotNull(t,    methodName);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
34	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
35	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
36	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgument(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgument(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgument(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
37	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
38	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isAnonymous(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
39	[BUG]  [BUGGY]  ||!NodeUtil.isAnonymous(arg))  {  return  false;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!NodeUtil.isAnonymous(arg))  {  return  false;  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||!NodeUtil.isAnonymous(arg))  {  return  false;	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
40	[BUG]  [BUGGY]  &&!NodeUtil.isAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&!NodeUtil.isAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&!NodeUtil.isAnonymous(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
41	[BUG]  [BUGGY]  &&!NodeUtil.isAnonymous(arg))  {  return  false;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&!NodeUtil.isAnonymous(arg))  {  return  false;  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&!NodeUtil.isAnonymous(arg))  {  return  false;	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
42	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  &&!StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  &&!StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  &&!StringUtils.isEmpty(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||!StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
43	[BUG]  [BUGGY]  ||!StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||!StringUtils.isEmpty(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||!StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
44	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  ||!StringUtils.isEmpty(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  ||!StringUtils.isEmpty(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  ||!StringUtils.isEmpty(methodName))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||!StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
45	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  arg,  null);	  t.report(JSError.make(t,    methodName),    arg,    null);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
46	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName),  error,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName),  error,  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName),  error,  null);	  t.report(JSError.make(t,    methodName),    arg,    null);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
47	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName),  null,  arg);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName),  null,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName),  null,  arg);	  t.report(JSError.make(t,    methodName),    arg,    null);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
48	[BUG]  [BUGGY]  ||  methodName.getType()  ==  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  methodName.getType()  ==  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  methodName.getType()  ==  Token.STRING)  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
49	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
50	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||  methodName.getType()  ==  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||  methodName.getType()  ==  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  ||  methodName.getType()  ==  Token.STRING)  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
51	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||  methodName.getString().equals( "string "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||  methodName.getString().equals( "string "))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  ||  methodName.getString().equals( "string "))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
52	[BUG]  [BUGGY]  if(methodName!=  null)  {  if(t.getCompiler()!=  null)  {  t.getCompiler().reportCodeChange();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName!=  null)  {  if(t.getCompiler()!=  null)  {  t.getCompiler().reportCodeChange();  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName!=  null)  {  if(t.getCompiler()!=  null)  {  t.getCompiler().reportCodeChange();  }	  if(t.getCompiler()!=    null)    {    t.getCompiler().reportCodeChange();    }    else    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
53	[BUG]  [BUGGY]  TasksUiUtil.checkState(t.getCompiler()!=  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  TasksUiUtil.checkState(t.getCompiler()!=  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	TasksUiUtil.checkState(t.getCompiler()!=  null);	  if(t.getCompiler()!=    null)    {    t.getCompiler().reportCodeChange();    }    else    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
54	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  null)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  null)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  null)&&  verifyLastArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    null)&&    verifyLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
55	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.NAME)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.NAME)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.NAME)&&  verifyLastArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    null)&&    verifyLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
56	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
57	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
58	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
59	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
60	[BUG]  [BUGGY]  Context.checkState(NodeUtil.isFunctionDeclaration(arg));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Context.checkState(NodeUtil.isFunctionDeclaration(arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	Context.checkState(NodeUtil.isFunctionDeclaration(arg));	  if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
61	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
62	[BUG]  [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  arg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.traverse(compiler,  methodName,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.traverse(compiler,  methodName,  arg);	  NodeTraversal.traverse(compiler,    arg,    methodName);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
63	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  t);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  t);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  arg,  methodName,  t);	  NodeTraversal.traverse(compiler,    arg,    methodName);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
64	[BUG]  [BUGGY]  Context.traverse(compiler,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Context.traverse(compiler,  methodName,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	Context.traverse(compiler,  methodName,  arg);	  NodeTraversal.traverse(compiler,    arg,    methodName);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
65	[BUG]  [BUGGY]  Traversal.traverse(compiler,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Traversal.traverse(compiler,  methodName,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	Traversal.traverse(compiler,  methodName,  arg);	  NodeTraversal.traverse(compiler,    arg,    methodName);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
66	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  null));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  null));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  arg,  null));	  t.report(JSError.make(t,    methodName,    null));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
67	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  null,  arg));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  null,  arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  null,  arg));	  t.report(JSError.make(t,    methodName,    null));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
68	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  this));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  this));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  this));	  t.report(JSError.make(t,    methodName,    null));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
69	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  null),  arg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  null),  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  null),  arg);	  t.report(JSError.make(t,    methodName,    null));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
70	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  &&  arg.getType()  ==  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  &&  arg.getType()  ==  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  &&  arg.getType()  ==  Token.STRING)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||    arg.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
71	[BUG]  [BUGGY]  arg.getType()  ==  Token.STRING  ||  arg.getType()  ==  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  arg.getType()  ==  Token.STRING  ||  arg.getType()  ==  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	arg.getType()  ==  Token.STRING  ||  arg.getType()  ==  Token.STRING)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||    arg.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
72	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  arg);	  return    verify(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
73	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsFirst(t,  arg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsFirst(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsFirst(t,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsFirst(t,    arg);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
74	[BUG]  [BUGGY]  AssertionFailedError.checkStatementIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkStatementIsString(t,  methodName,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkStatementIsString(t,  methodName,  arg);	  AssertionFailedError.checkStatementIsString(t,    methodName);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
75	[BUG]  [BUGGY]  AssertionFailedError.checkStatementIsString(t,  methodName,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkStatementIsString(t,  methodName,  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkStatementIsString(t,  methodName,  null);	  AssertionFailedError.checkStatementIsString(t,    methodName);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
76	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  if(StringUtils.isEmpty(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(!StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
77	[BUG]  [BUGGY]  ||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
78	[BUG]  [BUGGY]  if(!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
79	[BUG]  [BUGGY]  if(!NodeUtil.isFunctionDeclaration(arg)||!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isFunctionDeclaration(arg)||!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(!NodeUtil.isFunctionDeclaration(arg)||!NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
80	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
81	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgument(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgument(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgument(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyFirstArgument(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
82	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyFirstArgument(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyFirstArgument(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyFirstArgument(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyFirstArgument(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
83	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgument(t,  arg,  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgument(t,  arg,  1);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgument(t,  arg,  1);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyFirstArgument(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
84	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
85	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
86	[BUG]  [BUGGY]  ||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;	  if(methodName.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
87	[BUG]  [BUGGY]  &&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;	  if(methodName.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
88	[BUG]  [BUGGY]  return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgument(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgument(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgument(t,  methodName,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLast(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
89	[BUG]  [BUGGY]  ||  NodeUtil.isGetProp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  NodeUtil.isGetProp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  NodeUtil.isGetProp(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isGetProp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
90	[BUG]  [BUGGY]  &&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isGetProp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isGetProp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isGetProp(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isGetProp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
91	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isGetProp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isGetProp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isGetProp(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isGetProp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
92	[BUG]  [BUGGY]  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isGetProp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isGetProp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeUtil.isAssignmentOp(arg)||  NodeUtil.isGetProp(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isGetProp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
93	[BUG]  [BUGGY]  ||  NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  NodeUtil.isAssignmentOp(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  NodeUtil.isAssignmentOp(methodName))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
94	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
95	[BUG]  [BUGGY]  ParchetUtil.checkState(NodeUtil.isAssignmentOp(methodName));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ParchetUtil.checkState(NodeUtil.isAssignmentOp(methodName));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	ParchetUtil.checkState(NodeUtil.isAssignmentOp(methodName));	  if(NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
96	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
97	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isGetProp(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isGetProp(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isGetProp(methodName))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
98	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  arg,  null);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
99	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  Token.STRING);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  arg,  Token.STRING);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
100	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  false);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  arg,  false);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
101	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsFirst(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsFirst(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsFirst(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsFirst(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
102	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsFirst(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsFirst(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsFirst(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsFirst(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
103	[BUG]  [BUGGY]  if(StringUtils.isEmpty(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(StringUtils.isEmpty(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(StringUtils.isEmpty(methodName))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(StringUtils.isEmpty(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
104	[BUG]  [BUGGY]  ||  StringUtils.isEmpty(methodName))  {  return  false;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  StringUtils.isEmpty(methodName))  {  return  false;  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  StringUtils.isEmpty(methodName))  {  return  false;	  if(arg.getType()    ==    Token.STRING)    {    if(StringUtils.isEmpty(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
105	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  arg,  INVALID_TYPE));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  arg,  INVALID_TYPE));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName,  arg,  INVALID_TYPE));	  t.getCompiler().report(JSError.make(t,    arg,    INVALID_TYPE));    	non-compiled	[CE]  <identifier>  expected	127	None	replace
106	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  INVALID_TYPE));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  INVALID_TYPE));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName,  INVALID_TYPE));	  t.getCompiler().report(JSError.make(t,    arg,    INVALID_TYPE));    	non-compiled	[CE]  <identifier>  expected	127	None	replace
107	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  inVALID_TYPE));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  inVALID_TYPE));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName,  inVALID_TYPE));	  t.getCompiler().report(JSError.make(t,    arg,    INVALID_TYPE));    	non-compiled	[CE]  <identifier>  expected	127	None	replace
108	[BUG]  [BUGGY]  return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsLast(t,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsLast(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsLast(t,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
109	[BUG]  [BUGGY]  return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
110	[BUG]  [BUGGY]  &&!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
111	[BUG]  [BUGGY]  &&!NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&!NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&!NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(!NodeUtil.isFunctionAnonymous(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
112	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(!NodeUtil.isFunctionAnonymous(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
113	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLast(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
114	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgument(t,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgument(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgument(t,  arg);	  return    verifyNull(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
115	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsLast(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsLast(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsLast(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
116	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.STRING,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.STRING,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.STRING,  arg);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
117	[BUG]  [BUGGY]  AssertionFailedError.checkStatementIsString(t,  methodName,  arg,  Token.STRING);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkStatementIsString(t,  methodName,  arg,  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkStatementIsString(t,  methodName,  arg,  Token.STRING);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
118	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.STRING,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.STRING,  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.STRING,  null);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
119	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.STRING);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  arg,  Token.STRING);	  t.report(JSError.make(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
120	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.NAME);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.NAME);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  arg,  Token.NAME);	  t.report(JSError.make(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
121	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.FUNCTION);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.FUNCTION);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  arg,  Token.FUNCTION);	  t.report(JSError.make(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
122	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.EXPR_RESULT);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  arg,  Token.EXPR_RESULT);	  t.report(JSError.make(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
123	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.EMPTY);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.EMPTY);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  arg,  Token.EMPTY);	  t.report(JSError.make(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
124	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)||  checkOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)||  checkOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)||  checkOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    checkOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
125	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    checkOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
126	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }	  if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
127	[BUG]  [BUGGY]  if(NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }	  if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
128	[BUG]  [BUGGY]  if(NodeUtil.isFunctionAnonymous(methodName)||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isFunctionAnonymous(methodName)||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isFunctionAnonymous(methodName)||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }	  if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
129	[BUG]  [BUGGY]  ParchetUtil.isFunctionAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ParchetUtil.isFunctionAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	ParchetUtil.isFunctionAnonymous(arg))  {  return  false;  }	  if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
130	[BUG]  [BUGGY]  if(NodeUtil.isFunctionAnonymous(methodName)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isFunctionAnonymous(methodName)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isFunctionAnonymous(methodName)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
131	[BUG]  [BUGGY]  AssertionFailedError.checkStatementIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkStatementIsString(t,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkStatementIsString(t,  arg);	  AssertionFailedError.checkArgumentIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
132	[BUG]  [BUGGY]  tatement.report(JSError.make(t,  methodName));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  tatement.report(JSError.make(t,  methodName));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	tatement.report(JSError.make(t,  methodName));	  if(arg.getType()    ==    Token.STRING)    {    t.report(JSError.make(t,    methodName));    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
133	[BUG]  [BUGGY]  Parchet.checkState(arg.getType()  ==  Token.STRING);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Parchet.checkState(arg.getType()  ==  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	Parchet.checkState(arg.getType()  ==  Token.STRING);	  if(arg.getType()    ==    Token.STRING)    {    t.report(JSError.make(t,    methodName));    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
134	[BUG]  [BUGGY]  tate.checkArgument(arg.getType()  ==  Token.STRING);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  tate.checkArgument(arg.getType()  ==  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	tate.checkArgument(arg.getType()  ==  Token.STRING);	  if(arg.getType()    ==    Token.STRING)    {    t.report(JSError.make(t,    methodName));    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
135	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  arg));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  arg));  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  arg));  }	  if(arg.getType()    ==    Token.STRING)    {    t.report(JSError.make(t,    methodName));    }    else    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
136	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  this);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  this);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  this);	  NodeTraversal.traverse(compiler,    methodName,    arg,    this);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
137	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  this,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  this,  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  this,  null);	  NodeTraversal.traverse(compiler,    methodName,    arg,    this);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
138	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  arg,  Token.STRING));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  arg,  Token.STRING));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName,  arg,  Token.STRING));	  t.getCompiler().report(JSError.make(t,    methodName,    arg));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
139	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  arg,  Token.NAME));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  arg,  Token.NAME));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName,  arg,  Token.NAME));	  t.getCompiler().report(JSError.make(t,    methodName,    arg));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
140	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  arg,  Token.EMPTY));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  arg,  Token.EMPTY));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName,  arg,  Token.EMPTY));	  t.getCompiler().report(JSError.make(t,    methodName,    arg));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
141	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  arg,  Token.FUNCTION));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  arg,  Token.FUNCTION));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName,  arg,  Token.FUNCTION));	  t.getCompiler().report(JSError.make(t,    methodName,    arg));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
142	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  arg,  JSError.INVALID_TYPE));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  arg,  JSError.INVALID_TYPE));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName,  arg,  JSError.INVALID_TYPE));	  t.getCompiler().report(JSError.make(t,    methodName,    arg));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
143	[BUG]  [BUGGY]  ||!StringUtils.isEmpty(methodName))  {  return  true;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!StringUtils.isEmpty(methodName))  {  return  true;  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||!StringUtils.isEmpty(methodName))  {  return  true;	  ||!StringUtils.isEmpty(arg))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
144	[BUG]  [BUGGY]  ||!StringUtils.isNullOrEmpty(arg))  {  return  false;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!StringUtils.isNullOrEmpty(arg))  {  return  false;  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||!StringUtils.isNullOrEmpty(arg))  {  return  false;	  ||!StringUtils.isEmpty(arg))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
145	[BUG]  [BUGGY]  ||!StringUtils.isEmpty(arg))  {  return  true;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!StringUtils.isEmpty(arg))  {  return  true;  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||!StringUtils.isEmpty(arg))  {  return  true;	  ||!StringUtils.isEmpty(arg))    {    return    false;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
146	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)||    verifyIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
147	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsLast(t,  arg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsLast(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsLast(t,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)||    verifyIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
148	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  null,  Token.STRING);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  null,  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  null,  Token.STRING);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    null);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
149	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  null));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  null));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName,  null));	  t.getCompiler().report(JSError.make(t,    methodName));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
150	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  this));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  this));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName,  this));	  t.getCompiler().report(JSError.make(t,    methodName));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
151	[BUG]  [BUGGY]  ||  NodeUtil.isName(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  NodeUtil.isName(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  NodeUtil.isName(methodName))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isName(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
152	[BUG]  [BUGGY]  &&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isName(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isName(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isName(methodName))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isName(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
153	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isName(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isName(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isName(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isName(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
154	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isName(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isName(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isName(methodName))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isName(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
155	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
156	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg)||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg)||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg)||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
157	[BUG]  [BUGGY]  ||!NodeUtil.isFunctionAnonymous(arg))  {  return  false;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!NodeUtil.isFunctionAnonymous(arg))  {  return  false;  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||!NodeUtil.isFunctionAnonymous(arg))  {  return  false;	  if(methodName.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
158	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg)&&  verifyLastArgumentIsString(t,  methodName,  arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg)&&  verifyLastArgumentIsString(t,  methodName,  arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg)&&  verifyLastArgumentIsString(t,  methodName,  arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
159	[BUG]  [BUGGY]  ||  arg.getType()  ==  Token.STRING)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  arg.getType()  ==  Token.STRING)  {  return  true;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  arg.getType()  ==  Token.STRING)  {  return  true;  }	  if(arg.getType()    ==    Token.STRING)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
160	[BUG]  [BUGGY]  parent.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	parent.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
161	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
162	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  error);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  error);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  error);	  NodeTraversal.traverse(compiler,    methodName,    t,    arg);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
163	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  new  IllegalArgumentException( " "));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  new  IllegalArgumentException( " "));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  new  IllegalArgumentException( " "));	  NodeTraversal.traverse(compiler,    methodName,    t,    arg);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
164	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg);	  return    verify(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
165	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  checkIsLast(t,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  checkIsLast(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  checkIsLast(t,  arg);	  return    verify(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
166	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLastArgument(t,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLastArgument(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLastArgument(t,  arg);	  return    verify(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
167	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
168	[BUG]  [BUGGY]  &&!NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&!NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&!NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
169	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLastArgumentIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLastArgumentIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLastArgumentIsString(t,  arg);	  return    verify(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
170	[BUG]  [BUGGY]  return  check(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  check(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  check(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg);	  return    verify(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
171	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  true);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  true);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  true);	  NodeTraversal.traverse(compiler,    methodName,    arg,    false);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
172	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  false);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  false);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  false);	  NodeTraversal.traverse(compiler,    methodName,    arg,    false);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
173	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  false,  t.getModule());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  false,  t.getModule());  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  false,  t.getModule());	  NodeTraversal.traverse(compiler,    methodName,    arg,    false);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
174	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  false,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  false,  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  false,  null);	  NodeTraversal.traverse(compiler,    methodName,    arg,    false);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
175	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  n,  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  n,  false);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  n,  false);	  NodeTraversal.traverse(compiler,    methodName,    arg,    false);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
176	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
177	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkArgumentIsLast(t,  arg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkArgumentIsLast(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkArgumentIsLast(t,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
178	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  checkIsLast(t,  arg);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  checkIsLast(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  checkIsLast(t,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
179	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLastArgument(t,  arg);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLastArgument(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLastArgument(t,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
180	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.NAME,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.NAME,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.NAME,  arg);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
181	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.NAME,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.NAME,  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.NAME,  null);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
182	[BUG]  [BUGGY]  AssertionFailedError.checkStatementIsString(t,  methodName,  arg,  Token.NAME);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkStatementIsString(t,  methodName,  arg,  Token.NAME);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkStatementIsString(t,  methodName,  arg,  Token.NAME);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
183	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(!NodeUtil.isName(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(!NodeUtil.isName(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  if(!NodeUtil.isName(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(!NodeUtil.isName(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
184	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(!NodeUtil.isFunction(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(!NodeUtil.isFunction(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  if(!NodeUtil.isFunction(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(!NodeUtil.isName(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
185	[BUG]  [BUGGY]  parent.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	parent.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
186	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
187	[BUG]  [BUGGY]  ||!NodeUtil.isVarDeclaration(arg))  {  return  false;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!NodeUtil.isVarDeclaration(arg))  {  return  false;  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||!NodeUtil.isVarDeclaration(arg))  {  return  false;	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
188	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  &&  arg.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  &&  arg.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  &&  arg.getType()  ==  Token.NAME)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||    arg.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
189	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||  methodName.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||  methodName.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  ||  methodName.getType()  ==  Token.NAME)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||    arg.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
190	[BUG]  [BUGGY]  &&  arg.getType()  ==  Token.STRING  ||  arg.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&  arg.getType()  ==  Token.STRING  ||  arg.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&  arg.getType()  ==  Token.STRING  ||  arg.getType()  ==  Token.NAME)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||    arg.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
191	[BUG]  [BUGGY]  arg.getType()  ==  Token.STRING  ||  arg.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  arg.getType()  ==  Token.STRING  ||  arg.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	arg.getType()  ==  Token.STRING  ||  arg.getType()  ==  Token.NAME)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||    arg.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
192	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isAnonymous(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
193	[BUG]  [BUGGY]  AssertionFailedError.checkState(methodName.getType()  ==  Token.STRING);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkState(methodName.getType()  ==  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkState(methodName.getType()  ==  Token.STRING);	  AssertionFailedError.checkState(arg.getType()    ==    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
194	[BUG]  [BUGGY]  AssertionFailedError.checkState(methodName.getType()!=  Token.STRING);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkState(methodName.getType()!=  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkState(methodName.getType()!=  Token.STRING);	  AssertionFailedError.checkState(arg.getType()    ==    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
195	[BUG]  [BUGGY]  AssertionFailedError.checkState(methodName,  arg.getType()  ==  Token.STRING);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkState(methodName,  arg.getType()  ==  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkState(methodName,  arg.getType()  ==  Token.STRING);	  AssertionFailedError.checkState(arg.getType()    ==    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
196	[BUG]  [BUGGY]  AssertionFailedError.checkState(arg.getType()  ==  Token.STRING,  methodName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkState(arg.getType()  ==  Token.STRING,  methodName);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkState(arg.getType()  ==  Token.STRING,  methodName);	  AssertionFailedError.checkState(arg.getType()    ==    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
197	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
198	[BUG]  [BUGGY]  ||!NodeUtil.isAssignmentOp(arg))  {  return  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!NodeUtil.isAssignmentOp(arg))  {  return  false;  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||!NodeUtil.isAssignmentOp(arg))  {  return  false;	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
199	[BUG]  [BUGGY]  &&!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&!NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
200	[BUG]  [BUGGY]  TasksUiUtil.checkArgument(t.getCompiler()!=  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  TasksUiUtil.checkArgument(t.getCompiler()!=  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	TasksUiUtil.checkArgument(t.getCompiler()!=  null);	  if(t.getCompiler()!=    null)    {    t.getCompiler().reportCodeChange();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
201	[BUG]  [BUGGY]  ||  StringUtils.isEmpty(arg))  {  return  false;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  StringUtils.isEmpty(arg))  {  return  false;  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  StringUtils.isEmpty(arg))  {  return  false;	  if(methodName.getType()    ==    Token.STRING)    {    if(StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
202	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  if(StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
203	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
204	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(StringUtils.isEmpty(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
205	[BUG]  [BUGGY]  &&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
206	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
207	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
208	[BUG]  [BUGGY]  parent.getType()!=  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent.getType()!=  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	parent.getType()!=  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
209	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
210	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.FUNCTION,  arg);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.FUNCTION,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.FUNCTION,  arg);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.FUNCTION);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
211	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.FUNCTION,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.FUNCTION,  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.FUNCTION,  null);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.FUNCTION);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
212	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.FUNCTION));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.FUNCTION));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.FUNCTION));	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.FUNCTION);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
213	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.FUNCTION,  0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.FUNCTION,  0);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.FUNCTION,  0);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.FUNCTION);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
214	[BUG]  [BUGGY]  return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
215	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  MISSING_EXTENDS,  arg));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  MISSING_EXTENDS,  arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  MISSING_EXTENDS,  arg));	  t.report(JSError.make(t,    methodName,    MISSING_EXTENDS));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
216	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  MISSING_EXTENDS));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  MISSING_EXTENDS));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  arg,  MISSING_EXTENDS));	  t.report(JSError.make(t,    methodName,    MISSING_EXTENDS));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
217	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  INVALID_ARGUMENTS));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  INVALID_ARGUMENTS));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  INVALID_ARGUMENTS));	  t.report(JSError.make(t,    methodName,    MISSING_EXTENDS));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
218	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    &&!NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
219	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  ||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  ||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  ||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    &&!NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
220	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  &&!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  &&!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  &&!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    &&!NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
221	[BUG]  [BUGGY]  ||  NodeUtil.isFunction(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  NodeUtil.isFunction(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  NodeUtil.isFunction(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isFunction(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
222	[BUG]  [BUGGY]  &&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isFunction(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isFunction(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isFunction(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isFunction(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
223	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isFunction(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isFunction(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isFunction(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isFunction(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
224	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isFunction(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isFunction(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isFunction(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isFunction(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
225	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
226	[BUG]  [BUGGY]  return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
227	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName,  arg);	  t.getCompiler().report(JSError.make(t,    methodName),    arg);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
228	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName),  arg,  Token.STRING);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName),  arg,  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName),  arg,  Token.STRING);	  t.getCompiler().report(JSError.make(t,    methodName),    arg);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
229	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName),  error);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName),  error);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName),  error);	  t.getCompiler().report(JSError.make(t,    methodName),    arg);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
230	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName),  JSError.make(t,  arg));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName),  JSError.make(t,  arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName),  JSError.make(t,  arg));	  t.getCompiler().report(JSError.make(t,    methodName),    arg);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
231	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
232	[BUG]  [BUGGY]  parent.getType()  ==  Token.STRING)  {  if(NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent.getType()  ==  Token.STRING)  {  if(NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	parent.getType()  ==  Token.STRING)  {  if(NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
233	[BUG]  [BUGGY]  &&!StringUtils.isEmpty(methodName))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&!StringUtils.isEmpty(methodName))  {  return  true;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&!StringUtils.isEmpty(methodName))  {  return  true;  }	  &&!StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
234	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    &&!NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
235	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  ||!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  ||!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  ||!NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    &&!NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
236	[BUG]  [BUGGY]  ||  arg.getType()  ==  Token.STRING  &&!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  arg.getType()  ==  Token.STRING  &&!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  arg.getType()  ==  Token.STRING  &&!NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    &&!NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
237	[BUG]  [BUGGY]  AssertionFailedError.checkState(methodName.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkState(methodName.getType()  ==  Token.NAME);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkState(methodName.getType()  ==  Token.NAME);	  AssertionFailedError.checkState(arg.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
238	[BUG]  [BUGGY]  AssertionFailedError.checkState(arg.getType()  ==  Token.NAME,  methodName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkState(arg.getType()  ==  Token.NAME,  methodName);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkState(arg.getType()  ==  Token.NAME,  methodName);	  AssertionFailedError.checkState(arg.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
239	[BUG]  [BUGGY]  AssertionFailedError.checkState(methodName.getType()!=  Token.NAME);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkState(methodName.getType()!=  Token.NAME);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkState(methodName.getType()!=  Token.NAME);	  AssertionFailedError.checkState(arg.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
240	[BUG]  [BUGGY]  AssertionFailedError.checkState(methodName,  arg.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkState(methodName,  arg.getType()  ==  Token.NAME);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkState(methodName,  arg.getType()  ==  Token.NAME);	  AssertionFailedError.checkState(arg.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
241	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(arg.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgument(arg.getType()  ==  Token.NAME);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgument(arg.getType()  ==  Token.NAME);	  AssertionFailedError.checkState(arg.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
242	[BUG]  [BUGGY]  ||  arg.getType()!=  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  arg.getType()!=  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  arg.getType()!=  Token.STRING)  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
243	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
244	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg,  methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg,  methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg,  methodName))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
245	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsString(t,  arg);	  return    verify(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)    &&    checkIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
246	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  checkIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  checkIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  checkIsString(t,  arg);	  return    verify(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)    &&    checkIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
247	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkArgumentIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkArgumentIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkArgumentIsString(t,  arg);	  return    verify(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)    &&    checkIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	105	None	replace
248	[BUG]  [BUGGY]  ||  methodName.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  methodName.getType()  ==  Token.STRING)  {  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  methodName.getType()  ==  Token.STRING)  {	  ||    arg.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
249	[BUG]  [BUGGY]  ||  arg.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  arg.getType()!=  Token.STRING)  {  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  arg.getType()!=  Token.STRING)  {	  ||    arg.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
250	[BUG]  [BUGGY]  ||(arg.getType()  ==  Token.STRING)&&!methodName.equals(arg.getString()))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(arg.getType()  ==  Token.STRING)&&!methodName.equals(arg.getString()))  {  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||(arg.getType()  ==  Token.STRING)&&!methodName.equals(arg.getString()))  {	  ||    arg.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
251	[BUG]  [BUGGY]  ||(arg.getType()  ==  Token.STRING)&&!NodeUtil.isAssignmentOp(arg))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(arg.getType()  ==  Token.STRING)&&!NodeUtil.isAssignmentOp(arg))  {  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||(arg.getType()  ==  Token.STRING)&&!NodeUtil.isAssignmentOp(arg))  {	  ||    arg.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
252	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.STRING));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.STRING));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  arg,  Token.STRING));	  t.report(JSError.make(t,    methodName,    arg));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
253	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.NAME));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.NAME));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  arg,  Token.NAME));	  t.report(JSError.make(t,    methodName,    arg));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
254	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.FUNCTION));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.FUNCTION));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  arg,  Token.FUNCTION));	  t.report(JSError.make(t,    methodName,    arg));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
255	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.EMPTY));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  Token.EMPTY));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  arg,  Token.EMPTY));	  t.report(JSError.make(t,    methodName,    arg));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
256	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  methodName,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
257	[BUG]  [BUGGY]  return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  methodName,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
258	[BUG]  [BUGGY]  ||  arg.getType()  ==  Token.STRING)  {  return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  arg.getType()  ==  Token.STRING)  {  return  false;  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  arg.getType()  ==  Token.STRING)  {  return  false;	  ||    arg.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
259	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()!=  Token.STRING)  {  if(!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent!=  null  &&  parent.getType()!=  Token.STRING)  {  if(!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	parent!=  null  &&  parent.getType()!=  Token.STRING)  {  if(!NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(!NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
260	[BUG]  [BUGGY]  ||!NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||!NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||!NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||!NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
261	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  &&!NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  &&!NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  &&!NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||!NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
262	[BUG]  [BUGGY]  &&!NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&!NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&!NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||!NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
263	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  Token.STRING);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  Token.STRING);	  NodeTraversal.traverse(compiler,    methodName,    arg,    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
264	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  Token.STRING,  t);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  Token.STRING,  t);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  Token.STRING,  t);	  NodeTraversal.traverse(compiler,    methodName,    arg,    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
265	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  Token.STRING,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  Token.STRING,  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  Token.STRING,  null);	  NodeTraversal.traverse(compiler,    methodName,    arg,    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
266	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  IOContext.ERROR);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  IOContext.ERROR);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  IOContext.ERROR);	  NodeTraversal.traverse(compiler,    methodName,    arg,    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
267	[BUG]  [BUGGY]  ||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
268	[BUG]  [BUGGY]  &&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
269	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
270	[BUG]  [BUGGY]  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isAssignmentOp(arg)||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeUtil.isAssignmentOp(arg)||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
271	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName),  arg,  Token.NAME,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName),  arg,  Token.NAME,  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName),  arg,  Token.NAME,  null);	  t.report(JSError.make(t,    methodName),    arg,    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
272	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName),  arg,  Token.NAME,  arg);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName),  arg,  Token.NAME,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName),  arg,  Token.NAME,  arg);	  t.report(JSError.make(t,    methodName),    arg,    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
273	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName),  arg,  Token.NAME,  0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName),  arg,  Token.NAME,  0);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName),  arg,  Token.NAME,  0);	  t.report(JSError.make(t,    methodName),    arg,    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
274	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName),  error,  Token.NAME);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName),  error,  Token.NAME);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName),  error,  Token.NAME);	  t.report(JSError.make(t,    methodName),    arg,    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
275	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    &&!NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
276	[BUG]  [BUGGY]  ||  arg.getType()  ==  Token.STRING  &&!NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  arg.getType()  ==  Token.STRING  &&!NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  arg.getType()  ==  Token.STRING  &&!NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    &&!NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
277	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.EXPR_RESULT,  arg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.EXPR_RESULT,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.EXPR_RESULT,  arg);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
278	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.EXPR_RESULT,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.EXPR_RESULT,  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.EXPR_RESULT,  null);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
279	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.EXPR_RESULT,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.EXPR_RESULT,  false);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.EXPR_RESULT,  false);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
280	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  arg));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  arg));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  arg));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(arg.getType()    ==    Token.STRING)    {    t.report(JSError.make(t,    methodName));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
281	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  if(StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	130	None	replace
282	[BUG]  [BUGGY]  if(arg  ==  null  ||  arg.getType()!=  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg  ==  null  ||  arg.getType()!=  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg  ==  null  ||  arg.getType()!=  Token.STRING)  {  return  false;  }	  if(arg!=    null    ||    arg.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
283	[BUG]  [BUGGY]  if(arg!=  null  &&  arg.getType()  ==  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg!=  null  &&  arg.getType()  ==  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg!=  null  &&  arg.getType()  ==  Token.STRING)  {  return  false;  }	  if(arg!=    null    ||    arg.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
284	[BUG]  [BUGGY]  if(arg  ==  null  &&  arg.getType()  ==  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg  ==  null  &&  arg.getType()  ==  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg  ==  null  &&  arg.getType()  ==  Token.STRING)  {  return  false;  }	  if(arg!=    null    ||    arg.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
285	[BUG]  [BUGGY]  if(methodName  ==  null  ||  arg.getType()  ==  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName  ==  null  ||  arg.getType()  ==  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName  ==  null  ||  arg.getType()  ==  Token.STRING)  {  return  false;  }	  if(arg    ==    null    ||    arg.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
286	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  arg,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
287	[BUG]  [BUGGY]  return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  arg,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
288	[BUG]  [BUGGY]  ParchetUtil.checkState(NodeUtil.isGetProp(arg));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ParchetUtil.checkState(NodeUtil.isGetProp(arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	ParchetUtil.checkState(NodeUtil.isGetProp(arg));	  ParchetUtil.checkState(NodeUtil.isAssignmentOp(arg));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
289	[BUG]  [BUGGY]  ParchetUtil.checkArgument(NodeUtil.isAssignmentOp(arg));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ParchetUtil.checkArgument(NodeUtil.isAssignmentOp(arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	ParchetUtil.checkArgument(NodeUtil.isAssignmentOp(arg));	  ParchetUtil.checkState(NodeUtil.isAssignmentOp(arg));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
290	[BUG]  [BUGGY]  ParchetUtil.checkState(NodeUtil.isFunctionDeclaration(arg));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ParchetUtil.checkState(NodeUtil.isFunctionDeclaration(arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	ParchetUtil.checkState(NodeUtil.isFunctionDeclaration(arg));	  ParchetUtil.checkState(NodeUtil.isAssignmentOp(arg));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
291	[BUG]  [BUGGY]  ||  NodeUtil.isAssignmentOp(arg))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  NodeUtil.isAssignmentOp(arg))  {  return  true;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  NodeUtil.isAssignmentOp(arg))  {  return  true;  }	  ||    NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
292	[BUG]  [BUGGY]  ||  NodeUtil.isName(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  NodeUtil.isName(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  NodeUtil.isName(arg))  {  return  false;  }	  ||    NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
293	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg)||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg)||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg)||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
294	[BUG]  [BUGGY]  parent.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	parent.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
295	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLastArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
296	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  checkLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  checkLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  checkLastArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
297	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkFirstArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkFirstArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkFirstArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
298	[BUG]  [BUGGY]  return  checkNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  checkNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  checkNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLastArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
299	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyFirstArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
300	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLastArgumentIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLastArgumentIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLastArgumentIsString(t,  arg);	  return    verifyNull(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
301	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgumentIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgumentIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgumentIsString(t,  arg);	  return    verifyNull(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
302	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName),  arg,  Token.STRING,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName),  arg,  Token.STRING,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName),  arg,  Token.STRING,  arg);	  t.report(JSError.make(t,    methodName),    arg,    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
303	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  arg),  Token.STRING);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  arg),  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  arg),  Token.STRING);	  t.report(JSError.make(t,    methodName),    arg,    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
304	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName),  arg,  Token.STRING,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName),  arg,  Token.STRING,  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName),  arg,  Token.STRING,  null);	  t.report(JSError.make(t,    methodName),    arg,    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
305	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName),  error,  Token.STRING);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName),  error,  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName),  error,  Token.STRING);	  t.report(JSError.make(t,    methodName),    arg,    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
306	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
307	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
308	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
309	[BUG]  [BUGGY]  Context.checkState(NodeUtil.isVarDeclaration(arg));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Context.checkState(NodeUtil.isVarDeclaration(arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	Context.checkState(NodeUtil.isVarDeclaration(arg));	  if(NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
310	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgumentIsString(t,  arg);	  return    verify(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)||    verifyIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
311	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsLast(t,  arg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsLast(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsLast(t,  arg);	  return    verify(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)||    verifyIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
312	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  &&  arg.getString()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  &&  arg.getString()!=  null)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  &&  arg.getString()!=  null)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||    arg.getString()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
313	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  &&  arg.getString()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  &&  arg.getString()!=  null)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  &&  arg.getString()!=  null)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||    arg.getString()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
314	[BUG]  [BUGGY]  &&  arg.getType()  ==  Token.STRING  ||  arg.getString()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&  arg.getType()  ==  Token.STRING  ||  arg.getString()!=  null)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&  arg.getType()  ==  Token.STRING  ||  arg.getString()!=  null)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||    arg.getString()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
315	[BUG]  [BUGGY]  ||  arg.getString()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  arg.getString()!=  null)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  arg.getString()!=  null)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||    arg.getString()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
316	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)||  verifyLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)||  verifyLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)||  verifyLastArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)||    verifyLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
317	[BUG]  [BUGGY]  if(arg!=  null)  {  if(arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg!=  null)  {  if(arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg!=  null)  {  if(arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }	  if(arg.getType()    ==    Token.STRING)    {    t.report(JSError.make(t,    methodName));    }    else    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
318	[BUG]  [BUGGY]  if(arg  ==  null  ||  arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg  ==  null  ||  arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg  ==  null  ||  arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }	  if(arg.getType()    ==    Token.STRING)    {    t.report(JSError.make(t,    methodName));    }    else    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
319	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(!StringUtils.isEmpty(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(!StringUtils.isEmpty(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING)  {  if(!StringUtils.isEmpty(methodName))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(!StringUtils.isEmpty(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
320	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isForIn(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isForIn(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isForIn(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isForIn(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
321	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isForIn(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isForIn(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isForIn(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isForIn(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
322	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isForIn(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isForIn(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isForIn(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isForIn(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
323	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isForIn(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isForIn(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isForIn(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isForIn(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
324	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(arg.getType()  ==  Token.STRING);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgument(arg.getType()  ==  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgument(arg.getType()  ==  Token.STRING);	  AssertionFailedError.checkState(arg.getType()    ==    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
325	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(methodName.getType()  ==  Token.STRING);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgument(methodName.getType()  ==  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgument(methodName.getType()  ==  Token.STRING);	  AssertionFailedError.checkState(arg.getType()    ==    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
326	[BUG]  [BUGGY]  if(NodeUtil.isName(methodName)||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isName(methodName)||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isName(methodName)||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
327	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isName(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isName(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isName(methodName))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
328	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(!StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(!StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  if(!StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
329	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  arg);	  return    verify(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
330	[BUG]  [BUGGY]  return  check(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsLast(t,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  check(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsLast(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  check(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsLast(t,  arg);	  return    verify(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
331	[BUG]  [BUGGY]  if(arg!=  null  ||  arg.getType()!=  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg!=  null  ||  arg.getType()!=  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg!=  null  ||  arg.getType()!=  Token.STRING)  {  return  false;  }	  if(arg    ==    null    ||    arg.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
332	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
333	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  length);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  length);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
334	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  if(NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isExpressionNode(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
335	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isExpressionNode(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
336	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  this);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  this);	  NodeTraversal.traverse(compiler,    methodName,    t);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
337	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  t);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  t);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  arg,  t);	  NodeTraversal.traverse(compiler,    methodName,    t);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
338	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName),  arg,  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName),  arg,  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName),  arg,  null);	  t.getCompiler().report(JSError.make(t,    methodName),    arg);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
339	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName),  arg,  JSError.make(t,  arg));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName),  arg,  JSError.make(t,  arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName),  arg,  JSError.make(t,  arg));	  t.getCompiler().report(JSError.make(t,    methodName),    arg);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
340	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  INVALID_TYPE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  INVALID_TYPE);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  arg,  INVALID_TYPE);	  t.report(JSError.make(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
341	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLast(t,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLast(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkLast(t,  arg);	  return    verifyNull(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
342	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirst(t,  arg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirst(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirst(t,  arg);	  return    verifyNull(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
343	[BUG]  [BUGGY]  if(StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(StringUtils.isEmpty(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	130	None	replace
344	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING)  {  if(StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	130	None	replace
345	[BUG]  [BUGGY]  if(arg  ==  null  ||  arg.getType()  ==  Token.STRING)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg  ==  null  ||  arg.getType()  ==  Token.STRING)  {  return  true;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg  ==  null  ||  arg.getType()  ==  Token.STRING)  {  return  true;  }	  if(arg.getType()    ==    Token.STRING)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
346	[BUG]  [BUGGY]  if(arg!=  null  ||  arg.getType()  ==  Token.STRING)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg!=  null  ||  arg.getType()  ==  Token.STRING)  {  return  true;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg!=  null  ||  arg.getType()  ==  Token.STRING)  {  return  true;  }	  if(arg.getType()    ==    Token.STRING)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
347	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  ||  arg.getType()!=  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  ||  arg.getType()!=  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  ||  arg.getType()!=  Token.STRING)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
348	[BUG]  [BUGGY]  ||  arg.getType()!=  Token.STRING)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  arg.getType()!=  Token.STRING)  {  return  true;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  arg.getType()!=  Token.STRING)  {  return  true;  }	  ||    arg.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
349	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isGetProp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isGetProp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(methodName)||  NodeUtil.isGetProp(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isGetProp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
350	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||  StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||  StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  ||  StringUtils.isEmpty(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
351	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)&&  verifyIsLast(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)&&  verifyIsLast(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)&&  verifyIsLast(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
352	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)&&  NodeUtil.isName(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)&&  NodeUtil.isName(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(methodName)&&  NodeUtil.isName(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isName(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
353	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  &&!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  &&!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  &&!NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    &&!NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
354	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  &&!NodeUtil.isName(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  &&!NodeUtil.isName(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  &&!NodeUtil.isName(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    &&!NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
355	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  this,  false);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  this,  false);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  this,  false);	  NodeTraversal.traverse(compiler,    methodName,    arg,    this);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
356	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isAnonymous(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
357	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isAnonymous(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
358	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsString(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsString(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsString(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
359	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  &&  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
360	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  ||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
361	[BUG]  [BUGGY]  return  verifyOfType(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyOfType(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyOfType(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg);	  return    verify(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
362	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  null,  t);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  null,  t);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  null,  t);	  NodeTraversal.traverse(compiler,    methodName,    arg,    null);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
363	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
364	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  new  AssertionFailedError());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  new  AssertionFailedError());  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  new  AssertionFailedError());	  NodeTraversal.traverse(compiler,    methodName,    t,    arg);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
365	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(!StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(!StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING)  {  if(!StringUtils.isEmpty(arg)||  StringUtils.isEmpty(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(!StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
366	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(StringUtils.isEmpty(methodName)||  StringUtils.isEmpty(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(StringUtils.isEmpty(methodName)||  StringUtils.isEmpty(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  if(StringUtils.isEmpty(methodName)||  StringUtils.isEmpty(methodName))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(StringUtils.isEmpty(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
367	[BUG]  [BUGGY]  if(StringUtils.isEmpty(methodName)||  arg.getType()  ==  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(StringUtils.isEmpty(methodName)||  arg.getType()  ==  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(StringUtils.isEmpty(methodName)||  arg.getType()  ==  Token.STRING)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(StringUtils.isEmpty(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
368	[BUG]  [BUGGY]  &&  arg.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&  arg.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&  arg.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(!NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
369	[BUG]  [BUGGY]  if(NodeUtil.isName(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isName(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isName(methodName))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
370	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  &&!StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  &&!StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  &&!StringUtils.isEmpty(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||!StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
371	[BUG]  [BUGGY]  &&(StringUtils.isEmpty(methodName)||  StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&(StringUtils.isEmpty(methodName)||  StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&(StringUtils.isEmpty(methodName)||  StringUtils.isEmpty(arg))  {  return  false;  }	  &&!StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
372	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  &&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
373	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
374	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.STRING));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.STRING));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.STRING));	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
375	[BUG]  [BUGGY]  return  checkNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  checkNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  checkNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg);	  return    verifyNull(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
376	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg);	  return    verifyNull(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
377	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentNotNull(arg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentNotNull(arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentNotNull(arg);	  AssertionFailedError.checkNotNull(t,    methodName);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
378	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isName(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isName(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isName(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
379	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  this);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  this);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    null);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
380	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,   " ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,   " ");  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,   " ");	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    null);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
381	[BUG]  [BUGGY]  MutableToken.checkArgument(arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MutableToken.checkArgument(arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	MutableToken.checkArgument(arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }	  if(arg.getType()    ==    Token.STRING)    {    t.report(JSError.make(t,    methodName));    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
382	[BUG]  [BUGGY]  tate.report(JSError.make(t,  methodName));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  tate.report(JSError.make(t,  methodName));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	tate.report(JSError.make(t,  methodName));	  if(arg.getType()    ==    Token.STRING)    {    t.report(JSError.make(t,    methodName));    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
383	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isName(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isName(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isName(methodName))  {  return  false;  }	  if(NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
384	[BUG]  [BUGGY]  Preconditions.checkState(NodeUtil.isVarDeclaration(arg));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Preconditions.checkState(NodeUtil.isVarDeclaration(arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	Preconditions.checkState(NodeUtil.isVarDeclaration(arg));	  if(NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
385	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(!NodeUtil.isName(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(!NodeUtil.isName(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING)  {  if(!NodeUtil.isName(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(!NodeUtil.isName(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
386	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isName(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isName(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isName(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(!NodeUtil.isName(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
387	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isName(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isName(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  if(NodeUtil.isName(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(!NodeUtil.isName(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
388	[BUG]  [BUGGY]  return  checkNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  checkNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  checkNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
389	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkArgument(t.getCompiler()!=  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MutableToJavaIdentifiers.checkArgument(t.getCompiler()!=  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	MutableToJavaIdentifiers.checkArgument(t.getCompiler()!=  null);	  if(t.getCompiler()!=    null)    {    t.getCompiler().reportCodeChange();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
390	[BUG]  [BUGGY]  Traversal.traverse(compiler,  t.getCompiler());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  Traversal.traverse(compiler,  t.getCompiler());  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	Traversal.traverse(compiler,  t.getCompiler());	  if(t.getCompiler()!=    null)    {    t.getCompiler().reportCodeChange();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
391	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)&&  verifyFirstArgument(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)&&  verifyFirstArgument(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)&&  verifyFirstArgument(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyFirstArgument(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
392	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsString(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsString(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsString(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
393	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsFirst(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsFirst(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsFirst(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
394	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||  methodName.getType()!=  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||  methodName.getType()!=  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  ||  methodName.getType()!=  Token.STRING)  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
395	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  return  true;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  return  true;  }	  if(methodName.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
396	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  &&!NodeUtil.isName(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  &&!NodeUtil.isName(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  &&!NodeUtil.isName(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    &&!NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
397	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg)||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg)||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionAnonymous(arg)||  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
398	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  INVALID_TYPE));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  INVALID_TYPE));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  arg,  INVALID_TYPE));	  t.report(JSError.make(t,    methodName,    arg));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
399	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  NON_GLOBAL_TYPE));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName,  arg,  NON_GLOBAL_TYPE));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName,  arg,  NON_GLOBAL_TYPE));	  t.report(JSError.make(t,    methodName,    arg));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
400	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)&&  checkLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)&&  checkLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)&&  checkLastArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    null)&&    verifyLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
401	[BUG]  [BUGGY]  if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  arg,  INVALID_TYPE));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  arg,  INVALID_TYPE));  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  arg,  INVALID_TYPE));  }	  t.getCompiler().report(JSError.make(t,    arg,    INVALID_TYPE));    	non-compiled	[CE]  <identifier>  expected	127	None	replace
402	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(!NodeUtil.isFunctionAnonymous(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
403	[BUG]  [BUGGY]  return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)&&  verifyLastArgumentIsString(t,  methodName,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
404	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()!=  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  parent!=  null  &&  parent.getType()!=  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	parent!=  null  &&  parent.getType()!=  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
405	[BUG]  [BUGGY]  ||  arg.getType()!=  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  arg.getType()!=  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  arg.getType()!=  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
406	[BUG]  [BUGGY]  ParchetUtil.checkArgument(NodeUtil.isFunctionAnonymous(arg));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ParchetUtil.checkArgument(NodeUtil.isFunctionAnonymous(arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	ParchetUtil.checkArgument(NodeUtil.isFunctionAnonymous(arg));	  if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
407	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(methodName.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgument(methodName.getType()  ==  Token.NAME);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgument(methodName.getType()  ==  Token.NAME);	  AssertionFailedError.checkState(arg.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
408	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgument(t,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgument(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgument(t,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)||    verifyIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
409	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsString(t,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)||    verifyIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
410	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(methodName,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(methodName,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(methodName,  arg);	  AssertionFailedError.checkArgumentIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
411	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(T,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(T,  methodName,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(T,  methodName,  arg);	  AssertionFailedError.checkArgumentIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
412	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  &&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  &&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  &&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
413	[BUG]  [BUGGY]  return  verifyBoolean(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyBoolean(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyBoolean(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  methodName,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLast(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
414	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING)  {  if(NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
415	[BUG]  [BUGGY]  return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
416	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)&&  verifyFirstArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)&&  verifyFirstArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  null)&&  verifyFirstArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyFirstArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
417	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgumentIsString(t,  name,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgumentIsString(t,  name,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgumentIsString(t,  name,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyFirstArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
418	[BUG]  [BUGGY]  ||  arg.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||  arg.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||  arg.getType()!=  Token.STRING)  {  if(NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
419	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  ||  arg.getString()!=  null)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  ||  arg.getString()!=  null)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  ||  arg.getString()!=  null)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||    arg.getString()!=    null)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
420	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  arg,  null));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  methodName,  arg,  null));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  methodName,  arg,  null));	  t.getCompiler().report(JSError.make(t,    methodName,    arg));    	non-compiled	[CE]  <identifier>  expected	61	None	replace
421	[BUG]  [BUGGY]  return  checkIsString(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  checkIsString(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  checkIsString(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg);	  return    verify(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
422	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg);	  return    verify(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
423	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  name,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  name,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  name,  arg);	  return    verifyNull(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
424	[BUG]  [BUGGY]  return  check(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsLast(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  check(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsLast(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  check(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsLast(t,  arg,  arg);	  return    verify(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
425	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsFirst(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsFirst(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyIsFirst(t,  arg,  arg);	  return    verify(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
426	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLast(t,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLast(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLast(t,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
427	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirst(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirst(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirst(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsFirst(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
428	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.EXPR_RESULT));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.EXPR_RESULT));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.EXPR_RESULT));	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
429	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methods,  arg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methods,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methods,  arg);	  NodeTraversal.traverse(compiler,    arg,    methodName);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
430	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  methodName,  this);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  arg,  methodName,  this);	  NodeTraversal.traverse(compiler,    arg,    methodName);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
431	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsString(t,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
432	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsFirst(t,  arg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsFirst(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsFirst(t,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
433	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName),  arg,  null,  Token.STRING);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName),  arg,  null,  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName),  arg,  null,  Token.STRING);	  t.report(JSError.make(t,    methodName),    arg,    null);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
434	[BUG]  [BUGGY]  t.report(JSError.make(t,  methodName),  arg,  this);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.report(JSError.make(t,  methodName),  arg,  this);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.report(JSError.make(t,  methodName),  arg,  this);	  t.report(JSError.make(t,    methodName),    arg,    null);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
435	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  null)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  null)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  null)&&  verifyLastArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    checkOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
436	[BUG]  [BUGGY]  ||(arg.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(arg)))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(arg.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(arg)))  {  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||(arg.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(arg)))  {	  ||    arg.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
437	[BUG]  [BUGGY]  ||(arg.getType()  ==  Token.STRING  &&  NodeUtil.isFunctionAnonymous(arg)))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(arg.getType()  ==  Token.STRING  &&  NodeUtil.isFunctionAnonymous(arg)))  {  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||(arg.getType()  ==  Token.STRING  &&  NodeUtil.isFunctionAnonymous(arg)))  {	  ||    arg.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
438	[BUG]  [BUGGY]  if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  methodName));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  methodName));  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  methodName));  }	  t.getCompiler().report(JSError.make(t,    methodName));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
439	[BUG]  [BUGGY]  if(arg  ==  null)  {  t.getCompiler().report(JSError.make(t,  methodName));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg  ==  null)  {  t.getCompiler().report(JSError.make(t,  methodName));  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg  ==  null)  {  t.getCompiler().report(JSError.make(t,  methodName));  }	  t.getCompiler().report(JSError.make(t,    methodName));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
440	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  sourceName,  arg));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  sourceName,  arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	t.getCompiler().report(JSError.make(t,  sourceName,  arg));	  t.getCompiler().report(JSError.make(t,    methodName));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
441	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(methodName.getType()!=    Token.STRING)    {    if(!NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
442	[BUG]  [BUGGY]  NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeUtil.isAssignmentOp(arg)&&  NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isExpressionNode(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
443	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgument(t,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgument(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLastArgument(t,  arg);	  return    verify(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)||    verifyIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
444	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsString(t,  arg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsString(t,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyIsString(t,  arg);	  return    verify(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)||    verifyIsLast(t,    arg);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
445	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  ||!NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
446	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.NAME)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.NAME)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.NAME)&&  verifyLastArgumentIsString(t,  methodName,  arg);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
447	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  &&  arg.getType()  ==  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  &&  arg.getType()  ==  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  &&  arg.getType()  ==  Token.STRING)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||    arg.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
448	[BUG]  [BUGGY]  return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsString(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsString(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsString(t,  arg,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
449	[BUG]  [BUGGY]  ParchetUtil.checkArgument(NodeUtil.isGetProp(arg));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ParchetUtil.checkArgument(NodeUtil.isGetProp(arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	ParchetUtil.checkArgument(NodeUtil.isGetProp(arg));	  ParchetUtil.checkState(NodeUtil.isAssignmentOp(arg));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
450	[BUG]  [BUGGY]  ParchetUtil.checkState(NodeUtil.isName(arg));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ParchetUtil.checkState(NodeUtil.isName(arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	ParchetUtil.checkState(NodeUtil.isName(arg));	  ParchetUtil.checkState(NodeUtil.isAssignmentOp(arg));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
451	[BUG]  [BUGGY]  ParchetUtil.checkState(NodeUtil.isFunction(arg));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ParchetUtil.checkState(NodeUtil.isFunction(arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	ParchetUtil.checkState(NodeUtil.isFunction(arg));	  ParchetUtil.checkState(NodeUtil.isAssignmentOp(arg));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
452	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.EMPTY);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.EMPTY);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.EMPTY);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.FUNCTION);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
453	[BUG]  [BUGGY]  if(NodeUtil.isName(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isName(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isName(arg)||  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
454	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  &&  arg.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  &&  arg.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  &&  arg.getType()  ==  Token.NAME)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||    arg.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
455	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  ||  arg.getType()!=  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  ||  arg.getType()!=  Token.NAME)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  ||  arg.getType()!=  Token.NAME)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||    arg.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
456	[BUG]  [BUGGY]  return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgumentIsString(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgumentIsString(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNotNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgumentIsString(t,  arg,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
457	[BUG]  [BUGGY]  if(arg!=  null  ||  arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg!=  null  ||  arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg!=  null  ||  arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(arg.getType()    ==    Token.STRING)    {    t.report(JSError.make(t,    methodName));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
458	[BUG]  [BUGGY]  if(arg!=  null  ||  arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg!=  null  ||  arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg!=  null  ||  arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }	  if(arg.getType()    ==    Token.STRING)    {    t.report(JSError.make(t,    methodName));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
459	[BUG]  [BUGGY]  MutableToken.IF(t.getCompiler()!=  null)  {  t.getCompiler().reportCodeChange();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  MutableToken.IF(t.getCompiler()!=  null)  {  t.getCompiler().reportCodeChange();  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	MutableToken.IF(t.getCompiler()!=  null)  {  t.getCompiler().reportCodeChange();  }	  if(t.getCompiler()!=    null)    {    t.getCompiler().reportCodeChange();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
460	[BUG]  [BUGGY]  if(NodeUtil.isName(arg)||  NodeUtil.isFunction(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isName(arg)||  NodeUtil.isFunction(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isName(arg)||  NodeUtil.isFunction(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isFunction(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
461	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isVar(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isVar(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isVar(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isFunction(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
462	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
463	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isName(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isName(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isVarDeclaration(arg)||  NodeUtil.isName(arg))  {  return  false;  }	  if(NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
464	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunction(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunction(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunction(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isForIn(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
465	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(arg))  {  if(!NodeUtil.isForIn(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(arg))  {  if(!NodeUtil.isForIn(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(arg))  {  if(!NodeUtil.isForIn(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isForIn(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
466	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isFunction(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isFunction(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isFunction(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isForIn(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
467	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLast(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLast(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)||  verifyLast(t,  arg,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
468	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  &&!NodeUtil.isFunction(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  &&!NodeUtil.isFunction(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  &&!NodeUtil.isFunction(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    &&!NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
469	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  Token.STRING,  this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  arg,  Token.STRING,  this);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  arg,  Token.STRING,  this);	  NodeTraversal.traverse(compiler,    methodName,    arg,    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
470	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isVarDeclaration(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isVarDeclaration(methodName))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
471	[BUG]  [BUGGY]  if(!NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(!NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(!NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
472	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  &&!NodeUtil.isImmutableValue(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  &&!NodeUtil.isImmutableValue(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  &&!NodeUtil.isImmutableValue(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    &&!NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
473	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  Token.NAME);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  Token.NAME);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  arg,  Token.NAME);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
474	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName,  arg,  this);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  t,  methodName,  arg,  this);	  NodeTraversal.traverse(compiler,    t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	123	None	replace
475	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }	  if(arg.getType()    ==    Token.STRING)    {    t.report(JSError.make(t,    methodName));    }    else    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
476	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  else  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  else  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  else  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    t.report(JSError.make(t,    methodName));    }    else    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
477	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&  arg.getString().equals( "string "))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&  arg.getString().equals( "string "))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  &&  arg.getString().equals( "string "))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
478	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.ASSIGN)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.ASSIGN)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.ASSIGN)&&  verifyLastArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    null)&&    verifyLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
479	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.NAME,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.NAME,  0);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.NAME,  0);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
480	[BUG]  [BUGGY]  if(arg  >=  null  ||  arg.getType()  ==  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg  >=  null  ||  arg.getType()  ==  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg  >=  null  ||  arg.getType()  ==  Token.STRING)  {  return  false;  }	  if(arg    ==    null    ||    arg.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
481	[BUG]  [BUGGY]  if(arg  ==  null  ||  arg.getType()!=  Token.STRING)return  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg  ==  null  ||  arg.getType()!=  Token.STRING)return  false;  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg  ==  null  ||  arg.getType()!=  Token.STRING)return  false;	  if(arg    ==    null    ||    arg.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
482	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(StringUtils.isEmpty(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(StringUtils.isEmpty(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING)  {  if(StringUtils.isEmpty(methodName))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(StringUtils.isEmpty(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
483	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  &&  StringUtils.isEmpty(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  &&  StringUtils.isEmpty(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  &&  StringUtils.isEmpty(methodName))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(StringUtils.isEmpty(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
484	[BUG]  [BUGGY]  try  ==  t.report(JSError.make(t,  methodName));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  try  ==  t.report(JSError.make(t,  methodName));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	try  ==  t.report(JSError.make(t,  methodName));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(arg.getType()    ==    Token.STRING)    {    t.report(JSError.make(t,    methodName));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
485	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  ||  arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  ||  arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  ||  arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName));  }	  if(arg.getType()    ==    Token.STRING)    {    t.report(JSError.make(t,    methodName));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
486	[BUG]  [BUGGY]  if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  arg,  INVALID_TYPE));  }  else  {  t.getCompiler().report(JSError.make(t,  methodName,  arg,  INVALID_TYPE  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  arg,  INVALID_TYPE));  }  else  {  t.getCompiler().report(JSError.make(t,  methodName,  arg,  INVALID_TYPE  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  arg,  INVALID_TYPE));  }  else  {  t.getCompiler().report(JSError.make(t,  methodName,  arg,  INVALID_TYPE	  t.getCompiler().report(JSError.make(t,    arg,    INVALID_TYPE));    	non-compiled	[CE]  <identifier>  expected	127	None	replace
487	[BUG]  [BUGGY]  if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  arg,  INVALID_TYPE));  }  else  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  arg,  INVALID_TYPE));  }  else  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  arg,  INVALID_TYPE));  }  else  {  return  false;  }	  t.getCompiler().report(JSError.make(t,    arg,    INVALID_TYPE));    	non-compiled	[CE]  <identifier>  expected	127	None	replace
488	[BUG]  [BUGGY]  &&!StringUtils.isEmpty(arg))  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&!StringUtils.isEmpty(arg))  {  return  true;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&!StringUtils.isEmpty(arg))  {  return  true;  }	  &&!StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
489	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(!NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING)  {  if(!NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING)  {  if(!NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(!NodeUtil.isFunctionAnonymous(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
490	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  &&!NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  &&!NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  &&!NodeUtil.isFunctionAnonymous(methodName))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(!NodeUtil.isFunctionAnonymous(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
491	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  ||!StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  ||!StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  ||!StringUtils.isEmpty(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||!StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
492	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.CATCH);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.CATCH);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  Token.CATCH);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    Token.FUNCTION);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
493	[BUG]  [BUGGY]  ParchetUtil.checkArgument(NodeUtil.isFunction(arg));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ParchetUtil.checkArgument(NodeUtil.isFunction(arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	ParchetUtil.checkArgument(NodeUtil.isFunction(arg));	  ParchetUtil.checkState(NodeUtil.isAssignmentOp(arg));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
494	[BUG]  [BUGGY]  ParchetUtil.checkArgument(NodeUtil.isFunctionDeclaration(arg));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ParchetUtil.checkArgument(NodeUtil.isFunctionDeclaration(arg));  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	ParchetUtil.checkArgument(NodeUtil.isFunctionDeclaration(arg));	  ParchetUtil.checkState(NodeUtil.isAssignmentOp(arg));    	non-compiled	[CE]  <identifier>  expected	29	None	replace
495	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  if(!NodeUtil.isFunctionDeclaration(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
496	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING)  {  return  true;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING)  {  return  true;  }	  if(arg.getType()    ==    Token.STRING)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
497	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  ||  arg.getType()  ==  Token.STRING)  {  return  true;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  ||  arg.getType()  ==  Token.STRING)  {  return  true;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  ||  arg.getType()  ==  Token.STRING)  {  return  true;  }	  if(arg.getType()    ==    Token.STRING)    {    return    true;    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
498	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&  StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&  StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  &&  StringUtils.isEmpty(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
499	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  &&  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  &&  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  &&  NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
500	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(NodeUtil.isName(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(NodeUtil.isName(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING)  {  if(NodeUtil.isName(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
501	[BUG]  [BUGGY]  &&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
502	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  &&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  &&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  &&  NodeUtil.isFunctionDeclaration(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
503	[BUG]  [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  null,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  null,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgumentIsString(t,  methodName,  arg,  null,  arg);	  AssertionFailedError.checkArgumentIsString(t,    methodName,    arg,    null);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
504	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&!StringUtils.isEmpty(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&!StringUtils.isEmpty(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  &&!StringUtils.isEmpty(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!StringUtils.isEmpty(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
505	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(arg))  {  if(arg.getType()  ==  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(arg))  {  if(arg.getType()  ==  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(arg))  {  if(arg.getType()  ==  Token.STRING)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
506	[BUG]  [BUGGY]  if(NodeUtil.isImmutableValue(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isImmutableValue(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isImmutableValue(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
507	[BUG]  [BUGGY]  arg  ==  null  ||  arg.getType()  ==  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  arg  ==  null  ||  arg.getType()  ==  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	arg  ==  null  ||  arg.getType()  ==  Token.STRING)  {  return  false;  }	  if(arg!=    null    ||    arg.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
508	[BUG]  [BUGGY]  if(t.getCompiler()!=  null  &&  t.getCompiler().isDefined(methodName))  {  t.getCompiler().reportCodeChange();  }  else  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(t.getCompiler()!=  null  &&  t.getCompiler().isDefined(methodName))  {  t.getCompiler().reportCodeChange();  }  else  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(t.getCompiler()!=  null  &&  t.getCompiler().isDefined(methodName))  {  t.getCompiler().reportCodeChange();  }  else  {  return  false;  }	  if(t.getCompiler()!=    null)    {    t.getCompiler().reportCodeChange();    }    else    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
509	[BUG]  [BUGGY]  if(t.getCompiler()!=  null  &&  t.getCompiler().isExported(methodName))  {  t.getCompiler().reportCodeChange();  }  else  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(t.getCompiler()!=  null  &&  t.getCompiler().isExported(methodName))  {  t.getCompiler().reportCodeChange();  }  else  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(t.getCompiler()!=  null  &&  t.getCompiler().isExported(methodName))  {  t.getCompiler().reportCodeChange();  }  else  {  return  false;  }	  if(t.getCompiler()!=    null)    {    t.getCompiler().reportCodeChange();    }    else    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
510	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  t.getCompiler().report(JSError.make(t,  methodName));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  t.getCompiler().report(JSError.make(t,  methodName));  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  t.getCompiler().report(JSError.make(t,  methodName));  }	  t.getCompiler().report(JSError.make(t,    methodName));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
511	[BUG]  [BUGGY]  if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  methodName));  }  else  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  methodName));  }  else  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  methodName));  }  else  {  return  false;  }	  t.getCompiler().report(JSError.make(t,    methodName));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
512	[BUG]  [BUGGY]  if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  methodName));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  methodName));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(t.getCompiler()!=  null)  {  t.getCompiler().report(JSError.make(t,  methodName));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  t.getCompiler().report(JSError.make(t,    methodName));    	non-compiled	[CE]  <identifier>  expected	63	None	replace
513	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  methodName,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLast(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
514	[BUG]  [BUGGY]  return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNotNull(t,  methodName,  arg)||  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  methodName,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLast(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	103	None	replace
515	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isFunctionDeclaration(arg)||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(NodeUtil.isFunctionDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
516	[BUG]  [BUGGY]  AssertionFailedError.checkArgument(arg.getType()  ==  Token.FUNCTION);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkArgument(arg.getType()  ==  Token.FUNCTION);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkArgument(arg.getType()  ==  Token.FUNCTION);	  AssertionFailedError.checkNotNull(t,    methodName);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
517	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  &&  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  &&  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  &&  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
518	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName,  MISSING_EXTENDS));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName,  MISSING_EXTENDS));  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName,  MISSING_EXTENDS));  }	  t.report(JSError.make(t,    methodName,    MISSING_EXTENDS));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
519	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName,  MISSING_EXTENDS));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName,  MISSING_EXTENDS));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName,  MISSING_EXTENDS));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  t.report(JSError.make(t,    methodName,    MISSING_EXTENDS));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
520	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName,  MISSING_EXTENDS));  }  else  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName,  MISSING_EXTENDS));  }  else  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  t.report(JSError.make(t,  methodName,  MISSING_EXTENDS));  }  else  {  return  false;  }	  t.report(JSError.make(t,    methodName,    MISSING_EXTENDS));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
521	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  t,  methodName);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  t,  methodName);	  NodeTraversal.traverse(compiler,    arg,    methodName);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
522	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  arg,  this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  arg,  this);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  arg,  this);	  NodeTraversal.traverse(compiler,    arg,    methodName);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
523	[BUG]  [BUGGY]  tryFailedToString(t,  methodName)  {  t.report(JSError.make(t,  arg));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  tryFailedToString(t,  methodName)  {  t.report(JSError.make(t,  arg));  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	tryFailedToString(t,  methodName)  {  t.report(JSError.make(t,  arg));  }	  if(arg.getType()    ==    Token.STRING)    {    t.report(JSError.make(t,    methodName));    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
524	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(!NodeUtil.isAnonymous(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(!NodeUtil.isAnonymous(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  if(!NodeUtil.isAnonymous(methodName))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
525	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isAnonymous(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
526	[BUG]  [BUGGY]  if(!NodeUtil.isAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(!NodeUtil.isAnonymous(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
527	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  arg,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  arg,  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  arg,  null);	  NodeTraversal.traverse(compiler,    methodName,    t,    arg);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
528	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  arg,  Token.STRING);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  NodeTraversal.traverse(compiler,  methodName,  t,  arg,  Token.STRING);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	NodeTraversal.traverse(compiler,  methodName,  t,  arg,  Token.STRING);	  NodeTraversal.traverse(compiler,    methodName,    t,    arg);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
529	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  ||  arg.getType()  ==  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  ||  arg.getType()  ==  Token.NAME)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  ||  arg.getType()  ==  Token.NAME)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||    arg.getType()    ==    Token.NAME)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
530	[BUG]  [BUGGY]  AssertionFailedError.checkState(arg.getType()  ==  Token.NAME,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkState(arg.getType()  ==  Token.NAME,  arg);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkState(arg.getType()  ==  Token.NAME,  arg);	  AssertionFailedError.checkState(arg.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
531	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  ||  arg.getType()  ==  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  ||  arg.getType()  ==  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  ||  arg.getType()  ==  Token.STRING)  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||    arg.getType()    ==    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
532	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)  ||  verifyLast(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)  ||  verifyLast(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)  ||  verifyLast(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLast(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
533	[BUG]  [BUGGY]  return  verifyIsString(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyIsString(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyIsString(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  checkIsLast(t,  arg,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    checkIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
534	[BUG]  [BUGGY]  if(NodeUtil.isName(methodName)||  NodeUtil.isGetProp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isName(methodName)||  NodeUtil.isGetProp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isName(methodName)||  NodeUtil.isGetProp(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isGetProp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
535	[BUG]  [BUGGY]  if(NodeUtil.isGetProp(arg)||  NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isGetProp(arg)||  NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isGetProp(arg)||  NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isGetProp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
536	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
537	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!StringUtils.isEmpty(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(!StringUtils.isEmpty(methodName))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(!StringUtils.isEmpty(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
538	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  ||!NodeUtil.isName(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  ||!NodeUtil.isName(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  ||!NodeUtil.isName(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(!NodeUtil.isName(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
539	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunction(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunction(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING)  {  if(!NodeUtil.isFunction(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(!NodeUtil.isName(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
540	[BUG]  [BUGGY]  AssertionFailedError.checkState(arg!=  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkState(arg!=  null);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkState(arg!=  null);	  AssertionFailedError.checkArgumentIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
541	[BUG]  [BUGGY]  AssertionFailedError.checkIsString(t,  methodName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkIsString(t,  methodName);  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkIsString(t,  methodName);	  AssertionFailedError.checkArgumentIsString(t,    arg);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
542	[BUG]  [BUGGY]  if(NodeUtil.isName(arg)||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isName(arg)||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isName(arg)||  NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
543	[BUG]  [BUGGY]  &&  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  &&  NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	&&  NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
544	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING  &&  NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING)    {    if(NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
545	[BUG]  [BUGGY]  if(NodeUtil.isVarArgsAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isVarArgsAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isVarArgsAnonymous(arg))  {  return  false;  }	  if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
546	[BUG]  [BUGGY]  if(NodeUtil.isName(arg)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isName(arg)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isName(arg)||  NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isExpressionNode(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
547	[BUG]  [BUGGY]  ||(arg.getType()  ==  Token.STRING  &&  arg.getString().equals( "string ")))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(arg.getType()  ==  Token.STRING  &&  arg.getString().equals( "string ")))  {  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||(arg.getType()  ==  Token.STRING  &&  arg.getString().equals( "string ")))  {	  ||    arg.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
548	[BUG]  [BUGGY]  ||(arg.getType()  ==  Token.STRING  &&!NodeUtil.isAssignmentOp(arg)))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  ||(arg.getType()  ==  Token.STRING  &&!NodeUtil.isAssignmentOp(arg)))  {  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	||(arg.getType()  ==  Token.STRING  &&!NodeUtil.isAssignmentOp(arg)))  {	  ||    arg.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
549	[BUG]  [BUGGY]  if(!NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(!NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(!NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
550	[BUG]  [BUGGY]  return  checkNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  checkNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  checkNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
551	[BUG]  [BUGGY]  return  verifyIsString(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyIsString(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyIsString(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  arg,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
552	[BUG]  [BUGGY]  return  verifyIsString(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyIsString(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyIsString(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLast(t,  arg,  arg);	  return    verifyNotNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
553	[BUG]  [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)  ||  verifyIsLast(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)  ||  verifyIsLast(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verifyNull(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)  ||  verifyIsLast(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
554	[BUG]  [BUGGY]  return  checkIsNull(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  checkIsNull(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  methodName,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  checkIsNull(t,  methodName,  arg)&&  checkOfType(t,  methodName,  arg,  Token.STRING)&&  verifyLastArgumentIsString(t,  methodName,  arg);	  return    verifyNull(t,    methodName,    arg)&&    checkOfType(t,    methodName,    arg,    Token.STRING)&&    verifyLastArgumentIsString(t,    methodName,    arg);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
555	[BUG]  [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgument(t,  arg,  arg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgument(t,  arg,  arg);  [BUGGY]      verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	return  verify(t,  methodName,  arg)&&  verifyOfType(t,  methodName,  arg,  Token.STRING)&&  verifyFirstArgument(t,  arg,  arg);	  return    verify(t,    methodName,    arg)||    verifyOfType(t,    methodName,    arg,    Token.STRING)&&    verifyIsLast(t,    arg,    arg);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
556	[BUG]  [BUGGY]  AssertionFailedError.checkState(arg.getType()  ==  Token.STRING,  arg.getString());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  AssertionFailedError.checkState(arg.getType()  ==  Token.STRING,  arg.getString());  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	AssertionFailedError.checkState(arg.getType()  ==  Token.STRING,  arg.getString());	  AssertionFailedError.checkState(arg.getType()    ==    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
557	[BUG]  [BUGGY]  if(!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(!NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(!NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
558	[BUG]  [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()  ==  Token.STRING  &&!NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isExpressionNode(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
559	[BUG]  [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()  ==  Token.STRING)  {  if(!NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()  ==  Token.STRING)  {  if(!NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isExpressionNode(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
560	[BUG]  [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isExpressionNode(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isExpressionNode(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(methodName.getType()!=  Token.STRING)  {  if(NodeUtil.isExpressionNode(arg))  {  return  false;  }	  if(methodName.getType()    ==    Token.STRING)    {    if(!NodeUtil.isExpressionNode(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
561	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)&&  NodeUtil.isName(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(methodName)&&  NodeUtil.isName(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(methodName)&&  NodeUtil.isName(methodName))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isName(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
562	[BUG]  [BUGGY]  if(NodeUtil.isName(methodName)||  NodeUtil.isName(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isName(methodName)||  NodeUtil.isName(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isName(methodName)||  NodeUtil.isName(arg))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isName(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
563	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isVar(methodName))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isVar(methodName))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isVar(methodName))  {  return  false;  }	  if(NodeUtil.isAssignmentOp(arg)||    NodeUtil.isName(methodName))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
564	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  ||  arg.getType()!=  Token.STRING)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  ||  arg.getType()!=  Token.STRING)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  ||  arg.getType()!=  Token.STRING)  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
565	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  ||  arg.getType()!=  Token.NAME)  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  ||  arg.getType()!=  Token.NAME)  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  ||  arg.getType()!=  Token.NAME)  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
566	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  &&  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  &&  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  &&  NodeUtil.isFunctionAnonymous(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
567	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(NodeUtil.isAnonymous(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(NodeUtil.isAnonymous(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING)  {  if(NodeUtil.isAnonymous(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(NodeUtil.isFunctionAnonymous(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
568	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  &&  NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  &&  NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  &&  NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
569	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isAssignmentOp(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING)  {  if(NodeUtil.isAssignmentOp(arg)||  NodeUtil.isAssignmentOp(arg))  {  return  false;  }	  if(arg.getType()!=    Token.STRING)    {    if(NodeUtil.isAssignmentOp(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
570	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  ||!NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  ||!NodeUtil.isVarDeclaration(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  ||!NodeUtil.isVarDeclaration(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||!NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
571	[BUG]  [BUGGY]  if(arg.getType()!=  Token.STRING  ||!NodeUtil.isName(arg))  {  return  false;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  boolean  verifyLastArgumentIsString(  NodeTraversal  t,  Node  methodName,  Node  arg)  {      [BUGGY]  if(arg.getType()!=  Token.STRING  ||!NodeUtil.isName(arg))  {  return  false;  }  [BUGGY]      return  verifyNotNull(t,  methodName,  arg)  &&  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&    verifyIsLast(t,  methodName,  arg);  verifyOfType(t,  methodName,  arg,  Token.STRING)  &&  verifyIsLast(t,  methodName,  arg);  }    [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	770	772	1	replace	if(arg.getType()!=  Token.STRING  ||!NodeUtil.isName(arg))  {  return  false;  }	  if(arg.getType()    ==    Token.STRING    ||!NodeUtil.isVarDeclaration(arg))    {    return    false;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
