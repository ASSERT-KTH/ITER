bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();	  parent!=    null    &&    parent.isAssignmentOp())    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getQualifiedName    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
2	[BUG]  [BUGGY]  parent  ==  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent  ==  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();	  parent!=    null    &&    parent.isAssignmentOp())    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getQualifiedName    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
3	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  parent.getLastChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  parent.getLastChild().getQualifiedName();  }  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp())  {  name  =  parent.getLastChild().getQualifiedName();  }	  parent!=    null    &&    parent.isAssignmentOp())    {    name    =    parent.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
4	[BUG]  [BUGGY]  }  else  if(parent.isAssignment()  &&  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isAssignment()  &&  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isAssignment()  &&  parent.isExprResult())  {	  }    else    if(n.isAssignment()    &&    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
5	[BUG]  [BUGGY]  }  else  if(n.isAssignment()  &&  parent.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isAssignment()  &&  parent.isQualifiedName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isAssignment()  &&  parent.isQualifiedName())  {	  }    else    if(n.isAssignment()    &&    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getLastChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getLastChild().getQualifiedName();  }  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getLastChild().getQualifiedName();  }	  parent!=    null    &&    parent.isAssignmentOp())    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
7	[BUG]  [BUGGY]  parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  }	  parent    ==    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
8	[BUG]  [BUGGY]  parent!=  null)  {  name  =  parent.getLastChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null)  {  name  =  parent.getLastChild().getQualifiedName();  }  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null)  {  name  =  parent.getLastChild().getQualifiedName();  }	  parent!=    null)    {    name    =    parent.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  ||  parent.isAssignableFrom(n))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  ||  parent.isAssignableFrom(n))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  ||  parent.isAssignableFrom(n))  {	  }    else    if(n.isQualifiedName()    ||    parent.isAssignableFrom(n))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
10	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  ||  n.isAssignableFrom(parent))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  ||  n.isAssignableFrom(parent))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  ||  n.isAssignableFrom(parent))  {	  }    else    if(n.isQualifiedName()    ||    parent.isAssignableFrom(n))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
11	[BUG]  [BUGGY]  }  else  if(name.isQualifiedName()  ||  parent.isAssignableFrom(n))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(name.isQualifiedName()  ||  parent.isAssignableFrom(n))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(name.isQualifiedName()  ||  parent.isAssignableFrom(n))  {	  }    else    if(n.isQualifiedName()    ||    parent.isAssignableFrom(n))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
12	[BUG]  [BUGGY]  }  else  if(n.isExpr()  &&  parent.isVar())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isExpr()  &&  parent.isVar())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isExpr()  &&  parent.isVar())  {	  }    else    if(n.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
13	[BUG]  [BUGGY]  }  else  if(n.isName())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isName())  {	  }    else    if(n.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
14	[BUG]  [BUGGY]  }  else  if(n.isExpr()  ||  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isExpr()  ||  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isExpr()  ||  parent.isExprResult())  {	  }    else    if(n.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
15	[BUG]  [BUGGY]  Name  name  =  parent.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  parent.getLastChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  parent.getLastChild().getQualifiedName();	  Name    name    =    n.getLastChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
16	[BUG]  [BUGGY]  Name  name  =  t.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  t.getLastChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  t.getLastChild().getQualifiedName();	  Name    name    =    n.getLastChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
17	[BUG]  [BUGGY]  Name  name  =  n.getLastChild().getQualifiedName()  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  n.getLastChild().getQualifiedName()  +  1;  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getLastChild().getQualifiedName()  +  1;	  Name    name    =    n.getLastChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName())  {	  }    else    if(parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
19	[BUG]  [BUGGY]  }  else  if(!name.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(!name.isEmpty())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(!name.isEmpty())  {	  }    else    if(parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
20	[BUG]  [BUGGY]  }  else  if(parent.isDefined())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isDefined())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isDefined())  {	  }    else    if(parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
21	[BUG]  [BUGGY]  }  else  if(parent.isExpr()  ||  parent.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isExpr()  ||  parent.isQualifiedName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isExpr()  ||  parent.isQualifiedName())  {	  }    else    if(parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
22	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  ||  n.isAssignmentTo(parent))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  ||  n.isAssignmentTo(parent))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  ||  n.isAssignmentTo(parent))  {	  }    else    if(parent.isQualifiedName()    &&    n.isAssignmentTo(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
23	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  &&  parent.isAssignmentTo(n))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  &&  parent.isAssignmentTo(n))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  &&  parent.isAssignmentTo(n))  {	  }    else    if(parent.isQualifiedName()    &&    n.isAssignmentTo(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
24	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  ||  parent.isAssignmentTo(n))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  ||  parent.isAssignmentTo(n))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  ||  parent.isAssignmentTo(n))  {	  }    else    if(parent.isQualifiedName()    &&    n.isAssignmentTo(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
25	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  ||  parent.isAssignmentTo(parent))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  ||  parent.isAssignmentTo(parent))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  ||  parent.isAssignmentTo(parent))  {	  }    else    if(parent.isQualifiedName()    &&    n.isAssignmentTo(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
26	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();	  parent    ==    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getQualifiedName    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
27	[BUG]  [BUGGY]  }  else  if  (parent.isAssignment()  ||  parent.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if  (parent.isAssignment()  ||  parent.isQualifiedName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if  (parent.isAssignment()  ||  parent.isQualifiedName())  {	  }    else    if    (n.isAssignment()    ||    parent.isQualifiedName())    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
28	[BUG]  [BUGGY]  }  else  if(name.isQualifiedName()  ||  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(name.isQualifiedName()  ||  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(name.isQualifiedName()  ||  parent.isExprResult())  {	  }    else    if(name.isQualifiedName()    &&    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
29	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  &&  name.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  &&  name.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  &&  name.isExprResult())  {	  }    else    if(name.isQualifiedName()    &&    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
30	[BUG]  [BUGGY]  }  else  if(!name.isQualifiedName()  &&  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(!name.isQualifiedName()  &&  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(!name.isQualifiedName()  &&  parent.isExprResult())  {	  }    else    if(name.isQualifiedName()    &&    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
31	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  &&  parent.isAssignableFrom(n))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  &&  parent.isAssignableFrom(n))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  &&  parent.isAssignableFrom(n))  {	  }    else    if(parent.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
32	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isAssignableFrom(parent))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isAssignableFrom(parent))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  parent.isAssignableFrom(parent))  {	  }    else    if(parent.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
33	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  n.getFirstChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  n.getFirstChild().getQualifiedName();  }	  parent!=    null    &&    parent.isAssignmentOp(n))    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getString();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
34	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString()  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString()  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString()	  parent!=    null    &&    parent.isAssignmentOp(n))    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getString();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
35	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString	  parent!=    null    &&    parent.isAssignmentOp(n))    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getString();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
36	[BUG]  [BUGGY]  parent  =  n.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent  =  n.getLastChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  =  n.getLastChild().getQualifiedName();	  parent    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
37	[BUG]  [BUGGY]  parent  =  parent.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent  =  parent.getFirstChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  =  parent.getFirstChild().getQualifiedName();	  parent    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
38	[BUG]  [BUGGY]  parent  =  n.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent  =  n.getFirstChild().getString();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  =  n.getFirstChild().getString();	  parent    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
39	[BUG]  [BUGGY]  }  else  if(n.isName()  ||  parent.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isName()  ||  parent.isQualifiedName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isName()  ||  parent.isQualifiedName())  {	  }    else    if(n.isName()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
40	[BUG]  [BUGGY]  }  else  if(parent.isName()  ||  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isName()  ||  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isName()  ||  parent.isExprResult())  {	  }    else    if(n.isName()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
41	[BUG]  [BUGGY]  Name  name  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  n.getLastChild();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getLastChild();	  name    =    parent.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
42	[BUG]  [BUGGY]  }  else  if(parent.isAssign()  &&  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isAssign()  &&  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isAssign()  &&  parent.isExprResult())  {	  }    else    if(parent.isAssign()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  }  else  if(parent.isAssignmentOp()  ||  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isAssignmentOp()  ||  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isAssignmentOp()  ||  parent.isExprResult())  {	  }    else    if(parent.isAssign()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  }  else  if(parent.isAssign()  ||  parent.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isAssign()  ||  parent.isQualifiedName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isAssign()  ||  parent.isQualifiedName())  {	  }    else    if(parent.isAssign()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
45	[BUG]  [BUGGY]  Name  name  =  n.getLastChild().getQualifiedName(name);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  n.getLastChild().getQualifiedName(name);  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getLastChild().getQualifiedName(name);	  Name    name    =    n.getFirstChild().getQualifiedName(name);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
46	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName(name,  parent);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName(name,  parent);  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getFirstChild().getQualifiedName(name,  parent);	  Name    name    =    n.getFirstChild().getQualifiedName(name);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
47	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName(parent);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName(parent);  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getFirstChild().getQualifiedName(parent);	  Name    name    =    n.getFirstChild().getQualifiedName(name);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
48	[BUG]  [BUGGY]  Name  name  =  parent.getFirstChild().getQualifiedName(name);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  parent.getFirstChild().getQualifiedName(name);  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  parent.getFirstChild().getQualifiedName(name);	  Name    name    =    n.getFirstChild().getQualifiedName(name);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
49	[BUG]  [BUGGY]  parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }	  parent    ==    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getString();    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
50	[BUG]  [BUGGY]  }  else  if(n.isAssignmentTo(parent)&&  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isAssignmentTo(parent)&&  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isAssignmentTo(parent)&&  parent.isExprResult())  {	  }    else    if(n.isAssignmentTo(parent)||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
51	[BUG]  [BUGGY]  }  else  if(parent.isAssignmentTo(n)||  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isAssignmentTo(n)||  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isAssignmentTo(n)||  parent.isExprResult())  {	  }    else    if(n.isAssignmentTo(parent)||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
52	[BUG]  [BUGGY]  }  else  if(n.isAssignmentTo(parent)||  parent.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isAssignmentTo(parent)||  parent.isQualifiedName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isAssignmentTo(parent)||  parent.isQualifiedName())  {	  }    else    if(n.isAssignmentTo(parent)||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
53	[BUG]  [BUGGY]  }  else  if(n.isAssignmentTo(parent)||  parent.isVar())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isAssignmentTo(parent)||  parent.isVar())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isAssignmentTo(parent)||  parent.isVar())  {	  }    else    if(n.isAssignmentTo(parent)||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
54	[BUG]  [BUGGY]  }  else  if(n.isAssignmentTo(parent)||  parent.isName())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isAssignmentTo(parent)||  parent.isName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isAssignmentTo(parent)||  parent.isName())  {	  }    else    if(n.isAssignmentTo(parent)||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
55	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&  parent.getType()  ==  Token.NAME)  {	  }    else    if(n.isQualifiedName())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
56	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  n.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  ||  n.isQualifiedName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  n.isQualifiedName())  {	  }    else    if(n.isQualifiedName())    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
57	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isAssignmentTo(name))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isAssignmentTo(name))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&  parent.isAssignmentTo(name))  {	  }    else    if(name.isQualifiedName()    &&    n.isAssignmentTo(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
58	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&  name.isAssignmentTo(parent))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  &&  name.isAssignmentTo(parent))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&  name.isAssignmentTo(parent))  {	  }    else    if(name.isQualifiedName()    &&    n.isAssignmentTo(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
59	[BUG]  [BUGGY]  }  else  if(name.isQualifiedName()  ||  n.isAssignmentTo(parent))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(name.isQualifiedName()  ||  n.isAssignmentTo(parent))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(name.isQualifiedName()  ||  n.isAssignmentTo(parent))  {	  }    else    if(name.isQualifiedName()    &&    n.isAssignmentTo(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
60	[BUG]  [BUGGY]  }  else  if(parent.isAssignment()  ||  parent.isVar())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isAssignment()  ||  parent.isVar())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isAssignment()  ||  parent.isVar())  {	  }    else    if(n.isAssignment()    ||    parent.isVar())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
61	[BUG]  [BUGGY]  }  else  if(n.isAssignmentType()  ||  parent.isVar())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isAssignmentType()  ||  parent.isVar())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isAssignmentType()  ||  parent.isVar())  {	  }    else    if(n.isAssignment()    ||    parent.isVar())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
62	[BUG]  [BUGGY]  }  else  if(!name.isQualifiedName()  &&  parent.isAssignableFrom(n))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(!name.isQualifiedName()  &&  parent.isAssignableFrom(n))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(!name.isQualifiedName()  &&  parent.isAssignableFrom(n))  {	  }    else    if(!name.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
63	[BUG]  [BUGGY]  }  else  if(!name.isQualifiedName()  ||  n.isAssignableFrom(parent))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(!name.isQualifiedName()  ||  n.isAssignableFrom(parent))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(!name.isQualifiedName()  ||  n.isAssignableFrom(parent))  {	  }    else    if(!name.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
64	[BUG]  [BUGGY]  }  else  if(!name.isQualifiedName()  &&  parent.isAssignableFrom(parent))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(!name.isQualifiedName()  &&  parent.isAssignableFrom(parent))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(!name.isQualifiedName()  &&  parent.isAssignableFrom(parent))  {	  }    else    if(!name.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
65	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&!name.isQualifiedName()  &&  n.isAssignableFrom(parent))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  &&!name.isQualifiedName()  &&  n.isAssignableFrom(parent))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&!name.isQualifiedName()  &&  n.isAssignableFrom(parent))  {	  }    else    if(!name.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
66	[BUG]  [BUGGY]  }  else  if(n.isName()  &&!name.isQualifiedName()  &&  n.isAssignableFrom(parent))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isName()  &&!name.isQualifiedName()  &&  n.isAssignableFrom(parent))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isName()  &&!name.isQualifiedName()  &&  n.isAssignableFrom(parent))  {	  }    else    if(!name.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
67	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  n.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  ||  n.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  n.isExprResult())  {	  }    else    if(n.isQualifiedName()    ||    n.isAssignmentTo(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
68	[BUG]  [BUGGY]  parent.setQualifiedName(name.getFirstChild().getQualifiedName());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent.setQualifiedName(name.getFirstChild().getQualifiedName());  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent.setQualifiedName(name.getFirstChild().getQualifiedName());	  parent.setQualifiedName(n.getFirstChild().getQualifiedName());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
69	[BUG]  [BUGGY]  parent.setQualifiedName(n.getFirstChild().getQualifiedName(),  name);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent.setQualifiedName(n.getFirstChild().getQualifiedName(),  name);  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent.setQualifiedName(n.getFirstChild().getQualifiedName(),  name);	  parent.setQualifiedName(n.getFirstChild().getQualifiedName());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
70	[BUG]  [BUGGY]  parent.setQualifiedName(n.getLastChild().getQualifiedName());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent.setQualifiedName(n.getLastChild().getQualifiedName());  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent.setQualifiedName(n.getLastChild().getQualifiedName());	  parent.setQualifiedName(n.getFirstChild().getQualifiedName());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
71	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&  n.isName())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  &&  n.isName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&  n.isName())  {	  }    else    if(n.isQualifiedName()    ||    n.isName())    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
72	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isName())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  parent.isName())  {	  }    else    if(n.isQualifiedName()    ||    n.isName())    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
73	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  ||  n.isName())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  ||  n.isName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  ||  n.isName())  {	  }    else    if(n.isQualifiedName()    ||    n.isName())    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
74	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  name.isName())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  ||  name.isName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  name.isName())  {	  }    else    if(n.isQualifiedName()    ||    n.isName())    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
75	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  name.isAssignableFrom(parent))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  ||  name.isAssignableFrom(parent))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  name.isAssignableFrom(parent))  {	  }    else    if(n.isQualifiedName()    ||    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
76	[BUG]  [BUGGY]  }  else  if(parent.isName()  &&  parent.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isName()  &&  parent.isQualifiedName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isName()  &&  parent.isQualifiedName())  {	  }    else    if(n.isName()    &&    parent.isQualifiedName())    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
77	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  ||  n.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  ||  n.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  ||  n.isExprResult())  {	  }    else    if(n.isQualifiedName()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
78	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isVar())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isVar())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  parent.isVar())  {	  }    else    if(n.isQualifiedName()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
79	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  name.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  ||  name.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  name.isExprResult())  {	  }    else    if(n.isQualifiedName()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
80	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isAssignableFrom(name))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isAssignableFrom(name))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&  parent.isAssignableFrom(name))  {	  }    else    if(n.isQualifiedName()    &&    parent.isAssignableFrom(n))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
81	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();	  parent    ==    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getFirstChild().getQualifiedName()    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
82	[BUG]  [BUGGY]  Name  name  =  n.getLastChild().getString();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  n.getLastChild().getString();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getLastChild().getString();	  name    =    parent.getLastChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
83	[BUG]  [BUGGY]  parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getLastChild().getString();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getLastChild().getString();  }  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getLastChild().getString();  }	  parent    ==    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    parent.getLastChild().getString();    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
84	[BUG]  [BUGGY]  Name  n  =  n.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  n  =  n.getLastChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  n  =  n.getLastChild().getQualifiedName();	  Name    n    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
85	[BUG]  [BUGGY]  Name  n  =  parent.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  n  =  parent.getFirstChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  n  =  parent.getFirstChild().getQualifiedName();	  Name    n    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
86	[BUG]  [BUGGY]  Name  n  =  t.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  n  =  t.getFirstChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  n  =  t.getFirstChild().getQualifiedName();	  Name    n    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
87	[BUG]  [BUGGY]  Name  n  =  n.getFirstChild().getQualifiedName()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  n  =  n.getFirstChild().getQualifiedName()  +  1;  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  n  =  n.getFirstChild().getQualifiedName()  +  1;	  Name    n    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
88	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  parent.getFirstChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  parent.getFirstChild().getQualifiedName();  }  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  parent.getFirstChild().getQualifiedName();  }	  parent    ==    null    &&    parent.isAssignmentOp(n))    {    name    =    parent.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
89	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isFirstChild())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isFirstChild())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  parent.isFirstChild())  {	  }    else    if(n.isQualifiedName()    &&    parent.isFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
90	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  &&  n.isFirstChild())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  &&  n.isFirstChild())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  &&  n.isFirstChild())  {	  }    else    if(n.isQualifiedName()    &&    parent.isFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
91	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  &&  parent.isFirstChild())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  &&  parent.isFirstChild())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  &&  parent.isFirstChild())  {	  }    else    if(n.isQualifiedName()    &&    parent.isFirstChild())    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
92	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isDefined())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isDefined())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  parent.isDefined())  {	  }    else    if(n.isQualifiedName()    &&    parent.isDefined())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
93	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  &&  n.isDefined())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  &&  n.isDefined())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  &&  n.isDefined())  {	  }    else    if(n.isQualifiedName()    &&    parent.isDefined())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
94	[BUG]  [BUGGY]  }  else  if(name.isQualifiedName()  &&  parent.isDefined())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(name.isQualifiedName()  &&  parent.isDefined())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(name.isQualifiedName()  &&  parent.isDefined())  {	  }    else    if(n.isQualifiedName()    &&    parent.isDefined())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
95	[BUG]  [BUGGY]  }  else  if(n.isAssign()  &&  parent.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isAssign()  &&  parent.isQualifiedName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isAssign()  &&  parent.isQualifiedName())  {	  }    else    if(n.isAssign()    ||    parent.isQualifiedName())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
96	[BUG]  [BUGGY]  }  else  if(parent.isAssign()  ||  n.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isAssign()  ||  n.isQualifiedName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isAssign()  ||  n.isQualifiedName())  {	  }    else    if(n.isAssign()    ||    parent.isQualifiedName())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
97	[BUG]  [BUGGY]  parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName();  }  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName();  }	  parent    ==    null)    {    name    =    parent.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
98	[BUG]  [BUGGY]  parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName();  }  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName();  }	  parent    ==    null)    {    name    =    parent.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
99	[BUG]  [BUGGY]  }  else  if(name.isQualifiedName()  ||  n.isAssignableFrom(parent))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(name.isQualifiedName()  ||  n.isAssignableFrom(parent))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(name.isQualifiedName()  ||  n.isAssignableFrom(parent))  {	  }    else    if(name.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
100	[BUG]  [BUGGY]  }  else  if  (parent.isName()  ||  parent.isVar())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if  (parent.isName()  ||  parent.isVar())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if  (parent.isName()  ||  parent.isVar())  {	  }    else    if    (n.isName()    ||    parent.isVar())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
101	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isAssignmentTo(parent))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isAssignmentTo(parent))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  parent.isAssignmentTo(parent))  {	  }    else    if(n.isQualifiedName()    &&    parent.isAssignmentTo(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
102	[BUG]  [BUGGY]  name  =  n.getQualifiedName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  name  =  n.getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	name  =  n.getQualifiedName();	  name    =    n.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
103	[BUG]  [BUGGY]  Name  name  =  n.getLastChild().getName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  n.getLastChild().getName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getLastChild().getName();	  Name    name    =    n.getFirstChild().getName();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
104	[BUG]  [BUGGY]  Name  name  =  parent.getFirstChild().getName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  parent.getFirstChild().getName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  parent.getFirstChild().getName();	  Name    name    =    n.getFirstChild().getName();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
105	[BUG]  [BUGGY]  Name  name  =  t.getFirstChild().getName();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  t.getFirstChild().getName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  t.getFirstChild().getName();	  Name    name    =    n.getFirstChild().getName();    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
106	[BUG]  [BUGGY]  parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();	  parent!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getFirstChild().getQualifiedName()    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
107	[BUG]  [BUGGY]  parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();	  parent!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getFirstChild().getQualifiedName()    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
108	[BUG]  [BUGGY]  naming  =  n.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  naming  =  n.getLastChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	naming  =  n.getLastChild().getQualifiedName();	  naming    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
109	[BUG]  [BUGGY]  naming  =  parent.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  naming  =  parent.getFirstChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	naming  =  parent.getFirstChild().getQualifiedName();	  naming    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
110	[BUG]  [BUGGY]  parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getLastChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getLastChild().getQualifiedName();  }  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getLastChild().getQualifiedName();  }	  parent    ==    null)    {    name    =    parent.getFirstChild().getQualifiedName();    }    else    {    name    =    parent.getLastChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
111	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  &&  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  &&  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  &&  parent.isExprResult())  {	  }    else    if(parent.isQualifiedName()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
112	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  ||  parent.isVar())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  ||  parent.isVar())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  ||  parent.isVar())  {	  }    else    if(parent.isQualifiedName()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
113	[BUG]  [BUGGY]  }  else  if(name.isQualifiedName()  ||  name.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(name.isQualifiedName()  ||  name.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(name.isQualifiedName()  ||  name.isExprResult())  {	  }    else    if(parent.isQualifiedName()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
114	[BUG]  [BUGGY]  name  =  n.getLastChild().getName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  name  =  n.getLastChild().getName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	name  =  n.getLastChild().getName();	  name    =    n.getFirstChild().getName();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
115	[BUG]  [BUGGY]  name  =  parent.getFirstChild().getName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  name  =  parent.getFirstChild().getName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	name  =  parent.getFirstChild().getName();	  name    =    n.getFirstChild().getName();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
116	[BUG]  [BUGGY]  Name  name  =  parent.getFirstChild().getQualifiedName()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  parent.getFirstChild().getQualifiedName()  +  1;  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  parent.getFirstChild().getQualifiedName()  +  1;	  Name    name    =    n.getFirstChild().getQualifiedName()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
117	[BUG]  [BUGGY]  name  =  t.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  name  =  t.getLastChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	name  =  t.getLastChild().getQualifiedName();	  name    =    t.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
118	[BUG]  [BUGGY]  }  else  if(name.isQualifiedName()  &&  parent.isAssignableFrom(n))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(name.isQualifiedName()  &&  parent.isAssignableFrom(n))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(name.isQualifiedName()  &&  parent.isAssignableFrom(n))  {	  }    else    if(n.isQualifiedName()    &&    parent.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
119	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  &&  name.isAssignableFrom(n))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  &&  name.isAssignableFrom(n))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  &&  name.isAssignableFrom(n))  {	  }    else    if(n.isQualifiedName()    &&    name.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
120	[BUG]  [BUGGY]  }  else  if  (parent.isQualifiedName()  &&  n.isVar())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if  (parent.isQualifiedName()  &&  n.isVar())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if  (parent.isQualifiedName()  &&  n.isVar())  {	  }    else    if    (n.isQualifiedName()    &&    parent.isVar())    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
121	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  n.getFirstChild().getString();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getFirstChild().getString();	  name    =    parent.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
122	[BUG]  [BUGGY]  Name  =  n.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  =  n.getLastChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  =  n.getLastChild().getQualifiedName();	  Name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
123	[BUG]  [BUGGY]  Name  =  parent.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  =  parent.getFirstChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  =  parent.getFirstChild().getQualifiedName();	  Name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
124	[BUG]  [BUGGY]  Name  =  n.getFirstChild().getQualifiedName()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  =  n.getFirstChild().getQualifiedName()  +  1;  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  =  n.getFirstChild().getQualifiedName()  +  1;	  Name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
125	[BUG]  [BUGGY]  Name  =  name.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  =  name.getFirstChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  =  name.getFirstChild().getQualifiedName();	  Name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
126	[BUG]  [BUGGY]  }  else  if(name.isQualifiedName()  &&  parent.isAssignmentTo(n))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(name.isQualifiedName()  &&  parent.isAssignmentTo(n))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(name.isQualifiedName()  &&  parent.isAssignmentTo(n))  {	  }    else    if(n.isQualifiedName()    &&    parent.isAssignmentTo(n))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
127	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName()  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName()  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName()	  parent    ==    null)    {    name    =    parent.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
128	[BUG]  [BUGGY]  }  else  if(n.isFirstChild())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isFirstChild())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isFirstChild())  {	  }    else    if(n.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
129	[BUG]  [BUGGY]  parent  =  n.getFirstChild().getLastChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent  =  n.getFirstChild().getLastChild();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  =  n.getFirstChild().getLastChild();	  parent    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
130	[BUG]  [BUGGY]  parent  =  n.getFirstChild().getParent();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent  =  n.getFirstChild().getParent();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  =  n.getFirstChild().getParent();	  parent    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
131	[BUG]  [BUGGY]  }  else  if(name.isQualifiedName()  &&  n.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(name.isQualifiedName()  &&  n.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(name.isQualifiedName()  &&  n.isExprResult())  {	  }    else    if(n.isQualifiedName()    &&    n.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
132	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&  name.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  &&  name.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&  name.isExprResult())  {	  }    else    if(n.isQualifiedName()    &&    n.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
133	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName(name  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName(name  +  1);  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getFirstChild().getQualifiedName(name  +  1);	  Name    name    =    n.getFirstChild().getQualifiedName(name);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
134	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName(name)+  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName(name)+  1;  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getFirstChild().getQualifiedName(name)+  1;	  Name    name    =    n.getFirstChild().getQualifiedName(name);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
135	[BUG]  [BUGGY]  Name  n  =  n.getFirstChild().getQualifiedName(name);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  n  =  n.getFirstChild().getQualifiedName(name);  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  n  =  n.getFirstChild().getQualifiedName(name);	  Name    n    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
136	[BUG]  [BUGGY]  Name  n  =  n.getFirstChild().getName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  n  =  n.getFirstChild().getName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  n  =  n.getFirstChild().getName();	  Name    n    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
137	[BUG]  [BUGGY]  parent  ==  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent  ==  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }	  parent!=    null    &&    parent.isAssignmentOp())    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getQualifiedName()    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
138	[BUG]  [BUGGY]  }  else  if(!name.isQualifiedName()  &&  name.isAssignableFrom(parent))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(!name.isQualifiedName()  &&  name.isAssignableFrom(parent))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(!name.isQualifiedName()  &&  name.isAssignableFrom(parent))  {	  }    else    if(!name.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
139	[BUG]  [BUGGY]  Name  name  =  n.getfirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  n.getfirstChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getfirstChild().getQualifiedName();	  Name    name    =    n.getLastChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
140	[BUG]  [BUGGY]  Name  =  n.getFirstChild().getName();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  =  n.getFirstChild().getName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  =  n.getFirstChild().getName();	  Name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
141	[BUG]  [BUGGY]  }  else  if(parent.isName()  &&  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isName()  &&  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isName()  &&  parent.isExprResult())  {	  }    else    if(n.isName()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
142	[BUG]  [BUGGY]  parent  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent  ==  null)  {  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {	  parent!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getFirstChild().getQualifiedName()    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
143	[BUG]  [BUGGY]  parent!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null)  {  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null)  {	  parent!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getFirstChild().getQualifiedName()    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
144	[BUG]  [BUGGY]  }  else  if(name!=  null  &&  name.isQualifiedName()  &&  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(name!=  null  &&  name.isQualifiedName()  &&  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(name!=  null  &&  name.isQualifiedName()  &&  parent.isExprResult())  {	  }    else    if(name.isQualifiedName()    &&    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
145	[BUG]  [BUGGY]  }  else  if(name.isQualifiedName()  &&  parent.isVar())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(name.isQualifiedName()  &&  parent.isVar())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(name.isQualifiedName()  &&  parent.isVar())  {	  }    else    if(name.isQualifiedName()    &&    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
146	[BUG]  [BUGGY]  Name  name  =  t.getFirstChild().getQualifiedName(name);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  t.getFirstChild().getQualifiedName(name);  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  t.getFirstChild().getQualifiedName(name);	  Name    name    =    t.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
147	[BUG]  [BUGGY]  }  else  if(name.isQualifiedName()  ||  parent.isAssignmentTo(n))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(name.isQualifiedName()  ||  parent.isAssignmentTo(n))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(name.isQualifiedName()  ||  parent.isAssignmentTo(n))  {	  }    else    if(n.isQualifiedName()    ||    parent.isAssignmentTo(n))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
148	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName	  parent    ==    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getQualifiedName    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
149	[BUG]  [BUGGY]  parent.setQualifiedName(name,  n.getFirstChild().getQualifiedName());  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent.setQualifiedName(name,  n.getFirstChild().getQualifiedName());  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent.setQualifiedName(name,  n.getFirstChild().getQualifiedName());	  parent.setQualifiedName(n.getFirstChild().getQualifiedName());    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
150	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isQualifiedName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  parent.isQualifiedName())  {	  }    else    if(n.isName()    &&    parent.isQualifiedName())    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
151	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  parent.getLastChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  parent.getLastChild().getQualifiedName();  }  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  parent.getLastChild().getQualifiedName();  }	  parent    ==    null    &&    parent.isAssignmentOp(n))    {    name    =    parent.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
152	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  n.getLastChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent  ==  null)  {  name  =  n.getLastChild().getQualifiedName();  }  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  n.getLastChild().getQualifiedName();  }	  parent    ==    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
153	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isAssignableFrom(n)&&  name.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isAssignableFrom(n)&&  name.length()  ==  0)  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  parent.isAssignableFrom(n)&&  name.length()  ==  0)  {	  }    else    if(n.isQualifiedName()    ||    parent.isAssignableFrom(n))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
154	[BUG]  [BUGGY]  }  else  if(parent.isAssignmentTo(n)&&  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isAssignmentTo(n)&&  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isAssignmentTo(n)&&  parent.isExprResult())  {	  }    else    if(n.isAssignmentTo(parent)||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
155	[BUG]  [BUGGY]  }  else  if(parent!=  null  &&  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent!=  null  &&  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent!=  null  &&  parent.isExprResult())  {	  }    else    if(parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
156	[BUG]  [BUGGY]  }  else  if(parent.isExprResult()  &&  n.getFirstChild()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isExprResult()  &&  n.getFirstChild()!=  null)  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isExprResult()  &&  n.getFirstChild()!=  null)  {	  }    else    if(parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
157	[BUG]  [BUGGY]  parent  =  n.getFirstChild().getNext();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent  =  n.getFirstChild().getNext();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  =  n.getFirstChild().getNext();	  parent    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
158	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  ||  parent.isFirstChild())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  ||  parent.isFirstChild())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  ||  parent.isFirstChild())  {	  }    else    if(parent.isQualifiedName()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
159	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild	  parent!=    null    &&    parent.isAssignmentOp())    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getString();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
160	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  ||  parent.isAssignableFrom(parent))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  ||  parent.isAssignableFrom(parent))  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  ||  parent.isAssignableFrom(parent))  {	  }    else    if(parent.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
161	[BUG]  [BUGGY]  name  =  t.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  name  =  t.getFirstChild().getString();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	name  =  t.getFirstChild().getString();	  name    =    parent.getFirstChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
162	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  n.isExtern())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  ||  n.isExtern())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  n.isExtern())  {	  }    else    if(n.isQualifiedName()    ||    n.isName())    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
163	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild	  parent!=    null    &&    parent.isAssignmentOp(n))    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getString();    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
164	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isAssignableFrom(n)||  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isAssignableFrom(n)||  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  parent.isAssignableFrom(n)||  parent.isExprResult())  {	  }    else    if(n.isQualifiedName()    ||    parent.isAssignableFrom(n))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
165	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  n.getFirstChild();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getFirstChild();	  name    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
166	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName(name,  t.getModule());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName(name,  t.getModule());  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getFirstChild().getQualifiedName(name,  t.getModule());	  Name    name    =    n.getFirstChild().getQualifiedName(name);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
167	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName(name,  t.getSourceName());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName(name,  t.getSourceName());  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getFirstChild().getQualifiedName(name,  t.getSourceName());	  Name    name    =    n.getFirstChild().getQualifiedName(name);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
168	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isCollection())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isCollection())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&  parent.isCollection())  {	  }    else    if(parent.isQualifiedName()    &&    n.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
169	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isResult())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&  parent.isResult())  {	  }    else    if(parent.isQualifiedName()    &&    n.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
170	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  &&  name.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  &&  name.isQualifiedName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  &&  name.isQualifiedName())  {	  }    else    if(name.isQualifiedName()    &&    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
171	[BUG]  [BUGGY]  }  else  if(parent.isAssignmentTo(n)||  parent.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isAssignmentTo(n)||  parent.isQualifiedName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isAssignmentTo(n)||  parent.isQualifiedName())  {	  }    else    if(n.isAssignmentTo(parent)||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
172	[BUG]  [BUGGY]  }  else  if(n.isAssignmentTo(parent)||  parent.isFirstChild())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isAssignmentTo(parent)||  parent.isFirstChild())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isAssignmentTo(parent)||  parent.isFirstChild())  {	  }    else    if(n.isAssignmentTo(parent)||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
173	[BUG]  [BUGGY]  parent.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent.getFirstChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent.getFirstChild().getQualifiedName();	  parent    ==    null)    {    name    =    parent.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
174	[BUG]  [BUGGY]  Name  name  =  node.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  Name  name  =  node.getFirstChild().getQualifiedName();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  node.getFirstChild().getQualifiedName();	  Name    name    =    parent.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
175	[BUG]  [BUGGY]  }  else  if(parent.isFirstChild())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isFirstChild())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isFirstChild())  {	  }    else    if(parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
176	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  name  =  parent.getFirstChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  name  =  parent.getFirstChild().getQualifiedName();  }  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  name  =  parent.getFirstChild().getQualifiedName();  }	  parent!=    null)    {    name    =    parent.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
177	[BUG]  [BUGGY]  }  else  if(parent.isAssignmentToName()  ||  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isAssignmentToName()  ||  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isAssignmentToName()  ||  parent.isExprResult())  {	  }    else    if    (parent.isAssignment()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
178	[BUG]  [BUGGY]  name  =  t.getLastChild().getString();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  name  =  t.getLastChild().getString();  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	name  =  t.getLastChild().getString();	  name    =    parent.getLastChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
179	[BUG]  [BUGGY]  }  else  if(!t.inGlobalScope()  &&  n.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(!t.inGlobalScope()  &&  n.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(!t.inGlobalScope()  &&  n.isExprResult())  {	  }    else    if(n.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
180	[BUG]  [BUGGY]  }  else  if(parent.isAssign()  &&  parent.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isAssign()  &&  parent.isQualifiedName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isAssign()  &&  parent.isQualifiedName())  {	  }    else    if(n.isAssign()    ||    parent.isQualifiedName())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
181	[BUG]  [BUGGY]  }  else  if(parent.isFirstChild()  ||  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isFirstChild()  ||  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isFirstChild()  ||  parent.isExprResult())  {	  }    else    if(parent.isAssign()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
182	[BUG]  [BUGGY]  }  else  if(n.isAssignmentToName()  &&  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isAssignmentToName()  &&  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isAssignmentToName()  &&  parent.isExprResult())  {	  }    else    if(n.isAssignment()    &&    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
183	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  &&  parent.isDefined())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  &&  parent.isDefined())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  &&  parent.isDefined())  {	  }    else    if(n.isQualifiedName()    &&    parent.isDefined())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
184	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  ||  parent.isDefined())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(parent.isQualifiedName()  ||  parent.isDefined())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  ||  parent.isDefined())  {	  }    else    if(n.isQualifiedName()    &&    parent.isDefined())    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
185	[BUG]  [BUGGY]  }  else  if(n.isFirstChild()  ||  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isFirstChild()  ||  parent.isExprResult())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isFirstChild()  ||  parent.isExprResult())  {	  }    else    if(n.isName()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
186	[BUG]  [BUGGY]  }  else  if(n.isAssignment()  ||  parent.isName())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  }  else  if(n.isAssignment()  ||  parent.isName())  {  [BUGGY]      parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isAssignment()  ||  parent.isName())  {	  }    else    if(n.isAssignment()    ||    parent.isVar())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
187	[BUG]  [BUGGY]  parent  ==  null  ||  parent.isAssignmentOp(n))  {  name  =  parent.getFirstChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();      [BUGGY]  parent  ==  null  ||  parent.isAssignmentOp(n))  {  name  =  parent.getFirstChild().getQualifiedName();  }  [BUGGY]      }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null  ||  parent.isAssignmentOp(n))  {  name  =  parent.getFirstChild().getQualifiedName();  }	  parent    ==    null    &&    parent.isAssignmentOp(n))    {    name    =    parent.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
