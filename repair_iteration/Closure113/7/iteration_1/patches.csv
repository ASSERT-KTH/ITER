bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Name  name  =  n.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  Name  name  =  n.getLastChild().getQualifiedName();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getLastChild().getQualifiedName();	      Name    name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  Name  name  =  parent.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  Name  name  =  parent.getFirstChild().getQualifiedName();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  parent.getFirstChild().getQualifiedName();	      Name    name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  Name  name  =  t.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  Name  name  =  t.getFirstChild().getQualifiedName();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  t.getFirstChild().getQualifiedName();	      Name    name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName()  +  1;  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getFirstChild().getQualifiedName()  +  1;	      Name    name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  }  else  if(parent.isAssign()  ||  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(parent.isAssign()  ||  parent.isExprResult())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isAssign()  ||  parent.isExprResult())  {	  }    else    if(n.isAssign()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  }  else  if(n.isAssignment()  &&  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isAssignment()  &&  parent.isExprResult())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isAssignment()  &&  parent.isExprResult())  {	  }    else    if(n.isAssign()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
7	[BUG]  [BUGGY]  }  else  if(n.isAssign()  ||  parent.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isAssign()  ||  parent.isQualifiedName())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isAssign()  ||  parent.isQualifiedName())  {	  }    else    if(n.isAssign()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
8	[BUG]  [BUGGY]  }  else  if(n.isName()  ||  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isName()  ||  parent.isExprResult())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isName()  ||  parent.isExprResult())  {	  }    else    if(n.isAssign()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  }  else  if  (n.isName()  ||  parent.isVar())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if  (n.isName()  ||  parent.isVar())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if  (n.isName()  ||  parent.isVar())  {	  }    else    if    (n.isName()    &&    parent.isVar())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  }  else  if  (n.isName()  &&  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if  (n.isName()  &&  parent.isExprResult())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if  (n.isName()  &&  parent.isExprResult())  {	  }    else    if    (n.isName()    &&    parent.isVar())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  }  else  if  (n.isQualifiedName()  &&  parent.isVar())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if  (n.isQualifiedName()  &&  parent.isVar())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if  (n.isQualifiedName()  &&  parent.isVar())  {	  }    else    if    (n.isName()    &&    parent.isVar())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  Name  n  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  Name  n  =  n.getFirstChild().getQualifiedName();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  n  =  n.getFirstChild().getQualifiedName();	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  }  else  if(n.isAssignment()  ||  parent.isVar())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isAssignment()  ||  parent.isVar())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isAssignment()  ||  parent.isVar())  {	  }    else    if    (n.isAssignment()    &&    parent.isVar())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
15	[BUG]  [BUGGY]  }  else  if  (parent.isAssignment()  &&  parent.isVar())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if  (parent.isAssignment()  &&  parent.isVar())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if  (parent.isAssignment()  &&  parent.isVar())  {	  }    else    if    (n.isAssignment()    &&    parent.isVar())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getString();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
17	[BUG]  [BUGGY]  parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getString();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
18	[BUG]  [BUGGY]  name  =  n.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  name  =  n.getFirstChild().getString();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	name  =  n.getFirstChild().getString();	      name    =    n.getLastChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  name  =  parent.getLastChild().getString();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  name  =  parent.getLastChild().getString();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	name  =  parent.getLastChild().getString();	      name    =    n.getLastChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  n.isAssignmentTo(parent))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isQualifiedName()  ||  n.isAssignmentTo(parent))  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  n.isAssignmentTo(parent))  {	  }    else    if(n.isQualifiedName()    &&    n.isAssignmentTo(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
21	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isAssignmentTo(n))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isAssignmentTo(n))  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&  parent.isAssignmentTo(n))  {	  }    else    if(n.isQualifiedName()    &&    n.isAssignmentTo(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
22	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  &&  n.isAssignmentTo(parent))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(parent.isQualifiedName()  &&  n.isAssignmentTo(parent))  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  &&  n.isAssignmentTo(parent))  {	  }    else    if(n.isQualifiedName()    &&    n.isAssignmentTo(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
23	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isAssignmentTo(n))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isAssignmentTo(n))  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  parent.isAssignmentTo(n))  {	  }    else    if(n.isQualifiedName()    &&    n.isAssignmentTo(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
24	[BUG]  [BUGGY]  }  else  if(name.isQualifiedName()  &&  n.isAssignmentTo(parent))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(name.isQualifiedName()  &&  n.isAssignmentTo(parent))  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(name.isQualifiedName()  &&  n.isAssignmentTo(parent))  {	  }    else    if(n.isQualifiedName()    &&    n.isAssignmentTo(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
25	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isExprResult())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  parent.isExprResult())  {	  }    else    if(n.isQualifiedName()    &&    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  &&  n.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(parent.isQualifiedName()  &&  n.isExprResult())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  &&  n.isExprResult())  {	  }    else    if(n.isQualifiedName()    &&    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
27	[BUG]  [BUGGY]  }  else  if(name.isQualifiedName()  &&  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(name.isQualifiedName()  &&  parent.isExprResult())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(name.isQualifiedName()  &&  parent.isExprResult())  {	  }    else    if(n.isQualifiedName()    &&    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
28	[BUG]  [BUGGY]  parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getFirstChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getFirstChild().getQualifiedName();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getFirstChild().getQualifiedName();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
29	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getFirstChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getFirstChild().getQualifiedName();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getFirstChild().getQualifiedName();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
30	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  n.isAssignableFrom(parent))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isQualifiedName()  ||  n.isAssignableFrom(parent))  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  n.isAssignableFrom(parent))  {	  }    else    if(n.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
31	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isAssignableFrom(n))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isAssignableFrom(n))  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&  parent.isAssignableFrom(n))  {	  }    else    if(n.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
32	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  &&  n.isAssignableFrom(parent))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(parent.isQualifiedName()  &&  n.isAssignableFrom(parent))  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  &&  n.isAssignableFrom(parent))  {	  }    else    if(n.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
33	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isAssignableFrom(n))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isQualifiedName()  ||  parent.isAssignableFrom(n))  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  parent.isAssignableFrom(n))  {	  }    else    if(n.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
34	[BUG]  [BUGGY]  }  else  if(name.isQualifiedName()  &&  n.isAssignableFrom(parent))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(name.isQualifiedName()  &&  n.isAssignableFrom(parent))  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(name.isQualifiedName()  &&  n.isAssignableFrom(parent))  {	  }    else    if(n.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
35	[BUG]  [BUGGY]  }  else  if  (parent.isAssignment()  ||  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if  (parent.isAssignment()  ||  parent.isExprResult())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if  (parent.isAssignment()  ||  parent.isExprResult())  {	  }    else    if    (n.isAssignment()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
36	[BUG]  [BUGGY]  }  else  if  (n.isAssignment()  ||  parent.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if  (n.isAssignment()  ||  parent.isQualifiedName())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if  (n.isAssignment()  ||  parent.isQualifiedName())  {	  }    else    if    (n.isAssignment()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
37	[BUG]  [BUGGY]  name  =  parent.getLastChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  name  =  parent.getLastChild().getQualifiedName();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	name  =  parent.getLastChild().getQualifiedName();	      name    =    parent.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  name  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  name  =  n.getFirstChild();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	name  =  n.getFirstChild();	      name    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
39	[BUG]  [BUGGY]  name  =  parent.getLastChild();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  name  =  parent.getLastChild();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	name  =  parent.getLastChild();	      name    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
40	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getLastChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getLastChild().getQualifiedName();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getLastChild().getQualifiedName();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
42	[BUG]  [BUGGY]  parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getFirstChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getFirstChild().getQualifiedName();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
43	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getFirstChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getFirstChild().getQualifiedName();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
44	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getFirstChild().getQualifiedName()  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getFirstChild().getQualifiedName()  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getFirstChild().getQualifiedName()	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
45	[BUG]  [BUGGY]  parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getFirstChild().getQualifiedName()  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getFirstChild().getQualifiedName()  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getFirstChild().getQualifiedName()	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
46	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  naming  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  naming  =  n.getFirstChild().getQualifiedName();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	naming  =  n.getFirstChild().getQualifiedName();	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
48	[BUG]  [BUGGY]  }  else  if  (n.isExprResult()  &&  parent.isVar())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if  (n.isExprResult()  &&  parent.isVar())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if  (n.isExprResult()  &&  parent.isVar())  {	  }    else    if    (n.isAssignment()    &&    parent.isVar())    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&  name.isAssignableFrom(parent))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isQualifiedName()  &&  name.isAssignableFrom(parent))  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&  name.isAssignableFrom(parent))  {	  }    else    if(n.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
50	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&  n.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isQualifiedName()  &&  n.isExprResult())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&  n.isExprResult())  {	  }    else    if(n.isQualifiedName()    &&    n.isAssignmentTo(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
51	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getString();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
52	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getString();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
53	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getString();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
54	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp(n))  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getString();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
55	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString()  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString()  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getString()	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getString();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
56	[BUG]  [BUGGY]  name  =  n.getFirstChild().getName();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  name  =  n.getFirstChild().getName();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	name  =  n.getFirstChild().getName();	      name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
57	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isQualifiedName())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName())  {	  }    else    if    (n.isName()    &&    parent.isVar())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
58	[BUG]  [BUGGY]  }  else  if(n.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isExprResult())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isExprResult())  {	  }    else    if    (n.isName()    &&    parent.isVar())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
59	[BUG]  [BUGGY]  name  =  parent.getFirstChild();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  name  =  parent.getFirstChild();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	name  =  parent.getFirstChild();	      name    =    n.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
60	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
61	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
62	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName()  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName()  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName()	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
63	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
64	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName()  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName()  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  n.getLastChild().getQualifiedName()	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
65	[BUG]  [BUGGY]  name  =  parent.getFirstChild().getString();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  name  =  parent.getFirstChild().getString();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	name  =  parent.getFirstChild().getString();	      name    =    n.getLastChild().getString();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
66	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild().getName();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  Name  name  =  n.getFirstChild().getName();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getFirstChild().getName();	      Name    name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName(name);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  Name  name  =  n.getFirstChild().getQualifiedName(name);  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  name  =  n.getFirstChild().getQualifiedName(name);	      Name    name    =    n.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
68	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isAssignableFrom(parent))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isAssignableFrom(parent))  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&  parent.isAssignableFrom(parent))  {	  }    else    if(n.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
69	[BUG]  [BUGGY]  }  else  if(!name.isQualifiedName()  &&  n.isAssignableFrom(parent))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(!name.isQualifiedName()  &&  n.isAssignableFrom(parent))  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(!name.isQualifiedName()  &&  n.isAssignableFrom(parent))  {	  }    else    if(n.isQualifiedName()    &&    n.isAssignableFrom(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
70	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isAssignmentTo(parent))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isAssignmentTo(parent))  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&  parent.isAssignmentTo(parent))  {	  }    else    if(n.isQualifiedName()    &&    n.isAssignmentTo(parent))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
71	[BUG]  [BUGGY]  }  else  if(n.isName()  &&  parent.isQualifiedName())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isName()  &&  parent.isQualifiedName())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isName()  &&  parent.isQualifiedName())  {	  }    else    if    (n.isName()    &&    parent.isVar())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
72	[BUG]  [BUGGY]  }  else  if(parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(parent.isExprResult())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isExprResult())  {	  }    else    if    (n.isName()    &&    parent.isVar())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
73	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  ||  n.isName())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isQualifiedName()  ||  n.isName())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  ||  n.isName())  {	  }    else    if    (n.isName()    &&    parent.isVar())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
74	[BUG]  [BUGGY]  }  else  if(n.isAssignmentTo(parent)||  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isAssignmentTo(parent)||  parent.isExprResult())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isAssignmentTo(parent)||  parent.isExprResult())  {	  }    else    if    (n.isAssignment()    ||    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
75	[BUG]  [BUGGY]  Name  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  Name  =  n.getFirstChild().getQualifiedName();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	Name  =  n.getFirstChild().getQualifiedName();	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
76	[BUG]  [BUGGY]  parent  =  n.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent  =  n.getFirstChild().getQualifiedName();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  =  n.getFirstChild().getQualifiedName();	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
77	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
78	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isFirstChild())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isFirstChild())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&  parent.isFirstChild())  {	  }    else    if(n.isQualifiedName()    &&    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
79	[BUG]  [BUGGY]  }  else  if(parent.isQualifiedName()  ||  parent.isExprResult())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(parent.isQualifiedName()  ||  parent.isExprResult())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(parent.isQualifiedName()  ||  parent.isExprResult())  {	  }    else    if(n.isQualifiedName()    &&    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
80	[BUG]  [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isDefined())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  }  else  if(n.isQualifiedName()  &&  parent.isDefined())  {  [BUGGY]    parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	}  else  if(n.isQualifiedName()  &&  parent.isDefined())  {	  }    else    if(n.isQualifiedName()    &&    parent.isExprResult())    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
81	[BUG]  [BUGGY]  parent.setQualifiedName(n.getFirstChild().getQualifiedName());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent.setQualifiedName(n.getFirstChild().getQualifiedName());  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent.setQualifiedName(n.getFirstChild().getQualifiedName());	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
82	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  parent.getFirstChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  parent.getFirstChild().getQualifiedName();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp())  {  name  =  parent.getFirstChild().getQualifiedName();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
83	[BUG]  [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent!=  null  &&  parent.isAssignmentOp())  {  name  =  n.getFirstChild().getQualifiedName();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
84	[BUG]  [BUGGY]  parent  ==  null  &&  parent.isAssignmentOp(n))  {  name  =  parent.getFirstChild().getQualifiedName();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent  ==  null  &&  parent.isAssignmentOp(n))  {  name  =  parent.getFirstChild().getQualifiedName();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null  &&  parent.isAssignmentOp(n))  {  name  =  parent.getFirstChild().getQualifiedName();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getFirstChild().getQualifiedName();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
85	[BUG]  [BUGGY]  name  =  t.getFirstChild().getQualifiedName();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  name  =  t.getFirstChild().getQualifiedName();  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	name  =  t.getFirstChild().getQualifiedName();	      name    =    parent.getFirstChild().getQualifiedName();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
86	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getLastChild().getString();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getLastChild().getString();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  parent.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getLastChild().getString();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getString();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
87	[BUG]  [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getLastChild().getString();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    NodeTraversal  t,  Node  n,  Node  parent)  {  if  (t.inGlobalScope())  {  String  name  =  null;  if  (n.isName()  &&  parent.isVar())  {  name  =  n.getString();    [BUGGY]  parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getLastChild().getString();  }  [BUGGY]    }  else  if  (n.isAssign()  &&    parent.isExprResult())  {  parent.isExprResult())  {  name  =  n.getFirstChild().getQualifiedName();  }  if  (name  !=  null)  {  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	409	410	1	replace	parent  ==  null)  {  name  =  n.getFirstChild().getQualifiedName();  }  else  {  name  =  parent.getLastChild().getString();  }	      if(name!=    null)    {    name    =    n.getFirstChild().getQualifiedName();    }    else    {    name    =    n.getLastChild().getString();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
