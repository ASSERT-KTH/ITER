bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkState(info  ==  null);  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  Preconditions.checkState(info  ==  null);  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info  ==  null);	      Preconditions.checkState(info!=    null);    	non-compiled	[CE]  ')'  expected	10	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null  &&  info.hasTypedefType());  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  Preconditions.checkState(info!=  null  &&  info.hasTypedefType());  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null  &&  info.hasTypedefType());	      Preconditions.checkState(info!=    null);    	non-compiled	[CE]  ')'  expected	10	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkArgument(info!=  null);  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  Preconditions.checkArgument(info!=  null);  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkArgument(info!=  null);	      Preconditions.checkState(info!=    null);    	non-compiled	[CE]  ')'  expected	10	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null,  t.getModule());  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  Preconditions.checkState(info!=  null,  t.getModule());  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null,  t.getModule());	      Preconditions.checkState(info!=    null);    	non-compiled	[CE]  ')'  expected	10	None	replace
5	[BUG]  [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  &&  info.hasTypeDefType())  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  &&  info.hasTypeDefType())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.inGlobalScope()  &&  info.hasTypeDefType())  {	  if    (info!=    null    &&    info.inGlobalScope()    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	18	None	replace
6	[BUG]  [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  &&  info.hasTypeDecl())  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  &&  info.hasTypeDecl())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.inGlobalScope()  &&  info.hasTypeDecl())  {	  if    (info!=    null    &&    info.inGlobalScope()    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	18	None	replace
7	[BUG]  [BUGGY]  if  (info  ==  null  &&  info.isGlobalScope())  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if  (info  ==  null  &&  info.isGlobalScope())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info  ==  null  &&  info.isGlobalScope())  {	  if    (info!=    null    &&    info.isGlobalScope())    {    	non-compiled	[CE]  ')'  expected	11	None	replace
8	[BUG]  [BUGGY]  if  (info!=  null  ||  info.isGlobalScope())  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if  (info!=  null  ||  info.isGlobalScope())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  ||  info.isGlobalScope())  {	  if    (info!=    null    &&    info.isGlobalScope())    {    	non-compiled	[CE]  ')'  expected	11	None	replace
9	[BUG]  [BUGGY]  if  (info!=  null  &&  info.isModule())  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if  (info!=  null  &&  info.isModule())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.isModule())  {	  if    (info!=    null    &&    info.isGlobalScope())    {    	non-compiled	[CE]  ')'  expected	11	None	replace
10	[BUG]  [BUGGY]  NodeInfo  info  =  n.getJSDocInfo();  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeInfo  info  =  n.getJSDocInfo();  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeInfo  info  =  n.getJSDocInfo();	      NodeInfo    info    =    n.getFirstChild();    	non-compiled	[CE]  ')'  expected	9	None	replace
11	[BUG]  [BUGGY]  NodeInfo  info  =  n.getLastChild();  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeInfo  info  =  n.getLastChild();  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeInfo  info  =  n.getLastChild();	      NodeInfo    info    =    n.getFirstChild();    	non-compiled	[CE]  ')'  expected	9	None	replace
12	[BUG]  [BUGGY]  NodeInfo  info  =  n.getNext();  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeInfo  info  =  n.getNext();  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeInfo  info  =  n.getNext();	      NodeInfo    info    =    n.getFirstChild();    	non-compiled	[CE]  ')'  expected	9	None	replace
13	[BUG]  [BUGGY]  if  (info!=  null  &&  info.hasTypeDefType())  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if  (info!=  null  &&  info.hasTypeDefType())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.hasTypeDefType())  {	  if    (info!=    null    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	4	None	replace
14	[BUG]  [BUGGY]  if  (info  ==  null  &&  info.hasTypedefType())  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if  (info  ==  null  &&  info.hasTypedefType())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info  ==  null  &&  info.hasTypedefType())  {	  if    (info!=    null    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	4	None	replace
15	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  info);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  info);  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  info);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  ')'  expected	6	None	replace
16	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeTraversal.traverse(compiler,  n,  null);  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  null);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  ')'  expected	6	None	replace
17	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  moduleGraph);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  moduleGraph);  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  moduleGraph);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  ')'  expected	6	None	replace
18	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  moduleGraph);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeTraversal.traverse(compiler,  n,  moduleGraph);  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  moduleGraph);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  ')'  expected	6	None	replace
19	[BUG]  [BUGGY]  Node  providedNames  =  n.getLastChild();  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  Node  providedNames  =  n.getLastChild();  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  n.getLastChild();	      	non-compiled	[CE]  ')'  expected	5	None	replace
20	[BUG]  [BUGGY]  NodeInfo  info  =  n.getLastChild().getJSDocInfo();  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeInfo  info  =  n.getLastChild().getJSDocInfo();  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeInfo  info  =  n.getLastChild().getJSDocInfo();	      NodeInfo    info    =    n.getFirstChild().getJSDocInfo();    	non-compiled	[CE]  ')'  expected	17	None	replace
21	[BUG]  [BUGGY]  NodeInfo  info  =  n.getNext().getJSDocInfo();  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeInfo  info  =  n.getNext().getJSDocInfo();  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeInfo  info  =  n.getNext().getJSDocInfo();	      NodeInfo    info    =    n.getFirstChild().getJSDocInfo();    	non-compiled	[CE]  ')'  expected	17	None	replace
22	[BUG]  [BUGGY]  JSDocInfo  info  =  n.getNext().getJSDocInfo();  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  JSDocInfo  info  =  n.getNext().getJSDocInfo();  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	JSDocInfo  info  =  n.getNext().getJSDocInfo();	      JSDocInfo    info    =    n.getFirstChild().getJSDocInfo();    	non-compiled	[CE]  ')'  expected	12	None	replace
23	[BUG]  [BUGGY]  Node  providedNames  =  info.getFirstChild();  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  Node  providedNames  =  info.getFirstChild();  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  info.getFirstChild();	      Node    providedNames    =    n.getFirstChild();    	non-compiled	[CE]  ')'  expected	8	None	replace
24	[BUG]  [BUGGY]  Node  providedNames  =  n.getFirstChild().getJSDocInfo();  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  Node  providedNames  =  n.getFirstChild().getJSDocInfo();  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  n.getFirstChild().getJSDocInfo();	      Node    providedNames    =    n.getFirstChild();    	non-compiled	[CE]  ')'  expected	8	None	replace
25	[BUG]  [BUGGY]  Node  providedNames  =  n.getFirstChild().getNext();  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  Node  providedNames  =  n.getFirstChild().getNext();  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  n.getFirstChild().getNext();	      Node    providedNames    =    n.getFirstChild();    	non-compiled	[CE]  ')'  expected	8	None	replace
26	[BUG]  [BUGGY]  JSDocInfo  info  =  t.getJSDocInfo();  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  JSDocInfo  info  =  t.getJSDocInfo();  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	JSDocInfo  info  =  t.getJSDocInfo();	      JSDocInfo    info    =    n.getJSDocInfo();    	non-compiled	[CE]  ')'  expected	7	None	replace
27	[BUG]  [BUGGY]  if  (info  ==  null  &&  info.inGlobalScope())  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if  (info  ==  null  &&  info.inGlobalScope())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info  ==  null  &&  info.inGlobalScope())  {	  if    (info!=    null    &&    info.inGlobalScope())    {    	non-compiled	[CE]  ')'  expected	3	None	replace
28	[BUG]  [BUGGY]  if  (info!=  null  ||  info.inGlobalScope())  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if  (info!=  null  ||  info.inGlobalScope())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  ||  info.inGlobalScope())  {	  if    (info!=    null    &&    info.inGlobalScope())    {    	non-compiled	[CE]  ')'  expected	3	None	replace
29	[BUG]  [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  ||  info.hasChildren())  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  ||  info.hasChildren())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.inGlobalScope()  ||  info.hasChildren())  {	  if    (info!=    null    &&    info.inGlobalScope())    {    	non-compiled	[CE]  ')'  expected	3	None	replace
30	[BUG]  [BUGGY]  JSDocInfo  info  =  t.getLastChild().getJSDocInfo();  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  JSDocInfo  info  =  t.getLastChild().getJSDocInfo();  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	JSDocInfo  info  =  t.getLastChild().getJSDocInfo();	      JSDocInfo    info    =    n.getLastChild().getJSDocInfo();    	non-compiled	[CE]  ')'  expected	14	None	replace
31	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  info,  moduleGraph);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeTraversal.traverse(compiler,  n,  info,  moduleGraph);  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  info,  moduleGraph);	      NodeTraversal.traverse(compiler,    n,    info);    	non-compiled	[CE]  ')'  expected	13	None	replace
32	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceName,  info);  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceName,  info);  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  sourceName,  info);	      NodeTraversal.traverse(compiler,    n,    info);    	non-compiled	[CE]  ')'  expected	13	None	replace
33	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  info,  this);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeTraversal.traverse(compiler,  n,  info,  this);  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  info,  this);	      NodeTraversal.traverse(compiler,    n,    info);    	non-compiled	[CE]  ')'  expected	13	None	replace
34	[BUG]  [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  ||  info!=  null  &&  info.hasTypedefType())  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  ||  info!=  null  &&  info.hasTypedefType())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.inGlobalScope()  ||  info!=  null  &&  info.hasTypedefType())  {	  if    (info!=    null    &&    info.inGlobalScope()    &&    info!=    null    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	1	None	replace
35	[BUG]  [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  &&  info!=  null  &&  info.hasTypeDefType())  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  &&  info!=  null  &&  info.hasTypeDefType())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.inGlobalScope()  &&  info!=  null  &&  info.hasTypeDefType())  {	  if    (info!=    null    &&    info.inGlobalScope()    &&    info!=    null    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	1	None	replace
36	[BUG]  [BUGGY]  if  (info!=  null  &&  t.inGlobalScope()  &&  info!=  null  &&  info.hasTypeDefType())  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if  (info!=  null  &&  t.inGlobalScope()  &&  info!=  null  &&  info.hasTypeDefType())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  t.inGlobalScope()  &&  info!=  null  &&  info.hasTypeDefType())  {	  if    (info!=    null    &&    t.inGlobalScope()    &&    info!=    null    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	2	None	replace
37	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  typeDecl,  info);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeTraversal.traverse(compiler,  n,  typeDecl,  info);  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  typeDecl,  info);	      NodeTraversal.traverse(compiler,    n,    info);    	non-compiled	[CE]  ')'  expected	13	None	replace
38	[BUG]  [BUGGY]  JSDocInfo  info  =  n.getNext();  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  JSDocInfo  info  =  n.getNext();  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	JSDocInfo  info  =  n.getNext();	      JSDocInfo    info    =    n.getJSDocInfo();    	non-compiled	[CE]  ')'  expected	7	None	replace
39	[BUG]  [BUGGY]  ProvidedName  pn  =  providedNames.get(info);  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  ProvidedName  pn  =  providedNames.get(info);  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	ProvidedName  pn  =  providedNames.get(info);	      	non-compiled	[CE]  ')'  expected	5	None	replace
40	[BUG]  [BUGGY]  JSDocInfo  info  =  info.getJSDocInfo();  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  JSDocInfo  info  =  info.getJSDocInfo();  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	JSDocInfo  info  =  info.getJSDocInfo();	      	non-compiled	[CE]  ')'  expected	5	None	replace
41	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  getTypeDecl());  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeTraversal.traverse(compiler,  n,  getTypeDecl());  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  getTypeDecl());	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  ')'  expected	6	None	replace
42	[BUG]  [BUGGY]  if  (info!=  null  &&  info.isGlobalScope()  &&  info!=  null  &&  info.hasTypedefType())  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if  (info!=  null  &&  info.isGlobalScope()  &&  info!=  null  &&  info.hasTypedefType())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.isGlobalScope()  &&  info!=  null  &&  info.hasTypedefType())  {	  if    (info!=    null    &&    info.inGlobalScope()    &&    info!=    null    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	1	None	replace
43	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null  &&  info.getType()  ==  Token.FUNCTION);  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  Preconditions.checkState(info!=  null  &&  info.getType()  ==  Token.FUNCTION);  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null  &&  info.getType()  ==  Token.FUNCTION);	      Preconditions.checkState(info!=    null);    	non-compiled	[CE]  ')'  expected	10	None	replace
44	[BUG]  [BUGGY]  Node  providedNames  =  n.getFirstChild().getLastChild();  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  Node  providedNames  =  n.getFirstChild().getLastChild();  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  n.getFirstChild().getLastChild();	      Node    providedNames    =    n.getFirstChild();    	non-compiled	[CE]  ')'  expected	8	None	replace
45	[BUG]  [BUGGY]  Node  providedNames  =  n.getFirstChild().getString();  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  Node  providedNames  =  n.getFirstChild().getString();  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  n.getFirstChild().getString();	      Node    providedNames    =    n.getFirstChild();    	non-compiled	[CE]  ')'  expected	8	None	replace
46	[BUG]  [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  ||  info.hasTypedefType())  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  ||  info.hasTypedefType())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.inGlobalScope()  ||  info.hasTypedefType())  {	  if    (info!=    null    &&    info.inGlobalScope()    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	18	None	replace
47	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info));  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info));  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info));	      NodeTraversal.traverse(compiler,    n,    info);    	non-compiled	[CE]  ')'  expected	13	None	replace
48	[BUG]  [BUGGY]  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo(t);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo(t);  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	JSDocInfo  info  =  n.getFirstChild().getJSDocInfo(t);	      JSDocInfo    info    =    n.getFirstChild().getJSDocInfo();    	non-compiled	[CE]  ')'  expected	12	None	replace
49	[BUG]  [BUGGY]  JSDocInfo  info  =  n.getfirstChild().getJSDocInfo();  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  JSDocInfo  info  =  n.getfirstChild().getJSDocInfo();  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	JSDocInfo  info  =  n.getfirstChild().getJSDocInfo();	      JSDocInfo    info    =    n.getLastChild().getJSDocInfo();    	non-compiled	[CE]  ')'  expected	14	None	replace
50	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  info));  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  info));  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  info));	      	non-compiled	[CE]  ')'  expected	5	None	replace
51	[BUG]  [BUGGY]  NodeInfo  info  =  n.getFirstChild().getJSDocInfo(t);  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeInfo  info  =  n.getFirstChild().getJSDocInfo(t);  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeInfo  info  =  n.getFirstChild().getJSDocInfo(t);	      NodeInfo    info    =    n.getFirstChild().getJSDocInfo();    	non-compiled	[CE]  ')'  expected	17	None	replace
52	[BUG]  [BUGGY]  JSDocInfo  info  =  n.removeFirstChild();  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  JSDocInfo  info  =  n.removeFirstChild();  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	JSDocInfo  info  =  n.removeFirstChild();	      JSDocInfo    info    =    n.getLastChild();    	non-compiled	[CE]  ')'  expected	15	None	replace
53	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "java. "))  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "java. "))  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "java. "))  {	  if    (info!=    null    &&    info.inGlobalScope())    {    	non-compiled	[CE]  ')'  expected	3	None	replace
54	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "__ "))  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "__ "))  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "__ "))  {	  if    (info!=    null    &&    info.inGlobalScope())    {    	non-compiled	[CE]  ')'  expected	3	None	replace
55	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {	  if    (info!=    null    &&    info.inGlobalScope())    {    	non-compiled	[CE]  ')'  expected	3	None	replace
56	[BUG]  [BUGGY]  if(info!=  null  &&  info.hasTypedef())  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if(info!=  null  &&  info.hasTypedef())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.hasTypedef())  {	  if    (info!=    null    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	4	None	replace
57	[BUG]  [BUGGY]  if(info!=  null  &&  info.hasTypedefDefinition())  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if(info!=  null  &&  info.hasTypedefDefinition())  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.hasTypedefDefinition())  {	  if    (info!=    null    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	4	None	replace
58	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  information);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  information);  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  information);	      NodeTraversal.traverse(compiler,    n,    this);    	non-compiled	[CE]  ')'  expected	6	None	replace
59	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null,  info.hasTypedefType());  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  Preconditions.checkState(info!=  null,  info.hasTypedefType());  [BUGGY]    if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null,  info.hasTypedefType());	      Preconditions.checkState(info!=    null);    	non-compiled	[CE]  ')'  expected	10	None	replace
60	[BUG]  [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.isGlobalScope()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if    (info!=    null    &&    info.isGlobalScope())    {    	non-compiled	[CE]  ')'  expected	11	None	replace
61	[BUG]  [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();    [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]    String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.isGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {	  if    (info!=    null    &&    info.isGlobalScope())    {    	non-compiled	[CE]  ')'  expected	11	None	replace
