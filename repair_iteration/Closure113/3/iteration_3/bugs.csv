bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkState(info  ==  null,  info.hasTypedefType());  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info  ==  null,  info.hasTypedefType());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info  ==  null,  info.hasTypedefType());	  Preconditions.checkState(info!=    null,    info.hasTypedefType());    	non-compiled	[CE]  ')'  expected	59	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null,  info.getType()  ==  Token.NAME);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info!=  null,  info.getType()  ==  Token.NAME);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null,  info.getType()  ==  Token.NAME);	  Preconditions.checkState(info!=    null,    info.hasTypedefType());    	non-compiled	[CE]  ')'  expected	59	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null,  info.getType()  ==  Token.FUNCTION);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info!=  null,  info.getType()  ==  Token.FUNCTION);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null,  info.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(info!=    null,    info.hasTypedefType());    	non-compiled	[CE]  ')'  expected	59	None	replace
4	[BUG]  [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.isGlobalScope()  ||  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.isGlobalScope()    &&    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
5	[BUG]  [BUGGY]  if(info  ==  null  &&  info.isGlobalScope()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info  ==  null  &&  info.isGlobalScope()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info  ==  null  &&  info.isGlobalScope()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.isGlobalScope()    &&    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
6	[BUG]  [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  &&  n.getLastChild().getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  &&  n.getLastChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.isGlobalScope()  &&  n.getLastChild().getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.isGlobalScope()    &&    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
7	[BUG]  [BUGGY]  if(info!=  null  ||  info.isGlobalScope()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  ||  info.isGlobalScope()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  ||  info.isGlobalScope()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.isGlobalScope()    &&    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
8	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  info,  null);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  info,  null);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  info,  null);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  ')'  expected	16	None	replace
9	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  info  }  );  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  info  }  );  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  info  }  );	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  ')'  expected	16	None	replace
10	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  information);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  information);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  information);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  ')'  expected	16	None	replace
11	[BUG]  [BUGGY]  Node  providedNames  =  n.getLastChild().getJSDocInfo();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  n.getLastChild().getJSDocInfo();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  n.getLastChild().getJSDocInfo();	  Node    providedNames    =    n.getFirstChild().getJSDocInfo();    	non-compiled	[CE]  ')'  expected	24	None	replace
12	[BUG]  [BUGGY]  Node  providedNames  =  info.getFirstChild().getJSDocInfo();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  info.getFirstChild().getJSDocInfo();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  info.getFirstChild().getJSDocInfo();	  Node    providedNames    =    n.getFirstChild().getJSDocInfo();    	non-compiled	[CE]  ')'  expected	24	None	replace
13	[BUG]  [BUGGY]  Node  providedNames  =  n.getFirstChild().getQualifiedName();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  n.getFirstChild().getQualifiedName();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  n.getFirstChild().getQualifiedName();	  Node    providedNames    =    n.getFirstChild().getJSDocInfo();    	non-compiled	[CE]  ')'  expected	24	None	replace
14	[BUG]  [BUGGY]  Node  providedNames  =  n.getFirstChild().getJSDocInfo().getQualifiedName();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  n.getFirstChild().getJSDocInfo().getQualifiedName();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  n.getFirstChild().getJSDocInfo().getQualifiedName();	  Node    providedNames    =    n.getFirstChild().getJSDocInfo();    	non-compiled	[CE]  ')'  expected	24	None	replace
15	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  moduleGraph,  info);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  moduleGraph,  info);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  moduleGraph,  info);	  NodeTraversal.traverse(compiler,    n,    this,    moduleGraph);    	non-compiled	[CE]  ')'  expected	17	None	replace
16	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  moduleGraph,  info);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  moduleGraph,  info);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  moduleGraph,  info);	  NodeTraversal.traverse(compiler,    n,    this,    moduleGraph);    	non-compiled	[CE]  ')'  expected	17	None	replace
17	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  moduleGraph,  documentation);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  moduleGraph,  documentation);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  moduleGraph,  documentation);	  NodeTraversal.traverse(compiler,    n,    this,    moduleGraph);    	non-compiled	[CE]  ')'  expected	17	None	replace
18	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  inputName);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  inputName);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  inputName);	  NodeTraversal.traverse(compiler,    n,    this,    moduleGraph);    	non-compiled	[CE]  ')'  expected	17	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkArgument(info  ==  null);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkArgument(info  ==  null);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkArgument(info  ==  null);	  Preconditions.checkArgument(info!=    null);    	non-compiled	[CE]  ')'  expected	3	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkArgument(info!=  null  &&  info.hasTypedefType());  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkArgument(info!=  null  &&  info.hasTypedefType());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkArgument(info!=  null  &&  info.hasTypedefType());	  Preconditions.checkArgument(info!=    null);    	non-compiled	[CE]  ')'  expected	3	None	replace
21	[BUG]  [BUGGY]  if  (info!=  null  ||  info.inGlobalScope()  ||  info!=  null  &&  info.hasTypedefType())  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  ||  info.inGlobalScope()  ||  info!=  null  &&  info.hasTypedefType())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  ||  info.inGlobalScope()  ||  info!=  null  &&  info.hasTypedefType())  {	  if    (info!=    null    &&    info.inGlobalScope()    ||    info!=    null    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	34	None	replace
22	[BUG]  [BUGGY]  Node  providedNames  =  info.getFirstChild().getLastChild();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  info.getFirstChild().getLastChild();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  info.getFirstChild().getLastChild();	  Node    providedNames    =    n.getFirstChild().getLastChild();    	non-compiled	[CE]  ')'  expected	44	None	replace
23	[BUG]  [BUGGY]  Node  providedNames  =  n.getFirstChild().getFirstChild();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  n.getFirstChild().getFirstChild();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  n.getFirstChild().getFirstChild();	  Node    providedNames    =    n.getFirstChild().getLastChild();    	non-compiled	[CE]  ')'  expected	44	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkState(info  ==  null,  t.getModule());  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info  ==  null,  t.getModule());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info  ==  null,  t.getModule());	  Preconditions.checkState(info!=    null,    t.getModule());    	non-compiled	[CE]  ')'  expected	4	None	replace
25	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null,  info.getModule());  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info!=  null,  info.getModule());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null,  info.getModule());	  Preconditions.checkState(info!=    null,    t.getModule());    	non-compiled	[CE]  ')'  expected	4	None	replace
26	[BUG]  [BUGGY]  Preconditions.checkArgument(info!=  null,  t.getModule());  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkArgument(info!=  null,  t.getModule());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkArgument(info!=  null,  t.getModule());	  Preconditions.checkState(info!=    null,    t.getModule());    	non-compiled	[CE]  ')'  expected	4	None	replace
27	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null,  n.getModule());  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info!=  null,  n.getModule());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null,  n.getModule());	  Preconditions.checkState(info!=    null,    t.getModule());    	non-compiled	[CE]  ')'  expected	4	None	replace
28	[BUG]  [BUGGY]  NodeInfo  info  =  n.getParent().getJSDocInfo();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeInfo  info  =  n.getParent().getJSDocInfo();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeInfo  info  =  n.getParent().getJSDocInfo();	  NodeInfo    info    =    n.getNext().getJSDocInfo();    	non-compiled	[CE]  ')'  expected	21	None	replace
29	[BUG]  [BUGGY]  Node  providedNames  =  n.getLastChild().getString();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  n.getLastChild().getString();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  n.getLastChild().getString();	  Node    providedNames    =    n.getFirstChild().getString();    	non-compiled	[CE]  ')'  expected	45	None	replace
30	[BUG]  [BUGGY]  Node  providedNames  =  info.getFirstChild().getString();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  info.getFirstChild().getString();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  info.getFirstChild().getString();	  Node    providedNames    =    n.getFirstChild().getString();    	non-compiled	[CE]  ')'  expected	45	None	replace
31	[BUG]  [BUGGY]  if  (info!=  null  &&  info.isGlobalScope()  ||  info!=  null  &&  info.hasTypedefType())  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  &&  info.isGlobalScope()  ||  info!=  null  &&  info.hasTypedefType())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.isGlobalScope()  ||  info!=  null  &&  info.hasTypedefType())  {	  if    (info!=    null    &&    info.isGlobalScope()    &&    info!=    null    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	42	None	replace
32	[BUG]  [BUGGY]  if  (info!=  null  &&  info.isGlobalScope()  &&  info!=  null  &&  info.hasTypeDefType())  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  &&  info.isGlobalScope()  &&  info!=  null  &&  info.hasTypeDefType())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.isGlobalScope()  &&  info!=  null  &&  info.hasTypeDefType())  {	  if    (info!=    null    &&    info.isGlobalScope()    &&    info!=    null    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	42	None	replace
33	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  n));  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  n));  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  n));	  NodeTraversal.traverse(compiler,    n,    new    ProcessClosurePrimitive(t,    info));    	non-compiled	[CE]  ')'  expected	50	None	replace
34	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  info,  new  ProcessClosurePrimitive(t,  info));  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  info,  new  ProcessClosurePrimitive(t,  info));  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  info,  new  ProcessClosurePrimitive(t,  info));	  NodeTraversal.traverse(compiler,    n,    new    ProcessClosurePrimitive(t,    info));    	non-compiled	[CE]  ')'  expected	50	None	replace
35	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  ProcessClosurePrimitive(t,  info));  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  ProcessClosurePrimitive(t,  info));  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  new  ProcessClosurePrimitive(t,  info));	  NodeTraversal.traverse(compiler,    n,    new    ProcessClosurePrimitive(t,    info));    	non-compiled	[CE]  ')'  expected	50	None	replace
36	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  info),  moduleGraph);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  info),  moduleGraph);  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  info),  moduleGraph);	  NodeTraversal.traverse(compiler,    n,    new    ProcessClosurePrimitive(t,    info));    	non-compiled	[CE]  ')'  expected	50	None	replace
37	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  n),  info);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  n),  info);  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  n),  info);	  NodeTraversal.traverse(compiler,    n,    new    ProcessClosurePrimitive(t,    info));    	non-compiled	[CE]  ')'  expected	50	None	replace
38	[BUG]  [BUGGY]  if  (info!=  null  &&  info.hasTypeDecl())  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  &&  info.hasTypeDecl())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.hasTypeDecl())  {	  if    (info!=    null    &&    info.hasTypeDefType())    {    	non-compiled	[CE]  ')'  expected	13	None	replace
39	[BUG]  [BUGGY]  if  (info!=  null  &&  info.hasTypeDefinition())  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  &&  info.hasTypeDefinition())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.hasTypeDefinition())  {	  if    (info!=    null    &&    info.hasTypeDefType())    {    	non-compiled	[CE]  ')'  expected	13	None	replace
40	[BUG]  [BUGGY]  NodeInfo  info  =  n.getParent();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeInfo  info  =  n.getParent();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeInfo  info  =  n.getParent();	  NodeInfo    info    =    n.getNext();    	non-compiled	[CE]  ')'  expected	12	None	replace
41	[BUG]  [BUGGY]  if(info  ==  null  &&  info.hasTypedefDefinition())  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info  ==  null  &&  info.hasTypedefDefinition())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info  ==  null  &&  info.hasTypedefDefinition())  {	  if(info!=    null    &&    info.hasTypedefDefinition())    {    	non-compiled	[CE]  ')'  expected	57	None	replace
42	[BUG]  [BUGGY]  if(info!=  null  ||  info.hasTypedefDefinition())  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  ||  info.hasTypedefDefinition())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  ||  info.hasTypedefDefinition())  {	  if(info!=    null    &&    info.hasTypedefDefinition())    {    	non-compiled	[CE]  ')'  expected	57	None	replace
43	[BUG]  [BUGGY]  if(info!=  null  &&  info.hasTypeDefDefinition())  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.hasTypeDefDefinition())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.hasTypeDefDefinition())  {	  if(info!=    null    &&    info.hasTypedefDefinition())    {    	non-compiled	[CE]  ')'  expected	57	None	replace
44	[BUG]  [BUGGY]  if(info!=  null  &&  info.hasTypedefDefinition()  ||  info.hasChildren())  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.hasTypedefDefinition()  ||  info.hasChildren())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.hasTypedefDefinition()  ||  info.hasChildren())  {	  if(info!=    null    &&    info.hasTypedefDefinition())    {    	non-compiled	[CE]  ')'  expected	57	None	replace
45	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null  ||  info.getType()  ==  Token.FUNCTION);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info!=  null  ||  info.getType()  ==  Token.FUNCTION);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null  ||  info.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(info!=    null    &&    info.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  ')'  expected	43	None	replace
46	[BUG]  [BUGGY]  Preconditions.checkState(info  ==  null  &&  info.getType()  ==  Token.FUNCTION);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info  ==  null  &&  info.getType()  ==  Token.FUNCTION);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info  ==  null  &&  info.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(info!=    null    &&    info.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  ')'  expected	43	None	replace
47	[BUG]  [BUGGY]  Preconditions.checkState(info  ==  null  ||  info.getType()  ==  Token.FUNCTION);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info  ==  null  ||  info.getType()  ==  Token.FUNCTION);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info  ==  null  ||  info.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(info!=    null    &&    info.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  ')'  expected	43	None	replace
48	[BUG]  [BUGGY]  if  (info!=  null  ||  info.isModule())  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  ||  info.isModule())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  ||  info.isModule())  {	  if    (info!=    null    &&    info.isModule())    {    	non-compiled	[CE]  ')'  expected	9	None	replace
49	[BUG]  [BUGGY]  if  (info  ==  null  &&  info.isModule())  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info  ==  null  &&  info.isModule())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info  ==  null  &&  info.isModule())  {	  if    (info!=    null    &&    info.isModule())    {    	non-compiled	[CE]  ')'  expected	9	None	replace
50	[BUG]  [BUGGY]  JSDocInfo  info  =  node.getJSDocInfo();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  JSDocInfo  info  =  node.getJSDocInfo();  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	JSDocInfo  info  =  node.getJSDocInfo();	  JSDocInfo    info    =    info.getJSDocInfo();    	non-compiled	[CE]  ')'  expected	40	None	replace
51	[BUG]  [BUGGY]  JSDocInfo  info  =  moduleGraph.getJSDocInfo();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  JSDocInfo  info  =  moduleGraph.getJSDocInfo();  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	JSDocInfo  info  =  moduleGraph.getJSDocInfo();	  JSDocInfo    info    =    info.getJSDocInfo();    	non-compiled	[CE]  ')'  expected	40	None	replace
52	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceName,  info,  typeDecl);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceName,  info,  typeDecl);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  sourceName,  info,  typeDecl);	  NodeTraversal.traverse(compiler,    n,    sourceName,    info);    	non-compiled	[CE]  ')'  expected	32	None	replace
53	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceName,  info,  moduleGraph);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceName,  info,  moduleGraph);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  sourceName,  info,  moduleGraph);	  NodeTraversal.traverse(compiler,    n,    sourceName,    info);    	non-compiled	[CE]  ')'  expected	32	None	replace
54	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  INVALID_DEFINE_ERROR,  info);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  INVALID_DEFINE_ERROR,  info);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  INVALID_DEFINE_ERROR,  info);	  NodeTraversal.traverse(compiler,    n,    sourceName,    info);    	non-compiled	[CE]  ')'  expected	32	None	replace
55	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceName,  info,  this);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceName,  info,  this);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  sourceName,  info,  this);	  NodeTraversal.traverse(compiler,    n,    sourceName,    info);    	non-compiled	[CE]  ')'  expected	32	None	replace
56	[BUG]  [BUGGY]  NodeInfo  info  =  n.getLastChild().getJSDocInfo(t);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeInfo  info  =  n.getLastChild().getJSDocInfo(t);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeInfo  info  =  n.getLastChild().getJSDocInfo(t);	  NodeInfo    info    =    n.getFirstChild().getJSDocInfo(t);    	non-compiled	[CE]  ')'  expected	51	None	replace
57	[BUG]  [BUGGY]  NodeInfo  info  =  n.getFirstChild().getJSDocInfo(t,  n.getModule());  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeInfo  info  =  n.getFirstChild().getJSDocInfo(t,  n.getModule());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeInfo  info  =  n.getFirstChild().getJSDocInfo(t,  n.getModule());	  NodeInfo    info    =    n.getFirstChild().getJSDocInfo(t);    	non-compiled	[CE]  ')'  expected	51	None	replace
58	[BUG]  [BUGGY]  JSDocInfo  info  =  n.getLastChild().getJSDocInfo(t);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  JSDocInfo  info  =  n.getLastChild().getJSDocInfo(t);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	JSDocInfo  info  =  n.getLastChild().getJSDocInfo(t);	  JSDocInfo    info    =    n.getFirstChild().getJSDocInfo(t);    	non-compiled	[CE]  ')'  expected	48	None	replace
59	[BUG]  [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  ||  info!=  null  &&  info.hasTypeDefType())  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  ||  info!=  null  &&  info.hasTypeDefType())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.inGlobalScope()  ||  info!=  null  &&  info.hasTypeDefType())  {	  if    (info!=    null    &&    info.inGlobalScope()    &&    info!=    null    &&    info.hasTypeDefType())    {    	non-compiled	[CE]  ')'  expected	35	None	replace
60	[BUG]  [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  &&  info!=  null  &&  info.hasTypeDecl())  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  &&  info!=  null  &&  info.hasTypeDecl())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.inGlobalScope()  &&  info!=  null  &&  info.hasTypeDecl())  {	  if    (info!=    null    &&    info.inGlobalScope()    &&    info!=    null    &&    info.hasTypeDefType())    {    	non-compiled	[CE]  ')'  expected	35	None	replace
61	[BUG]  [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  &&  info.hasTypeDefinition())  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  &&  info.hasTypeDefinition())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.inGlobalScope()  &&  info.hasTypeDefinition())  {	  if    (info!=    null    &&    info.inGlobalScope()    &&    info.hasTypeDefType())    {    	non-compiled	[CE]  ')'  expected	5	None	replace
62	[BUG]  [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  ||  info.hasTypeDefType())  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  ||  info.hasTypeDefType())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.inGlobalScope()  ||  info.hasTypeDefType())  {	  if    (info!=    null    &&    info.inGlobalScope()    &&    info.hasTypeDefType())    {    	non-compiled	[CE]  ')'  expected	5	None	replace
63	[BUG]  [BUGGY]  Node  providedNames  =  info.getLastChild();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  info.getLastChild();  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  info.getLastChild();	  Node    providedNames    =    n.getLastChild();    	non-compiled	[CE]  ')'  expected	19	None	replace
64	[BUG]  [BUGGY]  Node  providedNames  =  info.node.getLastChild();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  info.node.getLastChild();  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  info.node.getLastChild();	  Node    providedNames    =    n.getLastChild();    	non-compiled	[CE]  ')'  expected	19	None	replace
65	[BUG]  [BUGGY]  Node  providedNames  =  info.node.getFirstChild();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  info.node.getFirstChild();  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  info.node.getFirstChild();	  Node    providedNames    =    n.getLastChild();    	non-compiled	[CE]  ')'  expected	19	None	replace
66	[BUG]  [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  ||  info.hasTypeDecl())  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  ||  info.hasTypeDecl())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.inGlobalScope()  ||  info.hasTypeDecl())  {	  if    (info!=    null    &&    info.inGlobalScope()    &&    info.hasTypeDecl())    {    	non-compiled	[CE]  ')'  expected	6	None	replace
67	[BUG]  [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  &&  info.hasTypeDecl()  ||  info.hasTypeDecl())  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  &&  info.hasTypeDecl()  ||  info.hasTypeDecl())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.inGlobalScope()  &&  info.hasTypeDecl()  ||  info.hasTypeDecl())  {	  if    (info!=    null    &&    info.inGlobalScope()    &&    info.hasTypeDecl())    {    	non-compiled	[CE]  ')'  expected	6	None	replace
68	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  info,  moduleGraph);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  info,  moduleGraph);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  info,  moduleGraph);	  NodeTraversal.traverse(compiler,    n,    this,    information);    	non-compiled	[CE]  ')'  expected	58	None	replace
69	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  info,  typeDecl);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  info,  typeDecl);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  info,  typeDecl);	  NodeTraversal.traverse(compiler,    n,    this,    information);    	non-compiled	[CE]  ')'  expected	58	None	replace
70	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  info,  null);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  info,  null);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  info,  null);	  NodeTraversal.traverse(compiler,    n,    this,    information);    	non-compiled	[CE]  ')'  expected	58	None	replace
71	[BUG]  [BUGGY]  Node  providedNames  =  info.getQualifiedName();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  info.getQualifiedName();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  info.getQualifiedName();	  Node    providedNames    =    info.getFirstChild();    	non-compiled	[CE]  ')'  expected	23	None	replace
72	[BUG]  [BUGGY]  Node  providedNames  =  info!=  null?  info.getFirstChild()  :  n;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  info!=  null?  info.getFirstChild()  :  n;  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  info!=  null?  info.getFirstChild()  :  n;	  Node    providedNames    =    info.getFirstChild();    	non-compiled	[CE]  ')'  expected	23	None	replace
73	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getFirstChild().getString().endsWith( "java. "))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getFirstChild().getString().endsWith( "java. "))  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  n.getFirstChild().getString().endsWith( "java. "))  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getLastChild().getString().endsWith(   "java.   "))    {    	non-compiled	[CE]  ')'  expected	53	None	replace
74	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().startsWith( "java. "))  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().startsWith( "java. "))  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().startsWith( "java. "))  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getLastChild().getString().endsWith(   "java.   "))    {    	non-compiled	[CE]  ')'  expected	53	None	replace
75	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( ".java "))  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( ".java "))  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( ".java "))  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getLastChild().getString().endsWith(   "java.   "))    {    	non-compiled	[CE]  ')'  expected	53	None	replace
76	[BUG]  [BUGGY]  if(info  ==  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "java. "))  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info  ==  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "java. "))  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info  ==  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "java. "))  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getLastChild().getString().endsWith(   "java.   "))    {    	non-compiled	[CE]  ')'  expected	53	None	replace
77	[BUG]  [BUGGY]  JSDocInfo  info  =  t.getFirstChild().getJSDocInfo();  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  JSDocInfo  info  =  t.getFirstChild().getJSDocInfo();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	JSDocInfo  info  =  t.getFirstChild().getJSDocInfo();	  JSDocInfo    info    =    t.getLastChild().getJSDocInfo();    	non-compiled	[CE]  ')'  expected	30	None	replace
78	[BUG]  [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  &&!n.hasChildren())  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  &&!n.hasChildren())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.inGlobalScope()  &&!n.hasChildren())  {	  if    (info    ==    null    &&    info.inGlobalScope())    {    	non-compiled	[CE]  ')'  expected	27	None	replace
79	[BUG]  [BUGGY]  if(info!=  null  &&  info.hasTypeDef())  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.hasTypeDef())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.hasTypeDef())  {	  if(info!=    null    &&    info.hasTypedef())    {    	non-compiled	[CE]  ')'  expected	56	None	replace
80	[BUG]  [BUGGY]  if(info  ==  null  &&  info.hasTypedef())  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info  ==  null  &&  info.hasTypedef())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info  ==  null  &&  info.hasTypedef())  {	  if(info!=    null    &&    info.hasTypedef())    {    	non-compiled	[CE]  ')'  expected	56	None	replace
81	[BUG]  [BUGGY]  if(info!=  null  ||  info.hasTypedef())  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  ||  info.hasTypedef())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  ||  info.hasTypedef())  {	  if(info!=    null    &&    info.hasTypedef())    {    	non-compiled	[CE]  ')'  expected	56	None	replace
82	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null  ||  info.hasTypedefType());  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info!=  null  ||  info.hasTypedefType());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null  ||  info.hasTypedefType());	  Preconditions.checkState(info!=    null    &&    info.hasTypedefType());    	non-compiled	[CE]  ')'  expected	2	None	replace
83	[BUG]  [BUGGY]  Preconditions.checkState(info  ==  null  &&  info.hasTypedefType());  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info  ==  null  &&  info.hasTypedefType());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info  ==  null  &&  info.hasTypedefType());	  Preconditions.checkState(info!=    null    &&    info.hasTypedefType());    	non-compiled	[CE]  ')'  expected	2	None	replace
84	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null  &&  info.hasTypeDefType());  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info!=  null  &&  info.hasTypeDefType());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null  &&  info.hasTypeDefType());	  Preconditions.checkState(info!=    null    &&    info.hasTypedefType());    	non-compiled	[CE]  ')'  expected	2	None	replace
85	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  getTypeDecl(),  info);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  getTypeDecl(),  info);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  getTypeDecl(),  info);	  NodeTraversal.traverse(compiler,    n,    getTypeDecl());    	non-compiled	[CE]  ')'  expected	41	None	replace
86	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  getModule());  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  getModule());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  getModule());	  NodeTraversal.traverse(compiler,    n,    getTypeDecl());    	non-compiled	[CE]  ')'  expected	41	None	replace
87	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  getTypeDecl(),  moduleGraph);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  getTypeDecl(),  moduleGraph);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  getTypeDecl(),  moduleGraph);	  NodeTraversal.traverse(compiler,    n,    getTypeDecl());    	non-compiled	[CE]  ')'  expected	41	None	replace
88	[BUG]  [BUGGY]  JSDocInfo  info  =  t.getModule();  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  JSDocInfo  info  =  t.getModule();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	JSDocInfo  info  =  t.getModule();	  JSDocInfo    info    =    t.getJSDocInfo();    	non-compiled	[CE]  ')'  expected	26	None	replace
89	[BUG]  [BUGGY]  if(info!=  null  ||  info.hasTypedefType())  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  ||  info.hasTypedefType())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  ||  info.hasTypedefType())  {	  if    (info    ==    null    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	14	None	replace
90	[BUG]  [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  &&  info.hasChildren())  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  &&  info.inGlobalScope()  &&  info.hasChildren())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  info.inGlobalScope()  &&  info.hasChildren())  {	  if    (info!=    null    &&    info.inGlobalScope()    ||    info.hasChildren())    {    	non-compiled	[CE]  ')'  expected	29	None	replace
91	[BUG]  [BUGGY]  if  (info!=  null  ||  info.inGlobalScope()  ||  info.hasChildren())  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  ||  info.inGlobalScope()  ||  info.hasChildren())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  ||  info.inGlobalScope()  ||  info.hasChildren())  {	  if    (info!=    null    &&    info.inGlobalScope()    ||    info.hasChildren())    {    	non-compiled	[CE]  ')'  expected	29	None	replace
92	[BUG]  [BUGGY]  if  (info!=  null  ||  info.inGlobalScope()  ||  info.hasTypedefType())  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  ||  info.inGlobalScope()  ||  info.hasTypedefType())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  ||  info.inGlobalScope()  ||  info.hasTypedefType())  {	  if    (info!=    null    &&    info.inGlobalScope()    ||    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	46	None	replace
93	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  info,  this,  moduleGraph);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  info,  this,  moduleGraph);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  info,  this,  moduleGraph);	  NodeTraversal.traverse(compiler,    n,    info,    this);    	non-compiled	[CE]  ')'  expected	33	None	replace
94	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  typeDecl,  this);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  typeDecl,  this);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  typeDecl,  this);	  NodeTraversal.traverse(compiler,    n,    info,    this);    	non-compiled	[CE]  ')'  expected	33	None	replace
95	[BUG]  [BUGGY]  if(info!=  null  ||  info.inGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  ||  info.inGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  ||  info.inGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	55	None	replace
96	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  ||  n.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  ||  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  ||  n.getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	55	None	replace
97	[BUG]  [BUGGY]  if(info  ==  null  &&  info.inGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info  ==  null  &&  info.inGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info  ==  null  &&  info.inGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	55	None	replace
98	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getJSDocInfo().getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getJSDocInfo().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  n.getJSDocInfo().getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	55	None	replace
99	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  info,  sourceName);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  info,  sourceName);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  info,  sourceName);	  NodeTraversal.traverse(compiler,    n,    this,    info);    	non-compiled	[CE]  ')'  expected	15	None	replace
100	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceFile,  moduleGraph);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceFile,  moduleGraph);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  sourceFile,  moduleGraph);	  NodeTraversal.traverse(compiler,    n,    moduleGraph);    	non-compiled	[CE]  ')'  expected	18	None	replace
101	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  moduleGraph,  this);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  moduleGraph,  this);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  moduleGraph,  this);	  NodeTraversal.traverse(compiler,    n,    moduleGraph);    	non-compiled	[CE]  ')'  expected	18	None	replace
102	[BUG]  [BUGGY]  ProvidedName  pn  =  info!=  null?  providedNames.get(info):  info;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  ProvidedName  pn  =  info!=  null?  providedNames.get(info):  info;  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	ProvidedName  pn  =  info!=  null?  providedNames.get(info):  info;	  ProvidedName    pn    =    providedNames.get(info);    	non-compiled	[CE]  ')'  expected	39	None	replace
103	[BUG]  [BUGGY]  ProvidedName  pn  =  this.providedNames.get(info);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  ProvidedName  pn  =  this.providedNames.get(info);  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	ProvidedName  pn  =  this.providedNames.get(info);	  ProvidedName    pn    =    providedNames.get(info);    	non-compiled	[CE]  ')'  expected	39	None	replace
104	[BUG]  [BUGGY]  ProvidedName  pn  =  info  ==  null?  providedNames.get(info):  info;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  ProvidedName  pn  =  info  ==  null?  providedNames.get(info):  info;  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	ProvidedName  pn  =  info  ==  null?  providedNames.get(info):  info;	  ProvidedName    pn    =    providedNames.get(info);    	non-compiled	[CE]  ')'  expected	39	None	replace
105	[BUG]  [BUGGY]  ProvidedName  pn  =  info!=  null?  providedNames.get(0):  info;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  ProvidedName  pn  =  info!=  null?  providedNames.get(0):  info;  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	ProvidedName  pn  =  info!=  null?  providedNames.get(0):  info;	  ProvidedName    pn    =    providedNames.get(info);    	non-compiled	[CE]  ')'  expected	39	None	replace
106	[BUG]  [BUGGY]  Node  providedNames  =  info.getFirstChild().getNext();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  info.getFirstChild().getNext();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  info.getFirstChild().getNext();	  Node    providedNames    =    n.getFirstChild().getNext();    	non-compiled	[CE]  ')'  expected	25	None	replace
107	[BUG]  [BUGGY]  Node  providedNames  =  n.getLastChild().getNext();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  n.getLastChild().getNext();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  n.getLastChild().getNext();	  Node    providedNames    =    n.getFirstChild().getNext();    	non-compiled	[CE]  ')'  expected	25	None	replace
108	[BUG]  [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  ||  n.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  ||  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.isGlobalScope()  ||  n.getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.isGlobalScope()    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	61	None	replace
109	[BUG]  [BUGGY]  if(info!=  null  ||  info.isGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  ||  info.isGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  ||  info.isGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.isGlobalScope()    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	61	None	replace
110	[BUG]  [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  ||  info.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  ||  info.getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.isGlobalScope()  ||  info.getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.isGlobalScope()    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	61	None	replace
111	[BUG]  [BUGGY]  if(info  ==  null  &&  info.isGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info  ==  null  &&  info.isGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info  ==  null  &&  info.isGlobalScope()  &&  n.getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.isGlobalScope()    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	61	None	replace
112	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  inputName,  moduleGraph);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  inputName,  moduleGraph);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  inputName,  moduleGraph);	  NodeTraversal.traverse(compiler,    n,    info,    moduleGraph);    	non-compiled	[CE]  ')'  expected	31	None	replace
113	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceName,  moduleGraph);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceName,  moduleGraph);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  sourceName,  moduleGraph);	  NodeTraversal.traverse(compiler,    n,    info,    moduleGraph);    	non-compiled	[CE]  ')'  expected	31	None	replace
114	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceFile,  info,  moduleGraph);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceFile,  info,  moduleGraph);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  sourceFile,  info,  moduleGraph);	  NodeTraversal.traverse(compiler,    n,    info,    moduleGraph);    	non-compiled	[CE]  ')'  expected	31	None	replace
115	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  info,  typeDecl);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  info,  typeDecl);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  info,  typeDecl);	  NodeTraversal.traverse(compiler,    n,    typeDecl,    info);    	non-compiled	[CE]  ')'  expected	37	None	replace
116	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceFile,  info);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceFile,  info);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  sourceFile,  info);	  NodeTraversal.traverse(compiler,    n,    typeDecl,    info);    	non-compiled	[CE]  ')'  expected	37	None	replace
117	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getFirstChild().getString().endsWith( "__ "))  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getFirstChild().getString().endsWith( "__ "))  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  n.getFirstChild().getString().endsWith( "__ "))  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getLastChild().getString().endsWith(   "__   "))    {    	non-compiled	[CE]  ')'  expected	54	None	replace
118	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().startsWith( "__ "))  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().startsWith( "__ "))  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().startsWith( "__ "))  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getLastChild().getString().endsWith(   "__   "))    {    	non-compiled	[CE]  ')'  expected	54	None	replace
119	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "_ "))  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "_ "))  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "_ "))  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getLastChild().getString().endsWith(   "__   "))    {    	non-compiled	[CE]  ')'  expected	54	None	replace
120	[BUG]  [BUGGY]  if(info  ==  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "__ "))  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info  ==  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "__ "))  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info  ==  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "__ "))  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getLastChild().getString().endsWith(   "__   "))    {    	non-compiled	[CE]  ')'  expected	54	None	replace
121	[BUG]  [BUGGY]  if  (info!=  null  &&  t.inGlobalScope()  &&  info!=  null  &&  info.hasTypeDecl())  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info!=  null  &&  t.inGlobalScope()  &&  info!=  null  &&  info.hasTypeDecl())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info!=  null  &&  t.inGlobalScope()  &&  info!=  null  &&  info.hasTypeDecl())  {	  if    (info!=    null    &&    t.inGlobalScope()    &&    info!=    null    &&    info.hasTypeDefType())    {    	non-compiled	[CE]  ')'  expected	36	None	replace
122	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info),  moduleGraph);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info),  moduleGraph);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info),  moduleGraph);	  NodeTraversal.traverse(compiler,    n,    new    ProvidedName(info));    	non-compiled	[CE]  ')'  expected	47	None	replace
123	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  ProvidedName(info));  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  ProvidedName(info));  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  new  ProvidedName(info));	  NodeTraversal.traverse(compiler,    n,    new    ProvidedName(info));    	non-compiled	[CE]  ')'  expected	47	None	replace
124	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info),  this);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info),  this);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info),  this);	  NodeTraversal.traverse(compiler,    n,    new    ProvidedName(info));    	non-compiled	[CE]  ')'  expected	47	None	replace
125	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info,  info.getModule()));  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info,  info.getModule()));  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info,  info.getModule()));	  NodeTraversal.traverse(compiler,    n,    new    ProvidedName(info));    	non-compiled	[CE]  ')'  expected	47	None	replace
126	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info),  t);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info),  t);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info),  t);	  NodeTraversal.traverse(compiler,    n,    new    ProvidedName(info));    	non-compiled	[CE]  ')'  expected	47	None	replace
127	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  info),  this);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  info),  this);  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  info),  this);	  NodeTraversal.traverse(compiler,    n,    new    ProcessClosurePrimitive(t,    info));    	non-compiled	[CE]  ')'  expected	50	None	replace
128	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessDeclarationPrimitive(t,  info));  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessDeclarationPrimitive(t,  info));  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProcessDeclarationPrimitive(t,  info));	  NodeTraversal.traverse(compiler,    n,    new    ProcessClosurePrimitive(t,    info));    	non-compiled	[CE]  ')'  expected	50	None	replace
129	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  ns));  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  ns));  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  ns));	  NodeTraversal.traverse(compiler,    n,    new    ProcessClosurePrimitive(t,    info));    	non-compiled	[CE]  ')'  expected	50	None	replace
130	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getFirstChild().getString().endsWith( ".__ "))  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getFirstChild().getString().endsWith( ".__ "))  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  n.getFirstChild().getString().endsWith( ".__ "))  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getLastChild().getString().endsWith(   "__   "))    {    	non-compiled	[CE]  ')'  expected	54	None	replace
131	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  info,  scope);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  info,  scope);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  info,  scope);	  NodeTraversal.traverse(compiler,    n,    this,    info);    	non-compiled	[CE]  ')'  expected	15	None	replace
132	[BUG]  [BUGGY]  if(info!=  null  &&  info.hasGlobalScope()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.hasGlobalScope()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.hasGlobalScope()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.isGlobalScope()    &&    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
133	[BUG]  [BUGGY]  if  (info  ==  null  &&  info.inGlobalScope()  ||  info.hasChildren())  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info  ==  null  &&  info.inGlobalScope()  ||  info.hasChildren())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info  ==  null  &&  info.inGlobalScope()  ||  info.hasChildren())  {	  if    (info!=    null    &&    info.inGlobalScope()    ||    info.hasChildren())    {    	non-compiled	[CE]  ')'  expected	29	None	replace
134	[BUG]  [BUGGY]  if(info!=  null  &&  info.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.hasTypedef())    {    	non-compiled	[CE]  ')'  expected	56	None	replace
135	[BUG]  [BUGGY]  if(info!=  null  &&  info.getType()  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.getType()  ==  Token.NAME)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.getType()  ==  Token.NAME)  {	  if(info!=    null    &&    info.hasTypedef())    {    	non-compiled	[CE]  ')'  expected	56	None	replace
136	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null,  info.hasTypeDefType());  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info!=  null,  info.hasTypeDefType());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null,  info.hasTypeDefType());	  Preconditions.checkState(info!=    null,    info.hasTypedefType());    	non-compiled	[CE]  ')'  expected	59	None	replace
137	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null,  info.getType());  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info!=  null,  info.getType());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null,  info.getType());	  Preconditions.checkState(info!=    null,    info.hasTypedefType());    	non-compiled	[CE]  ')'  expected	59	None	replace
138	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null  &&  info.isTypeDef());  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info!=  null  &&  info.isTypeDef());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null  &&  info.isTypeDef());	  Preconditions.checkState(info    ==    null);    	non-compiled	[CE]  ')'  expected	1	None	replace
139	[BUG]  [BUGGY]  if  (info  ==  null  &&  info.inGlobalScope()  &&  info.hasTypeDecl())  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info  ==  null  &&  info.inGlobalScope()  &&  info.hasTypeDecl())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info  ==  null  &&  info.inGlobalScope()  &&  info.hasTypeDecl())  {	  if    (info!=    null    &&    info.inGlobalScope()    &&    info.hasTypeDecl())    {    	non-compiled	[CE]  ')'  expected	6	None	replace
140	[BUG]  [BUGGY]  if  (info  ==  null  &&  info.inGlobalScope()  ||  info!=  null  &&  info.hasTypedefType())  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info  ==  null  &&  info.inGlobalScope()  ||  info!=  null  &&  info.hasTypedefType())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info  ==  null  &&  info.inGlobalScope()  ||  info!=  null  &&  info.hasTypedefType())  {	  if    (info!=    null    &&    info.inGlobalScope()    ||    info!=    null    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	34	None	replace
141	[BUG]  [BUGGY]  NodeInfo  info  =  n.getFirstChild().getJSDocInfo(n);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeInfo  info  =  n.getFirstChild().getJSDocInfo(n);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeInfo  info  =  n.getFirstChild().getJSDocInfo(n);	  NodeInfo    info    =    n.getFirstChild().getJSDocInfo(t);    	non-compiled	[CE]  ')'  expected	51	None	replace
142	[BUG]  [BUGGY]  if  (info  ==  null  &&  info.hasTypeDefType())  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info  ==  null  &&  info.hasTypeDefType())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info  ==  null  &&  info.hasTypeDefType())  {	  if    (info!=    null    &&    info.hasTypeDefType())    {    	non-compiled	[CE]  ')'  expected	13	None	replace
143	[BUG]  [BUGGY]  Preconditions.checkArgument(info!=  null  &&  info.getType()  ==  Token.FUNCTION);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkArgument(info!=  null  &&  info.getType()  ==  Token.FUNCTION);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkArgument(info!=  null  &&  info.getType()  ==  Token.FUNCTION);	  Preconditions.checkArgument(info!=    null);    	non-compiled	[CE]  ')'  expected	3	None	replace
144	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null  &&  info.hasTypedef());  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info!=  null  &&  info.hasTypedef());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null  &&  info.hasTypedef());	  Preconditions.checkState(info!=    null    &&    info.hasTypedefType());    	non-compiled	[CE]  ')'  expected	2	None	replace
145	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getFirstChild().getString().endsWith( ".java "))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getFirstChild().getString().endsWith( ".java "))  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  n.getFirstChild().getString().endsWith( ".java "))  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getLastChild().getString().endsWith(   "java.   "))    {    	non-compiled	[CE]  ')'  expected	53	None	replace
146	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  sourceName,  moduleGraph);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  sourceName,  moduleGraph);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  sourceName,  moduleGraph);	  NodeTraversal.traverse(compiler,    n,    this,    moduleGraph);    	non-compiled	[CE]  ')'  expected	17	None	replace
147	[BUG]  [BUGGY]  NodeInfo  info  =  n.getNodeInfo();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeInfo  info  =  n.getNodeInfo();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeInfo  info  =  n.getNodeInfo();	  NodeInfo    info    =    n.getJSDocInfo();    	non-compiled	[CE]  ')'  expected	10	None	replace
148	[BUG]  [BUGGY]  if(info!=  null  &&  info.isTypeDefDefinition())  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.isTypeDefDefinition())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.isTypeDefDefinition())  {	  if(info!=    null    &&    info.hasTypedefDefinition())    {    	non-compiled	[CE]  ')'  expected	57	None	replace
149	[BUG]  [BUGGY]  Node  providedNames  =  n.getFirstChild().getJSDocInfo(info);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  n.getFirstChild().getJSDocInfo(info);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  n.getFirstChild().getJSDocInfo(info);	  Node    providedNames    =    n.getFirstChild().getJSDocInfo();    	non-compiled	[CE]  ')'  expected	24	None	replace
150	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  inputName,  null);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  inputName,  null);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  inputName,  null);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  ')'  expected	16	None	replace
151	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  info;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  info;  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  info;	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  ')'  expected	16	None	replace
152	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info),  scope);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info),  scope);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info),  scope);	  NodeTraversal.traverse(compiler,    n,    new    ProvidedName(info));    	non-compiled	[CE]  ')'  expected	47	None	replace
153	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.sourceName,  info);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.sourceName,  info);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this.sourceName,  info);	  NodeTraversal.traverse(compiler,    n,    sourceName,    info);    	non-compiled	[CE]  ')'  expected	32	None	replace
154	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  inputName,  info);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  inputName,  info);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  inputName,  info);	  NodeTraversal.traverse(compiler,    n,    sourceName,    info);    	non-compiled	[CE]  ')'  expected	32	None	replace
155	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  info,  sourceName);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  info,  sourceName);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  info,  sourceName);	  NodeTraversal.traverse(compiler,    n,    sourceName,    info);    	non-compiled	[CE]  ')'  expected	32	None	replace
156	[BUG]  [BUGGY]  Node  providedNames  =  info!=  null?  info.getLastChild()  :  info.getLastChild();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  info!=  null?  info.getLastChild()  :  info.getLastChild();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  info!=  null?  info.getLastChild()  :  info.getLastChild();	  Node    providedNames    =    info.getFirstChild();    	non-compiled	[CE]  ')'  expected	23	None	replace
157	[BUG]  [BUGGY]  Node  providedNames  =  info  ==  null?  info.getLastChild()  :  info.getLastChild();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  info  ==  null?  info.getLastChild()  :  info.getLastChild();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  info  ==  null?  info.getLastChild()  :  info.getLastChild();	  Node    providedNames    =    info.getFirstChild();    	non-compiled	[CE]  ')'  expected	23	None	replace
158	[BUG]  [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  &&  info.getModule()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  &&  info.getModule()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.isGlobalScope()  &&  info.getModule()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.isGlobalScope()    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	61	None	replace
159	[BUG]  [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  &&  info.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  &&  info.getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.isGlobalScope()  &&  info.getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.isGlobalScope()    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	61	None	replace
160	[BUG]  [BUGGY]  JSDocInfo  info  =(info!=  null)?  info.getJSDocInfo()  :  null;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  JSDocInfo  info  =(info!=  null)?  info.getJSDocInfo()  :  null;  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	JSDocInfo  info  =(info!=  null)?  info.getJSDocInfo()  :  null;	  JSDocInfo    info    =    info.getJSDocInfo();    	non-compiled	[CE]  ')'  expected	40	None	replace
161	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null  &&  info.getModule()!=  null);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info!=  null  &&  info.getModule()!=  null);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null  &&  info.getModule()!=  null);	  Preconditions.checkState(info!=    null,    t.getModule());    	non-compiled	[CE]  ')'  expected	4	None	replace
162	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  NON_GLOBAL_DEFINE_ERROR,  info);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  NON_GLOBAL_DEFINE_ERROR,  info);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  NON_GLOBAL_DEFINE_ERROR,  info);	  NodeTraversal.traverse(compiler,    n,    typeDecl,    info);    	non-compiled	[CE]  ')'  expected	37	None	replace
163	[BUG]  [BUGGY]  NodeInfo  info  =  n.getChildCount().getJSDocInfo();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeInfo  info  =  n.getChildCount().getJSDocInfo();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeInfo  info  =  n.getChildCount().getJSDocInfo();	  NodeInfo    info    =    n.getNext().getJSDocInfo();    	non-compiled	[CE]  ')'  expected	21	None	replace
164	[BUG]  [BUGGY]  if  (info  ==  null  ||  info.isGlobalScope())  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info  ==  null  ||  info.isGlobalScope())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info  ==  null  ||  info.isGlobalScope())  {	  if    (info!=    null    ||    info.isGlobalScope())    {    	non-compiled	[CE]  ')'  expected	8	None	replace
165	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  inputName,  getTypeDecl());  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  inputName,  getTypeDecl());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  inputName,  getTypeDecl());	  NodeTraversal.traverse(compiler,    n,    getTypeDecl());    	non-compiled	[CE]  ')'  expected	41	None	replace
166	[BUG]  [BUGGY]  if  (info  ==  null  ||  info.inGlobalScope())  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if  (info  ==  null  ||  info.inGlobalScope())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if  (info  ==  null  ||  info.inGlobalScope())  {	  if    (info!=    null    ||    info.inGlobalScope())    {    	non-compiled	[CE]  ')'  expected	28	None	replace
167	[BUG]  [BUGGY]  Node  providedNames  =  info!=  null?  info.getFirstChild()  :  n.getLastChild();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  info!=  null?  info.getFirstChild()  :  n.getLastChild();  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  info!=  null?  info.getFirstChild()  :  n.getLastChild();	  Node    providedNames    =    n.getLastChild();    	non-compiled	[CE]  ')'  expected	19	None	replace
168	[BUG]  [BUGGY]  ProvidedName  pn  =  suppliedNames.get(info);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  ProvidedName  pn  =  suppliedNames.get(info);  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	ProvidedName  pn  =  suppliedNames.get(info);	  ProvidedName    pn    =    providedNames.get(info);    	non-compiled	[CE]  ')'  expected	39	None	replace
169	[BUG]  [BUGGY]  ProvidedName  pn  =  providedNames.get(info,  n);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  ProvidedName  pn  =  providedNames.get(info,  n);  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	ProvidedName  pn  =  providedNames.get(info,  n);	  ProvidedName    pn    =    providedNames.get(info);    	non-compiled	[CE]  ')'  expected	39	None	replace
170	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceName,  this);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceName,  this);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  sourceName,  this);	  NodeTraversal.traverse(compiler,    n,    info,    this);    	non-compiled	[CE]  ')'  expected	33	None	replace
171	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  inputName,  this);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  inputName,  this);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  inputName,  this);	  NodeTraversal.traverse(compiler,    n,    info,    this);    	non-compiled	[CE]  ')'  expected	33	None	replace
172	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  info.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  info.getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  info.getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	55	None	replace
173	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  info.getModule()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  info.getModule()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  info.getModule()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	55	None	replace
174	[BUG]  [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  &&  info.hasTypeDecl())  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  &&  info.hasTypeDecl())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.isGlobalScope()  &&  info.hasTypeDecl())  {	  if    (info!=    null    &&    info.inGlobalScope()    &&    info.hasTypeDecl())    {    	non-compiled	[CE]  ')'  expected	6	None	replace
175	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  info.hasDeclaration())  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  info.hasDeclaration())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  info.hasDeclaration())  {	  if    (info!=    null    &&    info.inGlobalScope()    &&    info.hasTypeDecl())    {    	non-compiled	[CE]  ')'  expected	6	None	replace
176	[BUG]  [BUGGY]  if(info!=  null  &&  info.hasTypedefDefinition()  ||  info.hasModule())  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.hasTypedefDefinition()  ||  info.hasModule())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.hasTypedefDefinition()  ||  info.hasModule())  {	  if(info!=    null    &&    info.hasTypedefDefinition())    {    	non-compiled	[CE]  ')'  expected	57	None	replace
177	[BUG]  [BUGGY]  Preconditions.checkNotNull(info);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkNotNull(info);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkNotNull(info);	  Preconditions.checkState(info    ==    null);    	non-compiled	[CE]  ')'  expected	1	None	replace
178	[BUG]  [BUGGY]  Node  providedNames  =  n.getFirstChild().getLastChild().getString();  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  n.getFirstChild().getLastChild().getString();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  n.getFirstChild().getLastChild().getString();	  Node    providedNames    =    n.getFirstChild().getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
179	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "java/ "))  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "java/ "))  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "java/ "))  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getLastChild().getString().endsWith(   "java.   "))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
180	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
181	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  ||  info.getType()  ==  Token.FUNCTION)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  ||  info.getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  ||  info.getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
182	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getType()  ==  Token.VAR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getType()  ==  Token.VAR)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  n.getType()  ==  Token.VAR)  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
183	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  info),  ns);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  info),  ns);  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitive(t,  info),  ns);	  NodeTraversal.traverse(compiler,    n,    new    ProcessClosurePrimitive(t,    info));    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
184	[BUG]  [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  ||  info.hasChildren())  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.isGlobalScope()  ||  info.hasChildren())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.isGlobalScope()  ||  info.hasChildren())  {	  if    (info!=    null    &&    info.inGlobalScope()    ||    info.hasChildren())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
185	[BUG]  [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "._ "))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "._ "))  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.inGlobalScope()  &&  n.getLastChild().getString().endsWith( "._ "))  {	  if(info!=    null    &&    info.inGlobalScope()    &&    n.getLastChild().getString().endsWith(   "__   "))    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
186	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  info,  requiredLevel);  [CE]  class,  interface,  or  enum  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  info,  requiredLevel);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  info,  requiredLevel);	  NodeTraversal.traverse(compiler,    n,    this,    info);    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
187	[BUG]  [BUGGY]  NodeInfo  info  =  n.getFirstChild().getJSDocInfo(t,  n.getLastChild());  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeInfo  info  =  n.getFirstChild().getJSDocInfo(t,  n.getLastChild());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeInfo  info  =  n.getFirstChild().getJSDocInfo(t,  n.getLastChild());	  NodeInfo    info    =    n.getFirstChild().getJSDocInfo(t);    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
188	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  info  ==  null?  t.getModule()  :  null);  [CE]  class,  interface,  or  enum  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  info  ==  null?  t.getModule()  :  null);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  info  ==  null?  t.getModule()  :  null);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
189	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  info!=  null?  t.getModule()  :  null);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  info!=  null?  t.getModule()  :  null);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  info!=  null?  t.getModule()  :  null);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
190	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  info!=  null);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  info!=  null);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  info!=  null);	  NodeTraversal.traverse(compiler,    n,    null);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
191	[BUG]  [BUGGY]  if(info  ==  null  ||  info.hasTypedefType())  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info  ==  null  ||  info.hasTypedefType())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info  ==  null  ||  info.hasTypedefType())  {	  if    (info    ==    null    &&    info.hasTypedefType())    {    	non-compiled	[CE]  ')'  expected	14	None	replace
192	[BUG]  [BUGGY]  JSDocInfo  info  =  ns.getJSDocInfo();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  JSDocInfo  info  =  ns.getJSDocInfo();  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	JSDocInfo  info  =  ns.getJSDocInfo();	  JSDocInfo    info    =    info.getJSDocInfo();    	non-compiled	[CE]  ')'  expected	40	None	replace
193	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  info,  INVALID_DEFINE_ERROR);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  info,  INVALID_DEFINE_ERROR);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  info,  INVALID_DEFINE_ERROR);	  NodeTraversal.traverse(compiler,    n,    this,    information);    	non-compiled	[CE]  ')'  expected	58	None	replace
194	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  getTypeDecl(),  this);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  getTypeDecl(),  this);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  getTypeDecl(),  this);	  NodeTraversal.traverse(compiler,    n,    getTypeDecl());    	non-compiled	[CE]  ')'  expected	41	None	replace
195	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  moduleGraph,  requiredLevel);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  moduleGraph,  requiredLevel);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  moduleGraph,  requiredLevel);	  NodeTraversal.traverse(compiler,    n,    this,    moduleGraph);    	non-compiled	[CE]  ')'  expected	17	None	replace
196	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  t,  moduleGraph);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  t,  moduleGraph);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  t,  moduleGraph);	  NodeTraversal.traverse(compiler,    n,    this,    moduleGraph);    	non-compiled	[CE]  ')'  expected	17	None	replace
197	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  ns);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  ns);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  this,  ns);	  NodeTraversal.traverse(compiler,    n,    this,    moduleGraph);    	non-compiled	[CE]  ')'  expected	17	None	replace
198	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  INVALID_DEFINE_ERROR,  this);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  INVALID_DEFINE_ERROR,  this);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  INVALID_DEFINE_ERROR,  this);	  NodeTraversal.traverse(compiler,    n,    info,    this);    	non-compiled	[CE]  ')'  expected	33	None	replace
199	[BUG]  [BUGGY]  Node  providedNames  =  info  ==  null?  n.getFirstChild()  :  n.getLastChild();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  info  ==  null?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  info  ==  null?  n.getFirstChild()  :  n.getLastChild();	  Node    providedNames    =    n.getLastChild();    	non-compiled	[CE]  ')'  expected	19	None	replace
200	[BUG]  [BUGGY]  Node  providedNames  =  info!=  null?  n.getFirstChild()  :  n.getLastChild();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  info!=  null?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  info!=  null?  n.getFirstChild()  :  n.getLastChild();	  Node    providedNames    =    n.getLastChild();    	non-compiled	[CE]  ')'  expected	19	None	replace
201	[BUG]  [BUGGY]  JSDocInfo  info  =  t.getNodeInfo();  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  JSDocInfo  info  =  t.getNodeInfo();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	JSDocInfo  info  =  t.getNodeInfo();	  JSDocInfo    info    =    t.getJSDocInfo();    	non-compiled	[CE]  ')'  expected	26	None	replace
202	[BUG]  [BUGGY]  if(info!=  null  &&  info.isConstructor())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.isConstructor())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.isConstructor())  {	  if    (info    ==    null    &&    info.inGlobalScope())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
203	[BUG]  [BUGGY]  if(info!=  null  &&  info.hasType())  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.hasType())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.hasType())  {	  if(info!=    null    &&    info.hasTypedef())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
204	[BUG]  [BUGGY]  Node  providedNames  =  info  ==  null?  info.getFirstChild()  :  n;  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Node  providedNames  =  info  ==  null?  info.getFirstChild()  :  n;  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Node  providedNames  =  info  ==  null?  info.getFirstChild()  :  n;	  Node    providedNames    =    info.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
205	[BUG]  [BUGGY]  ProvidedName  pn  =  providedNames.get(info.name);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  ProvidedName  pn  =  providedNames.get(info.name);  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	ProvidedName  pn  =  providedNames.get(info.name);	  ProvidedName    pn    =    providedNames.get(info);    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
206	[BUG]  [BUGGY]  if(info!=  null  &&  info.isQualifiedName())  {  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.isQualifiedName())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.isQualifiedName())  {	  if    (info!=    null    &&    info.isModule())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
207	[BUG]  [BUGGY]  if(info!=  null  &&  info.isModule()  &&  moduleGraph.dependsOn(n,  t.getModule()))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.isModule()  &&  moduleGraph.dependsOn(n,  t.getModule()))  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.isModule()  &&  moduleGraph.dependsOn(n,  t.getModule()))  {	  if    (info!=    null    &&    info.isModule())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
208	[BUG]  [BUGGY]  if(info!=  null  &&  info.isModule()  &&!moduleGraph.dependsOn(n,  info.getModule()))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.isModule()  &&!moduleGraph.dependsOn(n,  info.getModule()))  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.isModule()  &&!moduleGraph.dependsOn(n,  info.getModule()))  {	  if    (info!=    null    &&    info.isModule())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
209	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null  &&  info.getModule()  ==  t.getModule());  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info!=  null  &&  info.getModule()  ==  t.getModule());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null  &&  info.getModule()  ==  t.getModule());	  Preconditions.checkState(info!=    null,    t.getModule());    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
210	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info,  info));  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info,  info));  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProvidedName(info,  info));	  NodeTraversal.traverse(compiler,    n,    new    ProvidedName(info));    	non-compiled	[CE]  ')'  expected	47	None	replace
211	[BUG]  [BUGGY]  if(info!=  null  &&  info.hasTypeDeclaration())  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.hasTypeDeclaration())  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.hasTypeDeclaration())  {	  if    (info!=    null    &&    info.hasTypeDefType())    {    	non-compiled	[CE]  ')'  expected	13	None	replace
212	[BUG]  [BUGGY]  Preconditions.checkState(info!=  null,  info.isConstructor());  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkState(info!=  null,  info.isConstructor());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkState(info!=  null,  info.isConstructor());	  Preconditions.checkState(info!=    null,    info.hasTypedefType());    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
213	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceName,  info  }  );  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  sourceName,  info  }  );  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  sourceName,  info  }  );	  NodeTraversal.traverse(compiler,    n,    sourceName,    info);    	non-compiled	[CE]  ')'  expected	32	None	replace
214	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  modules,  info);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeTraversal.traverse(compiler,  n,  modules,  info);  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeTraversal.traverse(compiler,  n,  modules,  info);	  NodeTraversal.traverse(compiler,    n,    info,    moduleGraph);    	non-compiled	[CE]  ')'  expected	31	None	replace
215	[BUG]  [BUGGY]  if(info!=  null  &&  info.isLocal()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  if(info!=  null  &&  info.isLocal()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	if(info!=  null  &&  info.isLocal()  &&  n.getFirstChild().getType()  ==  Token.FUNCTION)  {	  if(info!=    null    &&    info.isGlobalScope()    &&    n.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
216	[BUG]  [BUGGY]  Preconditions.checkArgument(info!=  null  ||  info.hasTypedefType());  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  Preconditions.checkArgument(info!=  null  ||  info.hasTypedefType());  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	Preconditions.checkArgument(info!=  null  ||  info.hasTypedefType());	  Preconditions.checkArgument(info!=    null);    	non-compiled	[CE]  ')'  expected	3	None	replace
217	[BUG]  [BUGGY]  NodeInfo  info  =  n.removeFirstChild();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  handleTypedefDefinition(  NodeTraversal  t,  Node  n)  {  JSDocInfo  info  =  n.getFirstChild().getJSDocInfo();      [BUGGY]  NodeInfo  info  =  n.removeFirstChild();  [BUGGY]      if  (t.inGlobalScope()  &&  info  !=  null  &&  info.hasTypedefType())  {  String  name  =  n.getFirstChild().getQualifiedName();  if  (name  !=  null)  {  ProvidedName  pn  =  providedNames.get(name);  if  (pn  !=  null)  {  pn.addDefinition(n,  t.getModule());  }  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  handleTypedefDefinition  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  pn  Node  arg  args  candidateDefinition  explicitNode  externs  firstNode  left  n  name  nameNode  node  originalRoot  parent  replacement  replacementNode  requireNode  root  scriptRoot  value  PreprocessorSymbolTable  preprocessorSymbolTable  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSDocInfo  info  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  EXPECTED_OBJECTLIT_ERROR  EXPECTED_STRING_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_CSS_RENAMING_MAP  INVALID_DEFINE_NAME_ERROR  INVALID_PROVIDE_ERROR  INVALID_STYLE_ERROR  LATE_PROVIDE_ERROR  MISSING_DEFINE_ANNOTATION  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  defineCalls  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	389	389	1	replace	NodeInfo  info  =  n.removeFirstChild();	  NodeInfo    info    =    n.getLastChild();    	non-compiled	[CE]  ')'  expected	11	None	replace
