bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.getNext();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.getNext();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =(Node)n.getNext();	      Node    preprocessorSymbolTable    =(Node)n.clone();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.getParent();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.getParent();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =(Node)n.getParent();	      Node    preprocessorSymbolTable    =(Node)n.clone();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.cloneTree();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.cloneTree();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =(Node)n.cloneTree();	      Node    preprocessorSymbolTable    =(Node)n.clone();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
4	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getNext();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getNext();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getNext();	      PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getParent();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
5	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getFirstChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getFirstChild();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getFirstChild();	      PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getParent();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
6	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getLastChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getLastChild();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getLastChild();	      PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getParent();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
7	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  n.getType()  ==  Token.STRING)  {	  if(preprocessorSymbolTable!=    null    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
8	[BUG]  [BUGGY]  if(n!=  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n!=  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||  n.getType()  ==  Token.STRING)  {	  if(preprocessorSymbolTable!=    null    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
9	[BUG]  [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable.getType()  ==  Token.STRING)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  preprocessorSymbolTable.getType()  ==  Token.STRING)  {	  if(preprocessorSymbolTable!=    null    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
10	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.getLastChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.getLastChild();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =(Node)n.getLastChild();	      Node    preprocessorSymbolTable    =(Node)n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.getPrefix();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.getPrefix();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =(Node)n.getPrefix();	      Node    preprocessorSymbolTable    =(Node)n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getLastChild();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getLastChild();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getLastChild();	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
13	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getNext();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getNext();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getNext();	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
14	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessor();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessor();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessor();	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
15	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getString().equals( "string "))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getString().equals( "string "))  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||  n.getString().equals( "string "))  {	  if(n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
16	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.NAME)  {	  if(n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
17	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.FUNCTION)  {	  if(n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
18	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isExpressionNode(n))  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||!NodeUtil.isExpressionNode(n))  {	  if(n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
19	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  n.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable    ==    null    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
20	[BUG]  [BUGGY]  if(name  ==  null  ||  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(name  ==  null  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(name  ==  null  ||  n.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable    ==    null    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
21	[BUG]  [BUGGY]  if(n!=  null  ||  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n!=  null  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||  n.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable    ==    null    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
22	[BUG]  [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable.getType()  ==  Token.NAME)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  preprocessorSymbolTable.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable    ==    null    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
23	[BUG]  [BUGGY]  if(n  ==  null  ||  NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||  NodeUtil.isExpressionNode(n))  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  NodeUtil.isExpressionNode(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
24	[BUG]  [BUGGY]  if(n  ==  null  ||  NodeUtil.isExpressionNode(preprocessorSymbolTable))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||  NodeUtil.isExpressionNode(preprocessorSymbolTable))  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  NodeUtil.isExpressionNode(preprocessorSymbolTable))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
25	[BUG]  [BUGGY]  if(name  ==  null  ||  NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(name  ==  null  ||  NodeUtil.isExpressionNode(n))  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(name  ==  null  ||  NodeUtil.isExpressionNode(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
26	[BUG]  [BUGGY]  if(isExpressionNode(n)||  NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(isExpressionNode(n)||  NodeUtil.isExpressionNode(n))  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(isExpressionNode(n)||  NodeUtil.isExpressionNode(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
27	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING);	      Preconditions.checkArgument(n.getType()    ==    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
28	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.STRING);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.STRING);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()!=  Token.STRING);	      Preconditions.checkArgument(n.getType()    ==    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  name);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  name);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING,  name);	      Preconditions.checkArgument(n.getType()    ==    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
30	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.NAME);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.NAME);	      Preconditions.checkArgument(n.getType()    ==    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
31	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =  n.getLastChild();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  preprocessorSymbolTable  =  n.getLastChild();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =  n.getLastChild();	      Node    preprocessorSymbolTable    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
32	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =  n.getPreprocessor();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  preprocessorSymbolTable  =  n.getPreprocessor();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =  n.getPreprocessor();	      Node    preprocessorSymbolTable    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
33	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getPreprocessorSymbolTable();	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
34	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
35	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getParent();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getParent();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getParent();	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
36	[BUG]  [BUGGY]  Node  parentSymbolTable  =  n.getNext();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  parentSymbolTable  =  n.getNext();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =  n.getNext();	      Node    parentSymbolTable    =    n.getParent();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
37	[BUG]  [BUGGY]  Node  parentSymbolTable  =  n.getLastChild();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  parentSymbolTable  =  n.getLastChild();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =  n.getLastChild();	      Node    parentSymbolTable    =    n.getParent();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
38	[BUG]  [BUGGY]  Node  parentSymbolTable  =  node.getParent();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  parentSymbolTable  =  node.getParent();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =  node.getParent();	      Node    parentSymbolTable    =    n.getParent();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
39	[BUG]  [BUGGY]  Node  parentSymbolTable  =  n.getFirstChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  parentSymbolTable  =  n.getFirstChild();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =  n.getFirstChild();	      Node    parentSymbolTable    =    n.getParent();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
40	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()!=  Token.NAME);	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
41	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getString());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getString());  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getString());	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
42	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  name);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  name);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  name);	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
43	[BUG]  [BUGGY]  if(rawName  ==  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(rawName  ==  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(rawName  ==  null  ||  n.getType()  ==  Token.STRING)  {	  if(n    ==    null    ||    rawName!=    null)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
44	[BUG]  [BUGGY]  if(rawName  ==  null  ||  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(rawName  ==  null  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(rawName  ==  null  ||  n.getType()  ==  Token.NAME)  {	  if(n    ==    null    ||    rawName!=    null)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
45	[BUG]  [BUGGY]  if(rawName  ==  null  ||  n!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(rawName  ==  null  ||  n!=  null)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(rawName  ==  null  ||  n!=  null)  {	  if(n    ==    null    ||    rawName!=    null)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
46	[BUG]  [BUGGY]  if(rawName  ==  null  ||  n.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(rawName  ==  null  ||  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(rawName  ==  null  ||  n.getType()  ==  Token.FUNCTION)  {	  if(n    ==    null    ||    rawName!=    null)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
47	[BUG]  [BUGGY]  if(rawName  ==  null  ||  n.getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(rawName  ==  null  ||  n.getType()  ==  Token.VAR)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(rawName  ==  null  ||  n.getType()  ==  Token.VAR)  {	  if(n    ==    null    ||    rawName!=    null)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
48	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString());  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString());	      PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
49	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild());  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild());	      PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
50	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  0);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  0);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
51	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
52	[BUG]  [BUGGY]  if(name  ==  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(name  ==  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(name  ==  null  ||  n.getType()  ==  Token.STRING)  {	  if(preprocessorSymbolTable    ==    null    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
53	[BUG]  [BUGGY]  if(n  ==  null  &&  factorySymbolTable.isSyntheticBlock())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  &&  factorySymbolTable.isSyntheticBlock())  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  &&  factorySymbolTable.isSyntheticBlock())  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticBlock())    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
54	[BUG]  [BUGGY]  if(n!=  null  ||  factorySymbolTable.isSyntheticBlock())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n!=  null  ||  factorySymbolTable.isSyntheticBlock())  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||  factorySymbolTable.isSyntheticBlock())  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticBlock())    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
55	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isLocal())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isLocal())  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isLocal())  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticBlock())    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
56	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSyntheticNode())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSyntheticNode())  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isSyntheticNode())  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticBlock())    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
57	[BUG]  [BUGGY]  Node  factory  =  n.getLastChild();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  factory  =  n.getLastChild();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  factory  =  n.getLastChild();	      Node    factory    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
58	[BUG]  [BUGGY]  Node  factory  =  n.getNext();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  factory  =  n.getNext();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  factory  =  n.getNext();	      Node    factory    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
59	[BUG]  [BUGGY]  Node  factory  =  node.getFirstChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  factory  =  node.getFirstChild();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  factory  =  node.getFirstChild();	      Node    factory    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
60	[BUG]  [BUGGY]  Node  factory  =  parent.getFirstChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  factory  =  parent.getFirstChild();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  factory  =  parent.getFirstChild();	      Node    factory    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
61	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n.getString()))  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n.getString()))  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isName(n.getString()))  {	  if(n    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||!NodeUtil.isExpressionNode(n))  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isExpressionNode(n))  {	  if(n    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
63	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||  n.getType()!=  Token.STRING)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  n.getType()!=  Token.STRING)  {	  if(preprocessorSymbolTable    ==    null    ||    n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
64	[BUG]  [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable.getType()!=  Token.STRING)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  preprocessorSymbolTable.getType()!=  Token.STRING)  {	  if(preprocessorSymbolTable    ==    null    ||    n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
65	[BUG]  [BUGGY]  if(name  ==  null  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(name  ==  null  ||  n.getType()!=  Token.STRING)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(name  ==  null  ||  n.getType()!=  Token.STRING)  {	  if(preprocessorSymbolTable    ==    null    ||    n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
66	[BUG]  [BUGGY]  if(n!=  null  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n!=  null  ||  n.getType()!=  Token.STRING)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||  n.getType()!=  Token.STRING)  {	  if(preprocessorSymbolTable    ==    null    ||    n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  name);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  name);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  name);	      Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getString());  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getString());	      Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
69	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()));  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()));	      Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
70	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n.getString()))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n.getString()))  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n.getString()))  {	  if(n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
71	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getString()!=  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getString()!=  null);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getString()!=  null);	      Preconditions.checkArgument(n.getType()    ==    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
72	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable();	      Node    preprocessorSymbolTable    =    n.getNext();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
73	[BUG]  [BUGGY]  Node  parentSymbolTable  =  n.getParentNode();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  parentSymbolTable  =  n.getParentNode();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =  n.getParentNode();	      Node    parentSymbolTable    =    n.getParent();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
74	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isUnknownNode())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isUnknownNode())  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isUnknownNode())  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticBlock())    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
75	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
76	[BUG]  [BUGGY]  Node  factory  =  n.removeFirstChild();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  factory  =  n.removeFirstChild();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  factory  =  n.removeFirstChild();	      Node    factory    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
77	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  true);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  true);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
78	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isFunction(n))  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||!NodeUtil.isFunction(n))  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isFunction(n))  {	  if(n    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
79	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isLiteralValue(n))  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||!NodeUtil.isLiteralValue(n))  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isLiteralValue(n))  {	  if(n    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
80	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  n.getType()!=  Token.NAME)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  n.getType()!=  Token.NAME)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable  ==  null  ||  n.getType()!=  Token.NAME)  {	  if(preprocessorSymbolTable    ==    null    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
81	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.NAME)  {	  if(preprocessorSymbolTable    ==    null    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
82	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isName(n))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isName(n))  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isName(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
83	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isStringNode(n))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isStringNode(n))  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isStringNode(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
84	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()));  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()));  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()));	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
85	[BUG]  [BUGGY]  if(rawName  ==  null  ||  n  ==  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(rawName  ==  null  ||  n  ==  null)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(rawName  ==  null  ||  n  ==  null)  {	  if(n    ==    null    ||    rawName!=    null)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
86	[BUG]  [BUGGY]  if(n  ==  null  ||  rawName  ==  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||  rawName  ==  null)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  rawName  ==  null)  {	  if(n    ==    null    ||    rawName!=    null)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
87	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getObject();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getObject();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getObject();	      PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.clone();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
88	[BUG]  [BUGGY]  if(n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n.getType()!=  Token.STRING)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()!=  Token.STRING)  {	  if(n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
89	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getFirstChild()  ==  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getFirstChild()  ==  null)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||  n.getFirstChild()  ==  null)  {	  if(n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
90	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getString()!=  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getString()!=  null);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getString()!=  null);	      Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
91	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()!=  Token.NAME);	      Preconditions.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
92	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getString()!=  null);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getString()!=  null);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getString()!=  null);	      Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
93	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  n.getString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  n.getString());  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING,  n.getString());	      Preconditions.checkArgument(n.getType()    ==    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
94	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =  n.getFirstChild().getNext();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  preprocessorSymbolTable  =  n.getFirstChild().getNext();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =  n.getFirstChild().getNext();	      Node    preprocessorSymbolTable    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
95	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =  n.clone();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  Node  preprocessorSymbolTable  =  n.clone();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =  n.clone();	      Node    preprocessorSymbolTable    =(Node)n.clone();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
96	[BUG]  [BUGGY]  if(rawName  ==  null  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(rawName  ==  null  ||  n.getType()!=  Token.STRING)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(rawName  ==  null  ||  n.getType()!=  Token.STRING)  {	  if(n    ==    null    ||    rawName!=    null)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
97	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(preprocessorSymbolTable!=  null  ||  NodeUtil.isExpressionNode(n))  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable!=  null  ||  NodeUtil.isExpressionNode(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
98	[BUG]  [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {	  if(preprocessorSymbolTable!=    null    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
99	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);	      PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getParent();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
100	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
101	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getNode();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getNode();  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getNode();	      PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
102	[BUG]  [BUGGY]  if(n!=  null  &&  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n!=  null  &&  n.getType()  ==  Token.STRING)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  &&  n.getType()  ==  Token.STRING)  {	  if(n!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
103	[BUG]  [BUGGY]  if(n!=  null  &&  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n!=  null  &&  n.getType()  ==  Token.NAME)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  &&  n.getType()  ==  Token.NAME)  {	  if(n!=    null)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
104	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  Object.class);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  Object.class);  [BUGGY]    if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  Object.class);	      PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
105	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock()  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock()  ||  n.getType()!=  Token.STRING)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock()  ||  n.getType()!=  Token.STRING)  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticBlock())    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
106	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock()  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        private  void  maybeAddStringNodeToSymbolTable(Node  n)  {    [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock()  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]    return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock()  ||  n.getType()  ==  Token.STRING)  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticBlock())    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
