bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Node  preprocessorSymbolTable  =  n.getFirstChild();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]    Node  preprocessorSymbolTable  =  n.getFirstChild();  [BUGGY]  if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	    Node  preprocessorSymbolTable  =  n.getFirstChild();		non-compiled	[CE]  <identifier>  expected	105	None	add
2	[BUG]  [BUGGY]    Node  parentSymbolTable  =  n.getParent();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]    Node  parentSymbolTable  =  n.getParent();  [BUGGY]  if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	    Node  parentSymbolTable  =  n.getParent();		non-compiled	[CE]  <identifier>  expected	105	None	add
3	[BUG]  [BUGGY]    Node  preprocessorSymbolTable  =(Node)n.clone();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]    Node  preprocessorSymbolTable  =(Node)n.clone();  [BUGGY]  if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	    Node  preprocessorSymbolTable  =(Node)n.clone();		non-compiled	[CE]  <identifier>  expected	105	None	add
4	[BUG]  [BUGGY]    Node  preprocessorSymbolTable  =  n.getNext();  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]    Node  preprocessorSymbolTable  =  n.getNext();  [BUGGY]  if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	    Node  preprocessorSymbolTable  =  n.getNext();		non-compiled	[CE]  <identifier>  expected	105	None	add
5	[BUG]  [BUGGY]    Node  preprocessorSymbolTable  =(Node)n.getFirstChild();  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]    Node  preprocessorSymbolTable  =(Node)n.getFirstChild();  [BUGGY]  if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	    Node  preprocessorSymbolTable  =(Node)n.getFirstChild();		non-compiled	[CE]  <identifier>  expected	105	None	add
6	[BUG]  [BUGGY]    Node  preprocessorSymbolTable  =  n.getParent();  [CE]  <identifier>  expected  [FE]              AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]    Node  preprocessorSymbolTable  =  n.getParent();  [BUGGY]  if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	    Node  preprocessorSymbolTable  =  n.getParent();		non-compiled	[CE]  <identifier>  expected	105	None	add
7	[BUG]  [BUGGY]  if(n  ==  null)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]  if(n  ==  null)  {  [BUGGY]  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null)  {	if  (preprocessorSymbolTable  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	104	None	replace
8	[BUG]  [BUGGY]  if(n!=  null)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]  if(n!=  null)  {  [BUGGY]  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null)  {	if  (preprocessorSymbolTable  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	104	None	replace
9	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]  if(n.getType()  ==  Token.STRING)  {  [BUGGY]  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING)  {	if  (preprocessorSymbolTable  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	104	None	replace
10	[BUG]  [BUGGY]  if(n  ==  null  ||  rawName!=  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]  if(n  ==  null  ||  rawName!=  null)  {  [BUGGY]  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  rawName!=  null)  {	if  (preprocessorSymbolTable  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	104	None	replace
11	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable  ==  null  ||  n.getType()  ==  Token.STRING)  {	if  (preprocessorSymbolTable  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	104	None	replace
12	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {	if  (preprocessorSymbolTable  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	104	None	replace
13	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isExpressionNode(n))  {  [BUGGY]  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isExpressionNode(n))  {	if  (preprocessorSymbolTable  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	104	None	replace
14	[BUG]  [BUGGY]    PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.clone();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]    PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.clone();  [BUGGY]  if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	    PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.clone();		non-compiled	[CE]  <identifier>  expected	105	None	add
15	[BUG]  [BUGGY]    PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getFirstChild();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]    PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getFirstChild();  [BUGGY]  if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	    PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getFirstChild();		non-compiled	[CE]  <identifier>  expected	105	None	add
16	[BUG]  [BUGGY]    PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getParent();  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]    PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getParent();  [BUGGY]  if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	    PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getParent();		non-compiled	[CE]  <identifier>  expected	105	None	add
17	[BUG]  [BUGGY]    PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable();  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]    PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable();  [BUGGY]  if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	    PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable();		non-compiled	[CE]  <identifier>  expected	105	None	add
18	[BUG]  [BUGGY]    PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n);  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]    PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n);  [BUGGY]  if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	    PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n);		non-compiled	[CE]  <identifier>  expected	105	None	add
19	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  n.getType()!=  Token.STRING)  {  [BUGGY]  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable  ==  null  ||  n.getType()!=  Token.STRING)  {	if  (preprocessorSymbolTable  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	104	None	replace
20	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable  ==  null  ||  n.getType()  ==  Token.NAME)  {	if  (preprocessorSymbolTable  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	104	None	replace
21	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock())  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock())  {  [BUGGY]  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock())  {	if  (preprocessorSymbolTable  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	104	None	replace
22	[BUG]  [BUGGY]    Preconditions.checkState(n.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]    Preconditions.checkState(n.getType()  ==  Token.NAME);  [BUGGY]  if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	    Preconditions.checkState(n.getType()  ==  Token.NAME);		non-compiled	[CE]  <identifier>  expected	105	None	add
23	[BUG]  [BUGGY]    Node  factory  =  n.getFirstChild();  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]    Node  factory  =  n.getFirstChild();  [BUGGY]  if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	    Node  factory  =  n.getFirstChild();		non-compiled	[CE]  <identifier>  expected	105	None	add
24	[BUG]  [BUGGY]    Preconditions.checkArgument(n.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]    Preconditions.checkArgument(n.getType()  ==  Token.NAME);  [BUGGY]  if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	    Preconditions.checkArgument(n.getType()  ==  Token.NAME);		non-compiled	[CE]  <identifier>  expected	105	None	add
25	[BUG]  [BUGGY]    Preconditions.checkArgument(n.getType()  ==  Token.STRING);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]      private  void  maybeAddStringNodeToSymbolTable(Node  n)  {  [BUGGY]    Preconditions.checkArgument(n.getType()  ==  Token.STRING);  [BUGGY]  if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	    Preconditions.checkArgument(n.getType()  ==  Token.STRING);		non-compiled	[CE]  <identifier>  expected	105	None	add
