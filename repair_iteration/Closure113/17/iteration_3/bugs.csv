bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  name.getString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  name.getString());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING,  name.getString());	  Preconditions.checkArgument(n.getType()    ==    Token.STRING,    n.getString());    	non-compiled	[CE]  <identifier>  expected	93	None	replace
2	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING,  n.getString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING,  n.getString());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING,  n.getString());	  Preconditions.checkArgument(n.getType()    ==    Token.STRING,    n.getString());    	non-compiled	[CE]  <identifier>  expected	93	None	replace
3	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  n.getLineno());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  n.getLineno());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING,  n.getLineno());	  Preconditions.checkArgument(n.getType()    ==    Token.STRING,    n.getString());    	non-compiled	[CE]  <identifier>  expected	93	None	replace
4	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  n.getFirstChild());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  n.getFirstChild());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING,  n.getFirstChild());	  Preconditions.checkArgument(n.getType()    ==    Token.STRING,    n.getString());    	non-compiled	[CE]  <identifier>  expected	93	None	replace
5	[BUG]  [BUGGY]  if(n!=  null  ||!NodeUtil.isName(n.getString()))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||!NodeUtil.isName(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||!NodeUtil.isName(n.getString()))  {	  if(n    ==    null    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
6	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isString(n.getString()))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isString(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isString(n.getString()))  {	  if(n    ==    null    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
7	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isAssignmentOp(n.getString()))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isAssignmentOp(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isAssignmentOp(n.getString()))  {	  if(n    ==    null    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
8	[BUG]  [BUGGY]  if(n  ==  null  ||  NodeUtil.isName(n.getString()))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  NodeUtil.isName(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  NodeUtil.isName(n.getString()))  {	  if(n    ==    null    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
9	[BUG]  [BUGGY]  Node  factory  =  node.getLastChild();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  factory  =  node.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  factory  =  node.getLastChild();	  Node    factory    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
10	[BUG]  [BUGGY]  if(n!=  null  ||  preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||  preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||  preprocessorSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {	  if(n    ==    null    ||    preprocessorSymbolTable!=    null    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	98	None	replace
11	[BUG]  [BUGGY]  if(n  ==  null  ||  parentNode!=  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  parentNode!=  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  parentNode!=  null  ||  n.getType()  ==  Token.STRING)  {	  if(n    ==    null    ||    preprocessorSymbolTable!=    null    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	98	None	replace
12	[BUG]  [BUGGY]  if(n  ==  null  ||  preprocessingSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  preprocessingSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  preprocessingSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {	  if(n    ==    null    ||    preprocessorSymbolTable!=    null    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	98	None	replace
13	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  &&  n.getString()!=  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  &&  n.getString()!=  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  &&  n.getString()!=  null);	  Preconditions.checkState(n.getType()    ==    Token.NAME    ||    n.getString()!=    null);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
14	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getString()  ==  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getString()  ==  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getString()  ==  null);	  Preconditions.checkState(n.getType()    ==    Token.NAME    ||    n.getString()!=    null);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
15	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  null);	  Preconditions.checkState(n.getType()    ==    Token.NAME    ||    n.getString()!=    null);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
16	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME  &&  n.getString()!=  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME  &&  n.getString()!=  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()!=  Token.NAME  &&  n.getString()!=  null);	  Preconditions.checkState(n.getType()    ==    Token.NAME    ||    n.getString()!=    null);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
17	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  false);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  false);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    true);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
18	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  true);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  true);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  true);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    true);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
19	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  null);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    true);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
20	[BUG]  [BUGGY]  if(n!=  null  &&  factorySymbolTable.isSyntheticBlock())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  factorySymbolTable.isSyntheticBlock())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  &&  factorySymbolTable.isSyntheticBlock())  {	  if(n    ==    null    &&    factorySymbolTable.isSyntheticBlock())    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
21	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  &&  n!=  null  &&  factorySymbolTable.isSyntheticBlock())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  &&  n!=  null  &&  factorySymbolTable.isSyntheticBlock())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  &&  n!=  null  &&  factorySymbolTable.isSyntheticBlock())  {	  if(n    ==    null    &&    factorySymbolTable.isSyntheticBlock())    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
22	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =  n.getLastChild().getNext();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =  n.getLastChild().getNext();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =  n.getLastChild().getNext();	  Node    preprocessorSymbolTable    =    n.getFirstChild().getNext();    	non-compiled	[CE]  <identifier>  expected	94	None	replace
23	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =  n.getFirstChild().getParent();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =  n.getFirstChild().getParent();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =  n.getFirstChild().getParent();	  Node    preprocessorSymbolTable    =    n.getFirstChild().getNext();    	non-compiled	[CE]  <identifier>  expected	94	None	replace
24	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =  n.getFirstChild().getLastChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =  n.getFirstChild().getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =  n.getFirstChild().getLastChild();	  Node    preprocessorSymbolTable    =    n.getFirstChild().getNext();    	non-compiled	[CE]  <identifier>  expected	94	None	replace
25	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =  node.getFirstChild().getNext();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =  node.getFirstChild().getNext();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =  node.getFirstChild().getNext();	  Node    preprocessorSymbolTable    =    n.getFirstChild().getNext();    	non-compiled	[CE]  <identifier>  expected	94	None	replace
26	[BUG]  [BUGGY]  if(name  ==  null  ||  name.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(name  ==  null  ||  name.getType()  ==  Token.NAME)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(name  ==  null  ||  name.getType()  ==  Token.NAME)  {	  if(name    ==    null    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
27	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()!=  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  n.getType()!=  Token.NAME)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  n.getType()!=  Token.NAME)  {	  if(name    ==    null    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
28	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  &&  n.getFirstChild()  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  &&  n.getFirstChild()  ==  null)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  &&  n.getFirstChild()  ==  null)  {	  if(n.getType()    ==    Token.STRING    ||    n.getFirstChild()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
29	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getFirstChild()!=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getFirstChild()!=  null)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||  n.getFirstChild()!=  null)  {	  if(n.getType()    ==    Token.STRING    ||    n.getFirstChild()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
30	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  &&  n.getFirstChild()!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  &&  n.getFirstChild()!=  null)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  &&  n.getFirstChild()!=  null)  {	  if(n.getType()    ==    Token.STRING    ||    n.getFirstChild()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
31	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getLastChild()  ==  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getLastChild()  ==  null)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||  n.getLastChild()  ==  null)  {	  if(n.getType()    ==    Token.STRING    ||    n.getFirstChild()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
32	[BUG]  [BUGGY]  if(n!=  null  ||!NodeUtil.isLiteralValue(n))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||!NodeUtil.isLiteralValue(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||!NodeUtil.isLiteralValue(n))  {	  if(n    ==    null    ||!NodeUtil.isLiteralValue(n))    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
33	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isEmpty(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isEmpty(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isEmpty(n))  {	  if(n    ==    null    ||!NodeUtil.isLiteralValue(n))    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
34	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isStringValue(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isStringValue(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isStringValue(n))  {	  if(n    ==    null    ||!NodeUtil.isLiteralValue(n))    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
35	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isAssignmentOp(n))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isAssignmentOp(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isAssignmentOp(n))  {	  if(n    ==    null    ||!NodeUtil.isLiteralValue(n))    {    	non-compiled	[CE]  <identifier>  expected	79	None	replace
36	[BUG]  [BUGGY]  Node  factory  =  n.getParent();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  factory  =  n.getParent();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  factory  =  n.getParent();	  Node    factory    =    n.getNext();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
37	[BUG]  [BUGGY]  Node  factory  =  n.getFunction();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  factory  =  n.getFunction();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  factory  =  n.getFunction();	  Node    factory    =    n.getNext();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
38	[BUG]  [BUGGY]  Node  parentSymbolTable  =  node.getFirstChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  parentSymbolTable  =  node.getFirstChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =  node.getFirstChild();	  Node    parentSymbolTable    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
39	[BUG]  [BUGGY]  if(n  ==  null  &&  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  &&  n.getType()  ==  Token.STRING)  {	  if(n!=    null    &&    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	102	None	replace
40	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.cloneChildren();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.cloneChildren();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =(Node)n.cloneChildren();	  Node    preprocessorSymbolTable    =(Node)n.cloneTree();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
41	[BUG]  [BUGGY]  Preconditions.checkState(name.getType()  ==  Token.NAME,  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(name.getType()  ==  Token.NAME,  n);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(name.getType()  ==  Token.NAME,  n);	  Preconditions.checkState(n.getType()    ==    Token.NAME,    name);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
42	[BUG]  [BUGGY]  Preconditions.checkState(name.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(name.getType()  ==  Token.NAME);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(name.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.NAME,    name);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
43	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  parent);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  parent);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  parent);	  Preconditions.checkState(n.getType()    ==    Token.NAME,    name);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
44	[BUG]  [BUGGY]  if(n  ==  null  &&  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  n.getType()  ==  Token.NAME)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  &&  n.getType()  ==  Token.NAME)  {	  if(n    ==    null    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
45	[BUG]  [BUGGY]  if(n!=  null  ||!NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||!NodeUtil.isExpressionNode(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||!NodeUtil.isExpressionNode(n))  {	  if(n    ==    null    ||!NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
46	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isName(n))  {	  if(n    ==    null    ||!NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
47	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isStringNode(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isStringNode(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isStringNode(n))  {	  if(n    ==    null    ||!NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
48	[BUG]  [BUGGY]  if(isStringNode(n)||  NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(isStringNode(n)||  NodeUtil.isExpressionNode(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(isStringNode(n)||  NodeUtil.isExpressionNode(n))  {	  if(isExpressionNode(n)||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
49	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  NodeUtil.isExpressionNode(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(NodeUtil.isExpressionNode(n)||  NodeUtil.isExpressionNode(n))  {	  if(isExpressionNode(n)||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
50	[BUG]  [BUGGY]  if(isExpressionNode(n)&&  NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(isExpressionNode(n)&&  NodeUtil.isExpressionNode(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(isExpressionNode(n)&&  NodeUtil.isExpressionNode(n))  {	  if(isExpressionNode(n)||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
51	[BUG]  [BUGGY]  if(isExpressionNode(n)||  NodeUtil.isFunctionDeclaration(n))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(isExpressionNode(n)||  NodeUtil.isFunctionDeclaration(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(isExpressionNode(n)||  NodeUtil.isFunctionDeclaration(n))  {	  if(isExpressionNode(n)||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
52	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  &&  n.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  &&  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  &&  n.getType()  ==  Token.FUNCTION)  {	  if(n.getType()    ==    Token.STRING    ||    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
53	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getType()!=  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getType()!=  Token.FUNCTION)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||  n.getType()!=  Token.FUNCTION)  {	  if(n.getType()    ==    Token.STRING    ||    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
54	[BUG]  [BUGGY]  if(n.getType()!=  Token.STRING  ||  n.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()!=  Token.STRING  ||  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()!=  Token.STRING  ||  n.getType()  ==  Token.FUNCTION)  {	  if(n.getType()    ==    Token.STRING    ||    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
55	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.FUNCTION  ||  n.getString().equals( "string "))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.FUNCTION  ||  n.getString().equals( "string "))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.FUNCTION  ||  n.getString().equals( "string "))  {	  if(n.getType()    ==    Token.STRING    ||    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
56	[BUG]  [BUGGY]  if(n  >=  null  ||  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  >=  null  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  >=  null  ||  n.getType()  ==  Token.NAME)  {	  if(rawName    ==    null    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
57	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  n.getType()  ==  Token.FUNCTION)  {	  if(rawName    ==    null    ||    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
58	[BUG]  [BUGGY]  if(n!=  null  ||  n.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||  n.getType()  ==  Token.FUNCTION)  {	  if(rawName    ==    null    ||    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
59	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()!=  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  n.getType()!=  Token.FUNCTION)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  n.getType()!=  Token.FUNCTION)  {	  if(rawName    ==    null    ||    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
60	[BUG]  [BUGGY]  if(name  ==  null  ||  n.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(name  ==  null  ||  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(name  ==  null  ||  n.getType()  ==  Token.FUNCTION)  {	  if(rawName    ==    null    ||    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
61	[BUG]  [BUGGY]  if(name  ==  null  ||  name.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(name  ==  null  ||  name.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(name  ==  null  ||  name.getType()  ==  Token.STRING)  {	  if(name    ==    null    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
62	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock()  &&  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock()  &&  n.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock()  &&  n.getType()!=  Token.STRING)  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticBlock()    ||    n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	105	None	replace
63	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isStringNode()  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isStringNode()  ||  n.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isStringNode()  ||  n.getType()!=  Token.STRING)  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticBlock()    ||    n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	105	None	replace
64	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isString()  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isString()  ||  n.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isString()  ||  n.getType()!=  Token.STRING)  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticBlock()    ||    n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	105	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  >=  Token.NAME);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  >=  Token.NAME);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  >=  Token.NAME);	  Preconditions.checkArgument(n.getType()!=    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
66	[BUG]  [BUGGY]  if(n  ==  null  ||  NodeUtil.isName(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  NodeUtil.isName(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  NodeUtil.isName(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isName(n))    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
67	[BUG]  [BUGGY]  if(name  ==  null  ||  NodeUtil.isName(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(name  ==  null  ||  NodeUtil.isName(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(name  ==  null  ||  NodeUtil.isName(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isName(n))    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
68	[BUG]  [BUGGY]  if(n  ==  null  ||  NodeUtil.isName(preprocessorSymbolTable))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  NodeUtil.isName(preprocessorSymbolTable))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  NodeUtil.isName(preprocessorSymbolTable))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isName(n))    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
69	[BUG]  [BUGGY]  if(n!=  null  ||  NodeUtil.isName(n))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||  NodeUtil.isName(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||  NodeUtil.isName(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isName(n))    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
70	[BUG]  [BUGGY]  if(n  ==  null  ||  NodeUtil.isFunction(n))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  NodeUtil.isFunction(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  NodeUtil.isFunction(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isName(n))    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
71	[BUG]  [BUGGY]  if(n  ==  null  ||  NodeUtil.isStringNode(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  NodeUtil.isStringNode(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  NodeUtil.isStringNode(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isStringNode(n))    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
72	[BUG]  [BUGGY]  if(n  ==  null  ||  NodeUtil.isStringNode(preprocessorSymbolTable))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  NodeUtil.isStringNode(preprocessorSymbolTable))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  NodeUtil.isStringNode(preprocessorSymbolTable))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isStringNode(n))    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
73	[BUG]  [BUGGY]  if(name  ==  null  ||  NodeUtil.isStringNode(n))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(name  ==  null  ||  NodeUtil.isStringNode(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(name  ==  null  ||  NodeUtil.isStringNode(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isStringNode(n))    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
74	[BUG]  [BUGGY]  if(n!=  null  ||  NodeUtil.isStringNode(n))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||  NodeUtil.isStringNode(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||  NodeUtil.isStringNode(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isStringNode(n))    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
75	[BUG]  [BUGGY]  if(name  ==  null  ||  n.getType()!=  Token.NAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(name  ==  null  ||  n.getType()!=  Token.NAME)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(name  ==  null  ||  n.getType()!=  Token.NAME)  {	  if(preprocessorSymbolTable    ==    null    ||    n.getType()!=    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
76	[BUG]  [BUGGY]  if(n!=  null  ||  n.getType()!=  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||  n.getType()!=  Token.NAME)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||  n.getType()!=  Token.NAME)  {	  if(preprocessorSymbolTable    ==    null    ||    n.getType()!=    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
77	[BUG]  [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable.getType()!=  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable.getType()!=  Token.NAME)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  preprocessorSymbolTable.getType()!=  Token.NAME)  {	  if(preprocessorSymbolTable    ==    null    ||    n.getType()!=    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	80	None	replace
78	[BUG]  [BUGGY]  Node  parentSymbolTable  =  this.node.getParent();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  parentSymbolTable  =  this.node.getParent();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =  this.node.getParent();	  Node    parentSymbolTable    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
79	[BUG]  [BUGGY]  Node  parentSymbolTable  =  getParentNode();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  parentSymbolTable  =  getParentNode();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =  getParentNode();	  Node    parentSymbolTable    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
80	[BUG]  [BUGGY]  if(n!=  null  ||  NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||  NodeUtil.isExpressionNode(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||  NodeUtil.isExpressionNode(n))  {	  if(n    ==    null    ||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
81	[BUG]  [BUGGY]  if(n  ==  null  ||  NodeUtil.isFunctionDeclaration(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  NodeUtil.isFunctionDeclaration(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  NodeUtil.isFunctionDeclaration(n))  {	  if(n    ==    null    ||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
82	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  name.getString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  name.getString());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  name.getString());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
83	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
84	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME,  n.getString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME,  n.getString());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()!=  Token.NAME,  n.getString());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
85	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getString().equals( "string "))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  n.getString().equals( "string "))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  n.getString().equals( "string "))  {	  if(n    ==    null    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
86	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =  n.getImmediateParentNode();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =  n.getImmediateParentNode();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =  n.getImmediateParentNode();	  Node    preprocessorSymbolTable    =    n.getPreprocessor();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
87	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  n.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable!=  null  ||  n.getType()!=  Token.STRING)  {	  if(n    ==    null    ||    preprocessorSymbolTable.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
88	[BUG]  [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  &&  preprocessorSymbolTable.getType()!=  Token.STRING)  {	  if(n    ==    null    ||    preprocessorSymbolTable.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
89	[BUG]  [BUGGY]  if(name  ==  null  ||  name.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(name  ==  null  ||  name.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(name  ==  null  ||  name.getType()!=  Token.STRING)  {	  if(name    ==    null    ||    n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
90	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  &&!NodeUtil.isName(n.getString()))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  &&!NodeUtil.isName(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  &&!NodeUtil.isName(n.getString()))  {	  if(n.getType()    ==    Token.STRING    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
91	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isAssignmentOp(n.getString()))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isAssignmentOp(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||!NodeUtil.isAssignmentOp(n.getString()))  {	  if(n.getType()    ==    Token.STRING    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
92	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isString(n.getString()))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isString(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||!NodeUtil.isString(n.getString()))  {	  if(n.getType()    ==    Token.STRING    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
93	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP  +  1);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP  +  1);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
94	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n.getString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n.getString());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n.getString());	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
95	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
96	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n.getType());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n.getType());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP,  n.getType());	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
97	[BUG]  [BUGGY]  Node  parentSymbolTable  =  node.getParentNode();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  parentSymbolTable  =  node.getParentNode();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =  node.getParentNode();	  Node    parentSymbolTable    =    n.getParentNode();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
98	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.getString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.getString());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.getString());	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
99	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n,  0);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n,  0);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n,  0);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
100	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.cloneTree());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.cloneTree());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.cloneTree());	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
101	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n,  Object.class);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n,  Object.class);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n,  Object.class);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
102	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  null  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  null  :  n.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  null  :  n.getLastChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
103	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()!=  null)?  null  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()!=  null)?  null  :  n.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()!=  null)?  null  :  n.getLastChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
104	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  node.getLastChild();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  node.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  node.getLastChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
105	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||  n.getType()!=  Token.STRING)  {	  if(n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
106	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getType()!=  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getType()!=  Token.NAME)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||  n.getType()!=  Token.NAME)  {	  if(n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
107	[BUG]  [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  &&  preprocessorSymbolTable.getType()  ==  Token.STRING)  {	  if(n    ==    null    ||    preprocessorSymbolTable.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
108	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSynthetic())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSynthetic())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isSynthetic())  {	  if(n    ==    null    ||    factorySymbolTable.isLocal())    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
109	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isGlobal())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isGlobal())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isGlobal())  {	  if(n    ==    null    ||    factorySymbolTable.isLocal())    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
110	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isName())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isName())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isName())  {	  if(n    ==    null    ||    factorySymbolTable.isLocal())    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
111	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  1);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  1);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
112	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  0L);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  0L);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  0L);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
113	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  2);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  2);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  2);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
114	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  3);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  3);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  3);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
115	[BUG]  [BUGGY]  Node  factory  =  parent.getLastChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  factory  =  parent.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  factory  =  parent.getLastChild();	  Node    factory    =    parent.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
116	[BUG]  [BUGGY]  Node  factory  =  parent.getParent();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  factory  =  parent.getParent();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  factory  =  parent.getParent();	  Node    factory    =    parent.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
117	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
118	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getModule());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getModule());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getModule());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
119	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getSourceName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getSourceName());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getSourceName());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
120	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getJSDocInfo());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getJSDocInfo());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getJSDocInfo());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
121	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.NAME)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.NAME)  {	  if(n!=    null    &&    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
122	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  &&  n.getString().equals( "string "))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  &&  n.getString().equals( "string "))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  &&  n.getString().equals( "string "))  {	  if(n.getType()    ==    Token.STRING    ||    n.getString().equals(   "string   "))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
123	[BUG]  [BUGGY]  if(n.getType()!=  Token.STRING  &&  n.getString().equals( "string "))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()!=  Token.STRING  &&  n.getString().equals( "string "))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()!=  Token.STRING  &&  n.getString().equals( "string "))  {	  if(n.getType()    ==    Token.STRING    ||    n.getString().equals(   "string   "))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
124	[BUG]  [BUGGY]  if(n.getType()!=  Token.STRING  ||  n.getString().equals( "string "))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()!=  Token.STRING  ||  n.getString().equals( "string "))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()!=  Token.STRING  ||  n.getString().equals( "string "))  {	  if(n.getType()    ==    Token.STRING    ||    n.getString().equals(   "string   "))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
125	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.getPreprocessor();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.getPreprocessor();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =(Node)n.getPreprocessor();	  Node    preprocessorSymbolTable    =(Node)n.getNext();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
126	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  &&  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  &&  n.getType()  ==  Token.NAME)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  &&  n.getType()  ==  Token.NAME)  {	  if(n.getType()    ==    Token.STRING    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
127	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.STRING)  {	  if(n.getType()    ==    Token.STRING    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
128	[BUG]  [BUGGY]  if(n.getType()!=  Token.STRING  ||  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()!=  Token.STRING  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()!=  Token.STRING  ||  n.getType()  ==  Token.NAME)  {	  if(n.getType()    ==    Token.STRING    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
129	[BUG]  [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  preprocessorSymbolTable.getType()  ==  Token.NAME)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  &&  preprocessorSymbolTable.getType()  ==  Token.NAME)  {	  if(n    ==    null    ||    preprocessorSymbolTable.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
130	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.STRING);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.STRING);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()!=  Token.STRING);	  Preconditions.checkState(n.getType()    ==    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
131	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.NAME);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
132	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.STRING);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.STRING);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.STRING);	  Preconditions.checkState(n.getType()    ==    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
133	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(false);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(false);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(true);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
134	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  false);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  false);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(true);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
135	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  true);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  true);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(true,  true);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(true);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
136	[BUG]  [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.NAME,  n);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.NAME,  n);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(name.getType()  ==  Token.NAME,  n);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    name);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
137	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  _name);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  _name);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  _name);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    name);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
138	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  name,  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  name,  false);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  name,  false);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    name);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
139	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  &&  n.getString()!=  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  &&  n.getString()!=  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  &&  n.getString()!=  null);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME    ||    n.getString()!=    null);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
140	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getString()  ==  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getString()  ==  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getString()  ==  null);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME    ||    n.getString()!=    null);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
141	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  null);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME    ||    n.getString()!=    null);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
142	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getPreprocessor();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getPreprocessor();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getPreprocessor();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessor();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
143	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class,  String.class);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class,  String.class);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class,  String.class);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(String.class);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
144	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class,  Node.class);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class,  Node.class);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class,  Node.class);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(String.class);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
145	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class,  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class,  null);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(String.class);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
146	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.TYPE);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.TYPE);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.TYPE);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(String.class);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
147	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  &&  n.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  &&  n.getType()  ==  Token.NAME);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING  &&  n.getType()  ==  Token.NAME);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING    ||    n.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
148	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getType()!=  Token.NAME);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getType()!=  Token.NAME);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getType()!=  Token.NAME);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING    ||    n.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
149	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.STRING  ||  n.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.STRING  ||  n.getType()  ==  Token.NAME);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()!=  Token.STRING  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING    ||    n.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
150	[BUG]  [BUGGY]  if(n  ==  null  ||  n!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  n!=  null)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  n!=  null)  {	  if(rawName    ==    null    ||    n!=    null)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
151	[BUG]  [BUGGY]  if(name  ==  null  ||  n!=  null)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(name  ==  null  ||  n!=  null)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(name  ==  null  ||  n!=  null)  {	  if(rawName    ==    null    ||    n!=    null)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
152	[BUG]  [BUGGY]  if(n!=  null  ||  rawName  ==  null)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||  rawName  ==  null)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||  rawName  ==  null)  {	  if(rawName    ==    null    ||    n!=    null)    {    	non-compiled	[CE]  <identifier>  expected	45	None	replace
153	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()  >=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  n.getType()  >=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  n.getType()  >=  Token.STRING)  {	  if(rawName    ==    null    ||    n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	96	None	replace
154	[BUG]  [BUGGY]  Node  parentSymbolTable  =  node.getLastChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  parentSymbolTable  =  node.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =  node.getLastChild();	  Node    parentSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
155	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()  +  1));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()  +  1));  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()  +  1));	  Preconditions.checkState(n.getType()    ==    Token.NAME,    String.valueOf(n.getString()));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
156	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()),  false);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()),  false);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()),  false);	  Preconditions.checkState(n.getType()    ==    Token.NAME,    String.valueOf(n.getString()));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
157	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()),  name);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()),  name);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()),  name);	  Preconditions.checkState(n.getType()    ==    Token.NAME,    String.valueOf(n.getString()));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
158	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  >=  Token.STRING);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  >=  Token.STRING);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  >=  Token.STRING);	  Preconditions.checkArgument(n.getType()!=    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
159	[BUG]  [BUGGY]  if(n  ==  null  &&  factorySymbolTable.isSyntheticNode())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  factorySymbolTable.isSyntheticNode())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  &&  factorySymbolTable.isSyntheticNode())  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticNode())    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
160	[BUG]  [BUGGY]  if(n!=  null  ||  factorySymbolTable.isSyntheticNode())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||  factorySymbolTable.isSyntheticNode())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||  factorySymbolTable.isSyntheticNode())  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticNode())    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
161	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isNamedNode())  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isNamedNode())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isNamedNode())  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticNode())    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
162	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  &&!NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  &&!NodeUtil.isExpressionNode(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  &&!NodeUtil.isExpressionNode(n))  {	  if(n.getType()    ==    Token.STRING    ||!NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
163	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n))  {	  if(n.getType()    ==    Token.STRING    ||!NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
164	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isStringNode(n))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isStringNode(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||!NodeUtil.isStringNode(n))  {	  if(n.getType()    ==    Token.STRING    ||!NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
165	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.VAR)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  n.getType()  ==  Token.VAR)  {	  if(rawName    ==    null    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
166	[BUG]  [BUGGY]  if(n!=  null  ||  n.getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||  n.getType()  ==  Token.VAR)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||  n.getType()  ==  Token.VAR)  {	  if(rawName    ==    null    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
167	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()!=  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  n.getType()!=  Token.VAR)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  n.getType()!=  Token.VAR)  {	  if(rawName    ==    null    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
168	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getNode();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getNode();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getNode();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getObject();    	non-compiled	[CE]  <identifier>  expected	87	None	replace
169	[BUG]  [BUGGY]  if(n  ==  null  &&  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  n.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  &&  n.getType()!=  Token.STRING)  {	  if(n    ==    null    ||    n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
170	[BUG]  [BUGGY]  if(n  ==  null  &&  factorySymbolTable.isUnknownNode())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  factorySymbolTable.isUnknownNode())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  &&  factorySymbolTable.isUnknownNode())  {	  if(n    ==    null    ||    factorySymbolTable.isUnknownNode())    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
171	[BUG]  [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.STRING,  n);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(name.getType()  ==  Token.STRING,  n);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(name.getType()  ==  Token.STRING,  n);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING,    name);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
172	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING,  name);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING,  name);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING,  name);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING,    name);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
173	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  name,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  name,  false);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING,  name,  false);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING,    name);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
174	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  name,  syntheticRef);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  name,  syntheticRef);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING,  name,  syntheticRef);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING,    name);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
175	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isImmutableValue(n))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isImmutableValue(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isImmutableValue(n))  {	  if(n    ==    null    ||!NodeUtil.isFunction(n))    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
176	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()  +  1));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()  +  1));  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()  +  1));	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    String.valueOf(n.getString()));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
177	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()),  name);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()),  name);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()),  name);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    String.valueOf(n.getString()));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
178	[BUG]  [BUGGY]  if(n  ==  null  ||  rawName.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  rawName.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  rawName.getType()  ==  Token.STRING)  {	  if(rawName    ==    null    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
179	[BUG]  [BUGGY]  Node  parentSymbolTable  =  node.getNext();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  parentSymbolTable  =  node.getNext();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =  node.getNext();	  Node    parentSymbolTable    =    n.getNext();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
180	[BUG]  [BUGGY]  if(n  ==  null  ||  n  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  n  ==  null)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  n  ==  null)  {	  if(rawName    ==    null    ||    n    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
181	[BUG]  [BUGGY]  if(name  ==  null  ||  n  ==  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(name  ==  null  ||  n  ==  null)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(name  ==  null  ||  n  ==  null)  {	  if(rawName    ==    null    ||    n    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
182	[BUG]  [BUGGY]  if(n  ==  null  &&  NodeUtil.isExpressionNode(preprocessorSymbolTable))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  &&  NodeUtil.isExpressionNode(preprocessorSymbolTable))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  &&  NodeUtil.isExpressionNode(preprocessorSymbolTable))  {	  if(n    ==    null    ||    NodeUtil.isExpressionNode(preprocessorSymbolTable))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
183	[BUG]  [BUGGY]  if(n  ==  null  ||  NodeUtil.isExpressionNode(processorSymbolTable))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  NodeUtil.isExpressionNode(processorSymbolTable))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  NodeUtil.isExpressionNode(processorSymbolTable))  {	  if(n    ==    null    ||    NodeUtil.isExpressionNode(preprocessorSymbolTable))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
184	[BUG]  [BUGGY]  if(n!=  null  &&  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  n.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  &&  n.getType()!=  Token.STRING)  {	  if(n!=    null    ||    n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
185	[BUG]  [BUGGY]  Node  factory  =  node.removeFirstChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  factory  =  node.removeFirstChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  factory  =  node.removeFirstChild();	  Node    factory    =    n.removeFirstChild();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
186	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  >=  Token.NAME);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  >=  Token.NAME);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  >=  Token.NAME);	  Preconditions.checkState(n.getType()!=    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
187	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getLastChild());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getLastChild());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getLastChild());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	49	None	replace
188	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n.getLastChild());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n.getLastChild());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n.getLastChild());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	49	None	replace
189	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n.getString());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n.getString());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n.getString());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	49	None	replace
190	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isStringNode()  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isStringNode()  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isStringNode()  ||  n.getType()  ==  Token.STRING)  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticBlock()    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	106	None	replace
191	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock()  &&  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock()  &&  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock()  &&  n.getType()  ==  Token.STRING)  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticBlock()    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	106	None	replace
192	[BUG]  [BUGGY]  if(n!=  null  ||  factorySymbolTable.isSyntheticBlock()  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||  factorySymbolTable.isSyntheticBlock()  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||  factorySymbolTable.isSyntheticBlock()  ||  n.getType()  ==  Token.STRING)  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticBlock()    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	106	None	replace
193	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  Node.class);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  Node.class);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  Node.class);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    Object.class);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
194	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  String.class);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  String.class);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  String.class);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    Object.class);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
195	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  Tree.class);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  Tree.class);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  Tree.class);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    Object.class);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
196	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  name.getString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  name.getString());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  name.getString());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
197	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getFirstChild());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getFirstChild());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getFirstChild());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
198	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  &&  n.getString()!=  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  &&  n.getString()!=  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING  &&  n.getString()!=  null);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING    ||    n.getString()!=    null);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
199	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getString()  ==  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getString()  ==  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getString()  ==  null);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING    ||    n.getString()!=    null);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
200	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getFirstChild()!=  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getFirstChild()!=  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getFirstChild()!=  null);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING    ||    n.getString()!=    null);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
201	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  n.getString()!=  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING  ||  n.getString()!=  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING  ||  n.getString()!=  null);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING    ||    n.getString()!=    null);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
202	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =  node.getLastChild();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =  node.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =  node.getLastChild();	  Node    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
203	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =  node.getFirstChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =  node.getFirstChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =  node.getFirstChild();	  Node    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
204	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n  ==  null)?  null  :  n.getPreprocessorSymbolTable(this);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n  ==  null)?  null  :  n.getPreprocessorSymbolTable(this);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(n  ==  null)?  null  :  n.getPreprocessorSymbolTable(this);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
205	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  n);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  n);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
206	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable(n);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable(n);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  this.preprocessorSymbolTable.getPreprocessorSymbolTable(n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
207	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getParentNode();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getParentNode();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getParentNode();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getNode();    	non-compiled	[CE]  <identifier>  expected	101	None	replace
208	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isString()  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isString()  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isString()  ||  n.getType()  ==  Token.STRING)  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticBlock()    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	106	None	replace
209	[BUG]  [BUGGY]  if(n  ==  null  ||  NodeUtil.isAssignmentOp(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  NodeUtil.isAssignmentOp(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  NodeUtil.isAssignmentOp(n))  {	  if(n    ==    null    ||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
210	[BUG]  [BUGGY]  if(n.getType()!=  Token.STRING  ||  n.getFirstChild()  ==  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()!=  Token.STRING  ||  n.getFirstChild()  ==  null)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()!=  Token.STRING  ||  n.getFirstChild()  ==  null)  {	  if(n.getType()    ==    Token.STRING    ||    n.getFirstChild()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
211	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getChildCount()  ==  1)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getChildCount()  ==  1)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||  n.getChildCount()  ==  1)  {	  if(n.getType()    ==    Token.STRING    ||    n.getFirstChild()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
212	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getString()!=  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getString()!=  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getString()!=  null);	  Preconditions.checkArgument(n.getType()!=    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
213	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  String.valueOf(name));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  String.valueOf(name));  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  String.valueOf(name));	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    name);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
214	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  '_');  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  '_');  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  '_');	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    name);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
215	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.FUNCTION)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.FUNCTION)  {	  if(n.getType()    ==    Token.STRING    ||    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
216	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  JSError.class);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  JSError.class);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  JSError.class);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    Object.class);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
217	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getLineno()!=  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getLineno()!=  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getLineno()!=  null);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING    ||    n.getString()!=    null);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
218	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isStringNode())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isStringNode())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isStringNode())  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticNode())    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
219	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSyntheticName())  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSyntheticName())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isSyntheticName())  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticNode())    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
220	[BUG]  [BUGGY]  Node  parentSymbolTable  =(node!=  null)?  null  :  node.getParent();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  parentSymbolTable  =(node!=  null)?  null  :  node.getParent();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =(node!=  null)?  null  :  node.getParent();	  Node    parentSymbolTable    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
221	[BUG]  [BUGGY]  Node  parentSymbolTable  =(node!=  null)?  null  :  n.getParent();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  parentSymbolTable  =(node!=  null)?  null  :  n.getParent();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =(node!=  null)?  null  :  n.getParent();	  Node    parentSymbolTable    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
222	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =  n.getFirstChild().getString();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =  n.getFirstChild().getString();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =  n.getFirstChild().getString();	  Node    preprocessorSymbolTable    =    n.getFirstChild().getNext();    	non-compiled	[CE]  <identifier>  expected	94	None	replace
223	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  n.toString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  n.toString());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING,  n.toString());	  Preconditions.checkArgument(n.getType()    ==    Token.STRING,    n.getString());    	non-compiled	[CE]  <identifier>  expected	93	None	replace
224	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.DEFAULT_TYPE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.DEFAULT_TYPE);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.DEFAULT_TYPE);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(String.class);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
225	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(StringNode.class);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(StringNode.class);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(StringNode.class);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(String.class);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
226	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.DEFAULT_NAME);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.DEFAULT_NAME);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.DEFAULT_NAME);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(String.class);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
227	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.DEFAULT_NAME,  n.getString());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.DEFAULT_NAME,  n.getString());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.DEFAULT_NAME,  n.getString());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(String.class);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
228	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.NO_TYPE);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.NO_TYPE);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.NO_TYPE);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(String.class);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
229	[BUG]  [BUGGY]  Node  factory  =  n.removeLastChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  factory  =  n.removeLastChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  factory  =  n.removeLastChild();	  Node    factory    =    n.removeFirstChild();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
230	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME  &&  n.getString()!=  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME  &&  n.getString()!=  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()!=  Token.NAME  &&  n.getString()!=  null);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME    ||    n.getString()!=    null);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
231	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.STRING  &&  n.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.STRING  &&  n.getType()  ==  Token.NAME);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()!=  Token.STRING  &&  n.getType()  ==  Token.NAME);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING    ||    n.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
232	[BUG]  [BUGGY]  if(n  ==  null  ||  NodeUtil.isExpressionNode(parent))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  NodeUtil.isExpressionNode(parent))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  NodeUtil.isExpressionNode(parent))  {	  if(n    ==    null    ||    NodeUtil.isExpressionNode(preprocessorSymbolTable))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
233	[BUG]  [BUGGY]  if(n  ==  null  ||  NodeUtil.isExpressionNode(n.getString()))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  NodeUtil.isExpressionNode(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  NodeUtil.isExpressionNode(n.getString()))  {	  if(n    ==    null    ||    NodeUtil.isExpressionNode(preprocessorSymbolTable))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
234	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.mayHaveSideEffects(n))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.mayHaveSideEffects(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.mayHaveSideEffects(n))  {	  if(n    ==    null    ||!NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
235	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  -1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  -1);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  -1);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    0);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
236	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  name,  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  name,  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING,  name,  null);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING,    name);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
237	[BUG]  [BUGGY]  if(n.getType()!=  Token.STRING  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()!=  Token.STRING  ||  n.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()!=  Token.STRING  ||  n.getType()!=  Token.STRING)  {	  if(n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
238	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.mayHaveSideEffects(n))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.mayHaveSideEffects(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||!NodeUtil.mayHaveSideEffects(n))  {	  if(n.getType()    ==    Token.STRING    ||!NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
239	[BUG]  [BUGGY]  if(n  >=  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  >=  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  >=  null  ||  n.getType()  ==  Token.STRING)  {	  if(n    ==    null    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
240	[BUG]  [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(NodeUtil.isName(n)||  NodeUtil.isExpressionNode(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(NodeUtil.isName(n)||  NodeUtil.isExpressionNode(n))  {	  if(isExpressionNode(n)||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
241	[BUG]  [BUGGY]  if(isExpressionNode(n)||  NodeUtil.isName(n))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(isExpressionNode(n)||  NodeUtil.isName(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(isExpressionNode(n)||  NodeUtil.isName(n))  {	  if(isExpressionNode(n)||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
242	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  NodeUtil.isFunction(n))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  NodeUtil.isFunction(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(NodeUtil.isExpressionNode(n)||  NodeUtil.isFunction(n))  {	  if(isExpressionNode(n)||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
243	[BUG]  [BUGGY]  if(n  >=  null  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  >=  null  ||  n.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  >=  null  ||  n.getType()!=  Token.STRING)  {	  if(n!=    null    ||    n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	66	None	replace
244	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getLastChild()  :  n;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getLastChild()  :  n;  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getLastChild()  :  n;	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
245	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()!=  null)?  n.getLastChild()  :  n;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()!=  null)?  n.getLastChild()  :  n;  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()!=  null)?  n.getLastChild()  :  n;	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
246	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING);  Node  preprocessorSymbolTable  =(Node)n.getLastChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING);  Node  preprocessorSymbolTable  =(Node)n.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING);  Node  preprocessorSymbolTable  =(Node)n.getLastChild();	  Node    preprocessorSymbolTable    =(Node)n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
247	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING);  Node  preprocessorSymbolTable  =(Node)n.getFirstChild();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.STRING);  Node  preprocessorSymbolTable  =(Node)n.getFirstChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.STRING);  Node  preprocessorSymbolTable  =(Node)n.getFirstChild();	  Node    preprocessorSymbolTable    =(Node)n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
248	[BUG]  [BUGGY]  Preconditions.checkState(name.getType()!=  Token.NAME);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(name.getType()!=  Token.NAME);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(name.getType()!=  Token.NAME);	  Preconditions.checkState(n.getType()!=    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
249	[BUG]  [BUGGY]  if(rawName  ==  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(rawName  ==  null)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(rawName  ==  null)  {	  if(n    ==    null    ||    rawName    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
250	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getLineno().equals( "string "))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getLineno().equals( "string "))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||  n.getLineno().equals( "string "))  {	  if(n.getType()    ==    Token.STRING    ||    n.getString().equals(   "string   "))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
251	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  n);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	49	None	replace
252	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getNext());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getNext());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getNext());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getFirstChild());    	non-compiled	[CE]  <identifier>  expected	49	None	replace
253	[BUG]  [BUGGY]  Node  factory  =  n.getProp(Node.SOURCENAME_PROP);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  factory  =  n.getProp(Node.SOURCENAME_PROP);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  factory  =  n.getProp(Node.SOURCENAME_PROP);	  Node    factory    =    n.getNext();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
254	[BUG]  [BUGGY]  Node  parentSymbolTable  =  n.getImmediateParentNode();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  parentSymbolTable  =  n.getImmediateParentNode();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =  n.getImmediateParentNode();	  Node    parentSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
255	[BUG]  [BUGGY]  Node  parentSymbolTable  =  n.getPreviousChild();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  parentSymbolTable  =  n.getPreviousChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =  n.getPreviousChild();	  Node    parentSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
256	[BUG]  [BUGGY]  if(StringUtil.isEmpty(n)||  rawName  ==  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(StringUtil.isEmpty(n)||  rawName  ==  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(StringUtil.isEmpty(n)||  rawName  ==  null  ||  n.getType()  ==  Token.STRING)  {	  if(rawName    ==    null    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
257	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this);	  Node    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
258	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isGetProp(n))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isGetProp(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isGetProp(n))  {	  if(n    ==    null    ||!NodeUtil.isFunction(n))    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
259	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isName(n)||  NodeUtil.isAssignmentOp(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isName(n)||  NodeUtil.isAssignmentOp(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isName(n)||  NodeUtil.isAssignmentOp(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isName(n))    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
260	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isName(n)||  NodeUtil.isFunction(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isName(n)||  NodeUtil.isFunction(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isName(n)||  NodeUtil.isFunction(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isName(n))    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
261	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isName(n)||  NodeUtil.isFunction(parent))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isName(n)||  NodeUtil.isFunction(parent))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isName(n)||  NodeUtil.isFunction(parent))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isName(n))    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
262	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.getObject();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.getObject();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =(Node)n.getObject();	  Node    preprocessorSymbolTable    =(Node)n.getPrefix();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
263	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  true);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  true);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getFirstChild(),  true);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    true);    	non-compiled	[CE]  <identifier>  expected	77	None	replace
264	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP  -  1);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP  -  1);	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
265	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.mayHaveSideEffects(n.getString()))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.mayHaveSideEffects(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.mayHaveSideEffects(n.getString()))  {	  if(n    ==    null    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
266	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isName(n.getString()))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isName(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isName(n.getString()))  {	  if(n    ==    null    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
267	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isLhs(n.getString()))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isLhs(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isLhs(n.getString()))  {	  if(n    ==    null    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
268	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME,  String.valueOf(n.getString()));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME,  String.valueOf(n.getString()));  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()!=  Token.NAME,  String.valueOf(n.getString()));	  Preconditions.checkState(n.getType()    ==    Token.NAME,    String.valueOf(n.getString()));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
269	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME,  String.valueOf(n.getString()));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME,  String.valueOf(n.getString()));  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()!=  Token.NAME,  String.valueOf(n.getString()));	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    String.valueOf(n.getString()));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
270	[BUG]  [BUGGY]  if(n.getType()!=  Token.STRING  ||!NodeUtil.isName(n.getString()))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()!=  Token.STRING  ||!NodeUtil.isName(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()!=  Token.STRING  ||!NodeUtil.isName(n.getString()))  {	  if(n.getType()    ==    Token.STRING    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
271	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n.getString())&&  NodeUtil.mayHaveSideEffects(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n.getString())&&  NodeUtil.mayHaveSideEffects(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n.getString())&&  NodeUtil.mayHaveSideEffects(n))  {	  if(n.getType()    ==    Token.STRING    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
272	[BUG]  [BUGGY]  if(factorySymbolTable!=  null  ||  n.isSyntheticBlock())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(factorySymbolTable!=  null  ||  n.isSyntheticBlock())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(factorySymbolTable!=  null  ||  n.isSyntheticBlock())  {	  if(n!=    null    ||    factorySymbolTable.isSyntheticBlock())    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
273	[BUG]  [BUGGY]  if(n  >=  null  ||  factorySymbolTable.isSyntheticBlock())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  >=  null  ||  factorySymbolTable.isSyntheticBlock())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  >=  null  ||  factorySymbolTable.isSyntheticBlock())  {	  if(n!=    null    ||    factorySymbolTable.isSyntheticBlock())    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
274	[BUG]  [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable  ==  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  preprocessorSymbolTable  ==  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  preprocessorSymbolTable  ==  null  ||  n.getType()  ==  Token.STRING)  {	  if(n    ==    null    ||    preprocessorSymbolTable!=    null    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	98	None	replace
275	[BUG]  [BUGGY]  if(n  ==  null  ||  parentSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  parentSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  parentSymbolTable!=  null  ||  n.getType()  ==  Token.STRING)  {	  if(n    ==    null    ||    preprocessorSymbolTable!=    null    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	98	None	replace
276	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isUnknown())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isUnknown())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isUnknown())  {	  if(n    ==    null    ||    factorySymbolTable.isLocal())    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
277	[BUG]  [BUGGY]  if(StringUtil.isEmpty(n)||  rawName  ==  null  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(StringUtil.isEmpty(n)||  rawName  ==  null  ||  n.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(StringUtil.isEmpty(n)||  rawName  ==  null  ||  n.getType()!=  Token.STRING)  {	  if(rawName    ==    null    ||    n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	96	None	replace
278	[BUG]  [BUGGY]  if(n!=  null  ||  NodeUtil.isExpressionNode(preprocessorSymbolTable))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||  NodeUtil.isExpressionNode(preprocessorSymbolTable))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||  NodeUtil.isExpressionNode(preprocessorSymbolTable))  {	  if(preprocessorSymbolTable!=    null    ||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	97	None	replace
279	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  &&  n  ==  null  &&  factorySymbolTable.isSyntheticBlock())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  &&  n  ==  null  &&  factorySymbolTable.isSyntheticBlock())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  &&  n  ==  null  &&  factorySymbolTable.isSyntheticBlock())  {	  if(n    ==    null    &&    factorySymbolTable.isSyntheticBlock())    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
280	[BUG]  [BUGGY]  if(factorySymbolTable!=  null  &&  n.isSyntheticBlock())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(factorySymbolTable!=  null  &&  n.isSyntheticBlock())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(factorySymbolTable!=  null  &&  n.isSyntheticBlock())  {	  if(n    ==    null    &&    factorySymbolTable.isSyntheticBlock())    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
281	[BUG]  [BUGGY]  if(n!=  null  &&  n.getType()  ==  Token.STRING  ||  n.getString().equals( "string "))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  n.getType()  ==  Token.STRING  ||  n.getString().equals( "string "))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  &&  n.getType()  ==  Token.STRING  ||  n.getString().equals( "string "))  {	  if(n!=    null    &&    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	102	None	replace
282	[BUG]  [BUGGY]  if(name  ==  null  ||  n.getType()  ==  Token.VAR)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(name  ==  null  ||  n.getType()  ==  Token.VAR)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(name  ==  null  ||  n.getType()  ==  Token.VAR)  {	  if(rawName    ==    null    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  <identifier>  expected	47	None	replace
283	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isLabelName(n))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isLabelName(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isLabelName(n))  {	  if(n    ==    null    ||!NodeUtil.isFunction(n))    {    	non-compiled	[CE]  <identifier>  expected	78	None	replace
284	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.EMPTY)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.EMPTY)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  n.getType()  ==  Token.EMPTY)  {	  if(rawName    ==    null    ||    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	46	None	replace
285	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.removeFirstChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.removeFirstChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =(Node)n.removeFirstChild();	  Node    preprocessorSymbolTable    =(Node)n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
286	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isLocal()  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isLocal()  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isLocal()  ||  n.getType()  ==  Token.STRING)  {	  if(n    ==    null    ||    factorySymbolTable.isLocal())    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
287	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isLocal()  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isLocal()  ||  n.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isLocal()  ||  n.getType()!=  Token.STRING)  {	  if(n    ==    null    ||    factorySymbolTable.isLocal())    {    	non-compiled	[CE]  <identifier>  expected	55	None	replace
288	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.STRING  ||  n.getString()  ==  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.STRING  ||  n.getString()  ==  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()!=  Token.STRING  ||  n.getString()  ==  null);	  Preconditions.checkArgument(n.getType()!=    Token.STRING);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
289	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isImmutableValue(n.getString()))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isImmutableValue(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isImmutableValue(n.getString()))  {	  if(n    ==    null    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
290	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isFunction(n.getString()))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isFunction(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isFunction(n.getString()))  {	  if(n    ==    null    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
291	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isExpressionNode(n.getString()))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isExpressionNode(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isExpressionNode(n.getString()))  {	  if(n    ==    null    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
292	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isLabelName(n.getString()))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isLabelName(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isLabelName(n.getString()))  {	  if(n    ==    null    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
293	[BUG]  [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isVar(n.getString()))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isVar(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||!NodeUtil.isName(n.getString())||!NodeUtil.isVar(n.getString()))  {	  if(n    ==    null    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
294	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()  + ") ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()  + ") ");  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()  + ") ");	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    String.valueOf(n.getString()));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
295	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getName()!=  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getName()!=  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getName()!=  null);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME    ||    n.getString()!=    null);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
296	[BUG]  [BUGGY]  if(name  ==  null  ||  NodeUtil.isFunction(n))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(name  ==  null  ||  NodeUtil.isFunction(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(name  ==  null  ||  NodeUtil.isFunction(n))  {	  if(name    ==    null    ||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
297	[BUG]  [BUGGY]  if(name  ==  null  ||  NodeUtil.isLhs(n))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(name  ==  null  ||  NodeUtil.isLhs(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(name  ==  null  ||  NodeUtil.isLhs(n))  {	  if(name    ==    null    ||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
298	[BUG]  [BUGGY]  Node  factory  =  this.node.getFirstChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  factory  =  this.node.getFirstChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  factory  =  this.node.getFirstChild();	  Node    factory    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
299	[BUG]  [BUGGY]  Node  factory  =  n.cloneTree();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  factory  =  n.cloneTree();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  factory  =  n.cloneTree();	  Node    factory    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
300	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isFunction(n))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isFunction(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isFunction(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isStringNode(n))    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
301	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  ||  NodeUtil.isName(n))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  ||  NodeUtil.isName(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable!=  null  ||  NodeUtil.isName(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isStringNode(n))    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
302	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.NAME  ||  n.getString().equals( "string "))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.NAME  ||  n.getString().equals( "string "))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  n.getType()  ==  Token.NAME  ||  n.getString().equals( "string "))  {	  if(n    ==    null    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
303	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.NAME  ||  n.getString().equals( "name "))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.NAME  ||  n.getString().equals( "name "))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  n.getType()  ==  Token.NAME  ||  n.getString().equals( "name "))  {	  if(n    ==    null    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	19	None	replace
304	[BUG]  [BUGGY]  if(isExpressionNode(n)||  NodeUtil.isFunction(n))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(isExpressionNode(n)||  NodeUtil.isFunction(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(isExpressionNode(n)||  NodeUtil.isFunction(n))  {	  if(isExpressionNode(n)||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
305	[BUG]  [BUGGY]  if(isExpressionNode(n)||  NodeUtil.isExpressionNode(n.getFirstChild()))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(isExpressionNode(n)||  NodeUtil.isExpressionNode(n.getFirstChild()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(isExpressionNode(n)||  NodeUtil.isExpressionNode(n.getFirstChild()))  {	  if(isExpressionNode(n)||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
306	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()  + ") ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()  + ") ");  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  String.valueOf(n.getString()  + ") ");	  Preconditions.checkState(n.getType()    ==    Token.NAME,    String.valueOf(n.getString()));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
307	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  String.valueOf(n.getString()));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  String.valueOf(n.getString()));  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  String.valueOf(n.getString()));	  Preconditions.checkState(n.getType()    ==    Token.NAME,    String.valueOf(n.getString()));    	non-compiled	[CE]  <identifier>  expected	84	None	replace
308	[BUG]  [BUGGY]  if(n.getType()!=  Token.STRING  ||!NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()!=  Token.STRING  ||!NodeUtil.isExpressionNode(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()!=  Token.STRING  ||!NodeUtil.isExpressionNode(n))  {	  if(n.getType()    ==    Token.STRING    ||!NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
309	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isFunction(n))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isFunction(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||!NodeUtil.isFunction(n))  {	  if(n.getType()    ==    Token.STRING    ||!NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
310	[BUG]  [BUGGY]  if(n  <  null  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  <  null  ||  n.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  <  null  ||  n.getType()!=  Token.STRING)  {	  if(n    ==    null    ||    n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
311	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME  ||  n.getString()  ==  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()!=  Token.NAME  ||  n.getString()  ==  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()!=  Token.NAME  ||  n.getString()  ==  null);	  Preconditions.checkState(n.getType()!=    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
312	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getFirstChild()  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getFirstChild()  :  n.getLastChild();	  Node    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
313	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  null  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  null  :  n.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  null  :  n.getLastChild();	  Node    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
314	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getLastChild()  :  n.getFirstChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getLastChild()  :  n.getFirstChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getLastChild()  :  n.getFirstChild();	  Node    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
315	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getLastChild()  :  n;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getLastChild()  :  n;  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getLastChild()  :  n;	  Node    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
316	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class);	  Node    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
317	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getSource();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getSource();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.getSource();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getNext();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
318	[BUG]  [BUGGY]  if(n.getType()!=  Token.STRING  ||  n.getType()!=  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()!=  Token.STRING  ||  n.getType()!=  Token.NAME)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()!=  Token.STRING  ||  n.getType()!=  Token.NAME)  {	  if(n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
319	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isUnknownNode()  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isUnknownNode()  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isUnknownNode()  ||  n.getType()  ==  Token.STRING)  {	  if(n    ==    null    ||    factorySymbolTable.isUnknownNode())    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
320	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isUnknownNode()  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isUnknownNode()  ||  n.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isUnknownNode()  ||  n.getType()!=  Token.STRING)  {	  if(n    ==    null    ||    factorySymbolTable.isUnknownNode())    {    	non-compiled	[CE]  <identifier>  expected	74	None	replace
321	[BUG]  [BUGGY]  Node  parentSymbolTable  =(node!=  null)?  node.getParent()  :  n;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  parentSymbolTable  =(node!=  null)?  node.getParent()  :  n;  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =(node!=  null)?  node.getParent()  :  n;	  Node    parentSymbolTable    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
322	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME,  n.getString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME,  n.getString());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()!=  Token.NAME,  n.getString());	  Preconditions.checkArgument(n.getType()!=    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
323	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME  ||  n.getString()  ==  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()!=  Token.NAME  ||  n.getString()  ==  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()!=  Token.NAME  ||  n.getString()  ==  null);	  Preconditions.checkArgument(n.getType()!=    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	91	None	replace
324	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =  n.getFirstChild().cloneTree();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =  n.getFirstChild().cloneTree();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =  n.getFirstChild().cloneTree();	  Node    preprocessorSymbolTable    =    n.getFirstChild().getNext();    	non-compiled	[CE]  <identifier>  expected	94	None	replace
325	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  _name);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  _name);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  _name);	  Preconditions.checkState(n.getType()    ==    Token.NAME,    name);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
326	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  Arrays.asList(name));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  Arrays.asList(name));  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  Arrays.asList(name));	  Preconditions.checkState(n.getType()    ==    Token.NAME,    name);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
327	[BUG]  [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.getProp(Node.SOURCENAME_PROP);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  preprocessorSymbolTable  =(Node)n.getProp(Node.SOURCENAME_PROP);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  preprocessorSymbolTable  =(Node)n.getProp(Node.SOURCENAME_PROP);	  Node    preprocessorSymbolTable    =(Node)n.getNext();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
328	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getName());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n.getString(),  n.getName());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n.getString());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
329	[BUG]  [BUGGY]  if(rawName  ==  null  ||  n  ==  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(rawName  ==  null  ||  n  ==  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(rawName  ==  null  ||  n  ==  null  ||  n.getType()  ==  Token.STRING)  {	  if(rawName    ==    null    ||    n    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
330	[BUG]  [BUGGY]  if(rawName  ==  null  ||  n  ==  null  ||  n.getType()  ==  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(rawName  ==  null  ||  n  ==  null  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(rawName  ==  null  ||  n  ==  null  ||  n.getType()  ==  Token.NAME)  {	  if(rawName    ==    null    ||    n    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	85	None	replace
331	[BUG]  [BUGGY]  if(n  ==  null  ||  NodeUtil.isExpressionNode(n.getFirstChild()))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  NodeUtil.isExpressionNode(n.getFirstChild()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  NodeUtil.isExpressionNode(n.getFirstChild()))  {	  if(n    ==    null    ||    NodeUtil.isExpressionNode(preprocessorSymbolTable))    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
332	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  n.getFirstChild()  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  n.getFirstChild()  :  n.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(preprocessorSymbolTable!=  null)?  n.getFirstChild()  :  n.getLastChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
333	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getLastChild()  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getLastChild()  :  n.getLastChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(n.getFirstChild()  ==  null)?  n.getLastChild()  :  n.getLastChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
334	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getString()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getString()  ==  Token.NAME);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getString()  ==  Token.NAME);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING    ||    n.getType()    ==    Token.NAME);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
335	[BUG]  [BUGGY]  Node  parentSymbolTable  =(n.getParent()!=  null)?  n.getParent()  :  n.getParent();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  parentSymbolTable  =(n.getParent()!=  null)?  n.getParent()  :  n.getParent();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =(n.getParent()!=  null)?  n.getParent()  :  n.getParent();	  Node    parentSymbolTable    =    n.getNext();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
336	[BUG]  [BUGGY]  Node  parentSymbolTable  =(n.getParent()  ==  null)?  n.getParent()  :  n.getParent();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  parentSymbolTable  =(n.getParent()  ==  null)?  n.getParent()  :  n.getParent();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =(n.getParent()  ==  null)?  n.getParent()  :  n.getParent();	  Node    parentSymbolTable    =    n.getNext();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
337	[BUG]  [BUGGY]  Node  parentSymbolTable  =(n.getParent()!=  null)?  n.getParent()  :  n.getNext();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Node  parentSymbolTable  =(n.getParent()!=  null)?  n.getParent()  :  n.getNext();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Node  parentSymbolTable  =(n.getParent()!=  null)?  n.getParent()  :  n.getNext();	  Node    parentSymbolTable    =    n.getNext();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
338	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  n.getString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  n.getString());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  n.getString());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
339	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  n.getFirstChild());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  n.getFirstChild());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(this,  n.getFirstChild());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(this);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
340	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isString())  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isString())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isString())  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticNode())    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
341	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class,  true);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class,  true);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class,  true);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(String.class);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
342	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class,  n.getName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class,  n.getName());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(String.class,  n.getName());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(String.class);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
343	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  n.getName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  n.getName());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING,  n.getName());	  Preconditions.checkArgument(n.getType()    ==    Token.STRING,    n.getString());    	non-compiled	[CE]  <identifier>  expected	93	None	replace
344	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getName());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getName());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
345	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.toString());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  n.toString());	  Preconditions.checkState(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
346	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.toString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.toString());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.toString());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
347	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getName());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME,  n.getName());	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    n.getString());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
348	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.removeFirstChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.removeFirstChild();  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)n.removeFirstChild();	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
349	[BUG]  [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock()  ||  n.getString().equals( "string "))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock()  ||  n.getString().equals( "string "))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  ==  null  ||  factorySymbolTable.isSyntheticBlock()  ||  n.getString().equals( "string "))  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticBlock()    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	106	None	replace
350	[BUG]  [BUGGY]  if(n  <  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n  <  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n  <  null  ||  n.getType()  ==  Token.STRING)  {	  if(n    ==    null    ||    n.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
351	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.STRING);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.STRING);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.STRING);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING,    name);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
352	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  '_');  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  '_');  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING,  '_');	  Preconditions.checkArgument(n.getType()    ==    Token.STRING,    name);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
353	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  _name);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING,  _name);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING,  _name);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING,    name);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
354	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getName()!=  null);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getName()!=  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.STRING  ||  n.getName()!=  null);	  Preconditions.checkArgument(n.getType()    ==    Token.STRING    ||    n.getString()!=    null);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
355	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isName(n)||  NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isName(n)||  NodeUtil.isExpressionNode(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable  ==  null  ||  NodeUtil.isName(n)||  NodeUtil.isExpressionNode(n))  {	  if(preprocessorSymbolTable    ==    null    ||    NodeUtil.isName(n))    {    	non-compiled	[CE]  <identifier>  expected	82	None	replace
356	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n.getString())||!NodeUtil.isFunction(n.getString()))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n.getString())||!NodeUtil.isFunction(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n.getString())||!NodeUtil.isFunction(n.getString()))  {	  if(n.getType()    ==    Token.STRING    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
357	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n.getString())||!NodeUtil.isImmutableValue(n.getString()))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n.getString())||!NodeUtil.isImmutableValue(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n.getString())||!NodeUtil.isImmutableValue(n.getString()))  {	  if(n.getType()    ==    Token.STRING    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
358	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n.getString())||!NodeUtil.isExpressionNode(n.getString()))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n.getString())||!NodeUtil.isExpressionNode(n.getString()))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||!NodeUtil.isName(n.getString())||!NodeUtil.isExpressionNode(n.getString()))  {	  if(n.getType()    ==    Token.STRING    ||!NodeUtil.isName(n.getString()))    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
359	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.FUNCTION  ||  n.getChildCount()  ==  2)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.FUNCTION  ||  n.getChildCount()  ==  2)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||  n.getType()  ==  Token.FUNCTION  ||  n.getChildCount()  ==  2)  {	  if(n.getType()    ==    Token.STRING    ||    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
360	[BUG]  [BUGGY]  if(rawName  ==  null  ||  n.getType()!=  Token.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(rawName  ==  null  ||  n.getType()!=  Token.NAME)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(rawName  ==  null  ||  n.getType()!=  Token.NAME)  {	  if(rawName    ==    null    ||    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
361	[BUG]  [BUGGY]  if(n!=  null  ||  factorySymbolTable.isSyntheticBlock()  ||  n.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  ||  factorySymbolTable.isSyntheticBlock()  ||  n.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  ||  factorySymbolTable.isSyntheticBlock()  ||  n.getType()!=  Token.STRING)  {	  if(n    ==    null    ||    factorySymbolTable.isSyntheticBlock()    ||    n.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	105	None	replace
362	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getFirstChild()  ==  null  ||  n.getLastChild().getString().equals( "string "))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n.getFirstChild()  ==  null  ||  n.getLastChild().getString().equals( "string "))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||  n.getFirstChild()  ==  null  ||  n.getLastChild().getString().equals( "string "))  {	  if(n.getType()    ==    Token.STRING    ||    n.getFirstChild()    ==    null)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
363	[BUG]  [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.NAME);	  Preconditions.checkArgument(n.getType()    ==    Token.NAME,    name);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
364	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  ScriptRuntime.class);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  ScriptRuntime.class);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  getPreprocessorSymbolTable(n,  ScriptRuntime.class);	  PreprocessorSymbolTable    preprocessorSymbolTable    =    getPreprocessorSymbolTable(n,    Object.class);    	non-compiled	[CE]  <identifier>  expected	104	None	replace
365	[BUG]  [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n!=  null  ||  factorySymbolTable.isSyntheticBlock())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  ==  Token.STRING  ||  n!=  null  ||  factorySymbolTable.isSyntheticBlock())  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  ==  Token.STRING  ||  n!=  null  ||  factorySymbolTable.isSyntheticBlock())  {	  if(n!=    null    ||    factorySymbolTable.isSyntheticBlock())    {    	non-compiled	[CE]  <identifier>  expected	54	None	replace
366	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getName()!=  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getName()!=  null);  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getName()!=  null);	  Preconditions.checkState(n.getType()    ==    Token.NAME    ||    n.getString()!=    null);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
367	[BUG]  [BUGGY]  if(n.getType()  >=  Token.STRING  ||  n.getString().equals( "string "))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n.getType()  >=  Token.STRING  ||  n.getString().equals( "string "))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n.getType()  >=  Token.STRING  ||  n.getString().equals( "string "))  {	  if(n.getType()    ==    Token.STRING    ||    n.getString().equals(   "string   "))    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
368	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.getFirstChild());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.getFirstChild());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n.getFirstChild());	  PreprocessorSymbolTable    preprocessorSymbolTable    =(PreprocessorSymbolTable)getPreprocessorSymbolTable(n);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
369	[BUG]  [BUGGY]  if(preprocessorSymbolTable!=  null  &&  NodeUtil.isExpressionNode(n))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable!=  null  &&  NodeUtil.isExpressionNode(n))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable!=  null  &&  NodeUtil.isExpressionNode(n))  {	  if(preprocessorSymbolTable!=    null    ||    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  <identifier>  expected	97	None	replace
370	[BUG]  [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(n.getString());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(n.getString());  [BUGGY]      if  (preprocessorSymbolTable  ==  null)  {  return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	PreprocessorSymbolTable  preprocessorSymbolTable  =  n.getPreprocessorSymbolTable(n.getString());	  PreprocessorSymbolTable    preprocessorSymbolTable    =    n.getPreprocessorSymbolTable(true);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
371	[BUG]  [BUGGY]  if(n!=  null  &&  n.getType()  ==  Token.NAME  ||  n.getString().equals( "string "))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(n!=  null  &&  n.getType()  ==  Token.NAME  ||  n.getString().equals( "string "))  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(n!=  null  &&  n.getType()  ==  Token.NAME  ||  n.getString().equals( "string "))  {	  if(n!=    null    &&    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
372	[BUG]  [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  preprocessorSymbolTable.getType()!=  Token.STRING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          private  void  maybeAddStringNodeToSymbolTable(Node  n)  {      [BUGGY]  if(preprocessorSymbolTable  ==  null  ||  preprocessorSymbolTable.getType()!=  Token.STRING)  {  [BUGGY]      return;  }  String  name  =  n.getString();  Node  syntheticRef  =  NodeUtil.newQualifiedNameNode(  [CLASS]  	projects/Closure113/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	1.0	1172	1172	1	replace	if(preprocessorSymbolTable  ==  null  ||  preprocessorSymbolTable.getType()!=  Token.STRING)  {	  if(n    ==    null    ||    preprocessorSymbolTable.getType()!=    Token.STRING)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
