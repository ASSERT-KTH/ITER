projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java502
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java502System.arraycopy(weightedResiduals,0,jTj,0,weightedResiduals);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java502System.arraycopy(weightedResiduals,0,jTj,0,weightedResiduals,getWeight());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java502System.arraycopy(weightedResiduals,0,jTj,0,weightedResiduals,getWidth());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java502System.arraycopy(weightedResiduals,0,jTj,0,jacobianData.length);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java502System.arraycopy(weightedResiduals,0,covar,getWeight());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java141
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java141intcols=jF.getJacobianEvaluations();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java141intjacobianEvaluations=jF.getJacobianEvaluations();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java141double[][]rows=jF.getJacobianEvaluations();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java141intjacobianEvaluations=this.weightedResidualJacobian.doubleValue();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java141intjacobianEvaluations=this.weightedResidualJacobian.getCols();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423finalPointVectorValuePairoptimize(maxEval,f,weights,startPoint);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423finalPointVectorValuePairoptimize(f,maxEval,weights,startPoint);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423finalPointVectorValuePairoptimize(maxEval,f,weights,startPoint,false);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423finalintcolls=Math.min(maxEval,weights,startPoint);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423finalPointVectorValuePairoptimize(maxEval,f,weights,startPoint,true);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java135
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java135if(checker.getStdDevValue()==null){double[][]weightedResidualJacobian=getWorthMatrixSqrt().getIndexOf(jF.getLeastSuperlativeity());}
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java135if(checker.getStdDevValue()==null){double[][]weightedResidualJacobian=getWorthMatrixSqrt().getIndexOf(jF.getConvergence());}
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java135if(checker.getStdDevValue()==null){double[][]weightedResidualJacobian=getWorthMatrixSqrt().getIndexOf(jF.getConvergence()),checker.get
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java135if(checker.getStdDevValue()==null){double[][]weightedResidualJacobian=getWorthMatrixSqrt().getIndexOf(jF.getConvergence());}else{Preconditions.checkState(
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java135if(checker.getStdDevValue()==null){double[][]weightedResidualJacobian=getWorthMatrixSqrt().getIndexOf(jF.getConvergence()),checker.getOptional
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505System.arraycopy(weightedResiduals,0,jTj,0,weightedResiduals);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505System.arraycopy(weightedResiduals,0,jTj,0,jacobianData.length);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505System.arraycopy(weightedResiduals,0,jTj,0,getWidth());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedResiduals=getWidth();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505System.arraycopy(weightedResiduals,0,jTj,0,covar,getWeight());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableMultivariateVectorFunction(f),optData);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(f,FunctionUtils.toDifferentiableMultivariateVectorFunction(maxEval),optData);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeOptimizeInternal(maxEval,FunctionUtils.toDifferentiableMultivariateVectorFunction(f),optData);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableMultivariateVectorFunction(f),optData[optData]);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java508
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java508jTj=squareRoot(getWeight());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java508jTj=squareRoot(getWidth());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java508jTj=squareRoot(getHeight());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java508JTj=squareRoot(getWeight());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java508weightedResiduals=squareRoot(getWeight());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java135}
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java135this.weightMatrixSqrt=checker.getSize();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java135this.weightMatrixSqrt=jF.getWorthMatrixSqrt();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java135this.weightMatrixSqrt=jF.getSize();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java135this.weightMatrixSqrt=jF.getWorthMatrix();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java562finalEigenDecompositiondec=newEigenDecomposition(m);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java562finalEigenDecompositiondec=newEigenDecomposition(m,weightedResiduals);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java562finalEigenDecompositiondec=newEigenDecomposition(m,i);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java562finalEigenDecompositiondec=newEigenDecomposition(m,weightedJacobianEvaluations);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java562
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496OptData[]optData=f.getOptimizationData();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496optData[opt]=f.getValue();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496OptData[]optData=f.getValue();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496optData[]=f.getValue();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496OptData[]optData=f.getValues();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java134
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java134Preconditions.checkNotNull(checker);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java134super(checker);
