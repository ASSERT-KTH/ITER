bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] super(checker); [FE] OutOfMemoryError [CONTEXT] protected AbstractLeastSquaresOptimizer(ConvergenceChecker<PointVectorValuePair> checker) { [BUGGY] super(checker); [BUGGY] } [CLASS] AbstractLeastSquaresOptimizer [METHOD] <init> [RETURN_TYPE] ConvergenceChecker)  PointVectorValuePair> checker [VARIABLES] ConvergenceChecker checker boolean double[] objective point weightedResiduals MultivariateDifferentiableVectorFunction jF RealMatrix weightMatrixSqrt double DEFAULT_SINGULARITY_THRESHOLD cost double[][] weightedResidualJacobian int cols jacobianEvaluations rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	134	134	1	replace	
2	[BUG] [BUGGY] [FE] OutOfMemoryError [CONTEXT] protected AbstractLeastSquaresOptimizer(ConvergenceChecker<PointVectorValuePair> checker) { [BUGGY] [BUGGY] super(checker); } [CLASS] AbstractLeastSquaresOptimizer [METHOD] <init> [RETURN_TYPE] ConvergenceChecker)  PointVectorValuePair> checker [VARIABLES] ConvergenceChecker checker boolean double[] objective point weightedResiduals MultivariateDifferentiableVectorFunction jF RealMatrix weightMatrixSqrt double DEFAULT_SINGULARITY_THRESHOLD cost double[][] weightedResidualJacobian int cols jacobianEvaluations rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	134	134	1	add	
3	[BUG] [BUGGY] } [FE] OutOfMemoryError [CONTEXT] protected AbstractLeastSquaresOptimizer(ConvergenceChecker<PointVectorValuePair> checker) { super(checker); [BUGGY] } [BUGGY]  [CLASS] AbstractLeastSquaresOptimizer [METHOD] <init> [RETURN_TYPE] ConvergenceChecker)  PointVectorValuePair> checker [VARIABLES] ConvergenceChecker checker boolean double[] objective point weightedResiduals MultivariateDifferentiableVectorFunction jF RealMatrix weightMatrixSqrt double DEFAULT_SINGULARITY_THRESHOLD cost double[][] weightedResidualJacobian int cols jacobianEvaluations rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	135	135	1	replace	
4	[BUG] [BUGGY] [FE] OutOfMemoryError [CONTEXT] protected AbstractLeastSquaresOptimizer(ConvergenceChecker<PointVectorValuePair> checker) { super(checker); [BUGGY] [BUGGY] } [CLASS] AbstractLeastSquaresOptimizer [METHOD] <init> [RETURN_TYPE] ConvergenceChecker)  PointVectorValuePair> checker [VARIABLES] ConvergenceChecker checker boolean double[] objective point weightedResiduals MultivariateDifferentiableVectorFunction jF RealMatrix weightMatrixSqrt double DEFAULT_SINGULARITY_THRESHOLD cost double[][] weightedResidualJacobian int cols jacobianEvaluations rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	135	135	1	add	
5	[BUG] [BUGGY] return optimizeInternal(maxEval,  FunctionUtils.toMultivariateDifferentiableVectorFunction(f),    new Target(target), [FE] OutOfMemoryError [CONTEXT] public PointVectorValuePair optimize(int maxEval, final DifferentiableMultivariateVectorFunction f, final double[] target, final double[] weights, final double[] startPoint) { [BUGGY] return optimizeInternal(maxEval,        FunctionUtils.toMultivariateDifferentiableVectorFunction(f),                new Target(target), [BUGGY] FunctionUtils.toMultivariateDifferentiableVectorFunction(f), new Target(target), new Weight(weights), new InitialGuess(startPoint)); } [CLASS] AbstractLeastSquaresOptimizer [METHOD] optimize [RETURN_TYPE] PointVectorValuePair  int maxEval DifferentiableMultivariateVectorFunction f final double[] target final double[] weights final double[] startPoint [VARIABLES] boolean double[] errors objective params point res residuals sig startPoint target weightedResiduals weights MultivariateDifferentiableVectorFunction jF RealMatrix j jTj weightMatrixSqrt weightedJacobian double DEFAULT_SINGULARITY_THRESHOLD c cost covarianceSingularityThreshold threshold double[][] cov covar jacobianData weightedResidualJacobian DifferentiableMultivariateVectorFunction f int cols i j jacobianEvaluations maxEval nC nR rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	423	425	1	replace	
6	[BUG] [BUGGY] [FE] OutOfMemoryError [CONTEXT] public PointVectorValuePair optimize(int maxEval, final DifferentiableMultivariateVectorFunction f, final double[] target, final double[] weights, final double[] startPoint) { [BUGGY] [BUGGY] return optimizeInternal(maxEval,        FunctionUtils.toMultivariateDifferentiableVectorFunction(f),                new Target(target), FunctionUtils.toMultivariateDifferentiableVectorFunction(f), new Target(target), new Weight(weights), new InitialGuess(startPoint)); } [CLASS] AbstractLeastSquaresOptimizer [METHOD] optimize [RETURN_TYPE] PointVectorValuePair  int maxEval DifferentiableMultivariateVectorFunction f final double[] target final double[] weights final double[] startPoint [VARIABLES] boolean double[] errors objective params point res residuals sig startPoint target weightedResiduals weights MultivariateDifferentiableVectorFunction jF RealMatrix j jTj weightMatrixSqrt weightedJacobian double DEFAULT_SINGULARITY_THRESHOLD c cost covarianceSingularityThreshold threshold double[][] cov covar jacobianData weightedResidualJacobian DifferentiableMultivariateVectorFunction f int cols i j jacobianEvaluations maxEval nC nR rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	423	425	1	add	
7	[BUG] [BUGGY] return super.optimizeInternal(maxEval, FunctionUtils.toDifferentiableMultivariateVectorFunction(f), optData); [FE] OutOfMemoryError [CONTEXT] protected PointVectorValuePair optimizeInternal(final int maxEval, final MultivariateDifferentiableVectorFunction f, OptimizationData... optData) {   [BUGGY] return super.optimizeInternal(maxEval, FunctionUtils.toDifferentiableMultivariateVectorFunction(f), optData); [BUGGY] } [CLASS] AbstractLeastSquaresOptimizer [METHOD] optimizeInternal [RETURN_TYPE] PointVectorValuePair  final int maxEval MultivariateDifferentiableVectorFunction f optData [VARIABLES] OptimizationData[] optData boolean double[] errors objective params point res residuals sig startPoint target weightedResiduals weights MultivariateDifferentiableVectorFunction f jF RealMatrix j jTj weightMatrixSqrt weightedJacobian double DEFAULT_SINGULARITY_THRESHOLD c cost covarianceSingularityThreshold threshold double[][] cov covar jacobianData weightedResidualJacobian int cols i j jacobianEvaluations maxEval nC nR rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	496	496	1	replace	
8	[BUG] [BUGGY] [FE] OutOfMemoryError [CONTEXT] protected PointVectorValuePair optimizeInternal(final int maxEval, final MultivariateDifferentiableVectorFunction f, OptimizationData... optData) {   [BUGGY] [BUGGY] return super.optimizeInternal(maxEval, FunctionUtils.toDifferentiableMultivariateVectorFunction(f), optData); } [CLASS] AbstractLeastSquaresOptimizer [METHOD] optimizeInternal [RETURN_TYPE] PointVectorValuePair  final int maxEval MultivariateDifferentiableVectorFunction f optData [VARIABLES] OptimizationData[] optData boolean double[] errors objective params point res residuals sig startPoint target weightedResiduals weights MultivariateDifferentiableVectorFunction f jF RealMatrix j jTj weightMatrixSqrt weightedJacobian double DEFAULT_SINGULARITY_THRESHOLD c cost covarianceSingularityThreshold threshold double[][] cov covar jacobianData weightedResidualJacobian int cols i j jacobianEvaluations maxEval nC nR rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	496	496	1	add	
9	[BUG] [BUGGY] super.setUp(); [FE] OutOfMemoryError [CONTEXT] protected void setUp() { [BUGGY] super.setUp(); [BUGGY]   jacobianEvaluations = 0;  weightMatrixSqrt = squareRoot(getWeight());     [CLASS] AbstractLeastSquaresOptimizer [METHOD] setUp [RETURN_TYPE] void  [VARIABLES] boolean double[] errors objective params point res residuals sig startPoint target weightedResiduals weights MultivariateDifferentiableVectorFunction f jF RealMatrix j jTj weightMatrixSqrt weightedJacobian double DEFAULT_SINGULARITY_THRESHOLD c cost covarianceSingularityThreshold threshold double[][] cov covar jacobianData weightedResidualJacobian int cols i j jacobianEvaluations maxEval nC nR rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	502	502	1	replace	
10	[BUG] [BUGGY] [FE] OutOfMemoryError [CONTEXT] protected void setUp() { [BUGGY] [BUGGY] super.setUp();  jacobianEvaluations = 0;  weightMatrixSqrt = squareRoot(getWeight());     [CLASS] AbstractLeastSquaresOptimizer [METHOD] setUp [RETURN_TYPE] void  [VARIABLES] boolean double[] errors objective params point res residuals sig startPoint target weightedResiduals weights MultivariateDifferentiableVectorFunction f jF RealMatrix j jTj weightMatrixSqrt weightedJacobian double DEFAULT_SINGULARITY_THRESHOLD c cost covarianceSingularityThreshold threshold double[][] cov covar jacobianData weightedResidualJacobian int cols i j jacobianEvaluations maxEval nC nR rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	502	502	1	add	
11	[BUG] [BUGGY] jacobianEvaluations = 0; [FE] OutOfMemoryError [CONTEXT] protected void setUp() { super.setUp();  [BUGGY] jacobianEvaluations = 0; [BUGGY]   weightMatrixSqrt = squareRoot(getWeight());        [CLASS] AbstractLeastSquaresOptimizer [METHOD] setUp [RETURN_TYPE] void  [VARIABLES] boolean double[] errors objective params point res residuals sig startPoint target weightedResiduals weights MultivariateDifferentiableVectorFunction f jF RealMatrix j jTj weightMatrixSqrt weightedJacobian double DEFAULT_SINGULARITY_THRESHOLD c cost covarianceSingularityThreshold threshold double[][] cov covar jacobianData weightedResidualJacobian int cols i j jacobianEvaluations maxEval nC nR rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	505	505	1	replace	
12	[BUG] [BUGGY] [FE] OutOfMemoryError [CONTEXT] protected void setUp() { super.setUp();  [BUGGY] [BUGGY] jacobianEvaluations = 0;  weightMatrixSqrt = squareRoot(getWeight());        [CLASS] AbstractLeastSquaresOptimizer [METHOD] setUp [RETURN_TYPE] void  [VARIABLES] boolean double[] errors objective params point res residuals sig startPoint target weightedResiduals weights MultivariateDifferentiableVectorFunction f jF RealMatrix j jTj weightMatrixSqrt weightedJacobian double DEFAULT_SINGULARITY_THRESHOLD c cost covarianceSingularityThreshold threshold double[][] cov covar jacobianData weightedResidualJacobian int cols i j jacobianEvaluations maxEval nC nR rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	505	505	1	add	
13	[BUG] [BUGGY] weightMatrixSqrt = squareRoot(getWeight()); [FE] OutOfMemoryError [CONTEXT] protected void setUp() { super.setUp();  jacobianEvaluations = 0;  [BUGGY] weightMatrixSqrt = squareRoot(getWeight()); [BUGGY]        jF = FunctionUtils.toMultivariateDifferentiableVectorFunction((DifferentiableMultivariateVectorFunction) getObjectiveFunction());   [CLASS] AbstractLeastSquaresOptimizer [METHOD] setUp [RETURN_TYPE] void  [VARIABLES] boolean double[] errors objective params point res residuals sig startPoint target weightedResiduals weights MultivariateDifferentiableVectorFunction f jF RealMatrix j jTj weightMatrixSqrt weightedJacobian double DEFAULT_SINGULARITY_THRESHOLD c cost covarianceSingularityThreshold threshold double[][] cov covar jacobianData weightedResidualJacobian int cols i j jacobianEvaluations maxEval nC nR rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	508	508	1	replace	
14	[BUG] [BUGGY] [FE] OutOfMemoryError [CONTEXT] protected void setUp() { super.setUp();  jacobianEvaluations = 0;  [BUGGY] [BUGGY] weightMatrixSqrt = squareRoot(getWeight());       jF = FunctionUtils.toMultivariateDifferentiableVectorFunction((DifferentiableMultivariateVectorFunction) getObjectiveFunction());   [CLASS] AbstractLeastSquaresOptimizer [METHOD] setUp [RETURN_TYPE] void  [VARIABLES] boolean double[] errors objective params point res residuals sig startPoint target weightedResiduals weights MultivariateDifferentiableVectorFunction f jF RealMatrix j jTj weightMatrixSqrt weightedJacobian double DEFAULT_SINGULARITY_THRESHOLD c cost covarianceSingularityThreshold threshold double[][] cov covar jacobianData weightedResidualJacobian int cols i j jacobianEvaluations maxEval nC nR rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	508	508	1	add	
15	[BUG] [BUGGY] final EigenDecomposition dec = new EigenDecomposition(m); [FE] OutOfMemoryError [CONTEXT] private RealMatrix squareRoot(RealMatrix m) { [BUGGY] final EigenDecomposition dec = new EigenDecomposition(m); [BUGGY] return dec.getSquareRoot(); } [CLASS] AbstractLeastSquaresOptimizer [METHOD] squareRoot [RETURN_TYPE] RealMatrix  RealMatrix m [VARIABLES] EigenDecomposition dec boolean double[] errors objective objectiveValue params point res residuals sig startPoint target weightedResiduals weights MultivariateDifferentiableVectorFunction f jF RealMatrix j jTj m weightMatrixSqrt weightedJacobian double DEFAULT_SINGULARITY_THRESHOLD c cost covarianceSingularityThreshold threshold double[][] cov covar jacobianData weightedResidualJacobian int cols i j jacobianEvaluations maxEval nC nR rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	562	562	1	replace	
16	[BUG] [BUGGY] [FE] OutOfMemoryError [CONTEXT] private RealMatrix squareRoot(RealMatrix m) { [BUGGY] [BUGGY] final EigenDecomposition dec = new EigenDecomposition(m); return dec.getSquareRoot(); } [CLASS] AbstractLeastSquaresOptimizer [METHOD] squareRoot [RETURN_TYPE] RealMatrix  RealMatrix m [VARIABLES] EigenDecomposition dec boolean double[] errors objective objectiveValue params point res residuals sig startPoint target weightedResiduals weights MultivariateDifferentiableVectorFunction f jF RealMatrix j jTj m weightMatrixSqrt weightedJacobian double DEFAULT_SINGULARITY_THRESHOLD c cost covarianceSingularityThreshold threshold double[][] cov covar jacobianData weightedResidualJacobian int cols i j jacobianEvaluations maxEval nC nR rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	562	562	1	add	
