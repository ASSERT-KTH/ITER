projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423double[][]weights=f.getMatrixes();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intcols=Math.min(weights.length,maxEval);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423double[][]weights=f.getMean();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(maxEval,FunctionUtils.toMultivariateDifferentiableVectorFunction(f),newTarget(target),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(maxEval,f,newTarget(target),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(target,FunctionUtils.toMultivariateDifferentiableVectorFunction(f),newTarget(maxEval),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.min(maxEval,f.getMaxEval());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.min(maxEval,f.length);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.max(maxEval,f.getMaxY());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423double[][]weights=f.getMeanValues();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimize(maxEval,f,newTarget(target),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423double[][]weights=f.getMeanEvaluations();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.max(maxEval,f.getMaxX());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.min(maxEval,f.getMaxY());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.min(maxEval,f.getMaxEval()-1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.min(maxEval,f.getMaxEval()+1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423[][]weights=f.getMatrixes();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(f,FunctionUtils.toMultivariateDifferentiableVectorFunction(target),newTarget(maxEval),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(target,f,newTarget(maxEval),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimize(target,f,newTarget(maxEval),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimize(maxEval,target,newTarget(f),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(f,maxEval,newTarget(target),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.min(maxEval,f.length-1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.max(maxEval,f.length);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423[][]weights=f.getMean();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intcols=Math.min(weights.length,startPoint);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intcols=Math.max(weights.length,startPoint);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423double[][]weights=f.getMeanEvaluators();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(f,FunctionUtils.toMultivariateDifferentiableVectorFunction(target),newTarget(startPoint),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intcols=Math.max(weights.length,maxEval);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.max(maxEval,f.getMaxY()-1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.max(maxEval,f.getMaxEval());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.min(maxEval,f.getMaxX());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(f,target,newTarget(maxEval),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423double[][]weights=f.getEvaluators();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimize(target,f,newTarget(startPoint),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimize(f,target,newTarget(maxEval),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423double[][]weights=f.getMeanEvaluations()+1;
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimize(target,maxEval,newTarget(f),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(f,target,newTarget(startPoint),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(f,target,newTarget(maxEval),newTarget(target),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.max(maxEval,f.length-1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(target,f,newTarget(startPoint),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.max(maxEval,f.getMaxEval()+1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423[][]weights=f.getMeanEvaluations();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.min(maxEval,f.length-2);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(target,maxEval,newTarget(f),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423[][]weights=f.getMeanEvaluators();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(f,startPoint,newTarget(target),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(f,f,newTarget(startPoint),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(f,FunctionUtils.toMultivariateDifferentiableVectorFunction(target),newTarget(weights,startPoint)
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intcols=Math.min(weights.length,startPoint,maxEval);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(f,f,newTarget(maxEval),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(f,FunctionUtils.toMultivariateDifferentiableVectorFunction(target),newTarget(startPoint)
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.min(maxEval,f.getMaxY()-startPoint);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.max(maxEval,f.getMaxX()-startPoint);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intmaxEval=Math.max(maxEval,f.getMaxX()-1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intcols=Math.max(weights.length,weights.length);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimize(f,f,newTarget(maxEval),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(f,target,newTarget(target),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423double[][]weights=f.getMeanEvaluations(maxEval);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimizeInternal(f,f,newTarget(startPoint),newTarget(target),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423returnoptimize(f,f,newTarget(startPoint),
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java423intcols=Math.min(weights.length,weights.length);
