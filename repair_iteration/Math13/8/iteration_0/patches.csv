bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m.getMatrix());  [CE]  '.class'  expected  [FE]    OutOfMemoryError  [CONTEXT]  private  RealMatrix  squareRoot(RealMatrix  m)  {  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m.getMatrix());  [BUGGY]  return  dec.getSquareRoot();  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  squareRoot  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  EigenDecomposition  dec  boolean  double[]  errors  objective  objectiveValue  params  point  res  residuals  sig  startPoint  target  weightedResiduals  weights  MultivariateDifferentiableVectorFunction  f  jF  RealMatrix  j  jTj  m  weightMatrixSqrt  weightedJacobian  double  DEFAULT_SINGULARITY_THRESHOLD  c  cost  covarianceSingularityThreshold  threshold  double[][]  cov  covar  jacobianData  weightedResidualJacobian  int  cols  i  j  jacobianEvaluations  maxEval  nC  nR  rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	562	562	1	replace	final  EigenDecomposition  dec  =  new  EigenDecomposition(m.getMatrix());	final  EigenDecomposition  dec  =  new  EigenDecomposition(m);  	non-compiled	[CE]  '.class'  expected	15	None	replace
2	[BUG]  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m,  jTj);  [CE]  '.class'  expected  [FE]      OutOfMemoryError  [CONTEXT]  private  RealMatrix  squareRoot(RealMatrix  m)  {  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m,  jTj);  [BUGGY]  return  dec.getSquareRoot();  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  squareRoot  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  EigenDecomposition  dec  boolean  double[]  errors  objective  objectiveValue  params  point  res  residuals  sig  startPoint  target  weightedResiduals  weights  MultivariateDifferentiableVectorFunction  f  jF  RealMatrix  j  jTj  m  weightMatrixSqrt  weightedJacobian  double  DEFAULT_SINGULARITY_THRESHOLD  c  cost  covarianceSingularityThreshold  threshold  double[][]  cov  covar  jacobianData  weightedResidualJacobian  int  cols  i  j  jacobianEvaluations  maxEval  nC  nR  rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	562	562	1	replace	final  EigenDecomposition  dec  =  new  EigenDecomposition(m,  jTj);	final  EigenDecomposition  dec  =  new  EigenDecomposition(m);  	non-compiled	[CE]  '.class'  expected	15	None	replace
3	[BUG]  [BUGGY]    [CE]  '.class'  expected  [FE]        OutOfMemoryError  [CONTEXT]  private  RealMatrix  squareRoot(RealMatrix  m)  {  [BUGGY]    [BUGGY]  return  dec.getSquareRoot();  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  squareRoot  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  EigenDecomposition  dec  boolean  double[]  errors  objective  objectiveValue  params  point  res  residuals  sig  startPoint  target  weightedResiduals  weights  MultivariateDifferentiableVectorFunction  f  jF  RealMatrix  j  jTj  m  weightMatrixSqrt  weightedJacobian  double  DEFAULT_SINGULARITY_THRESHOLD  c  cost  covarianceSingularityThreshold  threshold  double[][]  cov  covar  jacobianData  weightedResidualJacobian  int  cols  i  j  jacobianEvaluations  maxEval  nC  nR  rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	562	562	1	replace	  	final  EigenDecomposition  dec  =  new  EigenDecomposition(m);  	non-compiled	[CE]  '.class'  expected	15	None	replace
4	[BUG]  [BUGGY]    RealMatrix  m  =(RealMatrix)m.clone();  [CE]  '.class'  expected  [FE]    OutOfMemoryError  [CONTEXT]  private  RealMatrix  squareRoot(RealMatrix  m)  {  [BUGGY]    RealMatrix  m  =(RealMatrix)m.clone();  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m);  return  dec.getSquareRoot();  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  squareRoot  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  EigenDecomposition  dec  boolean  double[]  errors  objective  objectiveValue  params  point  res  residuals  sig  startPoint  target  weightedResiduals  weights  MultivariateDifferentiableVectorFunction  f  jF  RealMatrix  j  jTj  m  weightMatrixSqrt  weightedJacobian  double  DEFAULT_SINGULARITY_THRESHOLD  c  cost  covarianceSingularityThreshold  threshold  double[][]  cov  covar  jacobianData  weightedResidualJacobian  int  cols  i  j  jacobianEvaluations  maxEval  nC  nR  rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	562	562	1	replace	    RealMatrix  m  =(RealMatrix)m.clone();		non-compiled	[CE]  '.class'  expected	16	None	add
5	[BUG]  [BUGGY]    RealMatrix  m  =  m.getMatrix();  [CE]  '.class'  expected  [FE]      OutOfMemoryError  [CONTEXT]  private  RealMatrix  squareRoot(RealMatrix  m)  {  [BUGGY]    RealMatrix  m  =  m.getMatrix();  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m);  return  dec.getSquareRoot();  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  squareRoot  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  EigenDecomposition  dec  boolean  double[]  errors  objective  objectiveValue  params  point  res  residuals  sig  startPoint  target  weightedResiduals  weights  MultivariateDifferentiableVectorFunction  f  jF  RealMatrix  j  jTj  m  weightMatrixSqrt  weightedJacobian  double  DEFAULT_SINGULARITY_THRESHOLD  c  cost  covarianceSingularityThreshold  threshold  double[][]  cov  covar  jacobianData  weightedResidualJacobian  int  cols  i  j  jacobianEvaluations  maxEval  nC  nR  rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	562	562	1	replace	    RealMatrix  m  =  m.getMatrix();		non-compiled	[CE]  '.class'  expected	16	None	add
6	[BUG]  [BUGGY]    RealMatrix  m  =(RealMatrix)m.getValue();  [CE]  '.class'  expected  [FE]        OutOfMemoryError  [CONTEXT]  private  RealMatrix  squareRoot(RealMatrix  m)  {  [BUGGY]    RealMatrix  m  =(RealMatrix)m.getValue();  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m);  return  dec.getSquareRoot();  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  squareRoot  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  EigenDecomposition  dec  boolean  double[]  errors  objective  objectiveValue  params  point  res  residuals  sig  startPoint  target  weightedResiduals  weights  MultivariateDifferentiableVectorFunction  f  jF  RealMatrix  j  jTj  m  weightMatrixSqrt  weightedJacobian  double  DEFAULT_SINGULARITY_THRESHOLD  c  cost  covarianceSingularityThreshold  threshold  double[][]  cov  covar  jacobianData  weightedResidualJacobian  int  cols  i  j  jacobianEvaluations  maxEval  nC  nR  rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	562	562	1	replace	    RealMatrix  m  =(RealMatrix)m.getValue();		non-compiled	[CE]  '.class'  expected	16	None	add
7	[BUG]  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m.getSquareRoot());  [CE]  '.class'  expected  [FE]    OutOfMemoryError  [CONTEXT]  private  RealMatrix  squareRoot(RealMatrix  m)  {  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m.getSquareRoot());  [BUGGY]  return  dec.getSquareRoot();  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  squareRoot  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  EigenDecomposition  dec  boolean  double[]  errors  objective  objectiveValue  params  point  res  residuals  sig  startPoint  target  weightedResiduals  weights  MultivariateDifferentiableVectorFunction  f  jF  RealMatrix  j  jTj  m  weightMatrixSqrt  weightedJacobian  double  DEFAULT_SINGULARITY_THRESHOLD  c  cost  covarianceSingularityThreshold  threshold  double[][]  cov  covar  jacobianData  weightedResidualJacobian  int  cols  i  j  jacobianEvaluations  maxEval  nC  nR  rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	562	562	1	replace	final  EigenDecomposition  dec  =  new  EigenDecomposition(m.getSquareRoot());	final  EigenDecomposition  dec  =  new  EigenDecomposition(m);  	non-compiled	[CE]  '.class'  expected	15	None	replace
8	[BUG]  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m.getParent());  [CE]  '.class'  expected  [FE]      OutOfMemoryError  [CONTEXT]  private  RealMatrix  squareRoot(RealMatrix  m)  {  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m.getParent());  [BUGGY]  return  dec.getSquareRoot();  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  squareRoot  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  EigenDecomposition  dec  boolean  double[]  errors  objective  objectiveValue  params  point  res  residuals  sig  startPoint  target  weightedResiduals  weights  MultivariateDifferentiableVectorFunction  f  jF  RealMatrix  j  jTj  m  weightMatrixSqrt  weightedJacobian  double  DEFAULT_SINGULARITY_THRESHOLD  c  cost  covarianceSingularityThreshold  threshold  double[][]  cov  covar  jacobianData  weightedResidualJacobian  int  cols  i  j  jacobianEvaluations  maxEval  nC  nR  rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	562	562	1	replace	final  EigenDecomposition  dec  =  new  EigenDecomposition(m.getParent());	final  EigenDecomposition  dec  =  new  EigenDecomposition(m);  	non-compiled	[CE]  '.class'  expected	15	None	replace
9	[BUG]  [BUGGY]    RealMatrix  dec  =  m.getDecomposition();  [CE]  '.class'  expected  [FE]    OutOfMemoryError  [CONTEXT]  private  RealMatrix  squareRoot(RealMatrix  m)  {  [BUGGY]    RealMatrix  dec  =  m.getDecomposition();  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m);  return  dec.getSquareRoot();  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  squareRoot  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  EigenDecomposition  dec  boolean  double[]  errors  objective  objectiveValue  params  point  res  residuals  sig  startPoint  target  weightedResiduals  weights  MultivariateDifferentiableVectorFunction  f  jF  RealMatrix  j  jTj  m  weightMatrixSqrt  weightedJacobian  double  DEFAULT_SINGULARITY_THRESHOLD  c  cost  covarianceSingularityThreshold  threshold  double[][]  cov  covar  jacobianData  weightedResidualJacobian  int  cols  i  j  jacobianEvaluations  maxEval  nC  nR  rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	562	562	1	replace	    RealMatrix  dec  =  m.getDecomposition();		non-compiled	[CE]  '.class'  expected	16	None	add
10	[BUG]  [BUGGY]    RealMatrix  m  =  new  RealMatrix(m.getValue());  [CE]  '.class'  expected  [FE]      OutOfMemoryError  [CONTEXT]  private  RealMatrix  squareRoot(RealMatrix  m)  {  [BUGGY]    RealMatrix  m  =  new  RealMatrix(m.getValue());  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m);  return  dec.getSquareRoot();  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  squareRoot  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  EigenDecomposition  dec  boolean  double[]  errors  objective  objectiveValue  params  point  res  residuals  sig  startPoint  target  weightedResiduals  weights  MultivariateDifferentiableVectorFunction  f  jF  RealMatrix  j  jTj  m  weightMatrixSqrt  weightedJacobian  double  DEFAULT_SINGULARITY_THRESHOLD  c  cost  covarianceSingularityThreshold  threshold  double[][]  cov  covar  jacobianData  weightedResidualJacobian  int  cols  i  j  jacobianEvaluations  maxEval  nC  nR  rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	562	562	1	replace	    RealMatrix  m  =  new  RealMatrix(m.getValue());		non-compiled	[CE]  '.class'  expected	16	None	add
11	[BUG]  [BUGGY]    RealMatrix  m  =  getSquareMatrix(m);  [CE]  '.class'  expected  [FE]        OutOfMemoryError  [CONTEXT]  private  RealMatrix  squareRoot(RealMatrix  m)  {  [BUGGY]    RealMatrix  m  =  getSquareMatrix(m);  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m);  return  dec.getSquareRoot();  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  squareRoot  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  EigenDecomposition  dec  boolean  double[]  errors  objective  objectiveValue  params  point  res  residuals  sig  startPoint  target  weightedResiduals  weights  MultivariateDifferentiableVectorFunction  f  jF  RealMatrix  j  jTj  m  weightMatrixSqrt  weightedJacobian  double  DEFAULT_SINGULARITY_THRESHOLD  c  cost  covarianceSingularityThreshold  threshold  double[][]  cov  covar  jacobianData  weightedResidualJacobian  int  cols  i  j  jacobianEvaluations  maxEval  nC  nR  rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	562	562	1	replace	    RealMatrix  m  =  getSquareMatrix(m);		non-compiled	[CE]  '.class'  expected	16	None	add
12	[BUG]  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m,  jF);  [CE]  '.class'  expected  [FE]    OutOfMemoryError  [CONTEXT]  private  RealMatrix  squareRoot(RealMatrix  m)  {  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m,  jF);  [BUGGY]  return  dec.getSquareRoot();  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  squareRoot  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  EigenDecomposition  dec  boolean  double[]  errors  objective  objectiveValue  params  point  res  residuals  sig  startPoint  target  weightedResiduals  weights  MultivariateDifferentiableVectorFunction  f  jF  RealMatrix  j  jTj  m  weightMatrixSqrt  weightedJacobian  double  DEFAULT_SINGULARITY_THRESHOLD  c  cost  covarianceSingularityThreshold  threshold  double[][]  cov  covar  jacobianData  weightedResidualJacobian  int  cols  i  j  jacobianEvaluations  maxEval  nC  nR  rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	562	562	1	replace	final  EigenDecomposition  dec  =  new  EigenDecomposition(m,  jF);	final  EigenDecomposition  dec  =  new  EigenDecomposition(m);  	non-compiled	[CE]  '.class'  expected	15	None	replace
13	[BUG]  [BUGGY]    RealMatrix  m  =  m.getSquare();  [CE]  '.class'  expected  [FE]    OutOfMemoryError  [CONTEXT]  private  RealMatrix  squareRoot(RealMatrix  m)  {  [BUGGY]    RealMatrix  m  =  m.getSquare();  [BUGGY]  final  EigenDecomposition  dec  =  new  EigenDecomposition(m);  return  dec.getSquareRoot();  }  [CLASS]  AbstractLeastSquaresOptimizer  [METHOD]  squareRoot  [RETURN_TYPE]  RealMatrix  RealMatrix  m  [VARIABLES]  EigenDecomposition  dec  boolean  double[]  errors  objective  objectiveValue  params  point  res  residuals  sig  startPoint  target  weightedResiduals  weights  MultivariateDifferentiableVectorFunction  f  jF  RealMatrix  j  jTj  m  weightMatrixSqrt  weightedJacobian  double  DEFAULT_SINGULARITY_THRESHOLD  c  cost  covarianceSingularityThreshold  threshold  double[][]  cov  covar  jacobianData  weightedResidualJacobian  int  cols  i  j  jacobianEvaluations  maxEval  nC  nR  rows  	projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java	0.3333333333333333	562	562	1	replace	    RealMatrix  m  =  m.getSquare();		non-compiled	[CE]  '.class'  expected	16	None	add
