projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedResidualJacobian=jTj.getMatrix();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedResidualJacobian=getMean();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedResidualJacobian=getFunctionMatrix();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505jacobianEvaluations=0;
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505jacobianEvaluations=1;
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.max(weightedJacobianEvaluations,getWeight());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.max(weightedJacobianEvaluations,getWidth());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.max(weightedJacobianEvaluations,getMaxY());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505intcols=getColumnCount();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505intcols=getColumnSize();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505jFrame.setMatrix(getMatrix());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505jacobianEvaluations=newdouble[getWidth()];
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505intcols=getRowSize();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505intcols=getColumnSize()+1;
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505intcols=getRowCount();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505intcols=getColumnCount()-1;
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedResidualJacobian=getWeight();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedResidualJacobian=getMotionMatrix();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505jFrame.setMatrix(getMatrix()+1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.min(weightedJacobianEvaluations,getMaxY()-1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.max(weightedJacobianEvaluations,getWeight()-1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.min(weightedJacobianEvaluations,getWeight()-1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.max(weightedJacobianEvaluations,getHeight());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.min(weightedJacobianEvaluations,getWidth());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.min(weightedJacobianEvaluations,getMaxY());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.max(weightedJacobianEvaluations,getWidth()-1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505jacobianEvaluations=2;
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.min(weightedJacobianEvaluations,getWeight());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.max(weightedJacobianEvaluations,getMaxY()-1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedResidualJacobian=getWeight()+1;
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedResidualJacobian=getMotionSquare();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedResidualJacobian=getMotionSqrt();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505intcols=getRowCount()-1;
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.min(weightedJacobianEvaluations,getMinY());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505jacobianEvaluations=newdouble[getHeight()];
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505jacobianEvaluations=newdouble[getWidth()+1];
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.min(weightedJacobianEvaluations,getWeight()+1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.min(weightedJacobianEvaluations,getHeight());
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.min(weightedJacobianEvaluations,getWidth()-1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505intcols=getRowSize()+1;
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505jacobianEvaluations=newdouble[getWeight()];
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedResidualJacobian=getMotionSingularityThreshold();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedResidualJacobian=getWeight()-1;
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java505weightedJacobianEvaluations=Math.max(weightedJacobianEvaluations,getMinY());
