projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableMultivariateVectorFunction(f),optData);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableMultivariateVectorFunction(optData),f);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496if(optData!=null){for(inti=0;i<maxEval;i++){optData[i]=f.getOptimizedValue();}
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496if(optData!=null){for(inti=0;i<maxEval;i++){optData[i]=f.getOptimizer().toDifferentiableMultivariateVectorFunction(i);}
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496if(optData!=null){for(inti=0;i<maxEval;i++){optData[i]=f.clone();}
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableVectorFunction(optData),f);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496intmaxEval=Math.min(maxEval,optData.length);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496finalintmaxEval=Math.min(maxEval,optData.length);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496if(optData!=null){for(inti=0,cols=optData.length;i<cols;i++){double[][]cov=f.getVarianceSingularityThreshold();for(intj=
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496if(optData!=null){for(inti=0,cols=optData.length;i<cols;++i){double[][]weightedJacobianData=f.weightedJacobian
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496if(optData!=null){for(inti=0,cols=optData.length;i<cols;++i){double[][]weightedJacobianData=f.weightedJacobianData[i]
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableMultivariateVectorFunction(f,optData));
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableMultivariateVectorFunction(f),optData,jF);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496for(inti=0;i<maxEval;i++){optData[i]=f.clone();}
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496For(inti=0;i<maxEval;i++){optData[i]=f.clone();}
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496if(optData==null){for(inti=0,cols=optData.length;i<cols;++i){double[][]weightedJacobianData=f.weightedJacobian
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableMultivariateVectorFunction(f),optData,jTj);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableMultivariateVectorFunction(f),optData,maxEval);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnoptimizeInternal(maxEval,f,optData);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496if(optData!=null){for(inti=0,cols=optData.length;i<cols;i++){double[][]weightedResiduals=optData[i];if(weightedResiduals[i]
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496intmaxEval=Math.max(maxEval,optData.length);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496intmaxEval=Math.max(maxEval,optData.length-1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableMultivariateVectorFunction(optData),optData);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableVectorFunction(optData),optData);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496finalintmaxEval=Math.max(maxEval,optData.length);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496finalintmaxEval=Math.max(maxEval,optData.length-1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496for(inti=0;i<maxEval;i++){optData[i]=f.getOptimizer().toDifferentiableMultivariateVectorFunction(i);}
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496For(inti=0;i<maxEval;i++){optData[i]=f.getOptimizer().toDifferentiableMultivariateVectorFunction(i);}
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496for(inti=0,cols=optData.length;i<cols;i++){double[][]cov=f.getVarianceSingularityThreshold();for(intj=
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496if(optData==null){for(inti=0,cols=optData.length;i<cols;++i){double[][]weightedJacobianData=f.weightedJacobianData[i]
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496for(inti=0;i<maxEval;i++){optData[i]=f.getOptimizedValue();}
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496For(inti=0;i<maxEval;i++){optData[i]=f.getOptimizedValue();}
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableVectorFunction(f),optData);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableMultivariateVectorFunction(optData,f));
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496finalintmaxEval=Math.min(maxEval,optData.length-1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496NutzenUtils.resetOptimizeInternal(optData,maxEval,optData);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496NutzenUtils.resetOptimizeInternal(optData,maxEval);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496intmaxEval=Math.min(maxEval,optData.length-1);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496IntegermaxEval=f.getOptimizer().toDifferentiableMultivariateVectorFunction(optData);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496IntegermaxEval=f.getOptimizer().toDifferentiableMultivariateVectorFunction(maxEval);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496intmaxEval=f.getOptimizedValue();
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496intmaxEval=optData.length;
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableMultivariateVectorFunction(f,optData),false);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableMultivariateVectorFunction(f),optData,optData);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496optimizeInternal(maxEval,f,optData);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableVectorFunction(optData),f,optData);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496if(optData==null){for(inti=0,cols=optData.length;i<cols;i++){double[][]cov=f.getVarianceSingularityThreshold();for(intj=
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableMultivariateVectorFunction(optData),f,optData);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496for(inti=0;i<maxEval;i++){optData[i]=f.getValue();}
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496NutzenUtils.optimizeInternal(maxEval,f,optData);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496if(optData!=null){for(inti=0,cols=optData.length;i<cols;i++){double[][]cov=f.getVarianceSingularityThreshold();for(intj=}
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496if(optData!=null){returnnewPointVectorValuePair(maxEval,maxEval);}
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496returnsuper.optimizeInternal(maxEval,FunctionUtils.toDifferentiableMultivariateVectorFunction(f,optData),f);
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496for(inti=0;i<maxEval;i++){optData[i]=f.getOptimizer().toDifferentiableMultivariateVectorFunction(optData);}
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496if(optData!=null){for(inti=0,cols=data.length;i<cols;++i){double[][]weightedJacobianData=f.weightedJacobian
projects/Math13/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java496if(optData!=null){for(inti=0,cols=optData.length;i<cols;++i){double[][]weightedJacobianData=f.weightedJacobianData[i]}
